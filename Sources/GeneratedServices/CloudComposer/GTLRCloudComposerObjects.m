// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Composer API (composer/v1)
// Description:
//   Manages Apache Airflow environments on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/composer/

#import <GoogleAPIClientForREST/GTLRCloudComposerObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRCloudComposer_CheckUpgradeResponse.containsPypiModulesConflict
NSString * const kGTLRCloudComposer_CheckUpgradeResponse_ContainsPypiModulesConflict_Conflict = @"CONFLICT";
NSString * const kGTLRCloudComposer_CheckUpgradeResponse_ContainsPypiModulesConflict_ConflictResultUnspecified = @"CONFLICT_RESULT_UNSPECIFIED";
NSString * const kGTLRCloudComposer_CheckUpgradeResponse_ContainsPypiModulesConflict_NoConflict = @"NO_CONFLICT";

// GTLRCloudComposer_ComposerWorkload.type
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_CeleryWorker = @"CELERY_WORKER";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_ComposerWorkloadTypeUnspecified = @"COMPOSER_WORKLOAD_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_DagProcessor = @"DAG_PROCESSOR";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_KubernetesOperatorPod = @"KUBERNETES_OPERATOR_POD";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_KubernetesWorker = @"KUBERNETES_WORKER";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_Redis = @"REDIS";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_Scheduler = @"SCHEDULER";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_Triggerer = @"TRIGGERER";
NSString * const kGTLRCloudComposer_ComposerWorkload_Type_WebServer = @"WEB_SERVER";

// GTLRCloudComposer_ComposerWorkloadStatus.state
NSString * const kGTLRCloudComposer_ComposerWorkloadStatus_State_ComposerWorkloadStateUnspecified = @"COMPOSER_WORKLOAD_STATE_UNSPECIFIED";
NSString * const kGTLRCloudComposer_ComposerWorkloadStatus_State_Error = @"ERROR";
NSString * const kGTLRCloudComposer_ComposerWorkloadStatus_State_Failed = @"FAILED";
NSString * const kGTLRCloudComposer_ComposerWorkloadStatus_State_Ok = @"OK";
NSString * const kGTLRCloudComposer_ComposerWorkloadStatus_State_Pending = @"PENDING";
NSString * const kGTLRCloudComposer_ComposerWorkloadStatus_State_Succeeded = @"SUCCEEDED";
NSString * const kGTLRCloudComposer_ComposerWorkloadStatus_State_Warning = @"WARNING";

// GTLRCloudComposer_Environment.state
NSString * const kGTLRCloudComposer_Environment_State_Creating = @"CREATING";
NSString * const kGTLRCloudComposer_Environment_State_Deleting = @"DELETING";
NSString * const kGTLRCloudComposer_Environment_State_Error    = @"ERROR";
NSString * const kGTLRCloudComposer_Environment_State_Running  = @"RUNNING";
NSString * const kGTLRCloudComposer_Environment_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCloudComposer_Environment_State_Updating = @"UPDATING";

// GTLRCloudComposer_EnvironmentConfig.environmentSize
NSString * const kGTLRCloudComposer_EnvironmentConfig_EnvironmentSize_EnvironmentSizeLarge = @"ENVIRONMENT_SIZE_LARGE";
NSString * const kGTLRCloudComposer_EnvironmentConfig_EnvironmentSize_EnvironmentSizeMedium = @"ENVIRONMENT_SIZE_MEDIUM";
NSString * const kGTLRCloudComposer_EnvironmentConfig_EnvironmentSize_EnvironmentSizeSmall = @"ENVIRONMENT_SIZE_SMALL";
NSString * const kGTLRCloudComposer_EnvironmentConfig_EnvironmentSize_EnvironmentSizeUnspecified = @"ENVIRONMENT_SIZE_UNSPECIFIED";

// GTLRCloudComposer_EnvironmentConfig.resilienceMode
NSString * const kGTLRCloudComposer_EnvironmentConfig_ResilienceMode_HighResilience = @"HIGH_RESILIENCE";
NSString * const kGTLRCloudComposer_EnvironmentConfig_ResilienceMode_ResilienceModeUnspecified = @"RESILIENCE_MODE_UNSPECIFIED";

// GTLRCloudComposer_NetworkingConfig.connectionType
NSString * const kGTLRCloudComposer_NetworkingConfig_ConnectionType_ConnectionTypeUnspecified = @"CONNECTION_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudComposer_NetworkingConfig_ConnectionType_PrivateServiceConnect = @"PRIVATE_SERVICE_CONNECT";
NSString * const kGTLRCloudComposer_NetworkingConfig_ConnectionType_VpcPeering = @"VPC_PEERING";

// GTLRCloudComposer_OperationMetadata.operationType
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_Check = @"CHECK";
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_Create = @"CREATE";
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_DatabaseFailover = @"DATABASE_FAILOVER";
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_Delete = @"DELETE";
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_LoadSnapshot = @"LOAD_SNAPSHOT";
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_SaveSnapshot = @"SAVE_SNAPSHOT";
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_TypeUnspecified = @"TYPE_UNSPECIFIED";
NSString * const kGTLRCloudComposer_OperationMetadata_OperationType_Update = @"UPDATE";

// GTLRCloudComposer_OperationMetadata.state
NSString * const kGTLRCloudComposer_OperationMetadata_State_Failed = @"FAILED";
NSString * const kGTLRCloudComposer_OperationMetadata_State_Pending = @"PENDING";
NSString * const kGTLRCloudComposer_OperationMetadata_State_Running = @"RUNNING";
NSString * const kGTLRCloudComposer_OperationMetadata_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCloudComposer_OperationMetadata_State_Succeeded = @"SUCCEEDED";
NSString * const kGTLRCloudComposer_OperationMetadata_State_Successful = @"SUCCESSFUL";

// GTLRCloudComposer_SoftwareConfig.webServerPluginsMode
NSString * const kGTLRCloudComposer_SoftwareConfig_WebServerPluginsMode_PluginsDisabled = @"PLUGINS_DISABLED";
NSString * const kGTLRCloudComposer_SoftwareConfig_WebServerPluginsMode_PluginsEnabled = @"PLUGINS_ENABLED";
NSString * const kGTLRCloudComposer_SoftwareConfig_WebServerPluginsMode_WebServerPluginsModeUnspecified = @"WEB_SERVER_PLUGINS_MODE_UNSPECIFIED";

// GTLRCloudComposer_TaskLogsRetentionConfig.storageMode
NSString * const kGTLRCloudComposer_TaskLogsRetentionConfig_StorageMode_CloudLoggingAndCloudStorage = @"CLOUD_LOGGING_AND_CLOUD_STORAGE";
NSString * const kGTLRCloudComposer_TaskLogsRetentionConfig_StorageMode_CloudLoggingOnly = @"CLOUD_LOGGING_ONLY";
NSString * const kGTLRCloudComposer_TaskLogsRetentionConfig_StorageMode_TaskLogsStorageModeUnspecified = @"TASK_LOGS_STORAGE_MODE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_AllowedIpRange
//

@implementation GTLRCloudComposer_AllowedIpRange
@dynamic descriptionProperty, value;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_CheckUpgradeResponse
//

@implementation GTLRCloudComposer_CheckUpgradeResponse
@dynamic buildLogUri, containsPypiModulesConflict, imageVersion,
         pypiConflictBuildLogExtract, pypiDependencies;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_CheckUpgradeResponse_PypiDependencies
//

@implementation GTLRCloudComposer_CheckUpgradeResponse_PypiDependencies

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_CidrBlock
//

@implementation GTLRCloudComposer_CidrBlock
@dynamic cidrBlock, displayName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_CloudDataLineageIntegration
//

@implementation GTLRCloudComposer_CloudDataLineageIntegration
@dynamic enabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ComposerWorkload
//

@implementation GTLRCloudComposer_ComposerWorkload
@dynamic name, status, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ComposerWorkloadStatus
//

@implementation GTLRCloudComposer_ComposerWorkloadStatus
@dynamic detailedStatusMessage, state, statusMessage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_DagProcessorResource
//

@implementation GTLRCloudComposer_DagProcessorResource
@dynamic count, cpu, memoryGb, storageGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_DatabaseConfig
//

@implementation GTLRCloudComposer_DatabaseConfig
@dynamic machineType, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_DatabaseFailoverRequest
//

@implementation GTLRCloudComposer_DatabaseFailoverRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_DatabaseFailoverResponse
//

@implementation GTLRCloudComposer_DatabaseFailoverResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_DataRetentionConfig
//

@implementation GTLRCloudComposer_DataRetentionConfig
@dynamic taskLogsRetentionConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Date
//

@implementation GTLRCloudComposer_Date
@dynamic day, month, year;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Empty
//

@implementation GTLRCloudComposer_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_EncryptionConfig
//

@implementation GTLRCloudComposer_EncryptionConfig
@dynamic kmsKeyName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Environment
//

@implementation GTLRCloudComposer_Environment
@dynamic config, createTime, labels, name, satisfiesPzs, state, storageConfig,
         updateTime, uuid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Environment_Labels
//

@implementation GTLRCloudComposer_Environment_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_EnvironmentConfig
//

@implementation GTLRCloudComposer_EnvironmentConfig
@dynamic airflowByoidUri, airflowUri, dagGcsPrefix, databaseConfig,
         dataRetentionConfig, encryptionConfig, environmentSize, gkeCluster,
         maintenanceWindow, masterAuthorizedNetworksConfig, nodeConfig,
         nodeCount, privateEnvironmentConfig, recoveryConfig, resilienceMode,
         softwareConfig, webServerConfig, webServerNetworkAccessControl,
         workloadsConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ExecuteAirflowCommandRequest
//

@implementation GTLRCloudComposer_ExecuteAirflowCommandRequest
@dynamic command, parameters, subcommand;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"parameters" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ExecuteAirflowCommandResponse
//

@implementation GTLRCloudComposer_ExecuteAirflowCommandResponse
@dynamic error, executionId, pod, podNamespace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ExitInfo
//

@implementation GTLRCloudComposer_ExitInfo
@dynamic error, exitCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_FetchDatabasePropertiesResponse
//

@implementation GTLRCloudComposer_FetchDatabasePropertiesResponse
@dynamic isFailoverReplicaAvailable, primaryGceZone, secondaryGceZone;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ImageVersion
//

@implementation GTLRCloudComposer_ImageVersion
@dynamic creationDisabled, imageVersionId, isDefault, releaseDate,
         supportedPythonVersions, upgradeDisabled;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"supportedPythonVersions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_IPAllocationPolicy
//

@implementation GTLRCloudComposer_IPAllocationPolicy
@dynamic clusterIpv4CidrBlock, clusterSecondaryRangeName, servicesIpv4CidrBlock,
         servicesSecondaryRangeName, useIpAliases;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Line
//

@implementation GTLRCloudComposer_Line
@dynamic content, lineNumber;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ListEnvironmentsResponse
//

@implementation GTLRCloudComposer_ListEnvironmentsResponse
@dynamic environments, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"environments" : [GTLRCloudComposer_Environment class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"environments";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ListImageVersionsResponse
//

@implementation GTLRCloudComposer_ListImageVersionsResponse
@dynamic imageVersions, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageVersions" : [GTLRCloudComposer_ImageVersion class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"imageVersions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ListOperationsResponse
//

@implementation GTLRCloudComposer_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRCloudComposer_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ListUserWorkloadsConfigMapsResponse
//

@implementation GTLRCloudComposer_ListUserWorkloadsConfigMapsResponse
@dynamic nextPageToken, userWorkloadsConfigMaps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"userWorkloadsConfigMaps" : [GTLRCloudComposer_UserWorkloadsConfigMap class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"userWorkloadsConfigMaps";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ListUserWorkloadsSecretsResponse
//

@implementation GTLRCloudComposer_ListUserWorkloadsSecretsResponse
@dynamic nextPageToken, userWorkloadsSecrets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"userWorkloadsSecrets" : [GTLRCloudComposer_UserWorkloadsSecret class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"userWorkloadsSecrets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ListWorkloadsResponse
//

@implementation GTLRCloudComposer_ListWorkloadsResponse
@dynamic nextPageToken, workloads;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"workloads" : [GTLRCloudComposer_ComposerWorkload class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"workloads";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_LoadSnapshotRequest
//

@implementation GTLRCloudComposer_LoadSnapshotRequest
@dynamic skipAirflowOverridesSetting, skipEnvironmentVariablesSetting,
         skipGcsDataCopying, skipPypiPackagesInstallation, snapshotPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_LoadSnapshotResponse
//

@implementation GTLRCloudComposer_LoadSnapshotResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_MaintenanceWindow
//

@implementation GTLRCloudComposer_MaintenanceWindow
@dynamic endTime, recurrence, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_MasterAuthorizedNetworksConfig
//

@implementation GTLRCloudComposer_MasterAuthorizedNetworksConfig
@dynamic cidrBlocks, enabled;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cidrBlocks" : [GTLRCloudComposer_CidrBlock class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_NetworkingConfig
//

@implementation GTLRCloudComposer_NetworkingConfig
@dynamic connectionType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_NodeConfig
//

@implementation GTLRCloudComposer_NodeConfig
@dynamic composerInternalIpv4CidrBlock, composerNetworkAttachment, diskSizeGb,
         enableIpMasqAgent, ipAllocationPolicy, location, machineType, network,
         oauthScopes, serviceAccount, subnetwork, tags;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"oauthScopes" : [NSString class],
    @"tags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Operation
//

@implementation GTLRCloudComposer_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Operation_Metadata
//

@implementation GTLRCloudComposer_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Operation_Response
//

@implementation GTLRCloudComposer_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_OperationMetadata
//

@implementation GTLRCloudComposer_OperationMetadata
@dynamic createTime, endTime, operationType, resource, resourceUuid, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_PollAirflowCommandRequest
//

@implementation GTLRCloudComposer_PollAirflowCommandRequest
@dynamic executionId, nextLineNumber, pod, podNamespace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_PollAirflowCommandResponse
//

@implementation GTLRCloudComposer_PollAirflowCommandResponse
@dynamic exitInfo, output, outputEnd;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"output" : [GTLRCloudComposer_Line class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_PrivateClusterConfig
//

@implementation GTLRCloudComposer_PrivateClusterConfig
@dynamic enablePrivateEndpoint, masterIpv4CidrBlock, masterIpv4ReservedRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_PrivateEnvironmentConfig
//

@implementation GTLRCloudComposer_PrivateEnvironmentConfig
@dynamic cloudComposerConnectionSubnetwork, cloudComposerNetworkIpv4CidrBlock,
         cloudComposerNetworkIpv4ReservedRange, cloudSqlIpv4CidrBlock,
         enablePrivateBuildsOnly, enablePrivateEnvironment,
         enablePrivatelyUsedPublicIps, networkingConfig, privateClusterConfig,
         webServerIpv4CidrBlock, webServerIpv4ReservedRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_RecoveryConfig
//

@implementation GTLRCloudComposer_RecoveryConfig
@dynamic scheduledSnapshotsConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_SaveSnapshotRequest
//

@implementation GTLRCloudComposer_SaveSnapshotRequest
@dynamic snapshotLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_SaveSnapshotResponse
//

@implementation GTLRCloudComposer_SaveSnapshotResponse
@dynamic snapshotPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_ScheduledSnapshotsConfig
//

@implementation GTLRCloudComposer_ScheduledSnapshotsConfig
@dynamic enabled, snapshotCreationSchedule, snapshotLocation, timeZone;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_SchedulerResource
//

@implementation GTLRCloudComposer_SchedulerResource
@dynamic count, cpu, memoryGb, storageGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_SoftwareConfig
//

@implementation GTLRCloudComposer_SoftwareConfig
@dynamic airflowConfigOverrides, cloudDataLineageIntegration, envVariables,
         imageVersion, pypiPackages, pythonVersion, schedulerCount,
         webServerPluginsMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_SoftwareConfig_AirflowConfigOverrides
//

@implementation GTLRCloudComposer_SoftwareConfig_AirflowConfigOverrides

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_SoftwareConfig_EnvVariables
//

@implementation GTLRCloudComposer_SoftwareConfig_EnvVariables

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_SoftwareConfig_PypiPackages
//

@implementation GTLRCloudComposer_SoftwareConfig_PypiPackages

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Status
//

@implementation GTLRCloudComposer_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRCloudComposer_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_Status_Details_Item
//

@implementation GTLRCloudComposer_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_StopAirflowCommandRequest
//

@implementation GTLRCloudComposer_StopAirflowCommandRequest
@dynamic executionId, force, pod, podNamespace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_StopAirflowCommandResponse
//

@implementation GTLRCloudComposer_StopAirflowCommandResponse
@dynamic isDone, output;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"output" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_StorageConfig
//

@implementation GTLRCloudComposer_StorageConfig
@dynamic bucket;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_TaskLogsRetentionConfig
//

@implementation GTLRCloudComposer_TaskLogsRetentionConfig
@dynamic storageMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_TriggererResource
//

@implementation GTLRCloudComposer_TriggererResource
@dynamic count, cpu, memoryGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_UserWorkloadsConfigMap
//

@implementation GTLRCloudComposer_UserWorkloadsConfigMap
@dynamic data, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_UserWorkloadsConfigMap_Data
//

@implementation GTLRCloudComposer_UserWorkloadsConfigMap_Data

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_UserWorkloadsSecret
//

@implementation GTLRCloudComposer_UserWorkloadsSecret
@dynamic data, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_UserWorkloadsSecret_Data
//

@implementation GTLRCloudComposer_UserWorkloadsSecret_Data

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_WebServerConfig
//

@implementation GTLRCloudComposer_WebServerConfig
@dynamic machineType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_WebServerNetworkAccessControl
//

@implementation GTLRCloudComposer_WebServerNetworkAccessControl
@dynamic allowedIpRanges;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowedIpRanges" : [GTLRCloudComposer_AllowedIpRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_WebServerResource
//

@implementation GTLRCloudComposer_WebServerResource
@dynamic cpu, memoryGb, storageGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_WorkerResource
//

@implementation GTLRCloudComposer_WorkerResource
@dynamic cpu, maxCount, memoryGb, minCount, storageGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudComposer_WorkloadsConfig
//

@implementation GTLRCloudComposer_WorkloadsConfig
@dynamic dagProcessor, scheduler, triggerer, webServer, worker;
@end
