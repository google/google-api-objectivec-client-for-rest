// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Channel API (cloudchannel/v1)
// Description:
//   The Cloud Channel API enables Google Cloud partners to have a single
//   unified resale platform and APIs across all of Google Cloud including GCP,
//   Workspace, Maps and Chrome.
// Documentation:
//   https://cloud.google.com/channel

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCloudchannelObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// changeOfferPurchaseChangeType

/**
 *  Not used.
 *
 *  Value: "CHANGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelChangeOfferPurchaseChangeTypeChangeTypeUnspecified;
/**
 *  SKU is a downgrade on the current entitlement.
 *
 *  Value: "DOWNGRADE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelChangeOfferPurchaseChangeTypeDowngrade;
/**
 *  SKU is an upgrade on the current entitlement.
 *
 *  Value: "UPGRADE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelChangeOfferPurchaseChangeTypeUpgrade;

// ----------------------------------------------------------------------------
// view

/**
 *  Includes all fields except the
 *  ChannelPartnerLink.channel_partner_cloud_identity_info.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelViewBasic;
/**
 *  Includes all fields.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelViewFull;
/**
 *  The default / unset value. The API will default to the BASIC view.
 *
 *  Value: "UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudchannelViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Cloudchannel query classes.
 */
@interface GTLRCloudchannelQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a ChannelPartnerRepricingConfig. Call this method to set
 *  modifications for a specific ChannelPartner's bill. You can only create
 *  configs if the RepricingConfig.effective_invoice_month is a future month. If
 *  needed, you can create a config for the current month, with some
 *  restrictions. When creating a config for a future month, make sure there are
 *  no existing configs for that RepricingConfig.effective_invoice_month. The
 *  following restrictions are for creating configs in the current month. * This
 *  functionality is reserved for recovering from an erroneous config, and
 *  should not be used for regular business cases. * The new config will not
 *  modify exports used with other configs. Changes to the config may be
 *  immediate, but may take up to 24 hours. * There is a limit of ten configs
 *  for any ChannelPartner or RepricingConfig.effective_invoice_month. * The
 *  contained ChannelPartnerRepricingConfig.repricing_config vaule must be
 *  different from the value used in the current config for a ChannelPartner.
 *  Possible Error Codes: * PERMISSION_DENIED: If the account making the request
 *  and the account being queried are different. * INVALID_ARGUMENT: Missing or
 *  invalid required parameters in the request. Also displays if the updated
 *  config is for the current month or past months. * NOT_FOUND: The
 *  ChannelPartnerRepricingConfig specified does not exist or is not associated
 *  with the given account. * INTERNAL: Any non-user error related to technical
 *  issues in the backend. In this case, contact Cloud Channel support. Return
 *  Value: If successful, the updated ChannelPartnerRepricingConfig resource,
 *  otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.channelPartnerRepricingConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsCreate : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the ChannelPartner that will receive the
 *  repricing config. Parent uses the format:
 *  accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerRepricingConfig.
 *
 *  Creates a ChannelPartnerRepricingConfig. Call this method to set
 *  modifications for a specific ChannelPartner's bill. You can only create
 *  configs if the RepricingConfig.effective_invoice_month is a future month. If
 *  needed, you can create a config for the current month, with some
 *  restrictions. When creating a config for a future month, make sure there are
 *  no existing configs for that RepricingConfig.effective_invoice_month. The
 *  following restrictions are for creating configs in the current month. * This
 *  functionality is reserved for recovering from an erroneous config, and
 *  should not be used for regular business cases. * The new config will not
 *  modify exports used with other configs. Changes to the config may be
 *  immediate, but may take up to 24 hours. * There is a limit of ten configs
 *  for any ChannelPartner or RepricingConfig.effective_invoice_month. * The
 *  contained ChannelPartnerRepricingConfig.repricing_config vaule must be
 *  different from the value used in the current config for a ChannelPartner.
 *  Possible Error Codes: * PERMISSION_DENIED: If the account making the request
 *  and the account being queried are different. * INVALID_ARGUMENT: Missing or
 *  invalid required parameters in the request. Also displays if the updated
 *  config is for the current month or past months. * NOT_FOUND: The
 *  ChannelPartnerRepricingConfig specified does not exist or is not associated
 *  with the given account. * INTERNAL: Any non-user error related to technical
 *  issues in the backend. In this case, contact Cloud Channel support. Return
 *  Value: If successful, the updated ChannelPartnerRepricingConfig resource,
 *  otherwise returns an error.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerRepricingConfig to
 *    include in the query.
 *  @param parent Required. The resource name of the ChannelPartner that will
 *    receive the repricing config. Parent uses the format:
 *    accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerRepricingConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the given ChannelPartnerRepricingConfig permanently. You can only
 *  delete configs if their RepricingConfig.effective_invoice_month is set to a
 *  date after the current month. Possible error codes: * PERMISSION_DENIED: The
 *  account making the request does not own this customer. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. * FAILED_PRECONDITION:
 *  The ChannelPartnerRepricingConfig is active or in the past. * NOT_FOUND: No
 *  ChannelPartnerRepricingConfig found for the name in the request.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.channelPartnerRepricingConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsDelete : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the channel partner repricing config rule to
 *  delete.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Deletes the given ChannelPartnerRepricingConfig permanently. You can only
 *  delete configs if their RepricingConfig.effective_invoice_month is set to a
 *  date after the current month. Possible error codes: * PERMISSION_DENIED: The
 *  account making the request does not own this customer. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. * FAILED_PRECONDITION:
 *  The ChannelPartnerRepricingConfig is active or in the past. * NOT_FOUND: No
 *  ChannelPartnerRepricingConfig found for the name in the request.
 *
 *  @param name Required. The resource name of the channel partner repricing
 *    config rule to delete.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about how a Distributor modifies their bill before sending
 *  it to a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the
 *  account making the request and the account being queried are different. *
 *  NOT_FOUND: The ChannelPartnerRepricingConfig was not found. * INTERNAL: Any
 *  non-user error related to technical issues in the backend. In this case,
 *  contact Cloud Channel support. Return Value: If successful, the
 *  ChannelPartnerRepricingConfig resource, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.channelPartnerRepricingConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsGet : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the ChannelPartnerRepricingConfig Format:
 *  accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerRepricingConfig.
 *
 *  Gets information about how a Distributor modifies their bill before sending
 *  it to a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the
 *  account making the request and the account being queried are different. *
 *  NOT_FOUND: The ChannelPartnerRepricingConfig was not found. * INTERNAL: Any
 *  non-user error related to technical issues in the backend. In this case,
 *  contact Cloud Channel support. Return Value: If successful, the
 *  ChannelPartnerRepricingConfig resource, otherwise returns an error.
 *
 *  @param name Required. The resource name of the ChannelPartnerRepricingConfig
 *    Format:
 *    accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about how a Reseller modifies their bill before sending it
 *  to a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the
 *  account making the request and the account being queried are different. *
 *  NOT_FOUND: The ChannelPartnerRepricingConfig specified does not exist or is
 *  not associated with the given account. * INTERNAL: Any non-user error
 *  related to technical issues in the backend. In this case, contact Cloud
 *  Channel support. Return Value: If successful, the
 *  ChannelPartnerRepricingConfig resources. The data for each resource is
 *  displayed in the ascending order of: * channel partner ID *
 *  RepricingConfig.effective_invoice_month *
 *  ChannelPartnerRepricingConfig.update_time If unsuccessful, returns an error.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.channelPartnerRepricingConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsList : GTLRCloudchannelQuery

/**
 *  Optional. A filter for
 *  [CloudChannelService.ListChannelPartnerRepricingConfigs] results
 *  (channel_partner_link only). You can use this filter when you support a
 *  BatchGet-like query. To use the filter, you must set
 *  `parent=accounts/{account_id}/channelPartnerLinks/-`. Example:
 *  `channel_partner_link = accounts/account_id/channelPartnerLinks/c1` OR
 *  `channel_partner_link = accounts/account_id/channelPartnerLinks/c2`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of repricing configs to return. The service may
 *  return fewer than this value. If unspecified, returns a maximum of 50 rules.
 *  The maximum value is 100; values above 100 will be coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results beyond the first page.
 *  Obtained through ListChannelPartnerRepricingConfigsResponse.next_page_token
 *  of the previous CloudChannelService.ListChannelPartnerRepricingConfigs call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the account's ChannelPartnerLink. Parent uses
 *  the format: accounts/{account_id}/channelPartnerLinks/{channel_partner_id}.
 *  Supports accounts/{account_id}/channelPartnerLinks/- to retrieve configs for
 *  all channel partners.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListChannelPartnerRepricingConfigsResponse.
 *
 *  Lists information about how a Reseller modifies their bill before sending it
 *  to a ChannelPartner. Possible Error Codes: * PERMISSION_DENIED: If the
 *  account making the request and the account being queried are different. *
 *  NOT_FOUND: The ChannelPartnerRepricingConfig specified does not exist or is
 *  not associated with the given account. * INTERNAL: Any non-user error
 *  related to technical issues in the backend. In this case, contact Cloud
 *  Channel support. Return Value: If successful, the
 *  ChannelPartnerRepricingConfig resources. The data for each resource is
 *  displayed in the ascending order of: * channel partner ID *
 *  RepricingConfig.effective_invoice_month *
 *  ChannelPartnerRepricingConfig.update_time If unsuccessful, returns an error.
 *
 *  @param parent Required. The resource name of the account's
 *    ChannelPartnerLink. Parent uses the format:
 *    accounts/{account_id}/channelPartnerLinks/{channel_partner_id}. Supports
 *    accounts/{account_id}/channelPartnerLinks/- to retrieve configs for all
 *    channel partners.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a ChannelPartnerRepricingConfig. Call this method to set
 *  modifications for a specific ChannelPartner's bill. This method overwrites
 *  the existing CustomerRepricingConfig. You can only update configs if the
 *  RepricingConfig.effective_invoice_month is a future month. To make changes
 *  to configs for the current month, use CreateChannelPartnerRepricingConfig,
 *  taking note of its restrictions. You cannot update the
 *  RepricingConfig.effective_invoice_month. When updating a config in the
 *  future: * This config must already exist. Possible Error Codes: *
 *  PERMISSION_DENIED: If the account making the request and the account being
 *  queried are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Also displays if the updated config is for the
 *  current month or past months. * NOT_FOUND: The ChannelPartnerRepricingConfig
 *  specified does not exist or is not associated with the given account. *
 *  INTERNAL: Any non-user error related to technical issues in the backend. In
 *  this case, contact Cloud Channel support. Return Value: If successful, the
 *  updated ChannelPartnerRepricingConfig resource, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.channelPartnerRepricingConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsPatch : GTLRCloudchannelQuery

/**
 *  Output only. Resource name of the ChannelPartnerRepricingConfig. Format:
 *  accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerRepricingConfig.
 *
 *  Updates a ChannelPartnerRepricingConfig. Call this method to set
 *  modifications for a specific ChannelPartner's bill. This method overwrites
 *  the existing CustomerRepricingConfig. You can only update configs if the
 *  RepricingConfig.effective_invoice_month is a future month. To make changes
 *  to configs for the current month, use CreateChannelPartnerRepricingConfig,
 *  taking note of its restrictions. You cannot update the
 *  RepricingConfig.effective_invoice_month. When updating a config in the
 *  future: * This config must already exist. Possible Error Codes: *
 *  PERMISSION_DENIED: If the account making the request and the account being
 *  queried are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Also displays if the updated config is for the
 *  current month or past months. * NOT_FOUND: The ChannelPartnerRepricingConfig
 *  specified does not exist or is not associated with the given account. *
 *  INTERNAL: Any non-user error related to technical issues in the backend. In
 *  this case, contact Cloud Channel support. Return Value: If successful, the
 *  updated ChannelPartnerRepricingConfig resource, otherwise returns an error.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerRepricingConfig to
 *    include in the query.
 *  @param name Output only. Resource name of the ChannelPartnerRepricingConfig.
 *    Format:
 *    accounts/{account_id}/channelPartnerLinks/{channel_partner_id}/channelPartnerRepricingConfigs/{id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksChannelPartnerRepricingConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerRepricingConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Initiates a channel partner link between a distributor and a reseller, or
 *  between resellers in an n-tier reseller channel. Invited partners need to
 *  follow the invite_link_uri provided in the response to accept. After
 *  accepting the invitation, a link is set up between the two parties. You must
 *  be a distributor to call this method. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request is different from
 *  the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * ALREADY_EXISTS: The
 *  ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud
 *  Identity customer exists for provided domain. * INTERNAL: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. Return value: The new ChannelPartnerLink
 *  resource.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCreate : GTLRCloudchannelQuery

/**
 *  Required. Create a channel partner link for the provided reseller account's
 *  resource name. Parent uses the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink.
 *
 *  Initiates a channel partner link between a distributor and a reseller, or
 *  between resellers in an n-tier reseller channel. Invited partners need to
 *  follow the invite_link_uri provided in the response to accept. After
 *  accepting the invitation, a link is set up between the two parties. You must
 *  be a distributor to call this method. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request is different from
 *  the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * ALREADY_EXISTS: The
 *  ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud
 *  Identity customer exists for provided domain. * INTERNAL: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  * UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. Return value: The new ChannelPartnerLink
 *  resource.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink
 *    to include in the query.
 *  @param parent Required. Create a channel partner link for the provided
 *    reseller account's resource name. Parent uses the format:
 *    accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new Customer resource under the reseller or distributor account.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: * Required request parameters are missing or invalid. *
 *  Domain field value doesn't match the primary email domain. Return value: The
 *  newly created Customer resource.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.customers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersCreate : GTLRCloudchannelQuery

/**
 *  Required. The resource name of reseller account in which to create the
 *  customer. Parent uses the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Creates a new Customer resource under the reseller or distributor account.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: * Required request parameters are missing or invalid. *
 *  Domain field value doesn't match the primary email domain. Return value: The
 *  newly created Customer resource.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1Customer to
 *    include in the query.
 *  @param parent Required. The resource name of reseller account in which to
 *    create the customer. Parent uses the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1Customer *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the given Customer permanently. Possible error codes: *
 *  PERMISSION_DENIED: The account making the request does not own this
 *  customer. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * FAILED_PRECONDITION: The customer has existing entitlements. *
 *  NOT_FOUND: No Customer resource found for the name in the request.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.customers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersDelete : GTLRCloudchannelQuery

/** Required. The resource name of the customer to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Deletes the given Customer permanently. Possible error codes: *
 *  PERMISSION_DENIED: The account making the request does not own this
 *  customer. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * FAILED_PRECONDITION: The customer has existing entitlements. *
 *  NOT_FOUND: No Customer resource found for the name in the request.
 *
 *  @param name Required. The resource name of the customer to delete.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the requested Customer resource. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request is different from
 *  the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: The customer
 *  resource doesn't exist. Usually the result of an invalid name parameter.
 *  Return value: The Customer resource.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.customers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersGet : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the customer to retrieve. Name uses the
 *  format: accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Returns the requested Customer resource. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request is different from
 *  the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: The customer
 *  resource doesn't exist. Usually the result of an invalid name parameter.
 *  Return value: The Customer resource.
 *
 *  @param name Required. The resource name of the customer to retrieve. Name
 *    uses the format: accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports a Customer from the Cloud Identity associated with the provided
 *  Cloud Identity ID or domain before a TransferEntitlements call. If a linked
 *  Customer already exists and overwrite_if_exists is true, it will update that
 *  Customer's data. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * NOT_FOUND: Cloud Identity doesn't exist or was deleted. *
 *  INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
 *  expired or invalid. * ALREADY_EXISTS: A customer already exists and has
 *  conflicting critical fields. Requires an overwrite. Return value: The
 *  Customer.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.customers.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersImport : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the reseller's account. Parent takes the
 *  format: accounts/{account_id} or
 *  accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Imports a Customer from the Cloud Identity associated with the provided
 *  Cloud Identity ID or domain before a TransferEntitlements call. If a linked
 *  Customer already exists and overwrite_if_exists is true, it will update that
 *  Customer's data. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * NOT_FOUND: Cloud Identity doesn't exist or was deleted. *
 *  INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
 *  expired or invalid. * ALREADY_EXISTS: A customer already exists and has
 *  conflicting critical fields. Requires an overwrite. Return value: The
 *  Customer.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ImportCustomerRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the reseller's account. Parent
 *    takes the format: accounts/{account_id} or
 *    accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersImport
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ImportCustomerRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  List Customers. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. Return value: List of Customers, or an empty list if there are no
 *  customers.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.customers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersList : GTLRCloudchannelQuery

/**
 *  Optional. Filters applied to the [CloudChannelService.ListCustomers]
 *  results. See
 *  https://cloud.google.com/channel/docs/concepts/google-cloud/filter-customers
 *  for more information.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of customers to return. The service may return
 *  fewer than this value. If unspecified, returns at most 10 customers. The
 *  maximum value is 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results other than the first page.
 *  Obtained through ListCustomersResponse.next_page_token of the previous
 *  CloudChannelService.ListCustomers call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller account to list customers from.
 *  Parent uses the format: accounts/{account_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListCustomersResponse.
 *
 *  List Customers. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. Return value: List of Customers, or an empty list if there are no
 *  customers.
 *
 *  @param parent Required. The resource name of the reseller account to list
 *    customers from. Parent uses the format: accounts/{account_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing Customer resource for the reseller or distributor.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: No Customer resource found for the name in the request. Return
 *  value: The updated Customer resource.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.customers.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersPatch : GTLRCloudchannelQuery

/**
 *  Output only. Resource name of the customer. Format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask that applies to the resource. Optional.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Updates an existing Customer resource for the reseller or distributor.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: No Customer resource found for the name in the request. Return
 *  value: The updated Customer resource.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1Customer to
 *    include in the query.
 *  @param name Output only. Resource name of the customer. Format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksCustomersPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1Customer *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the requested ChannelPartnerLink resource. You must be a distributor
 *  to call this method. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: ChannelPartnerLink resource not found because of an
 *  invalid channel partner link name. Return value: The ChannelPartnerLink
 *  resource.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksGet : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the channel partner link to retrieve. Name
 *  uses the format: accounts/{account_id}/channelPartnerLinks/{id} where {id}
 *  is the Cloud Identity ID of the partner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The level of granularity the ChannelPartnerLink will display.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudchannelViewUnspecified The default / unset value. The
 *        API will default to the BASIC view. (Value: "UNSPECIFIED")
 *    @arg @c kGTLRCloudchannelViewBasic Includes all fields except the
 *        ChannelPartnerLink.channel_partner_cloud_identity_info. (Value:
 *        "BASIC")
 *    @arg @c kGTLRCloudchannelViewFull Includes all fields. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink.
 *
 *  Returns the requested ChannelPartnerLink resource. You must be a distributor
 *  to call this method. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: ChannelPartnerLink resource not found because of an
 *  invalid channel partner link name. Return value: The ChannelPartnerLink
 *  resource.
 *
 *  @param name Required. The resource name of the channel partner link to
 *    retrieve. Name uses the format:
 *    accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud
 *    Identity ID of the partner.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List ChannelPartnerLinks belonging to a distributor. You must be a
 *  distributor to call this method. Possible error codes: * PERMISSION_DENIED:
 *  The reseller account making the request is different from the reseller
 *  account in the API request. * INVALID_ARGUMENT: Required request parameters
 *  are missing or invalid. Return value: The list of the distributor account's
 *  ChannelPartnerLink resources.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksList : GTLRCloudchannelQuery

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, server will pick a default size (25). The maximum
 *  value is 200; the server will coerce values above 200.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token for a page of results other than the first page. Obtained
 *  using ListChannelPartnerLinksResponse.next_page_token of the previous
 *  CloudChannelService.ListChannelPartnerLinks call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller account for listing channel
 *  partner links. Parent uses the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The level of granularity the ChannelPartnerLink will display.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudchannelViewUnspecified The default / unset value. The
 *        API will default to the BASIC view. (Value: "UNSPECIFIED")
 *    @arg @c kGTLRCloudchannelViewBasic Includes all fields except the
 *        ChannelPartnerLink.channel_partner_cloud_identity_info. (Value:
 *        "BASIC")
 *    @arg @c kGTLRCloudchannelViewFull Includes all fields. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListChannelPartnerLinksResponse.
 *
 *  List ChannelPartnerLinks belonging to a distributor. You must be a
 *  distributor to call this method. Possible error codes: * PERMISSION_DENIED:
 *  The reseller account making the request is different from the reseller
 *  account in the API request. * INVALID_ARGUMENT: Required request parameters
 *  are missing or invalid. Return value: The list of the distributor account's
 *  ChannelPartnerLink resources.
 *
 *  @param parent Required. The resource name of the reseller account for
 *    listing channel partner links. Parent uses the format:
 *    accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a channel partner link. Distributors call this method to change a
 *  link's status. For example, to suspend a partner link. You must be a
 *  distributor to call this method. Possible error codes: * PERMISSION_DENIED:
 *  The reseller account making the request is different from the reseller
 *  account in the API request. * INVALID_ARGUMENT: * Required request
 *  parameters are missing or invalid. * Link state cannot change from invited
 *  to active or suspended. * Cannot send reseller_cloud_identity_id,
 *  invite_url, or name in update mask. * NOT_FOUND: ChannelPartnerLink resource
 *  not found. * INTERNAL: Any non-user error related to a technical issue in
 *  the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The updated ChannelPartnerLink resource.
 *
 *  Method: cloudchannel.accounts.channelPartnerLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsChannelPartnerLinksPatch : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the channel partner link to cancel. Name uses
 *  the format: accounts/{account_id}/channelPartnerLinks/{id} where {id} is the
 *  Cloud Identity ID of the partner.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ChannelPartnerLink.
 *
 *  Updates a channel partner link. Distributors call this method to change a
 *  link's status. For example, to suspend a partner link. You must be a
 *  distributor to call this method. Possible error codes: * PERMISSION_DENIED:
 *  The reseller account making the request is different from the reseller
 *  account in the API request. * INVALID_ARGUMENT: * Required request
 *  parameters are missing or invalid. * Link state cannot change from invited
 *  to active or suspended. * Cannot send reseller_cloud_identity_id,
 *  invite_url, or name in update mask. * NOT_FOUND: ChannelPartnerLink resource
 *  not found. * INTERNAL: Any non-user error related to a technical issue in
 *  the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The updated ChannelPartnerLink resource.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1UpdateChannelPartnerLinkRequest to
 *    include in the query.
 *  @param name Required. The resource name of the channel partner link to
 *    cancel. Name uses the format:
 *    accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud
 *    Identity ID of the partner.
 *
 *  @return GTLRCloudchannelQuery_AccountsChannelPartnerLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1UpdateChannelPartnerLinkRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Confirms the existence of Cloud Identity accounts based on the domain and if
 *  the Cloud Identity accounts are owned by the reseller. Possible error codes:
 *  * PERMISSION_DENIED: The reseller account making the request is different
 *  from the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * INVALID_VALUE: Invalid domain
 *  value in the request. Return value: A list of CloudIdentityCustomerAccount
 *  resources for the domain (may be empty) Note: in the v1alpha1 version of the
 *  API, a NOT_FOUND error returns if no CloudIdentityCustomerAccount resources
 *  match the domain.
 *
 *  Method: cloudchannel.accounts.checkCloudIdentityAccountsExist
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCheckCloudIdentityAccountsExist : GTLRCloudchannelQuery

/**
 *  Required. The reseller account's resource name. Parent uses the format:
 *  accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse.
 *
 *  Confirms the existence of Cloud Identity accounts based on the domain and if
 *  the Cloud Identity accounts are owned by the reseller. Possible error codes:
 *  * PERMISSION_DENIED: The reseller account making the request is different
 *  from the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * INVALID_VALUE: Invalid domain
 *  value in the request. Return value: A list of CloudIdentityCustomerAccount
 *  resources for the domain (may be empty) Note: in the v1alpha1 version of the
 *  API, a NOT_FOUND error returns if no CloudIdentityCustomerAccount resources
 *  match the domain.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest
 *    to include in the query.
 *  @param parent Required. The reseller account's resource name. Parent uses
 *    the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCheckCloudIdentityAccountsExist
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new Customer resource under the reseller or distributor account.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: * Required request parameters are missing or invalid. *
 *  Domain field value doesn't match the primary email domain. Return value: The
 *  newly created Customer resource.
 *
 *  Method: cloudchannel.accounts.customers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersCreate : GTLRCloudchannelQuery

/**
 *  Required. The resource name of reseller account in which to create the
 *  customer. Parent uses the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Creates a new Customer resource under the reseller or distributor account.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: * Required request parameters are missing or invalid. *
 *  Domain field value doesn't match the primary email domain. Return value: The
 *  newly created Customer resource.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1Customer to
 *    include in the query.
 *  @param parent Required. The resource name of reseller account in which to
 *    create the customer. Parent uses the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1Customer *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a CustomerRepricingConfig. Call this method to set modifications for
 *  a specific customer's bill. You can only create configs if the
 *  RepricingConfig.effective_invoice_month is a future month. If needed, you
 *  can create a config for the current month, with some restrictions. When
 *  creating a config for a future month, make sure there are no existing
 *  configs for that RepricingConfig.effective_invoice_month. The following
 *  restrictions are for creating configs in the current month. * This
 *  functionality is reserved for recovering from an erroneous config, and
 *  should not be used for regular business cases. * The new config will not
 *  modify exports used with other configs. Changes to the config may be
 *  immediate, but may take up to 24 hours. * There is a limit of ten configs
 *  for any RepricingConfig.EntitlementGranularity.entitlement or
 *  RepricingConfig.effective_invoice_month. * The contained
 *  CustomerRepricingConfig.repricing_config vaule must be different from the
 *  value used in the current config for a
 *  RepricingConfig.EntitlementGranularity.entitlement. Possible Error Codes: *
 *  PERMISSION_DENIED: If the account making the request and the account being
 *  queried are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Also displays if the updated config is for the
 *  current month or past months. * NOT_FOUND: The CustomerRepricingConfig
 *  specified does not exist or is not associated with the given account. *
 *  INTERNAL: Any non-user error related to technical issues in the backend. In
 *  this case, contact Cloud Channel support. Return Value: If successful, the
 *  updated CustomerRepricingConfig resource, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.customers.customerRepricingConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsCreate : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the customer that will receive this repricing
 *  config. Parent uses the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1CustomerRepricingConfig.
 *
 *  Creates a CustomerRepricingConfig. Call this method to set modifications for
 *  a specific customer's bill. You can only create configs if the
 *  RepricingConfig.effective_invoice_month is a future month. If needed, you
 *  can create a config for the current month, with some restrictions. When
 *  creating a config for a future month, make sure there are no existing
 *  configs for that RepricingConfig.effective_invoice_month. The following
 *  restrictions are for creating configs in the current month. * This
 *  functionality is reserved for recovering from an erroneous config, and
 *  should not be used for regular business cases. * The new config will not
 *  modify exports used with other configs. Changes to the config may be
 *  immediate, but may take up to 24 hours. * There is a limit of ten configs
 *  for any RepricingConfig.EntitlementGranularity.entitlement or
 *  RepricingConfig.effective_invoice_month. * The contained
 *  CustomerRepricingConfig.repricing_config vaule must be different from the
 *  value used in the current config for a
 *  RepricingConfig.EntitlementGranularity.entitlement. Possible Error Codes: *
 *  PERMISSION_DENIED: If the account making the request and the account being
 *  queried are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Also displays if the updated config is for the
 *  current month or past months. * NOT_FOUND: The CustomerRepricingConfig
 *  specified does not exist or is not associated with the given account. *
 *  INTERNAL: Any non-user error related to technical issues in the backend. In
 *  this case, contact Cloud Channel support. Return Value: If successful, the
 *  updated CustomerRepricingConfig resource, otherwise returns an error.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CustomerRepricingConfig to include in
 *    the query.
 *  @param parent Required. The resource name of the customer that will receive
 *    this repricing config. Parent uses the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CustomerRepricingConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the given CustomerRepricingConfig permanently. You can only delete
 *  configs if their RepricingConfig.effective_invoice_month is set to a date
 *  after the current month. Possible error codes: * PERMISSION_DENIED: The
 *  account making the request does not own this customer. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. * FAILED_PRECONDITION:
 *  The CustomerRepricingConfig is active or in the past. * NOT_FOUND: No
 *  CustomerRepricingConfig found for the name in the request.
 *
 *  Method: cloudchannel.accounts.customers.customerRepricingConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsDelete : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the customer repricing config rule to delete.
 *  Format:
 *  accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Deletes the given CustomerRepricingConfig permanently. You can only delete
 *  configs if their RepricingConfig.effective_invoice_month is set to a date
 *  after the current month. Possible error codes: * PERMISSION_DENIED: The
 *  account making the request does not own this customer. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. * FAILED_PRECONDITION:
 *  The CustomerRepricingConfig is active or in the past. * NOT_FOUND: No
 *  CustomerRepricingConfig found for the name in the request.
 *
 *  @param name Required. The resource name of the customer repricing config
 *    rule to delete. Format:
 *    accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about how a Reseller modifies their bill before sending it
 *  to a Customer. Possible Error Codes: * PERMISSION_DENIED: If the account
 *  making the request and the account being queried are different. * NOT_FOUND:
 *  The CustomerRepricingConfig was not found. * INTERNAL: Any non-user error
 *  related to technical issues in the backend. In this case, contact Cloud
 *  Channel support. Return Value: If successful, the CustomerRepricingConfig
 *  resource, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.customers.customerRepricingConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsGet : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the CustomerRepricingConfig. Format:
 *  accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1CustomerRepricingConfig.
 *
 *  Gets information about how a Reseller modifies their bill before sending it
 *  to a Customer. Possible Error Codes: * PERMISSION_DENIED: If the account
 *  making the request and the account being queried are different. * NOT_FOUND:
 *  The CustomerRepricingConfig was not found. * INTERNAL: Any non-user error
 *  related to technical issues in the backend. In this case, contact Cloud
 *  Channel support. Return Value: If successful, the CustomerRepricingConfig
 *  resource, otherwise returns an error.
 *
 *  @param name Required. The resource name of the CustomerRepricingConfig.
 *    Format:
 *    accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about how a Reseller modifies their bill before sending it
 *  to a Customer. Possible Error Codes: * PERMISSION_DENIED: If the account
 *  making the request and the account being queried are different. * NOT_FOUND:
 *  The CustomerRepricingConfig specified does not exist or is not associated
 *  with the given account. * INTERNAL: Any non-user error related to technical
 *  issues in the backend. In this case, contact Cloud Channel support. Return
 *  Value: If successful, the CustomerRepricingConfig resources. The data for
 *  each resource is displayed in the ascending order of: * customer ID *
 *  RepricingConfig.EntitlementGranularity.entitlement *
 *  RepricingConfig.effective_invoice_month *
 *  CustomerRepricingConfig.update_time If unsuccessful, returns an error.
 *
 *  Method: cloudchannel.accounts.customers.customerRepricingConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsList : GTLRCloudchannelQuery

/**
 *  Optional. A filter for [CloudChannelService.ListCustomerRepricingConfigs]
 *  results (customer only). You can use this filter when you support a
 *  BatchGet-like query. To use the filter, you must set
 *  `parent=accounts/{account_id}/customers/-`. Example: customer =
 *  accounts/account_id/customers/c1 OR customer =
 *  accounts/account_id/customers/c2.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of repricing configs to return. The service may
 *  return fewer than this value. If unspecified, returns a maximum of 50 rules.
 *  The maximum value is 100; values above 100 will be coerced to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results beyond the first page.
 *  Obtained through ListCustomerRepricingConfigsResponse.next_page_token of the
 *  previous CloudChannelService.ListCustomerRepricingConfigs call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the customer. Parent uses the format:
 *  accounts/{account_id}/customers/{customer_id}. Supports
 *  accounts/{account_id}/customers/- to retrieve configs for all customers.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListCustomerRepricingConfigsResponse.
 *
 *  Lists information about how a Reseller modifies their bill before sending it
 *  to a Customer. Possible Error Codes: * PERMISSION_DENIED: If the account
 *  making the request and the account being queried are different. * NOT_FOUND:
 *  The CustomerRepricingConfig specified does not exist or is not associated
 *  with the given account. * INTERNAL: Any non-user error related to technical
 *  issues in the backend. In this case, contact Cloud Channel support. Return
 *  Value: If successful, the CustomerRepricingConfig resources. The data for
 *  each resource is displayed in the ascending order of: * customer ID *
 *  RepricingConfig.EntitlementGranularity.entitlement *
 *  RepricingConfig.effective_invoice_month *
 *  CustomerRepricingConfig.update_time If unsuccessful, returns an error.
 *
 *  @param parent Required. The resource name of the customer. Parent uses the
 *    format: accounts/{account_id}/customers/{customer_id}. Supports
 *    accounts/{account_id}/customers/- to retrieve configs for all customers.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a CustomerRepricingConfig. Call this method to set modifications for
 *  a specific customer's bill. This method overwrites the existing
 *  CustomerRepricingConfig. You can only update configs if the
 *  RepricingConfig.effective_invoice_month is a future month. To make changes
 *  to configs for the current month, use CreateCustomerRepricingConfig, taking
 *  note of its restrictions. You cannot update the
 *  RepricingConfig.effective_invoice_month. When updating a config in the
 *  future: * This config must already exist. Possible Error Codes: *
 *  PERMISSION_DENIED: If the account making the request and the account being
 *  queried are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Also displays if the updated config is for the
 *  current month or past months. * NOT_FOUND: The CustomerRepricingConfig
 *  specified does not exist or is not associated with the given account. *
 *  INTERNAL: Any non-user error related to technical issues in the backend. In
 *  this case, contact Cloud Channel support. Return Value: If successful, the
 *  updated CustomerRepricingConfig resource, otherwise returns an error.
 *
 *  Method: cloudchannel.accounts.customers.customerRepricingConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsPatch : GTLRCloudchannelQuery

/**
 *  Output only. Resource name of the CustomerRepricingConfig. Format:
 *  accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1CustomerRepricingConfig.
 *
 *  Updates a CustomerRepricingConfig. Call this method to set modifications for
 *  a specific customer's bill. This method overwrites the existing
 *  CustomerRepricingConfig. You can only update configs if the
 *  RepricingConfig.effective_invoice_month is a future month. To make changes
 *  to configs for the current month, use CreateCustomerRepricingConfig, taking
 *  note of its restrictions. You cannot update the
 *  RepricingConfig.effective_invoice_month. When updating a config in the
 *  future: * This config must already exist. Possible Error Codes: *
 *  PERMISSION_DENIED: If the account making the request and the account being
 *  queried are different. * INVALID_ARGUMENT: Missing or invalid required
 *  parameters in the request. Also displays if the updated config is for the
 *  current month or past months. * NOT_FOUND: The CustomerRepricingConfig
 *  specified does not exist or is not associated with the given account. *
 *  INTERNAL: Any non-user error related to technical issues in the backend. In
 *  this case, contact Cloud Channel support. Return Value: If successful, the
 *  updated CustomerRepricingConfig resource, otherwise returns an error.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CustomerRepricingConfig to include in
 *    the query.
 *  @param name Output only. Resource name of the CustomerRepricingConfig.
 *    Format:
 *    accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersCustomerRepricingConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CustomerRepricingConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes the given Customer permanently. Possible error codes: *
 *  PERMISSION_DENIED: The account making the request does not own this
 *  customer. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * FAILED_PRECONDITION: The customer has existing entitlements. *
 *  NOT_FOUND: No Customer resource found for the name in the request.
 *
 *  Method: cloudchannel.accounts.customers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersDelete : GTLRCloudchannelQuery

/** Required. The resource name of the customer to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Deletes the given Customer permanently. Possible error codes: *
 *  PERMISSION_DENIED: The account making the request does not own this
 *  customer. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * FAILED_PRECONDITION: The customer has existing entitlements. *
 *  NOT_FOUND: No Customer resource found for the name in the request.
 *
 *  @param name Required. The resource name of the customer to delete.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Activates a previously suspended entitlement. Entitlements suspended for
 *  pending ToS acceptance can't be activated using this method. An entitlement
 *  activation is a long-running operation and it updates the state of the
 *  customer entitlement. Possible error codes: * PERMISSION_DENIED: The
 *  reseller account making the request is different from the reseller account
 *  in the API request. * INVALID_ARGUMENT: Required request parameters are
 *  missing or invalid. * NOT_FOUND: Entitlement resource not found. *
 *  SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
 *  suspensions and entitlements that have accepted the TOS. * NOT_SUSPENDED:
 *  Can only activate suspended entitlements not in an ACTIVE state. * INTERNAL:
 *  Any non-user error related to a technical issue in the backend. Contact
 *  Cloud Channel support. * UNKNOWN: Any non-user error related to a technical
 *  issue in the backend. Contact Cloud Channel support. Return value: The ID of
 *  a long-running operation. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The Operation metadata
 *  will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.activate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsActivate : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the entitlement to activate. Name uses the
 *  format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Activates a previously suspended entitlement. Entitlements suspended for
 *  pending ToS acceptance can't be activated using this method. An entitlement
 *  activation is a long-running operation and it updates the state of the
 *  customer entitlement. Possible error codes: * PERMISSION_DENIED: The
 *  reseller account making the request is different from the reseller account
 *  in the API request. * INVALID_ARGUMENT: Required request parameters are
 *  missing or invalid. * NOT_FOUND: Entitlement resource not found. *
 *  SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
 *  suspensions and entitlements that have accepted the TOS. * NOT_SUSPENDED:
 *  Can only activate suspended entitlements not in an ACTIVE state. * INTERNAL:
 *  Any non-user error related to a technical issue in the backend. Contact
 *  Cloud Channel support. * UNKNOWN: Any non-user error related to a technical
 *  issue in the backend. Contact Cloud Channel support. Return value: The ID of
 *  a long-running operation. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The Operation metadata
 *  will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ActivateEntitlementRequest to include
 *    in the query.
 *  @param name Required. The resource name of the entitlement to activate. Name
 *    uses the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsActivate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ActivateEntitlementRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Cancels a previously fulfilled entitlement. An entitlement cancellation is a
 *  long-running operation. Possible error codes: * PERMISSION_DENIED: The
 *  reseller account making the request is different from the reseller account
 *  in the API request. * FAILED_PRECONDITION: There are Google Cloud projects
 *  linked to the Google Cloud entitlement's Cloud Billing subaccount. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement resource not found. * DELETION_TYPE_NOT_ALLOWED:
 *  Cancel is only allowed for Google Workspace add-ons, or entitlements for
 *  Google Cloud's development platform. * INTERNAL: Any non-user error related
 *  to a technical issue in the backend. Contact Cloud Channel support. *
 *  UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. Return value: The ID of a long-running
 *  operation. To get the results of the operation, call the GetOperation method
 *  of CloudChannelOperationsService. The response will contain
 *  google.protobuf.Empty on success. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsCancel : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the entitlement to cancel. Name uses the
 *  format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Cancels a previously fulfilled entitlement. An entitlement cancellation is a
 *  long-running operation. Possible error codes: * PERMISSION_DENIED: The
 *  reseller account making the request is different from the reseller account
 *  in the API request. * FAILED_PRECONDITION: There are Google Cloud projects
 *  linked to the Google Cloud entitlement's Cloud Billing subaccount. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement resource not found. * DELETION_TYPE_NOT_ALLOWED:
 *  Cancel is only allowed for Google Workspace add-ons, or entitlements for
 *  Google Cloud's development platform. * INTERNAL: Any non-user error related
 *  to a technical issue in the backend. Contact Cloud Channel support. *
 *  UNKNOWN: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. Return value: The ID of a long-running
 *  operation. To get the results of the operation, call the GetOperation method
 *  of CloudChannelOperationsService. The response will contain
 *  google.protobuf.Empty on success. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CancelEntitlementRequest to include
 *    in the query.
 *  @param name Required. The resource name of the entitlement to cancel. Name
 *    uses the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CancelEntitlementRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the Offer for an existing customer entitlement. An entitlement
 *  update is a long-running operation and it updates the entitlement as a
 *  result of fulfillment. Possible error codes: * PERMISSION_DENIED: The
 *  customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: Offer or Entitlement
 *  resource not found. * INTERNAL: Any non-user error related to a technical
 *  issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support. Return value: The ID of a long-running operation. To get the
 *  results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.changeOffer
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeOffer : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the entitlement to update. Name uses the
 *  format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Updates the Offer for an existing customer entitlement. An entitlement
 *  update is a long-running operation and it updates the entitlement as a
 *  result of fulfillment. Possible error codes: * PERMISSION_DENIED: The
 *  customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: Offer or Entitlement
 *  resource not found. * INTERNAL: Any non-user error related to a technical
 *  issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support. Return value: The ID of a long-running operation. To get the
 *  results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1ChangeOfferRequest
 *    to include in the query.
 *  @param name Required. The resource name of the entitlement to update. Name
 *    uses the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeOffer
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChangeOfferRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Change parameters of the entitlement. An entitlement update is a
 *  long-running operation and it updates the entitlement as a result of
 *  fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't
 *  belong to the reseller. * INVALID_ARGUMENT: Required request parameters are
 *  missing or invalid. For example, the number of seats being changed is
 *  greater than the allowed number of max seats, or decreasing seats for a
 *  commitment based plan. * NOT_FOUND: Entitlement resource not found. *
 *  INTERNAL: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. Contact Cloud Channel support. Return value:
 *  The ID of a long-running operation. To get the results of the operation,
 *  call the GetOperation method of CloudChannelOperationsService. The Operation
 *  metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.changeParameters
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeParameters : GTLRCloudchannelQuery

/**
 *  Required. The name of the entitlement to update. Name uses the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Change parameters of the entitlement. An entitlement update is a
 *  long-running operation and it updates the entitlement as a result of
 *  fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't
 *  belong to the reseller. * INVALID_ARGUMENT: Required request parameters are
 *  missing or invalid. For example, the number of seats being changed is
 *  greater than the allowed number of max seats, or decreasing seats for a
 *  commitment based plan. * NOT_FOUND: Entitlement resource not found. *
 *  INTERNAL: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. Contact Cloud Channel support. Return value:
 *  The ID of a long-running operation. To get the results of the operation,
 *  call the GetOperation method of CloudChannelOperationsService. The Operation
 *  metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ChangeParametersRequest to include in
 *    the query.
 *  @param name Required. The name of the entitlement to update. Name uses the
 *    format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeParameters
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChangeParametersRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the renewal settings for an existing customer entitlement. An
 *  entitlement update is a long-running operation and it updates the
 *  entitlement as a result of fulfillment. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal
 *  Settings are only applicable for a commitment plan. Can't enable or disable
 *  renewals for non-commitment plans. * INTERNAL: Any non-user error related to
 *  a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN:
 *  Any non-user error related to a technical issue in the backend. Contact
 *  Cloud Channel support. Return value: The ID of a long-running operation. To
 *  get the results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.changeRenewalSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeRenewalSettings : GTLRCloudchannelQuery

/**
 *  Required. The name of the entitlement to update. Name uses the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Updates the renewal settings for an existing customer entitlement. An
 *  entitlement update is a long-running operation and it updates the
 *  entitlement as a result of fulfillment. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal
 *  Settings are only applicable for a commitment plan. Can't enable or disable
 *  renewals for non-commitment plans. * INTERNAL: Any non-user error related to
 *  a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN:
 *  Any non-user error related to a technical issue in the backend. Contact
 *  Cloud Channel support. Return value: The ID of a long-running operation. To
 *  get the results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata will contain an
 *  instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ChangeRenewalSettingsRequest to
 *    include in the query.
 *  @param name Required. The name of the entitlement to update. Name uses the
 *    format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsChangeRenewalSettings
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ChangeRenewalSettingsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an entitlement for a customer. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: * Required request parameters are missing or invalid. *
 *  There is already a customer entitlement for a SKU from the same product
 *  family. * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
 *  Google Channel support for further troubleshooting. * NOT_FOUND: The
 *  customer or offer resource was not found. * ALREADY_EXISTS: * The SKU was
 *  already purchased for the customer. * The customer's primary email already
 *  exists. Retry after changing the customer's primary contact email. *
 *  CONDITION_NOT_MET or FAILED_PRECONDITION: * The domain required for
 *  purchasing a SKU has not been verified. * A pre-requisite SKU required to
 *  purchase an Add-On SKU is missing. For example, Google Workspace Business
 *  Starter is required to purchase Vault or Drive. * (Developer accounts only)
 *  Reseller and resold domain must meet the following naming requirements: *
 *  Domain names must start with goog-test. * Domain names must include the
 *  reseller domain. * INTERNAL: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The ID of a long-running operation. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsCreate : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the reseller's customer account in which to
 *  create the entitlement. Parent uses the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Creates an entitlement for a customer. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: * Required request parameters are missing or invalid. *
 *  There is already a customer entitlement for a SKU from the same product
 *  family. * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
 *  Google Channel support for further troubleshooting. * NOT_FOUND: The
 *  customer or offer resource was not found. * ALREADY_EXISTS: * The SKU was
 *  already purchased for the customer. * The customer's primary email already
 *  exists. Retry after changing the customer's primary contact email. *
 *  CONDITION_NOT_MET or FAILED_PRECONDITION: * The domain required for
 *  purchasing a SKU has not been verified. * A pre-requisite SKU required to
 *  purchase an Add-On SKU is missing. For example, Google Workspace Business
 *  Starter is required to purchase Vault or Drive. * (Developer accounts only)
 *  Reseller and resold domain must meet the following naming requirements: *
 *  Domain names must start with goog-test. * Domain names must include the
 *  reseller domain. * INTERNAL: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The ID of a long-running operation. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1CreateEntitlementRequest to include
 *    in the query.
 *  @param parent Required. The resource name of the reseller's customer account
 *    in which to create the entitlement. Parent uses the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1CreateEntitlementRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Returns the requested Entitlement resource. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: The customer entitlement was not found. Return value: The
 *  requested Entitlement resource.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsGet : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the entitlement to retrieve. Name uses the
 *  format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Entitlement.
 *
 *  Returns the requested Entitlement resource. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: The customer entitlement was not found. Return value: The
 *  requested Entitlement resource.
 *
 *  @param name Required. The resource name of the entitlement to retrieve. Name
 *    uses the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Entitlements belonging to a customer. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. Return
 *  value: A list of the customer's Entitlements.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsList : GTLRCloudchannelQuery

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, return at most 50 entitlements. The maximum value
 *  is 100; the server will coerce values above 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token for a page of results other than the first page. Obtained
 *  using ListEntitlementsResponse.next_page_token of the previous
 *  CloudChannelService.ListEntitlements call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller's customer account to list
 *  entitlements for. Parent uses the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListEntitlementsResponse.
 *
 *  Lists Entitlements belonging to a customer. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. Return
 *  value: A list of the customer's Entitlements.
 *
 *  @param parent Required. The resource name of the reseller's customer account
 *    to list entitlements for. Parent uses the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns the requested Offer resource. Possible error codes: *
 *  PERMISSION_DENIED: The entitlement doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement or offer was not found. Return value: The Offer
 *  resource.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.lookupOffer
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsLookupOffer : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the entitlement to retrieve the Offer.
 *  Entitlement uses the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *entitlement;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Offer.
 *
 *  Returns the requested Offer resource. Possible error codes: *
 *  PERMISSION_DENIED: The entitlement doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement or offer was not found. Return value: The Offer
 *  resource.
 *
 *  @param entitlement Required. The resource name of the entitlement to
 *    retrieve the Offer. Entitlement uses the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsLookupOffer
 */
+ (instancetype)queryWithEntitlement:(NSString *)entitlement;

@end

/**
 *  Starts paid service for a trial entitlement. Starts paid service for a trial
 *  entitlement immediately. This method is only applicable if a plan is set up
 *  for a trial entitlement but has some trial days remaining. Possible error
 *  codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement resource not found. *
 *  FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for entitlement on
 *  trial plans. * INTERNAL: Any non-user error related to a technical issue in
 *  the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The ID of a long-running operation. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.startPaidService
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsStartPaidService : GTLRCloudchannelQuery

/**
 *  Required. The name of the entitlement to start a paid service for. Name uses
 *  the format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Starts paid service for a trial entitlement. Starts paid service for a trial
 *  entitlement immediately. This method is only applicable if a plan is set up
 *  for a trial entitlement but has some trial days remaining. Possible error
 *  codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: Entitlement resource not found. *
 *  FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for entitlement on
 *  trial plans. * INTERNAL: Any non-user error related to a technical issue in
 *  the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The ID of a long-running operation. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1StartPaidServiceRequest to include in
 *    the query.
 *  @param name Required. The name of the entitlement to start a paid service
 *    for. Name uses the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsStartPaidService
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1StartPaidServiceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Suspends a previously fulfilled entitlement. An entitlement suspension is a
 *  long-running operation. Possible error codes: * PERMISSION_DENIED: The
 *  customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: Entitlement resource
 *  not found. * NOT_ACTIVE: Entitlement is not active. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support. * UNKNOWN: Any non-user error related to a technical issue in the
 *  backend. Contact Cloud Channel support. Return value: The ID of a
 *  long-running operation. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The Operation metadata
 *  will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.entitlements.suspend
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersEntitlementsSuspend : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the entitlement to suspend. Name uses the
 *  format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Suspends a previously fulfilled entitlement. An entitlement suspension is a
 *  long-running operation. Possible error codes: * PERMISSION_DENIED: The
 *  customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: Entitlement resource
 *  not found. * NOT_ACTIVE: Entitlement is not active. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support. * UNKNOWN: Any non-user error related to a technical issue in the
 *  backend. Contact Cloud Channel support. Return value: The ID of a
 *  long-running operation. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The Operation metadata
 *  will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1SuspendEntitlementRequest to include
 *    in the query.
 *  @param name Required. The resource name of the entitlement to suspend. Name
 *    uses the format:
 *    accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersEntitlementsSuspend
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1SuspendEntitlementRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the requested Customer resource. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request is different from
 *  the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: The customer
 *  resource doesn't exist. Usually the result of an invalid name parameter.
 *  Return value: The Customer resource.
 *
 *  Method: cloudchannel.accounts.customers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersGet : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the customer to retrieve. Name uses the
 *  format: accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Returns the requested Customer resource. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request is different from
 *  the reseller account in the API request. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: The customer
 *  resource doesn't exist. Usually the result of an invalid name parameter.
 *  Return value: The Customer resource.
 *
 *  @param name Required. The resource name of the customer to retrieve. Name
 *    uses the format: accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports a Customer from the Cloud Identity associated with the provided
 *  Cloud Identity ID or domain before a TransferEntitlements call. If a linked
 *  Customer already exists and overwrite_if_exists is true, it will update that
 *  Customer's data. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * NOT_FOUND: Cloud Identity doesn't exist or was deleted. *
 *  INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
 *  expired or invalid. * ALREADY_EXISTS: A customer already exists and has
 *  conflicting critical fields. Requires an overwrite. Return value: The
 *  Customer.
 *
 *  Method: cloudchannel.accounts.customers.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersImport : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the reseller's account. Parent takes the
 *  format: accounts/{account_id} or
 *  accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Imports a Customer from the Cloud Identity associated with the provided
 *  Cloud Identity ID or domain before a TransferEntitlements call. If a linked
 *  Customer already exists and overwrite_if_exists is true, it will update that
 *  Customer's data. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * NOT_FOUND: Cloud Identity doesn't exist or was deleted. *
 *  INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
 *  expired or invalid. * ALREADY_EXISTS: A customer already exists and has
 *  conflicting critical fields. Requires an overwrite. Return value: The
 *  Customer.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ImportCustomerRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the reseller's account. Parent
 *    takes the format: accounts/{account_id} or
 *    accounts/{account_id}/channelPartnerLinks/{channel_partner_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersImport
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ImportCustomerRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  List Customers. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. Return value: List of Customers, or an empty list if there are no
 *  customers.
 *
 *  Method: cloudchannel.accounts.customers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersList : GTLRCloudchannelQuery

/**
 *  Optional. Filters applied to the [CloudChannelService.ListCustomers]
 *  results. See
 *  https://cloud.google.com/channel/docs/concepts/google-cloud/filter-customers
 *  for more information.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of customers to return. The service may return
 *  fewer than this value. If unspecified, returns at most 10 customers. The
 *  maximum value is 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results other than the first page.
 *  Obtained through ListCustomersResponse.next_page_token of the previous
 *  CloudChannelService.ListCustomers call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller account to list customers from.
 *  Parent uses the format: accounts/{account_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListCustomersResponse.
 *
 *  List Customers. Possible error codes: * PERMISSION_DENIED: The reseller
 *  account making the request is different from the reseller account in the API
 *  request. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. Return value: List of Customers, or an empty list if there are no
 *  customers.
 *
 *  @param parent Required. The resource name of the reseller account to list
 *    customers from. Parent uses the format: accounts/{account_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the following: * Offers that you can purchase for a customer. * Offers
 *  that you can change for an entitlement. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  Method: cloudchannel.accounts.customers.listPurchasableOffers
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersListPurchasableOffers : GTLRCloudchannelQuery

/**
 *  Required. Resource name of the entitlement. Format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseEntitlement;

/**
 *  Optional. Resource name of the new target SKU. Provide this SKU when
 *  upgrading or downgrading an entitlement. Format:
 *  products/{product_id}/skus/{sku_id}
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseNewSku;

/**
 *  Required. SKU that the result should be restricted to. Format:
 *  products/{product_id}/skus/{sku_id}.
 */
@property(nonatomic, copy, nullable) NSString *createEntitlementPurchaseSku;

/**
 *  Required. The resource name of the customer to list Offers for. Format:
 *  accounts/{account_id}/customers/{customer_id}.
 */
@property(nonatomic, copy, nullable) NSString *customer;

/**
 *  Optional. The BCP-47 language code. For example, "en-US". The response will
 *  localize in the corresponding language code, if specified. The default value
 *  is "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, returns at most 100 Offers. The maximum value is
 *  1000; the server will coerce values above 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. A token for a page of results other than the first page. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListPurchasableOffersResponse.
 *
 *  Lists the following: * Offers that you can purchase for a customer. * Offers
 *  that you can change for an entitlement. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  @param customer Required. The resource name of the customer to list Offers
 *    for. Format: accounts/{account_id}/customers/{customer_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersListPurchasableOffers
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithCustomer:(NSString *)customer;

@end

/**
 *  Lists the following: * SKUs that you can purchase for a customer * SKUs that
 *  you can upgrade or downgrade for an entitlement. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  Method: cloudchannel.accounts.customers.listPurchasableSkus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersListPurchasableSkus : GTLRCloudchannelQuery

/**
 *  Required. Change Type for the entitlement.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudchannelChangeOfferPurchaseChangeTypeChangeTypeUnspecified
 *        Not used. (Value: "CHANGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudchannelChangeOfferPurchaseChangeTypeUpgrade SKU is an
 *        upgrade on the current entitlement. (Value: "UPGRADE")
 *    @arg @c kGTLRCloudchannelChangeOfferPurchaseChangeTypeDowngrade SKU is a
 *        downgrade on the current entitlement. (Value: "DOWNGRADE")
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseChangeType;

/**
 *  Required. Resource name of the entitlement. Format:
 *  accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}
 */
@property(nonatomic, copy, nullable) NSString *changeOfferPurchaseEntitlement;

/**
 *  Required. List SKUs belonging to this Product. Format:
 *  products/{product_id}. Supports products/- to retrieve SKUs for all
 *  products.
 */
@property(nonatomic, copy, nullable) NSString *createEntitlementPurchaseProduct;

/**
 *  Required. The resource name of the customer to list SKUs for. Format:
 *  accounts/{account_id}/customers/{customer_id}.
 */
@property(nonatomic, copy, nullable) NSString *customer;

/**
 *  Optional. The BCP-47 language code. For example, "en-US". The response will
 *  localize in the corresponding language code, if specified. The default value
 *  is "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, returns at most 100 SKUs. The maximum value is
 *  1000; the server will coerce values above 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. A token for a page of results other than the first page. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListPurchasableSkusResponse.
 *
 *  Lists the following: * SKUs that you can purchase for a customer * SKUs that
 *  you can upgrade or downgrade for an entitlement. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  @param customer Required. The resource name of the customer to list SKUs
 *    for. Format: accounts/{account_id}/customers/{customer_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersListPurchasableSkus
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithCustomer:(NSString *)customer;

@end

/**
 *  Updates an existing Customer resource for the reseller or distributor.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: No Customer resource found for the name in the request. Return
 *  value: The updated Customer resource.
 *
 *  Method: cloudchannel.accounts.customers.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersPatch : GTLRCloudchannelQuery

/**
 *  Output only. Resource name of the customer. Format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask that applies to the resource. Optional.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1Customer.
 *
 *  Updates an existing Customer resource for the reseller or distributor.
 *  Possible error codes: * PERMISSION_DENIED: The reseller account making the
 *  request is different from the reseller account in the API request. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: No Customer resource found for the name in the request. Return
 *  value: The updated Customer resource.
 *
 *  @param object The @c GTLRCloudchannel_GoogleCloudChannelV1Customer to
 *    include in the query.
 *  @param name Output only. Resource name of the customer. Format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1Customer *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Cloud Identity for the given customer using the customer's
 *  information, or the information provided here. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: The customer was not found. * ALREADY_EXISTS: The customer's
 *  primary email already exists. Retry after changing the customer's primary
 *  contact email. * INTERNAL: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The ID of a long-running operation. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata contains an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.provisionCloudIdentity
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersProvisionCloudIdentity : GTLRCloudchannelQuery

/**
 *  Required. Resource name of the customer. Format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *customer;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Creates a Cloud Identity for the given customer using the customer's
 *  information, or the information provided here. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: The customer was not found. * ALREADY_EXISTS: The customer's
 *  primary email already exists. Retry after changing the customer's primary
 *  contact email. * INTERNAL: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The ID of a long-running operation. To get the results of the
 *  operation, call the GetOperation method of CloudChannelOperationsService.
 *  The Operation metadata contains an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ProvisionCloudIdentityRequest to
 *    include in the query.
 *  @param customer Required. Resource name of the customer. Format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersProvisionCloudIdentity
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ProvisionCloudIdentityRequest *)object
                       customer:(NSString *)customer;

@end

/**
 *  Transfers customer entitlements to new reseller. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS:
 *  The SKU was already transferred for the customer. * CONDITION_NOT_MET or
 *  FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but
 *  the domain is not verified. * An Add-On SKU (example, Vault or Drive) is
 *  missing the pre-requisite SKU (example, G Suite Basic). * (Developer
 *  accounts only) Reseller and resold domain must meet the following naming
 *  requirements: * Domain names must start with goog-test. * Domain names must
 *  include the reseller domain. * Specify all transferring entitlements. *
 *  INTERNAL: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. Contact Cloud Channel support. Return value:
 *  The ID of a long-running operation. To get the results of the operation,
 *  call the GetOperation method of CloudChannelOperationsService. The Operation
 *  metadata will contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.transferEntitlements
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersTransferEntitlements : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the reseller's customer account that will
 *  receive transferred entitlements. Parent uses the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Transfers customer entitlements to new reseller. Possible error codes: *
 *  PERMISSION_DENIED: The customer doesn't belong to the reseller. *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid. *
 *  NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS:
 *  The SKU was already transferred for the customer. * CONDITION_NOT_MET or
 *  FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but
 *  the domain is not verified. * An Add-On SKU (example, Vault or Drive) is
 *  missing the pre-requisite SKU (example, G Suite Basic). * (Developer
 *  accounts only) Reseller and resold domain must meet the following naming
 *  requirements: * Domain names must start with goog-test. * Domain names must
 *  include the reseller domain. * Specify all transferring entitlements. *
 *  INTERNAL: Any non-user error related to a technical issue in the backend.
 *  Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a
 *  technical issue in the backend. Contact Cloud Channel support. Return value:
 *  The ID of a long-running operation. To get the results of the operation,
 *  call the GetOperation method of CloudChannelOperationsService. The Operation
 *  metadata will contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the reseller's customer account
 *    that will receive transferred entitlements. Parent uses the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersTransferEntitlements
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Transfers customer entitlements from their current reseller to Google.
 *  Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to
 *  the reseller. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: The customer or offer resource was not found. *
 *  ALREADY_EXISTS: The SKU was already transferred for the customer. *
 *  CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain
 *  verification to transfer, but the domain is not verified. * An Add-On SKU
 *  (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite
 *  Basic). * (Developer accounts only) Reseller and resold domain must meet the
 *  following naming requirements: * Domain names must start with goog-test. *
 *  Domain names must include the reseller domain. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support. * UNKNOWN: Any non-user error related to a technical issue in the
 *  backend. Contact Cloud Channel support. Return value: The ID of a
 *  long-running operation. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The response will
 *  contain google.protobuf.Empty on success. The Operation metadata will
 *  contain an instance of OperationMetadata.
 *
 *  Method: cloudchannel.accounts.customers.transferEntitlementsToGoogle
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsCustomersTransferEntitlementsToGoogle : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the reseller's customer account where the
 *  entitlements transfer from. Parent uses the format:
 *  accounts/{account_id}/customers/{customer_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Transfers customer entitlements from their current reseller to Google.
 *  Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to
 *  the reseller. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: The customer or offer resource was not found. *
 *  ALREADY_EXISTS: The SKU was already transferred for the customer. *
 *  CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain
 *  verification to transfer, but the domain is not verified. * An Add-On SKU
 *  (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite
 *  Basic). * (Developer accounts only) Reseller and resold domain must meet the
 *  following naming requirements: * Domain names must start with goog-test. *
 *  Domain names must include the reseller domain. * INTERNAL: Any non-user
 *  error related to a technical issue in the backend. Contact Cloud Channel
 *  support. * UNKNOWN: Any non-user error related to a technical issue in the
 *  backend. Contact Cloud Channel support. Return value: The ID of a
 *  long-running operation. To get the results of the operation, call the
 *  GetOperation method of CloudChannelOperationsService. The response will
 *  contain google.protobuf.Empty on success. The Operation metadata will
 *  contain an instance of OperationMetadata.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsToGoogleRequest
 *    to include in the query.
 *  @param parent Required. The resource name of the reseller's customer account
 *    where the entitlements transfer from. Parent uses the format:
 *    accounts/{account_id}/customers/{customer_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsCustomersTransferEntitlementsToGoogle
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1TransferEntitlementsToGoogleRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic
 *  created for this Channel Services account. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request and the provided
 *  reseller account are different, or the impersonated user is not a super
 *  admin. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. Contact Cloud
 *  Channel support. * UNKNOWN: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. Return value: A list of
 *  service email addresses.
 *
 *  Method: cloudchannel.accounts.listSubscribers
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsListSubscribers : GTLRCloudchannelQuery

/** Required. Resource name of the account. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Optional. The maximum number of service accounts to return. The service may
 *  return fewer than this value. If unspecified, returns at most 100 service
 *  accounts. The maximum value is 1000; the server will coerce values above
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListSubscribers` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListSubscribers` must match the call that provided
 *  the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListSubscribersResponse.
 *
 *  Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic
 *  created for this Channel Services account. Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request and the provided
 *  reseller account are different, or the impersonated user is not a super
 *  admin. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. Contact Cloud
 *  Channel support. * UNKNOWN: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. Return value: A list of
 *  service email addresses.
 *
 *  @param account Required. Resource name of the account.
 *
 *  @return GTLRCloudchannelQuery_AccountsListSubscribers
 */
+ (instancetype)queryWithAccount:(NSString *)account;

@end

/**
 *  List TransferableOffers of a customer based on Cloud Identity ID or Customer
 *  Name in the request. Use this method when a reseller gets the entitlement
 *  information of an unowned customer. The reseller should provide the
 *  customer's Cloud Identity ID or Customer Name. Possible error codes: *
 *  PERMISSION_DENIED: * The customer doesn't belong to the reseller and has no
 *  auth token. * The customer provided incorrect reseller information when
 *  generating auth token. * The reseller account making the request is
 *  different from the reseller account in the query. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. Return value: List of
 *  TransferableOffer for the given customer and SKU.
 *
 *  Method: cloudchannel.accounts.listTransferableOffers
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsListTransferableOffers : GTLRCloudchannelQuery

/** Required. The resource name of the reseller's account. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListTransferableOffersResponse.
 *
 *  List TransferableOffers of a customer based on Cloud Identity ID or Customer
 *  Name in the request. Use this method when a reseller gets the entitlement
 *  information of an unowned customer. The reseller should provide the
 *  customer's Cloud Identity ID or Customer Name. Possible error codes: *
 *  PERMISSION_DENIED: * The customer doesn't belong to the reseller and has no
 *  auth token. * The customer provided incorrect reseller information when
 *  generating auth token. * The reseller account making the request is
 *  different from the reseller account in the query. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. Return value: List of
 *  TransferableOffer for the given customer and SKU.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ListTransferableOffersRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the reseller's account.
 *
 *  @return GTLRCloudchannelQuery_AccountsListTransferableOffers
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ListTransferableOffersRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  List TransferableSkus of a customer based on the Cloud Identity ID or
 *  Customer Name in the request. Use this method to list the entitlements
 *  information of an unowned customer. You should provide the customer's Cloud
 *  Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: *
 *  The customer doesn't belong to the reseller and has no auth token. * The
 *  supplied auth token is invalid. * The reseller account making the request is
 *  different from the reseller account in the query. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. Return value: A list of
 *  the customer's TransferableSku.
 *
 *  Method: cloudchannel.accounts.listTransferableSkus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsListTransferableSkus : GTLRCloudchannelQuery

/**
 *  Required. The reseller account's resource name. Parent uses the format:
 *  accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1ListTransferableSkusResponse.
 *
 *  List TransferableSkus of a customer based on the Cloud Identity ID or
 *  Customer Name in the request. Use this method to list the entitlements
 *  information of an unowned customer. You should provide the customer's Cloud
 *  Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: *
 *  The customer doesn't belong to the reseller and has no auth token. * The
 *  supplied auth token is invalid. * The reseller account making the request is
 *  different from the reseller account in the query. * INVALID_ARGUMENT:
 *  Required request parameters are missing or invalid. Return value: A list of
 *  the customer's TransferableSku.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1ListTransferableSkusRequest to
 *    include in the query.
 *  @param parent Required. The reseller account's resource name. Parent uses
 *    the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsListTransferableSkus
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1ListTransferableSkusRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists the Offers the reseller can sell. Possible error codes: *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  Method: cloudchannel.accounts.offers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsOffersList : GTLRCloudchannelQuery

/**
 *  Optional. The expression to filter results by name (name of the Offer),
 *  sku.name (name of the SKU), or sku.product.name (name of the Product).
 *  Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1
 *  Example 2: name=accounts/a1/offers/o1
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The BCP-47 language code. For example, "en-US". The response will
 *  localize in the corresponding language code, if specified. The default value
 *  is "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, returns at most 500 Offers. The maximum value is
 *  1000; the server will coerce values above 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. A token for a page of results other than the first page. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the reseller account from which to list
 *  Offers. Parent uses the format: accounts/{account_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListOffersResponse.
 *
 *  Lists the Offers the reseller can sell. Possible error codes: *
 *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  @param parent Required. The resource name of the reseller account from which
 *    to list Offers. Parent uses the format: accounts/{account_id}.
 *
 *  @return GTLRCloudchannelQuery_AccountsOffersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Registers a service account with subscriber privileges on the Cloud Pub/Sub
 *  topic for this Channel Services account. After you create a subscriber, you
 *  get the events through SubscriberEvent Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request and the provided
 *  reseller account are different, or the impersonated user is not a super
 *  admin. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * INTERNAL: Any non-user error related to a technical issue in the
 *  backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The topic name with the registered service email address.
 *
 *  Method: cloudchannel.accounts.register
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsRegister : GTLRCloudchannelQuery

/** Required. Resource name of the account. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1RegisterSubscriberResponse.
 *
 *  Registers a service account with subscriber privileges on the Cloud Pub/Sub
 *  topic for this Channel Services account. After you create a subscriber, you
 *  get the events through SubscriberEvent Possible error codes: *
 *  PERMISSION_DENIED: The reseller account making the request and the provided
 *  reseller account are different, or the impersonated user is not a super
 *  admin. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * INTERNAL: Any non-user error related to a technical issue in the
 *  backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error
 *  related to a technical issue in the backend. Contact Cloud Channel support.
 *  Return value: The topic name with the registered service email address.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1RegisterSubscriberRequest to include
 *    in the query.
 *  @param account Required. Resource name of the account.
 *
 *  @return GTLRCloudchannelQuery_AccountsRegister
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1RegisterSubscriberRequest *)object
                        account:(NSString *)account;

@end

/**
 *  Retrieves data generated by CloudChannelReportsService.RunReportJob.
 *
 *  Method: cloudchannel.accounts.reportJobs.fetchReportResults
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsReportsUsageReadonly
 */
@interface GTLRCloudchannelQuery_AccountsReportJobsFetchReportResults : GTLRCloudchannelQuery

/**
 *  Required. The report job created by CloudChannelReportsService.RunReportJob.
 *  Report_job uses the format: accounts/{account_id}/reportJobs/{report_job_id}
 */
@property(nonatomic, copy, nullable) NSString *reportJob;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1FetchReportResultsResponse.
 *
 *  Retrieves data generated by CloudChannelReportsService.RunReportJob.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1FetchReportResultsRequest to include
 *    in the query.
 *  @param reportJob Required. The report job created by
 *    CloudChannelReportsService.RunReportJob. Report_job uses the format:
 *    accounts/{account_id}/reportJobs/{report_job_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsReportJobsFetchReportResults
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1FetchReportResultsRequest *)object
                      reportJob:(NSString *)reportJob;

@end

/**
 *  Lists the reports that RunReportJob can run. These reports include an ID, a
 *  description, and the list of columns that will be in the result.
 *
 *  Method: cloudchannel.accounts.reports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsReportsUsageReadonly
 */
@interface GTLRCloudchannelQuery_AccountsReportsList : GTLRCloudchannelQuery

/**
 *  Optional. The BCP-47 language code, such as "en-US". If specified, the
 *  response is localized to the corresponding language code if the original
 *  data sources support it. Default is "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size of the report. The server might return fewer
 *  results than requested. If unspecified, returns 20 reports. The maximum
 *  value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token that specifies a page of results beyond the first page.
 *  Obtained through ListReportsResponse.next_page_token of the previous
 *  CloudChannelReportsService.ListReports call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the partner account to list available reports
 *  for. Parent uses the format: accounts/{account_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListReportsResponse.
 *
 *  Lists the reports that RunReportJob can run. These reports include an ID, a
 *  description, and the list of columns that will be in the result.
 *
 *  @param parent Required. The resource name of the partner account to list
 *    available reports for. Parent uses the format: accounts/{account_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsReportsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Begins generation of data for a given report. The report identifier is a UID
 *  (for example, `613bf59q`). Possible error codes: * PERMISSION_DENIED: The
 *  user doesn't have access to this report. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: The report
 *  identifier was not found. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. Contact Cloud Channel support. * UNKNOWN:
 *  Any non-user error related to a technical issue in the backend. Contact
 *  Cloud Channel support. Return value: The ID of a long-running operation. To
 *  get the results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata contains an instance
 *  of OperationMetadata. To get the results of report generation, call
 *  CloudChannelReportsService.FetchReportResults with the
 *  RunReportJobResponse.report_job.
 *
 *  Method: cloudchannel.accounts.reports.run
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsReportsUsageReadonly
 */
@interface GTLRCloudchannelQuery_AccountsReportsRun : GTLRCloudchannelQuery

/**
 *  Required. The report's resource name. Specifies the account and report used
 *  to generate report data. The report_id identifier is a UID (for example,
 *  `613bf59q`). Name uses the format: accounts/{account_id}/reports/{report_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Begins generation of data for a given report. The report identifier is a UID
 *  (for example, `613bf59q`). Possible error codes: * PERMISSION_DENIED: The
 *  user doesn't have access to this report. * INVALID_ARGUMENT: Required
 *  request parameters are missing or invalid. * NOT_FOUND: The report
 *  identifier was not found. * INTERNAL: Any non-user error related to a
 *  technical issue in the backend. Contact Cloud Channel support. * UNKNOWN:
 *  Any non-user error related to a technical issue in the backend. Contact
 *  Cloud Channel support. Return value: The ID of a long-running operation. To
 *  get the results of the operation, call the GetOperation method of
 *  CloudChannelOperationsService. The Operation metadata contains an instance
 *  of OperationMetadata. To get the results of report generation, call
 *  CloudChannelReportsService.FetchReportResults with the
 *  RunReportJobResponse.report_job.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1RunReportJobRequest to include in the
 *    query.
 *  @param name Required. The report's resource name. Specifies the account and
 *    report used to generate report data. The report_id identifier is a UID
 *    (for example, `613bf59q`). Name uses the format:
 *    accounts/{account_id}/reports/{report_id}
 *
 *  @return GTLRCloudchannelQuery_AccountsReportsRun
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1RunReportJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Unregisters a service account with subscriber privileges on the Cloud
 *  Pub/Sub topic created for this Channel Services account. If there are no
 *  service accounts left with subscriber privileges, this deletes the topic.
 *  You can call ListSubscribers to check for these accounts. Possible error
 *  codes: * PERMISSION_DENIED: The reseller account making the request and the
 *  provided reseller account are different, or the impersonated user is not a
 *  super admin. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. Contact Cloud
 *  Channel support. * UNKNOWN: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. Return value: The topic name
 *  that unregistered the service email address. Returns a success response if
 *  the service email address wasn't registered with the topic.
 *
 *  Method: cloudchannel.accounts.unregister
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_AccountsUnregister : GTLRCloudchannelQuery

/** Required. Resource name of the account. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Fetches a @c
 *  GTLRCloudchannel_GoogleCloudChannelV1UnregisterSubscriberResponse.
 *
 *  Unregisters a service account with subscriber privileges on the Cloud
 *  Pub/Sub topic created for this Channel Services account. If there are no
 *  service accounts left with subscriber privileges, this deletes the topic.
 *  You can call ListSubscribers to check for these accounts. Possible error
 *  codes: * PERMISSION_DENIED: The reseller account making the request and the
 *  provided reseller account are different, or the impersonated user is not a
 *  super admin. * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any
 *  non-user error related to a technical issue in the backend. Contact Cloud
 *  Channel support. * UNKNOWN: Any non-user error related to a technical issue
 *  in the backend. Contact Cloud Channel support. Return value: The topic name
 *  that unregistered the service email address. Returns a success response if
 *  the service email address wasn't registered with the topic.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleCloudChannelV1UnregisterSubscriberRequest to
 *    include in the query.
 *  @param account Required. Resource name of the account.
 *
 *  @return GTLRCloudchannelQuery_AccountsUnregister
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleCloudChannelV1UnregisterSubscriberRequest *)object
                        account:(NSString *)account;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: cloudchannel.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsCancel : GTLRCloudchannelQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRCloudchannel_GoogleLongrunningCancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRCloudchannelQuery_OperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudchannel_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: cloudchannel.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsDelete : GTLRCloudchannelQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRCloudchannelQuery_OperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: cloudchannel.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsGet : GTLRCloudchannelQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudchannelQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: cloudchannel.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_OperationsList : GTLRCloudchannelQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudchannelQuery_OperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the Products the reseller is authorized to sell. Possible error codes:
 *  * INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  Method: cloudchannel.products.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_ProductsList : GTLRCloudchannelQuery

/**
 *  Required. The resource name of the reseller account. Format:
 *  accounts/{account_id}.
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Optional. The BCP-47 language code. For example, "en-US". The response will
 *  localize in the corresponding language code, if specified. The default value
 *  is "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, returns at most 100 Products. The maximum value
 *  is 1000; the server will coerce values above 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. A token for a page of results other than the first page. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListProductsResponse.
 *
 *  Lists the Products the reseller is authorized to sell. Possible error codes:
 *  * INVALID_ARGUMENT: Required request parameters are missing or invalid.
 *
 *  @return GTLRCloudchannelQuery_ProductsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Lists the SKUs for a product the reseller is authorized to sell. Possible
 *  error codes: * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid.
 *
 *  Method: cloudchannel.products.skus.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudchannelAppsOrder
 */
@interface GTLRCloudchannelQuery_ProductsSkusList : GTLRCloudchannelQuery

/** Required. Resource name of the reseller. Format: accounts/{account_id}. */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Optional. The BCP-47 language code. For example, "en-US". The response will
 *  localize in the corresponding language code, if specified. The default value
 *  is "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. Requested page size. Server might return fewer results than
 *  requested. If unspecified, returns at most 100 SKUs. The maximum value is
 *  1000; the server will coerce values above 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token for a page of results other than the first page. Optional.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the Product to list SKUs for. Parent uses the
 *  format: products/{product_id}. Supports products/- to retrieve SKUs for all
 *  products.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudchannel_GoogleCloudChannelV1ListSkusResponse.
 *
 *  Lists the SKUs for a product the reseller is authorized to sell. Possible
 *  error codes: * INVALID_ARGUMENT: Required request parameters are missing or
 *  invalid.
 *
 *  @param parent Required. The resource name of the Product to list SKUs for.
 *    Parent uses the format: products/{product_id}. Supports products/- to
 *    retrieve SKUs for all products.
 *
 *  @return GTLRCloudchannelQuery_ProductsSkusList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
