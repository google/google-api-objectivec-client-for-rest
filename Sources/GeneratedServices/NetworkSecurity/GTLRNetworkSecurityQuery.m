// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Security API (networksecurity/v1)
// Documentation:
//   https://cloud.google.com/networking

#import <GoogleAPIClientForREST/GTLRNetworkSecurityQuery.h>

@implementation GTLRNetworkSecurityQuery

@dynamic fields;

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate

@dynamic authorizationPolicyId, parent;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizationPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_AuthorizationPolicy class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizationPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListAuthorizationPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.testIamPermissions";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate

@dynamic clientTlsPolicyId, parent;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/clientTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ClientTlsPolicy class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/clientTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListClientTlsPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.testIamPermissions";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Location class];
  query.loggingName = @"networksecurity.projects.locations.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRNetworkSecurityQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListLocationsResponse class];
  query.loggingName = @"networksecurity.projects.locations.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Empty class];
  query.loggingName = @"networksecurity.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Empty class];
  query.loggingName = @"networksecurity.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListOperationsResponse class];
  query.loggingName = @"networksecurity.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate

@dynamic parent, serverTlsPolicyId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/serverTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ServerTlsPolicy class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/serverTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListServerTlsPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.testIamPermissions";
  return query;
}

@end
