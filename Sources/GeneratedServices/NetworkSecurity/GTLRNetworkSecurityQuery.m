// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Security API (networksecurity/v1)
// Documentation:
//   https://cloud.google.com/networking

#import <GoogleAPIClientForREST/GTLRNetworkSecurityQuery.h>

@implementation GTLRNetworkSecurityQuery

@dynamic fields;

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsAddItems

@dynamic addressGroup;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:addItems";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsAddItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.addItems";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCloneItems

@dynamic addressGroup;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CloneAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:cloneItems";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCloneItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.cloneItems";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCreate

@dynamic addressGroupId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/addressGroups";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_AddressGroup class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/addressGroups";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListAddressGroupsResponse class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsListReferences

@dynamic addressGroup, pageSize, pageToken;

+ (instancetype)queryWithAddressGroup:(NSString *)addressGroup {
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:listReferences";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsListReferences *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListAddressGroupReferencesResponse class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.listReferences";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsRemoveItems

@dynamic addressGroup;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_RemoveAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:removeItems";
  GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsRemoveItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.addressGroups.removeItems";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsCreate

@dynamic firewallEndpointId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpoint *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/firewallEndpoints";
  GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.firewallEndpoints.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.firewallEndpoints.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_FirewallEndpoint class];
  query.loggingName = @"networksecurity.organizations.locations.firewallEndpoints.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/firewallEndpoints";
  GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListFirewallEndpointsResponse class];
  query.loggingName = @"networksecurity.organizations.locations.firewallEndpoints.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpoint *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.firewallEndpoints.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Empty class];
  query.loggingName = @"networksecurity.organizations.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Empty class];
  query.loggingName = @"networksecurity.organizations.locations.operations.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.operations.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListOperationsResponse class];
  query.loggingName = @"networksecurity.organizations.locations.operations.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsCreate

@dynamic parent, securityProfileGroupId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfileGroup *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/securityProfileGroups";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfileGroups.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfileGroups.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_SecurityProfileGroup class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfileGroups.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/securityProfileGroups";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListSecurityProfileGroupsResponse class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfileGroups.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfileGroup *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfileGroups.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesCreate

@dynamic parent, securityProfileId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfile *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/securityProfiles";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfiles.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfiles.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_SecurityProfile class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfiles.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/securityProfiles";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListSecurityProfilesResponse class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfiles.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfile *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.organizations.locations.securityProfiles.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsAddItems

@dynamic addressGroup;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:addItems";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsAddItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.addItems";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCloneItems

@dynamic addressGroup;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CloneAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:cloneItems";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCloneItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.cloneItems";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCreate

@dynamic addressGroupId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/addressGroups";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_AddressGroup class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/addressGroups";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListAddressGroupsResponse class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsListReferences

@dynamic addressGroup, pageSize, pageToken;

+ (instancetype)queryWithAddressGroup:(NSString *)addressGroup {
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:listReferences";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsListReferences *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListAddressGroupReferencesResponse class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.listReferences";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsRemoveItems

@dynamic addressGroup;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_RemoveAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"addressGroup" ];
  NSString *pathURITemplate = @"v1/{+addressGroup}:removeItems";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsRemoveItems *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.addressGroup = addressGroup;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.removeItems";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.addressGroups.testIamPermissions";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate

@dynamic authorizationPolicyId, parent;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizationPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_AuthorizationPolicy class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizationPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListAuthorizationPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.authorizationPolicies.testIamPermissions";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesCreate

@dynamic authzPolicyId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthzPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authzPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_AuthzPolicy class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authzPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListAuthzPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthzPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.authzPolicies.testIamPermissions";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate

@dynamic clientTlsPolicyId, parent;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/clientTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ClientTlsPolicy class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/clientTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListClientTlsPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.clientTlsPolicies.testIamPermissions";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsCreate

@dynamic firewallEndpointAssociationId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpointAssociation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/firewallEndpointAssociations";
  GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.firewallEndpointAssociations.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.firewallEndpointAssociations.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_FirewallEndpointAssociation class];
  query.loggingName = @"networksecurity.projects.locations.firewallEndpointAssociations.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/firewallEndpointAssociations";
  GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListFirewallEndpointAssociationsResponse class];
  query.loggingName = @"networksecurity.projects.locations.firewallEndpointAssociations.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpointAssociation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.firewallEndpointAssociations.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesCreate

@dynamic gatewaySecurityPolicyId, parent;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/gatewaySecurityPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_GatewaySecurityPolicy class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/gatewaySecurityPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListGatewaySecurityPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesCreate

@dynamic gatewaySecurityPolicyRuleId, parent;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicyRule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/rules";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.rules.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.rules.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_GatewaySecurityPolicyRule class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.rules.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/rules";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListGatewaySecurityPolicyRulesResponse class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.rules.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicyRule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.gatewaySecurityPolicies.rules.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Location class];
  query.loggingName = @"networksecurity.projects.locations.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRNetworkSecurityQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListLocationsResponse class];
  query.loggingName = @"networksecurity.projects.locations.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Empty class];
  query.loggingName = @"networksecurity.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Empty class];
  query.loggingName = @"networksecurity.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListOperationsResponse class];
  query.loggingName = @"networksecurity.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate

@dynamic parent, serverTlsPolicyId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/serverTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_ServerTlsPolicy class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.getIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/serverTlsPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListServerTlsPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1Policy class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.setIamPolicy";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"networksecurity.projects.locations.serverTlsPolicies.testIamPermissions";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesCreate

@dynamic parent, tlsInspectionPolicyId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_TlsInspectionPolicy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tlsInspectionPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.tlsInspectionPolicies.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.tlsInspectionPolicies.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_TlsInspectionPolicy class];
  query.loggingName = @"networksecurity.projects.locations.tlsInspectionPolicies.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/tlsInspectionPolicies";
  GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListTlsInspectionPoliciesResponse class];
  query.loggingName = @"networksecurity.projects.locations.tlsInspectionPolicies.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_TlsInspectionPolicy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.tlsInspectionPolicies.patch";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsCreate

@dynamic parent, urlListId;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_UrlList *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/urlLists";
  GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.urlLists.create";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.urlLists.delete";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_UrlList class];
  query.loggingName = @"networksecurity.projects.locations.urlLists.get";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/urlLists";
  GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRNetworkSecurity_ListUrlListsResponse class];
  query.loggingName = @"networksecurity.projects.locations.urlLists.list";
  return query;
}

@end

@implementation GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRNetworkSecurity_UrlList *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRNetworkSecurity_Operation class];
  query.loggingName = @"networksecurity.projects.locations.urlLists.patch";
  return query;
}

@end
