// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Security API (networksecurity/v1)
// Documentation:
//   https://cloud.google.com/networking

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRNetworkSecurity_AddressGroup;
@class GTLRNetworkSecurity_AddressGroup_Labels;
@class GTLRNetworkSecurity_AntivirusOverride;
@class GTLRNetworkSecurity_AuthorizationPolicy;
@class GTLRNetworkSecurity_AuthorizationPolicy_Labels;
@class GTLRNetworkSecurity_AuthzPolicy;
@class GTLRNetworkSecurity_AuthzPolicy_Labels;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRule;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleFrom;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleFromRequestSource;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleHeaderMatch;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleRequestResource;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleRequestResourceTagValueIdSet;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleStringMatch;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleTo;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleToRequestOperation;
@class GTLRNetworkSecurity_AuthzPolicyAuthzRuleToRequestOperationHeaderSet;
@class GTLRNetworkSecurity_AuthzPolicyCustomProvider;
@class GTLRNetworkSecurity_AuthzPolicyCustomProviderAuthzExtension;
@class GTLRNetworkSecurity_AuthzPolicyCustomProviderCloudIap;
@class GTLRNetworkSecurity_AuthzPolicyTarget;
@class GTLRNetworkSecurity_CertificateProviderInstance;
@class GTLRNetworkSecurity_ClientTlsPolicy;
@class GTLRNetworkSecurity_ClientTlsPolicy_Labels;
@class GTLRNetworkSecurity_CustomInterceptProfile;
@class GTLRNetworkSecurity_CustomMirroringProfile;
@class GTLRNetworkSecurity_Destination;
@class GTLRNetworkSecurity_Expr;
@class GTLRNetworkSecurity_FirewallEndpoint;
@class GTLRNetworkSecurity_FirewallEndpoint_Labels;
@class GTLRNetworkSecurity_FirewallEndpointAssociation;
@class GTLRNetworkSecurity_FirewallEndpointAssociation_Labels;
@class GTLRNetworkSecurity_FirewallEndpointAssociationReference;
@class GTLRNetworkSecurity_GatewaySecurityPolicy;
@class GTLRNetworkSecurity_GatewaySecurityPolicyRule;
@class GTLRNetworkSecurity_GoogleCloudNetworksecurityV1CertificateProvider;
@class GTLRNetworkSecurity_GoogleCloudNetworksecurityV1GrpcEndpoint;
@class GTLRNetworkSecurity_GoogleIamV1AuditConfig;
@class GTLRNetworkSecurity_GoogleIamV1AuditLogConfig;
@class GTLRNetworkSecurity_GoogleIamV1Binding;
@class GTLRNetworkSecurity_GoogleIamV1Policy;
@class GTLRNetworkSecurity_HttpHeaderMatch;
@class GTLRNetworkSecurity_ListAddressGroupReferencesResponseAddressGroupReference;
@class GTLRNetworkSecurity_Location;
@class GTLRNetworkSecurity_Location_Labels;
@class GTLRNetworkSecurity_Location_Metadata;
@class GTLRNetworkSecurity_MirroringDeployment;
@class GTLRNetworkSecurity_MirroringDeployment_Labels;
@class GTLRNetworkSecurity_MirroringDeploymentGroup;
@class GTLRNetworkSecurity_MirroringDeploymentGroup_Labels;
@class GTLRNetworkSecurity_MirroringDeploymentGroupConnectedEndpointGroup;
@class GTLRNetworkSecurity_MirroringDeploymentGroupDeployment;
@class GTLRNetworkSecurity_MirroringEndpointGroup;
@class GTLRNetworkSecurity_MirroringEndpointGroup_Labels;
@class GTLRNetworkSecurity_MirroringEndpointGroupAssociation;
@class GTLRNetworkSecurity_MirroringEndpointGroupAssociation_Labels;
@class GTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails;
@class GTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails;
@class GTLRNetworkSecurity_MirroringEndpointGroupConnectedDeploymentGroup;
@class GTLRNetworkSecurity_MirroringLocation;
@class GTLRNetworkSecurity_MTLSPolicy;
@class GTLRNetworkSecurity_Operation;
@class GTLRNetworkSecurity_Operation_Metadata;
@class GTLRNetworkSecurity_Operation_Response;
@class GTLRNetworkSecurity_Rule;
@class GTLRNetworkSecurity_SecurityProfile;
@class GTLRNetworkSecurity_SecurityProfile_Labels;
@class GTLRNetworkSecurity_SecurityProfileGroup;
@class GTLRNetworkSecurity_SecurityProfileGroup_Labels;
@class GTLRNetworkSecurity_ServerTlsPolicy;
@class GTLRNetworkSecurity_ServerTlsPolicy_Labels;
@class GTLRNetworkSecurity_SeverityOverride;
@class GTLRNetworkSecurity_Source;
@class GTLRNetworkSecurity_Status;
@class GTLRNetworkSecurity_Status_Details_Item;
@class GTLRNetworkSecurity_ThreatOverride;
@class GTLRNetworkSecurity_ThreatPreventionProfile;
@class GTLRNetworkSecurity_TlsInspectionPolicy;
@class GTLRNetworkSecurity_UrlList;
@class GTLRNetworkSecurity_ValidationCA;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_AddressGroup.purpose

/**
 *  Address Group is usable in Cloud Armor.
 *
 *  Value: "CLOUD_ARMOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AddressGroup_Purpose_CloudArmor;
/**
 *  Address Group is distributed to VMC, and is usable in Firewall Policies and
 *  other systems that rely on VMC.
 *
 *  Value: "DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AddressGroup_Purpose_Default;
/**
 *  Default value. Should never happen.
 *
 *  Value: "PURPOSE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AddressGroup_Purpose_PurposeUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_AddressGroup.type

/**
 *  IP v4 ranges.
 *
 *  Value: "IPV4"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AddressGroup_Type_Ipv4;
/**
 *  IP v6 ranges.
 *
 *  Value: "IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AddressGroup_Type_Ipv6;
/**
 *  Default value.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AddressGroup_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_AntivirusOverride.action

/**
 *  The packet matching this rule will be allowed to transmit, but a threat_log
 *  entry will be sent to the consumer project.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Action_Alert;
/**
 *  The packet matching this rule will be allowed to transmit.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Action_Allow;
/**
 *  The default action (as specified by the vendor) is taken.
 *
 *  Value: "DEFAULT_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Action_DefaultAction;
/**
 *  The packet matching this rule will be dropped, and a threat_log entry will
 *  be sent to the consumer project.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Action_Deny;
/**
 *  Threat action not specified.
 *
 *  Value: "THREAT_ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Action_ThreatActionUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_AntivirusOverride.protocol

/**
 *  FTP protocol
 *
 *  Value: "FTP"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_Ftp;
/**
 *  HTTP protocol
 *
 *  Value: "HTTP"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_Http;
/**
 *  HTTP2 protocol
 *
 *  Value: "HTTP2"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_Http2;
/**
 *  IMAP protocol
 *
 *  Value: "IMAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_Imap;
/**
 *  POP3 protocol
 *
 *  Value: "POP3"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_Pop3;
/**
 *  Protocol not specified.
 *
 *  Value: "PROTOCOL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_ProtocolUnspecified;
/**
 *  SMB protocol
 *
 *  Value: "SMB"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_Smb;
/**
 *  SMTP prtocol
 *
 *  Value: "SMTP"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AntivirusOverride_Protocol_Smtp;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_AuthorizationPolicy.action

/**
 *  Default value.
 *
 *  Value: "ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthorizationPolicy_Action_ActionUnspecified;
/**
 *  Grant access.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthorizationPolicy_Action_Allow;
/**
 *  Deny access. Deny rules should be avoided unless they are used to provide a
 *  default "deny all" fallback.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthorizationPolicy_Action_Deny;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_AuthzPolicy.action

/**
 *  Allow request to pass through to the backend.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicy_Action_Allow;
/**
 *  Unspecified action.
 *
 *  Value: "AUTHZ_ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicy_Action_AuthzActionUnspecified;
/**
 *  Delegate the authorization decision to an external authorization engine.
 *
 *  Value: "CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicy_Action_Custom;
/**
 *  Deny the request and return a HTTP 404 to the client.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicy_Action_Deny;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_AuthzPolicyTarget.loadBalancingScheme

/**
 *  Signifies that this is used for Global external or Regional external
 *  Application Load Balancing.
 *
 *  Value: "EXTERNAL_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_ExternalManaged;
/**
 *  Signifies that this is used for Regional internal or Cross-region internal
 *  Application Load Balancing.
 *
 *  Value: "INTERNAL_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_InternalManaged;
/**
 *  Signifies that this is used for Cloud Service Mesh. Meant for use by CSM GKE
 *  controller only.
 *
 *  Value: "INTERNAL_SELF_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_InternalSelfManaged;
/**
 *  Default value. Do not use.
 *
 *  Value: "LOAD_BALANCING_SCHEME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_LoadBalancingSchemeUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_FirewallEndpoint.state

/**
 *  Processing configuration updates.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpoint_State_Active;
/**
 *  Being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpoint_State_Creating;
/**
 *  Being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpoint_State_Deleting;
/**
 *  Down or in an error state.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpoint_State_Inactive;
/**
 *  Not set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpoint_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_FirewallEndpointAssociation.state

/**
 *  Active and ready for traffic.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Active;
/**
 *  Being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Creating;
/**
 *  Being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Deleting;
/**
 *  Down or in an error state.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Inactive;
/**
 *  The project that housed the association has been deleted.
 *
 *  Value: "ORPHAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Orphan;
/**
 *  Not set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_FirewallEndpointAssociation_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_GatewaySecurityPolicyRule.basicProfile

/**
 *  Allow the matched traffic.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_GatewaySecurityPolicyRule_BasicProfile_Allow;
/**
 *  If there is not a mentioned action for the target.
 *
 *  Value: "BASIC_PROFILE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_GatewaySecurityPolicyRule_BasicProfile_BasicProfileUnspecified;
/**
 *  Deny the matched traffic.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_GatewaySecurityPolicyRule_BasicProfile_Deny;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_GoogleIamV1AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringDeployment.state

/**
 *  The deployment is ready and in sync with the parent group.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeployment_State_Active;
/**
 *  The deployment is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeployment_State_Creating;
/**
 *  An attempt to delete the deployment has failed. This is a terminal state and
 *  the deployment is not expected to recover. The only permitted operation is
 *  to retry deleting the deployment.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeployment_State_DeleteFailed;
/**
 *  The deployment is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeployment_State_Deleting;
/**
 *  The deployment is out of sync with the parent group. In most cases, this is
 *  a result of a transient issue within the system (e.g. a delayed data-path
 *  config) and the system is expected to recover automatically. See the parent
 *  deployment group's state for more details.
 *
 *  Value: "OUT_OF_SYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeployment_State_OutOfSync;
/**
 *  State not set (this is not a valid state).
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeployment_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringDeploymentGroup.state

/**
 *  The deployment group is ready.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroup_State_Active;
/**
 *  The deployment group is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroup_State_Creating;
/**
 *  The deployment group is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroup_State_Deleting;
/**
 *  State not set (this is not a valid state).
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroup_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringDeploymentGroupDeployment.state

/**
 *  The deployment is ready and in sync with the parent group.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_Active;
/**
 *  The deployment is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_Creating;
/**
 *  An attempt to delete the deployment has failed. This is a terminal state and
 *  the deployment is not expected to recover. The only permitted operation is
 *  to retry deleting the deployment.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_DeleteFailed;
/**
 *  The deployment is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_Deleting;
/**
 *  The deployment is out of sync with the parent group. In most cases, this is
 *  a result of a transient issue within the system (e.g. a delayed data-path
 *  config) and the system is expected to recover automatically. See the parent
 *  deployment group's state for more details.
 *
 *  Value: "OUT_OF_SYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_OutOfSync;
/**
 *  State not set (this is not a valid state).
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringEndpointGroup.state

/**
 *  The endpoint group is ready and in sync with the target deployment group.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroup_State_Active;
/**
 *  The deployment group backing this endpoint group has been force-deleted.
 *  This endpoint group cannot be used and mirroring is effectively disabled.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroup_State_Closed;
/**
 *  The endpoint group is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroup_State_Creating;
/**
 *  An attempt to delete the endpoint group has failed. This is a terminal state
 *  and the endpoint group is not expected to recover. The only permitted
 *  operation is to retry deleting the endpoint group.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroup_State_DeleteFailed;
/**
 *  The endpoint group is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroup_State_Deleting;
/**
 *  The endpoint group is out of sync with the backing deployment group. In most
 *  cases, this is a result of a transient issue within the system (e.g. an
 *  inaccessible location) and the system is expected to recover automatically.
 *  See the associations field for details per network and location.
 *
 *  Value: "OUT_OF_SYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroup_State_OutOfSync;
/**
 *  State not set (this is not a valid state).
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroup_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringEndpointGroupAssociation.state

/**
 *  The association is ready and in sync with the linked endpoint group.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Active;
/**
 *  The association is disabled due to a breaking change in another resource.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Closed;
/**
 *  The association is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Creating;
/**
 *  An attempt to delete the association has failed. This is a terminal state
 *  and the association is not expected to be usable as some of its resources
 *  have been deleted. The only permitted operation is to retry deleting the
 *  association.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_DeleteFailed;
/**
 *  The association is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Deleting;
/**
 *  The association is out of sync with the linked endpoint group. In most
 *  cases, this is a result of a transient issue within the system (e.g. an
 *  inaccessible location) and the system is expected to recover automatically.
 *  Check the `locations_details` field for more details.
 *
 *  Value: "OUT_OF_SYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_OutOfSync;
/**
 *  Not set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails.state

/**
 *  The association is ready and in sync with the linked endpoint group.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Active;
/**
 *  The association is disabled due to a breaking change in another resource.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Closed;
/**
 *  The association is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Creating;
/**
 *  An attempt to delete the association has failed. This is a terminal state
 *  and the association is not expected to be usable as some of its resources
 *  have been deleted. The only permitted operation is to retry deleting the
 *  association.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_DeleteFailed;
/**
 *  The association is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Deleting;
/**
 *  The association is out of sync with the linked endpoint group. In most
 *  cases, this is a result of a transient issue within the system (e.g. an
 *  inaccessible location) and the system is expected to recover automatically.
 *  Check the `locations_details` field for more details.
 *
 *  Value: "OUT_OF_SYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_OutOfSync;
/**
 *  Not set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails.state

/**
 *  The association is ready and in sync with the linked endpoint group.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails_State_Active;
/**
 *  The association is out of sync with the linked endpoint group. In most
 *  cases, this is a result of a transient issue within the system (e.g. an
 *  inaccessible location) and the system is expected to recover automatically.
 *
 *  Value: "OUT_OF_SYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails_State_OutOfSync;
/**
 *  Not set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MirroringLocation.state

/**
 *  The resource is ready and in sync in the location.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringLocation_State_Active;
/**
 *  The resource is out of sync in the location. In most cases, this is a result
 *  of a transient issue within the system (e.g. an inaccessible location) and
 *  the system is expected to recover automatically.
 *
 *  Value: "OUT_OF_SYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringLocation_State_OutOfSync;
/**
 *  State not set (this is not a valid state).
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MirroringLocation_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_MTLSPolicy.clientValidationMode

/**
 *  Allow connection even if certificate chain validation of the client
 *  certificate failed or no client certificate was presented. The proof of
 *  possession of the private key is always checked if client certificate was
 *  presented. This mode requires the backend to implement processing of data
 *  extracted from a client certificate to authenticate the peer, or to reject
 *  connections if the client certificate fingerprint is missing.
 *
 *  Value: "ALLOW_INVALID_OR_MISSING_CLIENT_CERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MTLSPolicy_ClientValidationMode_AllowInvalidOrMissingClientCert;
/**
 *  Not allowed.
 *
 *  Value: "CLIENT_VALIDATION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MTLSPolicy_ClientValidationMode_ClientValidationModeUnspecified;
/**
 *  Require a client certificate and allow connection to the backend only if
 *  validation of the client certificate passed. If set, requires a reference to
 *  non-empty TrustConfig specified in `client_validation_trust_config`.
 *
 *  Value: "REJECT_INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_MTLSPolicy_ClientValidationMode_RejectInvalid;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_SecurityProfile.type

/**
 *  Profile type for TPPI.
 *
 *  Value: "CUSTOM_INTERCEPT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SecurityProfile_Type_CustomIntercept;
/**
 *  Profile type for packet mirroring v2
 *
 *  Value: "CUSTOM_MIRRORING"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SecurityProfile_Type_CustomMirroring;
/**
 *  Profile type not specified.
 *
 *  Value: "PROFILE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SecurityProfile_Type_ProfileTypeUnspecified;
/**
 *  Profile type for threat prevention.
 *
 *  Value: "THREAT_PREVENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SecurityProfile_Type_ThreatPrevention;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_SeverityOverride.action

/**
 *  The packet matching this rule will be allowed to transmit, but a threat_log
 *  entry will be sent to the consumer project.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Action_Alert;
/**
 *  The packet matching this rule will be allowed to transmit.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Action_Allow;
/**
 *  The default action (as specified by the vendor) is taken.
 *
 *  Value: "DEFAULT_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Action_DefaultAction;
/**
 *  The packet matching this rule will be dropped, and a threat_log entry will
 *  be sent to the consumer project.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Action_Deny;
/**
 *  Threat action not specified.
 *
 *  Value: "THREAT_ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Action_ThreatActionUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_SeverityOverride.severity

/**
 *  Serious threats, such as those that affect default installations of widely
 *  deployed software, result in root compromise of servers, and the exploit
 *  code is widely available to attackers. The attacker usually does not need
 *  any special authentication credentials or knowledge about the individual
 *  victims and the target does not need to be manipulated into performing any
 *  special functions.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Severity_Critical;
/**
 *  Threats that have the ability to become critical but have mitigating
 *  factors; for example, they may be difficult to exploit, do not result in
 *  elevated privileges, or do not have a large victim pool.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Severity_High;
/**
 *  Suspicious events that do not pose an immediate threat, but that are
 *  reported to call attention to deeper problems that could possibly exist.
 *
 *  Value: "INFORMATIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Severity_Informational;
/**
 *  Warning-level threats that have very little impact on an organization's
 *  infrastructure. They usually require local or physical system access and may
 *  often result in victim privacy issues and information leakage.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Severity_Low;
/**
 *  Minor threats in which impact is minimized, that do not compromise the
 *  target or exploits that require an attacker to reside on the same local
 *  network as the victim, affect only non-standard configurations or obscure
 *  applications, or provide very limited access.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Severity_Medium;
/**
 *  Severity level not specified.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_SeverityOverride_Severity_SeverityUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_ThreatOverride.action

/**
 *  The packet matching this rule will be allowed to transmit, but a threat_log
 *  entry will be sent to the consumer project.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Action_Alert;
/**
 *  The packet matching this rule will be allowed to transmit.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Action_Allow;
/**
 *  The default action (as specified by the vendor) is taken.
 *
 *  Value: "DEFAULT_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Action_DefaultAction;
/**
 *  The packet matching this rule will be dropped, and a threat_log entry will
 *  be sent to the consumer project.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Action_Deny;
/**
 *  Threat action not specified.
 *
 *  Value: "THREAT_ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Action_ThreatActionUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_ThreatOverride.type

/**
 *  Threats related to viruses and malware found in executables and file types.
 *
 *  Value: "ANTIVIRUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Type_Antivirus;
/**
 *  Threats related to DNS.
 *
 *  Value: "DNS"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Type_Dns;
/**
 *  Threats related to command-and-control (C2) activity, where spyware on an
 *  infected client is collecting data without the user's consent and/or
 *  communicating with a remote attacker.
 *
 *  Value: "SPYWARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Type_Spyware;
/**
 *  Type of threat not specified.
 *
 *  Value: "THREAT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Type_ThreatTypeUnspecified;
/**
 *  Type of threat is not derivable from threat ID. An override will be created
 *  for all types. Firewall will ignore overridden signature ID's that don't
 *  exist in the specific type.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Type_Unknown;
/**
 *  Threats related to system flaws that an attacker might otherwise attempt to
 *  exploit.
 *
 *  Value: "VULNERABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_ThreatOverride_Type_Vulnerability;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_TlsInspectionPolicy.minTlsVersion

/**
 *  TLS 1.0
 *
 *  Value: "TLS_1_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls10;
/**
 *  TLS 1.1
 *
 *  Value: "TLS_1_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls11;
/**
 *  TLS 1.2
 *
 *  Value: "TLS_1_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls12;
/**
 *  TLS 1.3
 *
 *  Value: "TLS_1_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls13;
/**
 *  Indicates no TLS version was specified.
 *
 *  Value: "TLS_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_TlsVersionUnspecified;

// ----------------------------------------------------------------------------
// GTLRNetworkSecurity_TlsInspectionPolicy.tlsFeatureProfile

/**
 *  Compatible profile. Allows the broadest set of clients, even those which
 *  support only out-of-date SSL features to negotiate with the TLS inspection
 *  proxy.
 *
 *  Value: "PROFILE_COMPATIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileCompatible;
/**
 *  Custom profile. Allow only the set of allowed SSL features specified in the
 *  custom_features field of SslPolicy.
 *
 *  Value: "PROFILE_CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileCustom;
/**
 *  Modern profile. Supports a wide set of SSL features, allowing modern clients
 *  to negotiate SSL with the TLS inspection proxy.
 *
 *  Value: "PROFILE_MODERN"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileModern;
/**
 *  Restricted profile. Supports a reduced set of SSL features, intended to meet
 *  stricter compliance requirements.
 *
 *  Value: "PROFILE_RESTRICTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileRestricted;
/**
 *  Indicates no profile was specified.
 *
 *  Value: "PROFILE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileUnspecified;

/**
 *  Request used by the AddAddressGroupItems method.
 */
@interface GTLRNetworkSecurity_AddAddressGroupItemsRequest : GTLRObject

/** Required. List of items to add. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *items;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  AddressGroup is a resource that specifies how a collection of IP/DNS used in
 *  Firewall Policy.
 */
@interface GTLRNetworkSecurity_AddressGroup : GTLRObject

/**
 *  Required. Capacity of the Address Group
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *capacity;

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. List of items. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *items;

/** Optional. Set of label tags associated with the AddressGroup resource. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AddressGroup_Labels *labels;

/**
 *  Required. Name of the AddressGroup resource. It matches pattern `projects/ *
 *  /locations/{location}/addressGroups/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. List of supported purposes of the Address Group. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purpose;

/** Output only. Server-defined fully-qualified URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Required. The type of the Address Group. Possible values are "IPv4" or
 *  "IPV6".
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_AddressGroup_Type_Ipv4 IP v4 ranges. (Value:
 *        "IPV4")
 *    @arg @c kGTLRNetworkSecurity_AddressGroup_Type_Ipv6 IP v6 ranges. (Value:
 *        "IPV6")
 *    @arg @c kGTLRNetworkSecurity_AddressGroup_Type_TypeUnspecified Default
 *        value. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. The timestamp when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Set of label tags associated with the AddressGroup resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_AddressGroup_Labels : GTLRObject
@end


/**
 *  Defines what action to take for antivirus threats per protocol.
 */
@interface GTLRNetworkSecurity_AntivirusOverride : GTLRObject

/**
 *  Required. Threat action override. For some threat types, only a subset of
 *  actions applies.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Action_Alert The packet
 *        matching this rule will be allowed to transmit, but a threat_log entry
 *        will be sent to the consumer project. (Value: "ALERT")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Action_Allow The packet
 *        matching this rule will be allowed to transmit. (Value: "ALLOW")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Action_DefaultAction The
 *        default action (as specified by the vendor) is taken. (Value:
 *        "DEFAULT_ACTION")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Action_Deny The packet
 *        matching this rule will be dropped, and a threat_log entry will be
 *        sent to the consumer project. (Value: "DENY")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Action_ThreatActionUnspecified
 *        Threat action not specified. (Value: "THREAT_ACTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Required. Protocol to match.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_Ftp FTP protocol
 *        (Value: "FTP")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_Http HTTP protocol
 *        (Value: "HTTP")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_Http2 HTTP2
 *        protocol (Value: "HTTP2")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_Imap IMAP protocol
 *        (Value: "IMAP")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_Pop3 POP3 protocol
 *        (Value: "POP3")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_ProtocolUnspecified
 *        Protocol not specified. (Value: "PROTOCOL_UNSPECIFIED")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_Smb SMB protocol
 *        (Value: "SMB")
 *    @arg @c kGTLRNetworkSecurity_AntivirusOverride_Protocol_Smtp SMTP prtocol
 *        (Value: "SMTP")
 */
@property(nonatomic, copy, nullable) NSString *protocol;

@end


/**
 *  AuthorizationPolicy is a resource that specifies how a server should
 *  authorize incoming connections. This resource in itself does not change the
 *  configuration unless it's attached to a target https proxy or endpoint
 *  config selector resource.
 */
@interface GTLRNetworkSecurity_AuthorizationPolicy : GTLRObject

/**
 *  Required. The action to take when a rule match is found. Possible values are
 *  "ALLOW" or "DENY".
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_AuthorizationPolicy_Action_ActionUnspecified
 *        Default value. (Value: "ACTION_UNSPECIFIED")
 *    @arg @c kGTLRNetworkSecurity_AuthorizationPolicy_Action_Allow Grant
 *        access. (Value: "ALLOW")
 *    @arg @c kGTLRNetworkSecurity_AuthorizationPolicy_Action_Deny Deny access.
 *        Deny rules should be avoided unless they are used to provide a default
 *        "deny all" fallback. (Value: "DENY")
 */
@property(nonatomic, copy, nullable) NSString *action;

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Set of label tags associated with the AuthorizationPolicy
 *  resource.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthorizationPolicy_Labels *labels;

/**
 *  Required. Name of the AuthorizationPolicy resource. It matches pattern
 *  `projects/{project}/locations/{location}/authorizationPolicies/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. List of rules to match. Note that at least one of the rules must
 *  match in order for the action specified in the 'action' field to be taken. A
 *  rule is a match if there is a matching source and destination. If left
 *  blank, the action specified in the `action` field will be applied on every
 *  request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_Rule *> *rules;

/** Output only. The timestamp when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Set of label tags associated with the AuthorizationPolicy
 *  resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_AuthorizationPolicy_Labels : GTLRObject
@end


/**
 *  `AuthzPolicy` is a resource that allows to forward traffic to a callout
 *  backend designed to scan the traffic for security purposes.
 */
@interface GTLRNetworkSecurity_AuthzPolicy : GTLRObject

/**
 *  Required. Can be one of `ALLOW`, `DENY`, `CUSTOM`. When the action is
 *  `CUSTOM`, `customProvider` must be specified. When the action is `ALLOW`,
 *  only requests matching the policy will be allowed. When the action is
 *  `DENY`, only requests matching the policy will be denied. When a request
 *  arrives, the policies are evaluated in the following order: 1. If there is a
 *  `CUSTOM` policy that matches the request, the `CUSTOM` policy is evaluated
 *  using the custom authorization providers and the request is denied if the
 *  provider rejects the request. 2. If there are any `DENY` policies that match
 *  the request, the request is denied. 3. If there are no `ALLOW` policies for
 *  the resource or if any of the `ALLOW` policies match the request, the
 *  request is allowed. 4. Else the request is denied by default if none of the
 *  configured AuthzPolicies with `ALLOW` action match the request.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicy_Action_Allow Allow request to
 *        pass through to the backend. (Value: "ALLOW")
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicy_Action_AuthzActionUnspecified
 *        Unspecified action. (Value: "AUTHZ_ACTION_UNSPECIFIED")
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicy_Action_Custom Delegate the
 *        authorization decision to an external authorization engine. (Value:
 *        "CUSTOM")
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicy_Action_Deny Deny the request and
 *        return a HTTP 404 to the client. (Value: "DENY")
 */
@property(nonatomic, copy, nullable) NSString *action;

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Required if the action is `CUSTOM`. Allows delegating
 *  authorization decisions to Cloud IAP or to Service Extensions. One of
 *  `cloudIap` or `authzExtension` must be specified.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyCustomProvider *customProvider;

/**
 *  Optional. A human-readable description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. A list of authorization HTTP rules to match against the incoming
 *  request. A policy match occurs when at least one HTTP rule matches the
 *  request or when no HTTP rules are specified in the policy. At least one HTTP
 *  Rule is required for Allow or Deny Action. Limited to 5 rules.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRule *> *httpRules;

/**
 *  Optional. Set of labels associated with the `AuthzPolicy` resource. The
 *  format must comply with [the following
 *  requirements](/compute/docs/labeling-resources#requirements).
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicy_Labels *labels;

/**
 *  Required. Identifier. Name of the `AuthzPolicy` resource in the following
 *  format:
 *  `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Specifies the set of resources to which this policy should be
 *  applied to.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyTarget *target;

/** Output only. The timestamp when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Set of labels associated with the `AuthzPolicy` resource. The
 *  format must comply with [the following
 *  requirements](/compute/docs/labeling-resources#requirements).
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_AuthzPolicy_Labels : GTLRObject
@end


/**
 *  Conditions to match against the incoming request.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRule : GTLRObject

/** Optional. Describes properties of a source of a request. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyAuthzRuleFrom *from;

/** Optional. Describes properties of a target of a request. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyAuthzRuleTo *to;

/**
 *  Optional. CEL expression that describes the conditions to be satisfied for
 *  the action. The result of the CEL expression is ANDed with the from and to.
 *  Refer to the CEL language reference for a list of available attributes.
 */
@property(nonatomic, copy, nullable) NSString *when;

@end


/**
 *  Describes properties of one or more sources of a request.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleFrom : GTLRObject

/**
 *  Optional. Describes the negated properties of request sources. Matches
 *  requests from sources that do not match the criteria specified in this
 *  field. At least one of sources or notSources must be specified.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleFromRequestSource *> *notSources;

/**
 *  Optional. Describes the properties of a request's sources. At least one of
 *  sources or notSources must be specified. Limited to 1 source. A match occurs
 *  when ANY source (in sources or notSources) matches the request. Within a
 *  single source, the match follows AND semantics across fields and OR
 *  semantics within a single field, i.e. a match occurs when ANY principal
 *  matches AND ANY ipBlocks match.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleFromRequestSource *> *sources;

@end


/**
 *  Describes the properties of a single source.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleFromRequestSource : GTLRObject

/**
 *  Optional. A list of identities derived from the client's certificate. This
 *  field will not match on a request unless mutual TLS is enabled for the
 *  forwarding rule or Gateway. For Application Load Balancers, each identity is
 *  a string whose value is matched against the URI SAN, or DNS SAN, or SPIFFE
 *  ID, or the subject field in the client's certificate. For Cloud Service
 *  Mesh, each identity is a string whose value is matched against the URI SAN,
 *  or DNS SAN, or the subject field in the client's certificate. The match can
 *  be exact, prefix, suffix, or a substring match. One of exact, prefix,
 *  suffix, or contains must be specified. Limited to 5 principals.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleStringMatch *> *principals;

/**
 *  Optional. A list of resources to match against the resource of the source VM
 *  of a request. Limited to 5 resources.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleRequestResource *> *resources;

@end


/**
 *  Determines how a HTTP header should be matched.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleHeaderMatch : GTLRObject

/** Optional. Specifies the name of the header in the request. */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Specifies how the header match will be performed. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyAuthzRuleStringMatch *value;

@end


/**
 *  Describes the properties of a client VM resource accessing the internal
 *  application load balancers.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleRequestResource : GTLRObject

/**
 *  Optional. An IAM service account to match against the source service account
 *  of the VM sending the request.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyAuthzRuleStringMatch *iamServiceAccount;

/**
 *  Optional. A list of resource tag value permanent IDs to match against the
 *  resource manager tags value associated with the source VM of a request.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyAuthzRuleRequestResourceTagValueIdSet *tagValueIdSet;

@end


/**
 *  Describes a set of resource tag value permanent IDs to match against the
 *  resource manager tags value associated with the source VM of a request.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleRequestResourceTagValueIdSet : GTLRObject

/**
 *  Required. A list of resource tag value permanent IDs to match against the
 *  resource manager tags value associated with the source VM of a request. The
 *  match follows AND semantics which means all the ids must match. Limited to 5
 *  matches.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *ids;

@end


/**
 *  Determines how a string value should be matched.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleStringMatch : GTLRObject

/**
 *  The input string must have the substring specified here. Note: empty
 *  contains match is not allowed, please use regex instead. Examples: * ``abc``
 *  matches the value ``xyz.abc.def``
 */
@property(nonatomic, copy, nullable) NSString *contains;

/**
 *  The input string must match exactly the string specified here. Examples: *
 *  ``abc`` only matches the value ``abc``.
 */
@property(nonatomic, copy, nullable) NSString *exact;

/**
 *  If true, indicates the exact/prefix/suffix/contains matching should be case
 *  insensitive. For example, the matcher ``data`` will match both input string
 *  ``Data`` and ``data`` if set to true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreCase;

/**
 *  The input string must have the prefix specified here. Note: empty prefix is
 *  not allowed, please use regex instead. Examples: * ``abc`` matches the value
 *  ``abc.xyz``
 */
@property(nonatomic, copy, nullable) NSString *prefix;

/**
 *  The input string must have the suffix specified here. Note: empty prefix is
 *  not allowed, please use regex instead. Examples: * ``abc`` matches the value
 *  ``xyz.abc``
 */
@property(nonatomic, copy, nullable) NSString *suffix;

@end


/**
 *  Describes properties of one or more targets of a request.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleTo : GTLRObject

/**
 *  Optional. Describes the negated properties of the targets of a request.
 *  Matches requests for operations that do not match the criteria specified in
 *  this field. At least one of operations or notOperations must be specified.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleToRequestOperation *> *notOperations;

/**
 *  Optional. Describes properties of one or more targets of a request. At least
 *  one of operations or notOperations must be specified. Limited to 1
 *  operation. A match occurs when ANY operation (in operations or
 *  notOperations) matches. Within an operation, the match follows AND semantics
 *  across fields and OR semantics within a field, i.e. a match occurs when ANY
 *  path matches AND ANY header matches and ANY method matches.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleToRequestOperation *> *operations;

@end


/**
 *  Describes properties of one or more targets of a request.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleToRequestOperation : GTLRObject

/** Optional. A list of headers to match against in http header. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyAuthzRuleToRequestOperationHeaderSet *headerSet;

/**
 *  Optional. A list of HTTP Hosts to match against. The match can be one of
 *  exact, prefix, suffix, or contains (substring match). Matches are always
 *  case sensitive unless the ignoreCase is set. Limited to 5 matches.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleStringMatch *> *hosts;

/**
 *  Optional. A list of HTTP methods to match against. Each entry must be a
 *  valid HTTP method name (GET, PUT, POST, HEAD, PATCH, DELETE, OPTIONS). It
 *  only allows exact match and is always case sensitive.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *methods;

/**
 *  Optional. A list of paths to match against. The match can be one of exact,
 *  prefix, suffix, or contains (substring match). Matches are always case
 *  sensitive unless the ignoreCase is set. Limited to 5 matches. Note that this
 *  path match includes the query parameters. For gRPC services, this should be
 *  a fully-qualified name of the form /package.service/method.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleStringMatch *> *paths;

@end


/**
 *  Describes a set of HTTP headers to match against.
 */
@interface GTLRNetworkSecurity_AuthzPolicyAuthzRuleToRequestOperationHeaderSet : GTLRObject

/**
 *  Required. A list of headers to match against in http header. The match can
 *  be one of exact, prefix, suffix, or contains (substring match). The match
 *  follows AND semantics which means all the headers must match. Matches are
 *  always case sensitive unless the ignoreCase is set. Limited to 5 matches.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicyAuthzRuleHeaderMatch *> *headers;

@end


/**
 *  Allows delegating authorization decisions to Cloud IAP or to Service
 *  Extensions.
 */
@interface GTLRNetworkSecurity_AuthzPolicyCustomProvider : GTLRObject

/**
 *  Optional. Delegate authorization decision to user authored Service
 *  Extension. Only one of cloudIap or authzExtension can be specified.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyCustomProviderAuthzExtension *authzExtension;

/**
 *  Optional. Delegates authorization decisions to Cloud IAP. Applicable only
 *  for managed load balancers. Enabling Cloud IAP at the AuthzPolicy level is
 *  not compatible with Cloud IAP settings in the BackendService. Enabling IAP
 *  in both places will result in request failure. Ensure that IAP is enabled in
 *  either the AuthzPolicy or the BackendService but not in both places.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_AuthzPolicyCustomProviderCloudIap *cloudIap;

@end


/**
 *  Optional. Delegate authorization decision to user authored extension. Only
 *  one of cloudIap or authzExtension can be specified.
 */
@interface GTLRNetworkSecurity_AuthzPolicyCustomProviderAuthzExtension : GTLRObject

/**
 *  Required. A list of references to authorization extensions that will be
 *  invoked for requests matching this policy. Limited to 1 custom provider.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resources;

@end


/**
 *  Optional. Delegates authorization decisions to Cloud IAP. Applicable only
 *  for managed load balancers. Enabling Cloud IAP at the AuthzPolicy level is
 *  not compatible with Cloud IAP settings in the BackendService. Enabling IAP
 *  in both places will result in request failure. Ensure that IAP is enabled in
 *  either the AuthzPolicy or the BackendService but not in both places.
 */
@interface GTLRNetworkSecurity_AuthzPolicyCustomProviderCloudIap : GTLRObject
@end


/**
 *  Specifies the set of targets to which this policy should be applied to.
 */
@interface GTLRNetworkSecurity_AuthzPolicyTarget : GTLRObject

/**
 *  Required. All gateways and forwarding rules referenced by this policy and
 *  extensions must share the same load balancing scheme. Supported values:
 *  `INTERNAL_MANAGED` and `EXTERNAL_MANAGED`. For more information, refer to
 *  [Backend services
 *  overview](https://cloud.google.com/load-balancing/docs/backend-service).
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_ExternalManaged
 *        Signifies that this is used for Global external or Regional external
 *        Application Load Balancing. (Value: "EXTERNAL_MANAGED")
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_InternalManaged
 *        Signifies that this is used for Regional internal or Cross-region
 *        internal Application Load Balancing. (Value: "INTERNAL_MANAGED")
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_InternalSelfManaged
 *        Signifies that this is used for Cloud Service Mesh. Meant for use by
 *        CSM GKE controller only. (Value: "INTERNAL_SELF_MANAGED")
 *    @arg @c kGTLRNetworkSecurity_AuthzPolicyTarget_LoadBalancingScheme_LoadBalancingSchemeUnspecified
 *        Default value. Do not use. (Value:
 *        "LOAD_BALANCING_SCHEME_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *loadBalancingScheme;

/**
 *  Required. A list of references to the Forwarding Rules on which this policy
 *  will be applied.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resources;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRNetworkSecurity_CancelOperationRequest : GTLRObject
@end


/**
 *  Specification of a TLS certificate provider instance. Workloads may have one
 *  or more CertificateProvider instances (plugins) and one of them is enabled
 *  and configured by specifying this message. Workloads use the values from
 *  this message to locate and load the CertificateProvider instance
 *  configuration.
 */
@interface GTLRNetworkSecurity_CertificateProviderInstance : GTLRObject

/**
 *  Required. Plugin instance name, used to locate and load CertificateProvider
 *  instance configuration. Set to "google_cloud_private_spiffe" to use
 *  Certificate Authority Service certificate provider instance.
 */
@property(nonatomic, copy, nullable) NSString *pluginInstance;

@end


/**
 *  ClientTlsPolicy is a resource that specifies how a client should
 *  authenticate connections to backends of a service. This resource itself does
 *  not affect configuration unless it is attached to a backend service
 *  resource.
 */
@interface GTLRNetworkSecurity_ClientTlsPolicy : GTLRObject

/**
 *  Optional. Defines a mechanism to provision client identity (public and
 *  private keys) for peer to peer authentication. The presence of this dictates
 *  mTLS.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_GoogleCloudNetworksecurityV1CertificateProvider *clientCertificate;

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. Set of label tags associated with the resource. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_ClientTlsPolicy_Labels *labels;

/**
 *  Required. Name of the ClientTlsPolicy resource. It matches the pattern
 *  `projects/ * /locations/{location}/clientTlsPolicies/{client_tls_policy}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Defines the mechanism to obtain the Certificate Authority
 *  certificate to validate the server certificate. If empty, client does not
 *  validate the server certificate.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_ValidationCA *> *serverValidationCa;

/**
 *  Optional. Server Name Indication string to present to the server during TLS
 *  handshake. E.g: "secure.example.com".
 */
@property(nonatomic, copy, nullable) NSString *sni;

/** Output only. The timestamp when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Set of label tags associated with the resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_ClientTlsPolicy_Labels : GTLRObject
@end


/**
 *  Request used by the CloneAddressGroupItems method.
 */
@interface GTLRNetworkSecurity_CloneAddressGroupItemsRequest : GTLRObject

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. Source address group to clone items from. */
@property(nonatomic, copy, nullable) NSString *sourceAddressGroup;

@end


/**
 *  CustomInterceptProfile defines in-band integration behavior (intercept). It
 *  is used by firewall rules with an APPLY_SECURITY_PROFILE_GROUP action.
 */
@interface GTLRNetworkSecurity_CustomInterceptProfile : GTLRObject

/**
 *  Required. The target InterceptEndpointGroup. When a firewall rule with this
 *  security profile attached matches a packet, the packet will be intercepted
 *  to the location-local target in this group.
 */
@property(nonatomic, copy, nullable) NSString *interceptEndpointGroup;

@end


/**
 *  CustomMirroringProfile defines out-of-band integration behavior (mirroring).
 *  It is used by mirroring rules with a MIRROR action.
 */
@interface GTLRNetworkSecurity_CustomMirroringProfile : GTLRObject

/**
 *  Required. The target MirroringEndpointGroup. When a mirroring rule with this
 *  security profile attached matches a packet, a replica will be mirrored to
 *  the location-local target in this group.
 */
@property(nonatomic, copy, nullable) NSString *mirroringEndpointGroup;

@end


/**
 *  Specification of traffic destination attributes.
 */
@interface GTLRNetworkSecurity_Destination : GTLRObject

/**
 *  Required. List of host names to match. Matched against the ":authority"
 *  header in http requests. At least one host should match. Each host can be an
 *  exact match, or a prefix match (example "mydomain.*") or a suffix match
 *  (example "*.myorg.com") or a presence (any) match "*".
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *hosts;

/**
 *  Optional. Match against key:value pair in http header. Provides a flexible
 *  match based on HTTP headers, for potentially advanced use cases. At least
 *  one header should match. Avoid using header matches to make authorization
 *  decisions unless there is a strong guarantee that requests arrive through a
 *  trusted client or proxy.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_HttpHeaderMatch *httpHeaderMatch;

/**
 *  Optional. A list of HTTP methods to match. At least one method should match.
 *  Should not be set for gRPC services.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *methods;

/**
 *  Required. List of destination ports to match. At least one port should
 *  match.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *ports;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRNetworkSecurity_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRNetworkSecurity_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Message describing Endpoint object
 */
@interface GTLRNetworkSecurity_FirewallEndpoint : GTLRObject

/**
 *  Output only. List of networks that are associated with this endpoint in the
 *  local zone. This is a projection of the FirewallEndpointAssociations
 *  pointing at this endpoint. A network will only appear in this list after
 *  traffic routing is fully configured. Format:
 *  projects/{project}/global/networks/{name}.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *associatedNetworks GTLR_DEPRECATED;

/**
 *  Output only. List of FirewallEndpointAssociations that are associated to
 *  this endpoint. An association will only appear in this list after traffic
 *  routing is fully configured.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_FirewallEndpointAssociationReference *> *associations;

/** Required. Project to bill on endpoint uptime usage. */
@property(nonatomic, copy, nullable) NSString *billingProjectId;

/** Output only. Create time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Description of the firewall endpoint. Max length 2048 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. Labels as key value pairs */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_FirewallEndpoint_Labels *labels;

/** Immutable. Identifier. name of resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Whether reconciling is in progress, recommended per
 *  https://google.aip.dev/128.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. Current state of the endpoint.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpoint_State_Active Processing
 *        configuration updates. (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpoint_State_Creating Being
 *        created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpoint_State_Deleting Being
 *        deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpoint_State_Inactive Down or in an
 *        error state. (Value: "INACTIVE")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpoint_State_StateUnspecified Not
 *        set. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Update time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels as key value pairs
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_FirewallEndpoint_Labels : GTLRObject
@end


/**
 *  Message describing Association object
 */
@interface GTLRNetworkSecurity_FirewallEndpointAssociation : GTLRObject

/** Output only. Create time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Whether the association is disabled. True indicates that traffic
 *  won't be intercepted
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/** Required. The URL of the FirewallEndpoint that is being associated. */
@property(nonatomic, copy, nullable) NSString *firewallEndpoint;

/** Optional. Labels as key value pairs */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_FirewallEndpointAssociation_Labels *labels;

/** Immutable. Identifier. name of resource */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The URL of the network that is being associated. */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Output only. Whether reconciling is in progress, recommended per
 *  https://google.aip.dev/128.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Current state of the association.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Active
 *        Active and ready for traffic. (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Creating
 *        Being created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Deleting
 *        Being deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Inactive
 *        Down or in an error state. (Value: "INACTIVE")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpointAssociation_State_Orphan The
 *        project that housed the association has been deleted. (Value:
 *        "ORPHAN")
 *    @arg @c kGTLRNetworkSecurity_FirewallEndpointAssociation_State_StateUnspecified
 *        Not set. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Optional. The URL of the TlsInspectionPolicy that is being associated. */
@property(nonatomic, copy, nullable) NSString *tlsInspectionPolicy;

/** Output only. Update time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels as key value pairs
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_FirewallEndpointAssociation_Labels : GTLRObject
@end


/**
 *  This is a subset of the FirewallEndpointAssociation message, containing
 *  fields to be used by the consumer.
 */
@interface GTLRNetworkSecurity_FirewallEndpointAssociationReference : GTLRObject

/**
 *  Output only. The resource name of the FirewallEndpointAssociation. Format:
 *  projects/{project}/locations/{location}/firewallEndpointAssociations/{id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The VPC network associated. Format:
 *  projects/{project}/global/networks/{name}.
 */
@property(nonatomic, copy, nullable) NSString *network;

@end


/**
 *  The GatewaySecurityPolicy resource contains a collection of
 *  GatewaySecurityPolicyRules and associated metadata.
 */
@interface GTLRNetworkSecurity_GatewaySecurityPolicy : GTLRObject

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Name of the resource. Name is of the form
 *  projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}
 *  gateway_security_policy should match the
 *  pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Name of a TLS Inspection Policy resource that defines how TLS
 *  inspection will be performed for any rule(s) which enables it.
 */
@property(nonatomic, copy, nullable) NSString *tlsInspectionPolicy;

/** Output only. The timestamp when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The GatewaySecurityPolicyRule resource is in a nested collection within a
 *  GatewaySecurityPolicy and represents a traffic matching condition and
 *  associated action to perform.
 */
@interface GTLRNetworkSecurity_GatewaySecurityPolicyRule : GTLRObject

/** Optional. CEL expression for matching on L7/application level criteria. */
@property(nonatomic, copy, nullable) NSString *applicationMatcher;

/**
 *  Required. Profile which tells what the primitive action should be.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_GatewaySecurityPolicyRule_BasicProfile_Allow
 *        Allow the matched traffic. (Value: "ALLOW")
 *    @arg @c kGTLRNetworkSecurity_GatewaySecurityPolicyRule_BasicProfile_BasicProfileUnspecified
 *        If there is not a mentioned action for the target. (Value:
 *        "BASIC_PROFILE_UNSPECIFIED")
 *    @arg @c kGTLRNetworkSecurity_GatewaySecurityPolicyRule_BasicProfile_Deny
 *        Deny the matched traffic. (Value: "DENY")
 */
@property(nonatomic, copy, nullable) NSString *basicProfile;

/** Output only. Time when the rule was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Whether the rule is enforced.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/**
 *  Required. Immutable. Name of the resource. ame is the full resource name so
 *  projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
 *  rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Priority of the rule. Lower number corresponds to higher
 *  precedence.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/** Required. CEL expression for matching on session criteria. */
@property(nonatomic, copy, nullable) NSString *sessionMatcher;

/**
 *  Optional. Flag to enable TLS inspection of traffic matching on , can only be
 *  true if the parent GatewaySecurityPolicy references a TLSInspectionConfig.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tlsInspectionEnabled;

/** Output only. Time when the rule was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Specification of certificate provider. Defines the mechanism to obtain the
 *  certificate and private key for peer to peer authentication.
 */
@interface GTLRNetworkSecurity_GoogleCloudNetworksecurityV1CertificateProvider : GTLRObject

/**
 *  The certificate provider instance specification that will be passed to the
 *  data plane, which will be used to load necessary credential information.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_CertificateProviderInstance *certificateProviderInstance;

/**
 *  gRPC specific configuration to access the gRPC server to obtain the cert and
 *  private key.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_GoogleCloudNetworksecurityV1GrpcEndpoint *grpcEndpoint;

@end


/**
 *  Specification of the GRPC Endpoint.
 */
@interface GTLRNetworkSecurity_GoogleCloudNetworksecurityV1GrpcEndpoint : GTLRObject

/**
 *  Required. The target URI of the gRPC endpoint. Only UDS path is supported,
 *  and should start with "unix:".
 */
@property(nonatomic, copy, nullable) NSString *targetUri;

@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRNetworkSecurity_GoogleIamV1AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_GoogleIamV1AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRNetworkSecurity_GoogleIamV1AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_AdminRead
 *        Admin reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_DataRead
 *        Data reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_DataWrite
 *        Data writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRNetworkSecurity_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRNetworkSecurity_GoogleIamV1Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `domain:{domain}`: The G Suite domain
 *  (primary) that represents all the users of that domain. For example,
 *  `google.com` or `example.com`. *
 *  `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workforce identity pool. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
 *  All workforce identities in a group. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All workforce identities with a specific attribute value. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/
 *  *`: All identities in a workforce identity pool. *
 *  `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workload identity pool. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
 *  A workload identity pool group. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All identities in a workload identity pool with a certain attribute. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/
 *  *`: All identities in a workload identity pool. *
 *  `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. *
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  Deleted single identity in a workforce identity pool. For example,
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM
 *  roles and permissions, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/roles-overview). For a list
 *  of the available pre-defined roles, see
 *  [here](https://cloud.google.com/iam/docs/understanding-roles).
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** ``` { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
 *  members: - user:mike\@example.com - group:admins\@example.com -
 *  domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 ``` For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRNetworkSecurity_GoogleIamV1Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_GoogleIamV1AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_GoogleIamV1Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_GoogleIamV1Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Specification of HTTP header match attributes.
 */
@interface GTLRNetworkSecurity_HttpHeaderMatch : GTLRObject

/**
 *  Required. The name of the HTTP header to match. For matching against the
 *  HTTP request's authority, use a headerMatch with the header name
 *  ":authority". For matching a request's method, use the headerName ":method".
 */
@property(nonatomic, copy, nullable) NSString *headerName;

/**
 *  Required. The value of the header must match the regular expression
 *  specified in regexMatch. For regular expression grammar, please see:
 *  en.cppreference.com/w/cpp/regex/ecmascript For matching against a port
 *  specified in the HTTP request, use a headerMatch with headerName set to Host
 *  and a regular expression that satisfies the RFC2616 Host header's port
 *  specifier.
 */
@property(nonatomic, copy, nullable) NSString *regexMatch;

@end


/**
 *  Response of the ListAddressGroupReferences method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "addressGroupReferences" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListAddressGroupReferencesResponse : GTLRCollectionObject

/**
 *  A list of references that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_ListAddressGroupReferencesResponseAddressGroupReference *> *addressGroupReferences;

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The Reference of AddressGroup.
 */
@interface GTLRNetworkSecurity_ListAddressGroupReferencesResponseAddressGroupReference : GTLRObject

/** FirewallPolicy that is using the Address Group. */
@property(nonatomic, copy, nullable) NSString *firewallPolicy;

/**
 *  Rule priority of the FirewallPolicy that is using the Address Group.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rulePriority;

/** Cloud Armor SecurityPolicy that is using the Address Group. */
@property(nonatomic, copy, nullable) NSString *securityPolicy;

@end


/**
 *  Response returned by the ListAddressGroups method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "addressGroups" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkSecurity_ListAddressGroupsResponse : GTLRCollectionObject

/**
 *  List of AddressGroups resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AddressGroup *> *addressGroups;

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response returned by the ListAuthorizationPolicies method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "authorizationPolicies" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListAuthorizationPoliciesResponse : GTLRCollectionObject

/**
 *  List of AuthorizationPolicies resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthorizationPolicy *> *authorizationPolicies;

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Message for response to listing `AuthzPolicy` resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "authzPolicies" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkSecurity_ListAuthzPoliciesResponse : GTLRCollectionObject

/**
 *  The list of `AuthzPolicy` resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AuthzPolicy *> *authzPolicies;

/** A token identifying a page of results that the server returns. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response returned by the ListClientTlsPolicies method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "clientTlsPolicies" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListClientTlsPoliciesResponse : GTLRCollectionObject

/**
 *  List of ClientTlsPolicy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_ClientTlsPolicy *> *clientTlsPolicies;

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Message for response to listing Associations
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "firewallEndpointAssociations" property. If returned as the result
 *        of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListFirewallEndpointAssociationsResponse : GTLRCollectionObject

/**
 *  The list of Association
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_FirewallEndpointAssociation *> *firewallEndpointAssociations;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Message for response to listing Endpoints
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "firewallEndpoints" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListFirewallEndpointsResponse : GTLRCollectionObject

/**
 *  The list of Endpoint
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_FirewallEndpoint *> *firewallEndpoints;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response returned by the ListGatewaySecurityPolicies method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "gatewaySecurityPolicies" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListGatewaySecurityPoliciesResponse : GTLRCollectionObject

/**
 *  List of GatewaySecurityPolicies resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_GatewaySecurityPolicy *> *gatewaySecurityPolicies;

/**
 *  If there might be more results than those appearing in this response, then
 *  'next_page_token' is included. To get the next set of results, call this
 *  method again using the value of 'next_page_token' as 'page_token'.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response returned by the ListGatewaySecurityPolicyRules method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "gatewaySecurityPolicyRules" property. If returned as the result
 *        of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListGatewaySecurityPolicyRulesResponse : GTLRCollectionObject

/**
 *  List of GatewaySecurityPolicyRule resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_GatewaySecurityPolicyRule *> *gatewaySecurityPolicyRules;

/**
 *  If there might be more results than those appearing in this response, then
 *  'next_page_token' is included. To get the next set of results, call this
 *  method again using the value of 'next_page_token' as 'page_token'.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkSecurity_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListMirroringDeploymentGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "mirroringDeploymentGroups" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListMirroringDeploymentGroupsResponse : GTLRCollectionObject

/**
 *  The deployment groups from the specified parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringDeploymentGroup *> *mirroringDeploymentGroups;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListMirroringDeployments.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "mirroringDeployments" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListMirroringDeploymentsResponse : GTLRCollectionObject

/**
 *  The deployments from the specified parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringDeployment *> *mirroringDeployments;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for ListMirroringEndpointGroupAssociations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "mirroringEndpointGroupAssociations" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListMirroringEndpointGroupAssociationsResponse : GTLRCollectionObject

/**
 *  The associations from the specified parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringEndpointGroupAssociation *> *mirroringEndpointGroupAssociations;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListMirroringEndpointGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "mirroringEndpointGroups" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListMirroringEndpointGroupsResponse : GTLRCollectionObject

/**
 *  The endpoint groups from the specified parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringEndpointGroup *> *mirroringEndpointGroups;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkSecurity_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_Operation *> *operations;

@end


/**
 *  Response returned by the ListSecurityProfileGroups method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "securityProfileGroups" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListSecurityProfileGroupsResponse : GTLRCollectionObject

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of SecurityProfileGroups resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_SecurityProfileGroup *> *securityProfileGroups;

@end


/**
 *  Response returned by the ListSecurityProfiles method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "securityProfiles" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRNetworkSecurity_ListSecurityProfilesResponse : GTLRCollectionObject

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of SecurityProfile resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_SecurityProfile *> *securityProfiles;

@end


/**
 *  Response returned by the ListServerTlsPolicies method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "serverTlsPolicies" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListServerTlsPoliciesResponse : GTLRCollectionObject

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of ServerTlsPolicy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_ServerTlsPolicy *> *serverTlsPolicies;

/**
 *  Unreachable resources. Populated when the request opts into
 *  `return_partial_success` and reading across collections e.g. when attempting
 *  to list all resources across all supported locations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response returned by the ListTlsInspectionPolicies method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tlsInspectionPolicies" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRNetworkSecurity_ListTlsInspectionPoliciesResponse : GTLRCollectionObject

/**
 *  If there might be more results than those appearing in this response, then
 *  'next_page_token' is included. To get the next set of results, call this
 *  method again using the value of 'next_page_token' as 'page_token'.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of TlsInspectionPolicies resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_TlsInspectionPolicy *> *tlsInspectionPolicies;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response returned by the ListUrlLists method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "urlLists" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRNetworkSecurity_ListUrlListsResponse : GTLRCollectionObject

/**
 *  If there might be more results than those appearing in this response, then
 *  `next_page_token` is included. To get the next set of results, call this
 *  method again using the value of `next_page_token` as `page_token`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  List of UrlList resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_UrlList *> *urlLists;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRNetworkSecurity_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkSecurity_Location_Metadata : GTLRObject
@end


/**
 *  A deployment represents a zonal mirroring backend ready to accept
 *  GENEVE-encapsulated replica traffic, e.g. a zonal instance group fronted by
 *  an internal passthrough load balancer. Deployments are always part of a
 *  global deployment group which represents a global mirroring service.
 */
@interface GTLRNetworkSecurity_MirroringDeployment : GTLRObject

/**
 *  Output only. The timestamp when the resource was created. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. User-provided description of the deployment. Used as additional
 *  context for the deployment.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Immutable. The regional forwarding rule that fronts the mirroring
 *  collectors, for example:
 *  `projects/123456789/regions/us-central1/forwardingRules/my-rule`. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *forwardingRule;

/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_MirroringDeployment_Labels *labels;

/**
 *  Required. Immutable. The deployment group that this deployment is a part of,
 *  for example:
 *  `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *mirroringDeploymentGroup;

/**
 *  Immutable. Identifier. The resource name of this deployment, for example:
 *  `projects/123456789/locations/us-central1-a/mirroringDeployments/my-dep`.
 *  See https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The current state of the resource does not match the user's
 *  intended state, and the system is working to reconcile them. This part of
 *  the normal operation (e.g. linking a new association to the parent group).
 *  See https://google.aip.dev/128.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. The current state of the deployment. See
 *  https://google.aip.dev/216.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringDeployment_State_Active The
 *        deployment is ready and in sync with the parent group. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeployment_State_Creating The
 *        deployment is being created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeployment_State_DeleteFailed An
 *        attempt to delete the deployment has failed. This is a terminal state
 *        and the deployment is not expected to recover. The only permitted
 *        operation is to retry deleting the deployment. (Value:
 *        "DELETE_FAILED")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeployment_State_Deleting The
 *        deployment is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeployment_State_OutOfSync The
 *        deployment is out of sync with the parent group. In most cases, this
 *        is a result of a transient issue within the system (e.g. a delayed
 *        data-path config) and the system is expected to recover automatically.
 *        See the parent deployment group's state for more details. (Value:
 *        "OUT_OF_SYNC")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeployment_State_StateUnspecified
 *        State not set (this is not a valid state). (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The timestamp when the resource was most recently updated. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_MirroringDeployment_Labels : GTLRObject
@end


/**
 *  A deployment group aggregates many zonal mirroring backends (deployments)
 *  into a single global mirroring service. Consumers can connect this service
 *  using an endpoint group.
 */
@interface GTLRNetworkSecurity_MirroringDeploymentGroup : GTLRObject

/**
 *  Output only. The list of endpoint groups that are connected to this
 *  resource.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringDeploymentGroupConnectedEndpointGroup *> *connectedEndpointGroups;

/**
 *  Output only. The timestamp when the resource was created. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. User-provided description of the deployment group. Used as
 *  additional context for the deployment group.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_MirroringDeploymentGroup_Labels *labels;

/**
 *  Output only. The list of locations where the deployment group is present.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringLocation *> *locations;

/**
 *  Immutable. Identifier. The resource name of this deployment group, for
 *  example:
 *  `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`. See
 *  https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The list of Mirroring Deployments that belong to this group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringDeploymentGroupDeployment *> *nestedDeployments GTLR_DEPRECATED;

/**
 *  Required. Immutable. The network that will be used for all child
 *  deployments, for example: `projects/{project}/global/networks/{network}`.
 *  See https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Output only. The current state of the resource does not match the user's
 *  intended state, and the system is working to reconcile them. This is part of
 *  the normal operation (e.g. adding a new deployment to the group) See
 *  https://google.aip.dev/128.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. The current state of the deployment group. See
 *  https://google.aip.dev/216.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroup_State_Active The
 *        deployment group is ready. (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroup_State_Creating The
 *        deployment group is being created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroup_State_Deleting The
 *        deployment group is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroup_State_StateUnspecified
 *        State not set (this is not a valid state). (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The timestamp when the resource was most recently updated. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_MirroringDeploymentGroup_Labels : GTLRObject
@end


/**
 *  An endpoint group connected to this deployment group.
 */
@interface GTLRNetworkSecurity_MirroringDeploymentGroupConnectedEndpointGroup : GTLRObject

/**
 *  Output only. The connected endpoint group's resource name, for example:
 *  `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  A deployment belonging to this deployment group.
 */
@interface GTLRNetworkSecurity_MirroringDeploymentGroupDeployment : GTLRObject

/**
 *  Output only. The name of the Mirroring Deployment, in the format:
 *  `projects/{project}/locations/{location}/mirroringDeployments/{mirroring_deployment}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Most recent known state of the deployment.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_Active
 *        The deployment is ready and in sync with the parent group. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_Creating
 *        The deployment is being created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_DeleteFailed
 *        An attempt to delete the deployment has failed. This is a terminal
 *        state and the deployment is not expected to recover. The only
 *        permitted operation is to retry deleting the deployment. (Value:
 *        "DELETE_FAILED")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_Deleting
 *        The deployment is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_OutOfSync
 *        The deployment is out of sync with the parent group. In most cases,
 *        this is a result of a transient issue within the system (e.g. a
 *        delayed data-path config) and the system is expected to recover
 *        automatically. See the parent deployment group's state for more
 *        details. (Value: "OUT_OF_SYNC")
 *    @arg @c kGTLRNetworkSecurity_MirroringDeploymentGroupDeployment_State_StateUnspecified
 *        State not set (this is not a valid state). (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  An endpoint group is a consumer frontend for a deployment group (backend).
 *  In order to configure mirroring for a network, consumers must create: - An
 *  association between their network and the endpoint group. - A security
 *  profile that points to the endpoint group. - A mirroring rule that
 *  references the security profile (group).
 */
@interface GTLRNetworkSecurity_MirroringEndpointGroup : GTLRObject

/** Output only. List of associations to this endpoint group. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails *> *associations;

/**
 *  Output only. List of details about the connected deployment groups to this
 *  endpoint group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringEndpointGroupConnectedDeploymentGroup *> *connectedDeploymentGroups;

/**
 *  Output only. The timestamp when the resource was created. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. User-provided description of the endpoint group. Used as
 *  additional context for the endpoint group.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_MirroringEndpointGroup_Labels *labels;

/**
 *  Immutable. The deployment group that this DIRECT endpoint group is connected
 *  to, for example:
 *  `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *mirroringDeploymentGroup;

/**
 *  Immutable. Identifier. The resource name of this endpoint group, for
 *  example:
 *  `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`. See
 *  https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The current state of the resource does not match the user's
 *  intended state, and the system is working to reconcile them. This is part of
 *  the normal operation (e.g. adding a new association to the group). See
 *  https://google.aip.dev/128.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. The current state of the endpoint group. See
 *  https://google.aip.dev/216.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroup_State_Active The
 *        endpoint group is ready and in sync with the target deployment group.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroup_State_Closed The
 *        deployment group backing this endpoint group has been force-deleted.
 *        This endpoint group cannot be used and mirroring is effectively
 *        disabled. (Value: "CLOSED")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroup_State_Creating The
 *        endpoint group is being created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroup_State_DeleteFailed An
 *        attempt to delete the endpoint group has failed. This is a terminal
 *        state and the endpoint group is not expected to recover. The only
 *        permitted operation is to retry deleting the endpoint group. (Value:
 *        "DELETE_FAILED")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroup_State_Deleting The
 *        endpoint group is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroup_State_OutOfSync The
 *        endpoint group is out of sync with the backing deployment group. In
 *        most cases, this is a result of a transient issue within the system
 *        (e.g. an inaccessible location) and the system is expected to recover
 *        automatically. See the associations field for details per network and
 *        location. (Value: "OUT_OF_SYNC")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroup_State_StateUnspecified
 *        State not set (this is not a valid state). (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The timestamp when the resource was most recently updated. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_MirroringEndpointGroup_Labels : GTLRObject
@end


/**
 *  An endpoint group association represents a link between a network and an
 *  endpoint group in the organization. Creating an association creates the
 *  networking infrastructure linking the network to the endpoint group, but
 *  does not enable mirroring by itself. To enable mirroring, the user must also
 *  create a network firewall policy containing mirroring rules and associate it
 *  with the network.
 */
@interface GTLRNetworkSecurity_MirroringEndpointGroupAssociation : GTLRObject

/**
 *  Output only. The timestamp when the resource was created. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_MirroringEndpointGroupAssociation_Labels *labels;

/**
 *  Output only. The list of locations where the association is configured. This
 *  information is retrieved from the linked endpoint group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringLocation *> *locations;

/**
 *  Output only. The list of locations where the association is present. This
 *  information is retrieved from the linked endpoint group, and not configured
 *  as part of the association itself.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails *> *locationsDetails GTLR_DEPRECATED;

/**
 *  Immutable. The endpoint group that this association is connected to, for
 *  example:
 *  `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *mirroringEndpointGroup;

/**
 *  Immutable. Identifier. The resource name of this endpoint group association,
 *  for example:
 *  `projects/123456789/locations/global/mirroringEndpointGroupAssociations/my-eg-association`.
 *  See https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. The VPC network that is associated. for example:
 *  `projects/123456789/global/networks/my-network`. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Output only. The current state of the resource does not match the user's
 *  intended state, and the system is working to reconcile them. This part of
 *  the normal operation (e.g. adding a new location to the target deployment
 *  group). See https://google.aip.dev/128.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Current state of the endpoint group association.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Active
 *        The association is ready and in sync with the linked endpoint group.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Closed
 *        The association is disabled due to a breaking change in another
 *        resource. (Value: "CLOSED")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Creating
 *        The association is being created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_DeleteFailed
 *        An attempt to delete the association has failed. This is a terminal
 *        state and the association is not expected to be usable as some of its
 *        resources have been deleted. The only permitted operation is to retry
 *        deleting the association. (Value: "DELETE_FAILED")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_Deleting
 *        The association is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_OutOfSync
 *        The association is out of sync with the linked endpoint group. In most
 *        cases, this is a result of a transient issue within the system (e.g.
 *        an inaccessible location) and the system is expected to recover
 *        automatically. Check the `locations_details` field for more details.
 *        (Value: "OUT_OF_SYNC")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociation_State_StateUnspecified
 *        Not set. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The timestamp when the resource was most recently updated. See
 *  https://google.aip.dev/148#timestamps.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels are key/value pairs that help to organize and filter
 *  resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_MirroringEndpointGroupAssociation_Labels : GTLRObject
@end


/**
 *  The endpoint group's view of a connected association.
 */
@interface GTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails : GTLRObject

/**
 *  Output only. The connected association's resource name, for example:
 *  `projects/123456789/locations/global/mirroringEndpointGroupAssociations/my-ega`.
 *  See https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The associated network, for example:
 *  projects/123456789/global/networks/my-network. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Output only. Most recent known state of the association.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Active
 *        The association is ready and in sync with the linked endpoint group.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Closed
 *        The association is disabled due to a breaking change in another
 *        resource. (Value: "CLOSED")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Creating
 *        The association is being created. (Value: "CREATING")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_DeleteFailed
 *        An attempt to delete the association has failed. This is a terminal
 *        state and the association is not expected to be usable as some of its
 *        resources have been deleted. The only permitted operation is to retry
 *        deleting the association. (Value: "DELETE_FAILED")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_Deleting
 *        The association is being deleted. (Value: "DELETING")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_OutOfSync
 *        The association is out of sync with the linked endpoint group. In most
 *        cases, this is a result of a transient issue within the system (e.g.
 *        an inaccessible location) and the system is expected to recover
 *        automatically. Check the `locations_details` field for more details.
 *        (Value: "OUT_OF_SYNC")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationDetails_State_StateUnspecified
 *        Not set. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Contains details about the state of an association in a specific cloud
 *  location.
 */
@interface GTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails : GTLRObject

/** Output only. The cloud location, e.g. "us-central1-a" or "asia-south1". */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Output only. The current state of the association in this location.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails_State_Active
 *        The association is ready and in sync with the linked endpoint group.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails_State_OutOfSync
 *        The association is out of sync with the linked endpoint group. In most
 *        cases, this is a result of a transient issue within the system (e.g.
 *        an inaccessible location) and the system is expected to recover
 *        automatically. (Value: "OUT_OF_SYNC")
 *    @arg @c kGTLRNetworkSecurity_MirroringEndpointGroupAssociationLocationDetails_State_StateUnspecified
 *        Not set. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The endpoint group's view of a connected deployment group.
 */
@interface GTLRNetworkSecurity_MirroringEndpointGroupConnectedDeploymentGroup : GTLRObject

/**
 *  Output only. The list of locations where the deployment group is present.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_MirroringLocation *> *locations;

/**
 *  Output only. The connected deployment group's resource name, for example:
 *  `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`. See
 *  https://google.aip.dev/124.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Details about mirroring in a specific cloud location.
 */
@interface GTLRNetworkSecurity_MirroringLocation : GTLRObject

/** Output only. The cloud location, e.g. "us-central1-a" or "asia-south1". */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Output only. The current state of the association in this location.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MirroringLocation_State_Active The resource
 *        is ready and in sync in the location. (Value: "ACTIVE")
 *    @arg @c kGTLRNetworkSecurity_MirroringLocation_State_OutOfSync The
 *        resource is out of sync in the location. In most cases, this is a
 *        result of a transient issue within the system (e.g. an inaccessible
 *        location) and the system is expected to recover automatically. (Value:
 *        "OUT_OF_SYNC")
 *    @arg @c kGTLRNetworkSecurity_MirroringLocation_State_StateUnspecified
 *        State not set (this is not a valid state). (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Specification of the MTLSPolicy.
 */
@interface GTLRNetworkSecurity_MTLSPolicy : GTLRObject

/**
 *  Required if the policy is to be used with Traffic Director. For Application
 *  Load Balancers it must be empty. Defines the mechanism to obtain the
 *  Certificate Authority certificate to validate the client certificate.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_ValidationCA *> *clientValidationCa;

/**
 *  When the client presents an invalid certificate or no certificate to the
 *  load balancer, the `client_validation_mode` specifies how the client
 *  connection is handled. Required if the policy is to be used with the
 *  Application Load Balancers. For Traffic Director it must be empty.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_MTLSPolicy_ClientValidationMode_AllowInvalidOrMissingClientCert
 *        Allow connection even if certificate chain validation of the client
 *        certificate failed or no client certificate was presented. The proof
 *        of possession of the private key is always checked if client
 *        certificate was presented. This mode requires the backend to implement
 *        processing of data extracted from a client certificate to authenticate
 *        the peer, or to reject connections if the client certificate
 *        fingerprint is missing. (Value:
 *        "ALLOW_INVALID_OR_MISSING_CLIENT_CERT")
 *    @arg @c kGTLRNetworkSecurity_MTLSPolicy_ClientValidationMode_ClientValidationModeUnspecified
 *        Not allowed. (Value: "CLIENT_VALIDATION_MODE_UNSPECIFIED")
 *    @arg @c kGTLRNetworkSecurity_MTLSPolicy_ClientValidationMode_RejectInvalid
 *        Require a client certificate and allow connection to the backend only
 *        if validation of the client certificate passed. If set, requires a
 *        reference to non-empty TrustConfig specified in
 *        `client_validation_trust_config`. (Value: "REJECT_INVALID")
 */
@property(nonatomic, copy, nullable) NSString *clientValidationMode;

/**
 *  Reference to the TrustConfig from certificatemanager.googleapis.com
 *  namespace. If specified, the chain validation will be performed against
 *  certificates configured in the given TrustConfig. Allowed only if the policy
 *  is to be used with Application Load Balancers.
 */
@property(nonatomic, copy, nullable) NSString *clientValidationTrustConfig;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRNetworkSecurity_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkSecurity_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkSecurity_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRNetworkSecurity_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have successfully been cancelled have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  Request used by the RemoveAddressGroupItems method.
 */
@interface GTLRNetworkSecurity_RemoveAddressGroupItemsRequest : GTLRObject

/** Required. List of items to remove. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *items;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  Specification of rules.
 */
@interface GTLRNetworkSecurity_Rule : GTLRObject

/**
 *  Optional. List of attributes for the traffic destination. All of the
 *  destinations must match. A destination is a match if a request matches all
 *  the specified hosts, ports, methods and headers. If not set, the action
 *  specified in the 'action' field will be applied without any rule checks for
 *  the destination.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_Destination *> *destinations;

/**
 *  Optional. List of attributes for the traffic source. All of the sources must
 *  match. A source is a match if both principals and ip_blocks match. If not
 *  set, the action specified in the 'action' field will be applied without any
 *  rule checks for the source.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_Source *> *sources;

@end


/**
 *  SecurityProfile is a resource that defines the behavior for one of many
 *  ProfileTypes.
 */
@interface GTLRNetworkSecurity_SecurityProfile : GTLRObject

/** Output only. Resource creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The custom TPPI configuration for the SecurityProfile. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_CustomInterceptProfile *customInterceptProfile;

/** The custom Packet Mirroring v2 configuration for the SecurityProfile. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_CustomMirroringProfile *customMirroringProfile;

/**
 *  Optional. An optional description of the profile. Max length 512 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. This checksum is computed by the server based on the value of
 *  other fields, and may be sent on update and delete requests to ensure the
 *  client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Optional. Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_SecurityProfile_Labels *labels;

/**
 *  Immutable. Identifier. Name of the SecurityProfile resource. It matches
 *  pattern `projects|organizations/ *
 *  /locations/{location}/securityProfiles/{security_profile}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The threat prevention configuration for the SecurityProfile. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_ThreatPreventionProfile *threatPreventionProfile;

/**
 *  Immutable. The single ProfileType that the SecurityProfile resource
 *  configures.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_SecurityProfile_Type_CustomIntercept Profile
 *        type for TPPI. (Value: "CUSTOM_INTERCEPT")
 *    @arg @c kGTLRNetworkSecurity_SecurityProfile_Type_CustomMirroring Profile
 *        type for packet mirroring v2 (Value: "CUSTOM_MIRRORING")
 *    @arg @c kGTLRNetworkSecurity_SecurityProfile_Type_ProfileTypeUnspecified
 *        Profile type not specified. (Value: "PROFILE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRNetworkSecurity_SecurityProfile_Type_ThreatPrevention Profile
 *        type for threat prevention. (Value: "THREAT_PREVENTION")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. Last resource update timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_SecurityProfile_Labels : GTLRObject
@end


/**
 *  SecurityProfileGroup is a resource that defines the behavior for various
 *  ProfileTypes.
 */
@interface GTLRNetworkSecurity_SecurityProfileGroup : GTLRObject

/** Output only. Resource creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Reference to a SecurityProfile with the CustomIntercept
 *  configuration.
 */
@property(nonatomic, copy, nullable) NSString *customInterceptProfile;

/**
 *  Optional. Reference to a SecurityProfile with the CustomMirroring
 *  configuration.
 */
@property(nonatomic, copy, nullable) NSString *customMirroringProfile;

/**
 *  Output only. Identifier used by the data-path. Unique within {container,
 *  location}.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataPathId;

/**
 *  Optional. An optional description of the profile group. Max length 2048
 *  characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. This checksum is computed by the server based on the value of
 *  other fields, and may be sent on update and delete requests to ensure the
 *  client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Optional. Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_SecurityProfileGroup_Labels *labels;

/**
 *  Immutable. Identifier. Name of the SecurityProfileGroup resource. It matches
 *  pattern `projects|organizations/ *
 *  /locations/{location}/securityProfileGroups/{security_profile_group}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Reference to a SecurityProfile with the ThreatPrevention
 *  configuration.
 */
@property(nonatomic, copy, nullable) NSString *threatPreventionProfile;

/** Output only. Last resource update timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_SecurityProfileGroup_Labels : GTLRObject
@end


/**
 *  ServerTlsPolicy is a resource that specifies how a server should
 *  authenticate incoming requests. This resource itself does not affect
 *  configuration unless it is attached to a target HTTPS proxy or endpoint
 *  config selector resource. ServerTlsPolicy in the form accepted by
 *  Application Load Balancers can be attached only to TargetHttpsProxy with an
 *  `EXTERNAL`, `EXTERNAL_MANAGED` or `INTERNAL_MANAGED` load balancing scheme.
 *  Traffic Director compatible ServerTlsPolicies can be attached to
 *  EndpointPolicy and TargetHttpsProxy with Traffic Director
 *  `INTERNAL_SELF_MANAGED` load balancing scheme.
 */
@interface GTLRNetworkSecurity_ServerTlsPolicy : GTLRObject

/**
 *  This field applies only for Traffic Director policies. It is must be set to
 *  false for Application Load Balancer policies. Determines if server allows
 *  plaintext connections. If set to true, server allows plain text connections.
 *  By default, it is set to false. This setting is not exclusive of other
 *  encryption modes. For example, if `allow_open` and `mtls_policy` are set,
 *  server allows both plain text and mTLS connections. See documentation of
 *  other encryption modes to confirm compatibility. Consider using it if you
 *  wish to upgrade in place your deployment to TLS while having mixed TLS and
 *  non-TLS traffic reaching port :80.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowOpen;

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Set of label tags associated with the resource. */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_ServerTlsPolicy_Labels *labels;

/**
 *  This field is required if the policy is used with Application Load
 *  Balancers. This field can be empty for Traffic Director. Defines a mechanism
 *  to provision peer validation certificates for peer to peer authentication
 *  (Mutual TLS - mTLS). If not specified, client certificate will not be
 *  requested. The connection is treated as TLS and not mTLS. If `allow_open`
 *  and `mtls_policy` are set, server allows both plain text and mTLS
 *  connections.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_MTLSPolicy *mtlsPolicy;

/**
 *  Required. Name of the ServerTlsPolicy resource. It matches the pattern
 *  `projects/ * /locations/{location}/serverTlsPolicies/{server_tls_policy}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional if policy is to be used with Traffic Director. For Application Load
 *  Balancers must be empty. Defines a mechanism to provision server identity
 *  (public and private keys). Cannot be combined with `allow_open` as a
 *  permissive mode that allows both plain text and TLS is not supported.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_GoogleCloudNetworksecurityV1CertificateProvider *serverCertificate;

/** Output only. The timestamp when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Set of label tags associated with the resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRNetworkSecurity_ServerTlsPolicy_Labels : GTLRObject
@end


/**
 *  Defines what action to take for a specific severity match.
 */
@interface GTLRNetworkSecurity_SeverityOverride : GTLRObject

/**
 *  Required. Threat action override.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Action_Alert The packet
 *        matching this rule will be allowed to transmit, but a threat_log entry
 *        will be sent to the consumer project. (Value: "ALERT")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Action_Allow The packet
 *        matching this rule will be allowed to transmit. (Value: "ALLOW")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Action_DefaultAction The
 *        default action (as specified by the vendor) is taken. (Value:
 *        "DEFAULT_ACTION")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Action_Deny The packet
 *        matching this rule will be dropped, and a threat_log entry will be
 *        sent to the consumer project. (Value: "DENY")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Action_ThreatActionUnspecified
 *        Threat action not specified. (Value: "THREAT_ACTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Required. Severity level to match.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Severity_Critical Serious
 *        threats, such as those that affect default installations of widely
 *        deployed software, result in root compromise of servers, and the
 *        exploit code is widely available to attackers. The attacker usually
 *        does not need any special authentication credentials or knowledge
 *        about the individual victims and the target does not need to be
 *        manipulated into performing any special functions. (Value: "CRITICAL")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Severity_High Threats that
 *        have the ability to become critical but have mitigating factors; for
 *        example, they may be difficult to exploit, do not result in elevated
 *        privileges, or do not have a large victim pool. (Value: "HIGH")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Severity_Informational
 *        Suspicious events that do not pose an immediate threat, but that are
 *        reported to call attention to deeper problems that could possibly
 *        exist. (Value: "INFORMATIONAL")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Severity_Low Warning-level
 *        threats that have very little impact on an organization's
 *        infrastructure. They usually require local or physical system access
 *        and may often result in victim privacy issues and information leakage.
 *        (Value: "LOW")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Severity_Medium Minor
 *        threats in which impact is minimized, that do not compromise the
 *        target or exploits that require an attacker to reside on the same
 *        local network as the victim, affect only non-standard configurations
 *        or obscure applications, or provide very limited access. (Value:
 *        "MEDIUM")
 *    @arg @c kGTLRNetworkSecurity_SeverityOverride_Severity_SeverityUnspecified
 *        Severity level not specified. (Value: "SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

@end


/**
 *  Specification of traffic source attributes.
 */
@interface GTLRNetworkSecurity_Source : GTLRObject

/**
 *  Optional. List of CIDR ranges to match based on source IP address. At least
 *  one IP block should match. Single IP (e.g., "1.2.3.4") and CIDR (e.g.,
 *  "1.2.3.0/24") are supported. Authorization based on source IP alone should
 *  be avoided. The IP addresses of any load balancers or proxies should be
 *  considered untrusted.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ipBlocks;

/**
 *  Optional. List of peer identities to match for authorization. At least one
 *  principal should match. Each peer can be an exact match, or a prefix match
 *  (example, "namespace/ *") or a suffix match (example, "* /service-account")
 *  or a presence match "*". Authorization based on the principal name without
 *  certificate validation (configured by ServerTlsPolicy resource) is
 *  considered insecure.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *principals;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRNetworkSecurity_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRNetworkSecurity_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRNetworkSecurity_Status_Details_Item : GTLRObject
@end


/**
 *  Defines what action to take for a specific threat_id match.
 */
@interface GTLRNetworkSecurity_ThreatOverride : GTLRObject

/**
 *  Required. Threat action override. For some threat types, only a subset of
 *  actions applies.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Action_Alert The packet
 *        matching this rule will be allowed to transmit, but a threat_log entry
 *        will be sent to the consumer project. (Value: "ALERT")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Action_Allow The packet
 *        matching this rule will be allowed to transmit. (Value: "ALLOW")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Action_DefaultAction The
 *        default action (as specified by the vendor) is taken. (Value:
 *        "DEFAULT_ACTION")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Action_Deny The packet
 *        matching this rule will be dropped, and a threat_log entry will be
 *        sent to the consumer project. (Value: "DENY")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Action_ThreatActionUnspecified
 *        Threat action not specified. (Value: "THREAT_ACTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *action;

/** Required. Vendor-specific ID of a threat to override. */
@property(nonatomic, copy, nullable) NSString *threatId;

/**
 *  Output only. Type of the threat (read only).
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Type_Antivirus Threats related
 *        to viruses and malware found in executables and file types. (Value:
 *        "ANTIVIRUS")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Type_Dns Threats related to
 *        DNS. (Value: "DNS")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Type_Spyware Threats related
 *        to command-and-control (C2) activity, where spyware on an infected
 *        client is collecting data without the user's consent and/or
 *        communicating with a remote attacker. (Value: "SPYWARE")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Type_ThreatTypeUnspecified
 *        Type of threat not specified. (Value: "THREAT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Type_Unknown Type of threat is
 *        not derivable from threat ID. An override will be created for all
 *        types. Firewall will ignore overridden signature ID's that don't exist
 *        in the specific type. (Value: "UNKNOWN")
 *    @arg @c kGTLRNetworkSecurity_ThreatOverride_Type_Vulnerability Threats
 *        related to system flaws that an attacker might otherwise attempt to
 *        exploit. (Value: "VULNERABILITY")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  ThreatPreventionProfile defines an action for specific threat signatures or
 *  severity levels.
 */
@interface GTLRNetworkSecurity_ThreatPreventionProfile : GTLRObject

/** Optional. Configuration for overriding antivirus actions per protocol. */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_AntivirusOverride *> *antivirusOverrides;

/**
 *  Optional. Configuration for overriding threats actions by severity match.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_SeverityOverride *> *severityOverrides;

/**
 *  Optional. Configuration for overriding threats actions by threat_id match.
 *  If a threat is matched both by configuration provided in severity_overrides
 *  and threat_overrides, the threat_overrides action is applied.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRNetworkSecurity_ThreatOverride *> *threatOverrides;

@end


/**
 *  The TlsInspectionPolicy resource contains references to CA pools in
 *  Certificate Authority Service and associated metadata.
 */
@interface GTLRNetworkSecurity_TlsInspectionPolicy : GTLRObject

/**
 *  Required. A CA pool resource used to issue interception certificates. The CA
 *  pool string has a relative resource path following the form
 *  "projects/{project}/locations/{location}/caPools/{ca_pool}".
 */
@property(nonatomic, copy, nullable) NSString *caPool;

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. List of custom TLS cipher suites selected. This field is valid
 *  only if the selected tls_feature_profile is CUSTOM. The
 *  compute.SslPoliciesService.ListAvailableFeatures method returns the set of
 *  features that can be specified in this list. Note that Secure Web Proxy does
 *  not yet honor this field.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *customTlsFeatures;

/**
 *  Optional. Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. If FALSE (the default), use our default set of public CAs in
 *  addition to any CAs specified in trust_config. These public CAs are
 *  currently based on the Mozilla Root Program and are subject to change over
 *  time. If TRUE, do not accept our default set of public CAs. Only CAs
 *  specified in trust_config will be accepted. This defaults to FALSE (use
 *  public CAs in addition to trust_config) for backwards compatibility, but
 *  trusting public root CAs is *not recommended* unless the traffic in question
 *  is outbound to public web servers. When possible, prefer setting this to
 *  "false" and explicitly specifying trusted CAs and certificates in a
 *  TrustConfig. Note that Secure Web Proxy does not yet honor this field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *excludePublicCaSet;

/**
 *  Optional. Minimum TLS version that the firewall should use when negotiating
 *  connections with both clients and servers. If this is not set, then the
 *  default value is to allow the broadest set of clients and servers (TLS 1.0
 *  or higher). Setting this to more restrictive values may improve security,
 *  but may also prevent the firewall from connecting to some clients or
 *  servers. Note that Secure Web Proxy does not yet honor this field.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls10 TLS
 *        1.0 (Value: "TLS_1_0")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls11 TLS
 *        1.1 (Value: "TLS_1_1")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls12 TLS
 *        1.2 (Value: "TLS_1_2")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_Tls13 TLS
 *        1.3 (Value: "TLS_1_3")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_MinTlsVersion_TlsVersionUnspecified
 *        Indicates no TLS version was specified. (Value:
 *        "TLS_VERSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *minTlsVersion;

/**
 *  Required. Name of the resource. Name is of the form
 *  projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy}
 *  tls_inspection_policy should match the
 *  pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The selected Profile. If this is not set, then the default value
 *  is to allow the broadest set of clients and servers ("PROFILE_COMPATIBLE").
 *  Setting this to more restrictive values may improve security, but may also
 *  prevent the TLS inspection proxy from connecting to some clients or servers.
 *  Note that Secure Web Proxy does not yet honor this field.
 *
 *  Likely values:
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileCompatible
 *        Compatible profile. Allows the broadest set of clients, even those
 *        which support only out-of-date SSL features to negotiate with the TLS
 *        inspection proxy. (Value: "PROFILE_COMPATIBLE")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileCustom
 *        Custom profile. Allow only the set of allowed SSL features specified
 *        in the custom_features field of SslPolicy. (Value: "PROFILE_CUSTOM")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileModern
 *        Modern profile. Supports a wide set of SSL features, allowing modern
 *        clients to negotiate SSL with the TLS inspection proxy. (Value:
 *        "PROFILE_MODERN")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileRestricted
 *        Restricted profile. Supports a reduced set of SSL features, intended
 *        to meet stricter compliance requirements. (Value:
 *        "PROFILE_RESTRICTED")
 *    @arg @c kGTLRNetworkSecurity_TlsInspectionPolicy_TlsFeatureProfile_ProfileUnspecified
 *        Indicates no profile was specified. (Value: "PROFILE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *tlsFeatureProfile;

/**
 *  Optional. A TrustConfig resource used when making a connection to the TLS
 *  server. This is a relative resource path following the form
 *  "projects/{project}/locations/{location}/trustConfigs/{trust_config}". This
 *  is necessary to intercept TLS connections to servers with certificates
 *  signed by a private CA or self-signed certificates. Note that Secure Web
 *  Proxy does not yet honor this field.
 */
@property(nonatomic, copy, nullable) NSString *trustConfig;

/** Output only. The timestamp when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  UrlList proto helps users to set reusable, independently manageable lists of
 *  hosts, host patterns, URLs, URL patterns.
 */
@interface GTLRNetworkSecurity_UrlList : GTLRObject

/** Output only. Time when the security policy was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Free-text description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Name of the resource provided by the user. Name is of the form
 *  projects/{project}/locations/{location}/urlLists/{url_list} url_list should
 *  match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Time when the security policy was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Required. FQDNs and URLs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  Specification of ValidationCA. Defines the mechanism to obtain the
 *  Certificate Authority certificate to validate the peer certificate.
 */
@interface GTLRNetworkSecurity_ValidationCA : GTLRObject

/**
 *  The certificate provider instance specification that will be passed to the
 *  data plane, which will be used to load necessary credential information.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_CertificateProviderInstance *certificateProviderInstance;

/**
 *  gRPC specific configuration to access the gRPC server to obtain the CA
 *  certificate.
 */
@property(nonatomic, strong, nullable) GTLRNetworkSecurity_GoogleCloudNetworksecurityV1GrpcEndpoint *grpcEndpoint;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
