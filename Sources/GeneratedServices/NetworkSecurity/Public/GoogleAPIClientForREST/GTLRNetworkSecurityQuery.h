// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Security API (networksecurity/v1)
// Documentation:
//   https://cloud.google.com/networking

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRNetworkSecurityObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other NetworkSecurity query classes.
 */
@interface GTLRNetworkSecurityQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Adds items to an address group.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.addItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsAddItems : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to add items to. Must be in the format
 *  `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Adds items to an address group.
 *
 *  @param object The @c GTLRNetworkSecurity_AddAddressGroupItemsRequest to
 *    include in the query.
 *  @param addressGroup Required. A name of the AddressGroup to add items to.
 *    Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsAddItems
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup;

@end

/**
 *  Clones items from one address group to another.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.cloneItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCloneItems : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to clone items to. Must be in the
 *  format `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Clones items from one address group to another.
 *
 *  @param object The @c GTLRNetworkSecurity_CloneAddressGroupItemsRequest to
 *    include in the query.
 *  @param addressGroup Required. A name of the AddressGroup to clone items to.
 *    Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCloneItems
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CloneAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup;

@end

/**
 *  Creates a new address group in a given project and location.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Short name of the AddressGroup resource to be created. This value
 *  should be 1-63 characters long, containing only letters, numbers, hyphens,
 *  and underscores, and should not start with a number. E.g. "authz_policy".
 */
@property(nonatomic, copy, nullable) NSString *addressGroupId;

/**
 *  Required. The parent resource of the AddressGroup. Must be in the format
 *  `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new address group in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_AddressGroup to include in the
 *    query.
 *  @param parent Required. The parent resource of the AddressGroup. Must be in
 *    the format `projects/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an address group.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to delete. Must be in the format
 *  `projects/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes an address group.
 *
 *  @param name Required. A name of the AddressGroup to delete. Must be in the
 *    format `projects/ * /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single address group.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to get. Must be in the format
 *  `projects/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_AddressGroup.
 *
 *  Gets details of a single address group.
 *
 *  @param name Required. A name of the AddressGroup to get. Must be in the
 *    format `projects/ * /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists address groups in a given project and location.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsList : GTLRNetworkSecurityQuery

/** Maximum number of AddressGroups to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListAddressGroupsResponse` Indicates that
 *  this is a continuation of a prior `ListAddressGroups` call, and that the
 *  system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the AddressGroups should be
 *  listed, specified in the format `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. If true, allow partial responses for multi-regional Aggregated
 *  List requests.
 */
@property(nonatomic, assign) BOOL returnPartialSuccess;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListAddressGroupsResponse.
 *
 *  Lists address groups in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    AddressGroups should be listed, specified in the format `projects/ *
 *    /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists references of an address group.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.listReferences
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsListReferences : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to clone items to. Must be in the
 *  format `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  The maximum number of references to return. If unspecified, server will pick
 *  an appropriate default. Server may return fewer items than requested. A
 *  caller should only rely on response's next_page_token to determine if there
 *  are more AddressGroupUsers left to be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous List request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListAddressGroupReferencesResponse.
 *
 *  Lists references of an address group.
 *
 *  @param addressGroup Required. A name of the AddressGroup to clone items to.
 *    Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsListReferences
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAddressGroup:(NSString *)addressGroup;

@end

/**
 *  Updates parameters of an address group.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the AddressGroup resource. It matches pattern `projects/ *
 *  /locations/{location}/addressGroups/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  AddressGroup resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates parameters of an address group.
 *
 *  @param object The @c GTLRNetworkSecurity_AddressGroup to include in the
 *    query.
 *  @param name Required. Name of the AddressGroup resource. It matches pattern
 *    `projects/ * /locations/{location}/addressGroups/`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Removes items from an address group.
 *
 *  Method: networksecurity.organizations.locations.addressGroups.removeItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsRemoveItems : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to remove items from. Must be in the
 *  format `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Removes items from an address group.
 *
 *  @param object The @c GTLRNetworkSecurity_RemoveAddressGroupItemsRequest to
 *    include in the query.
 *  @param addressGroup Required. A name of the AddressGroup to remove items
 *    from. Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsAddressGroupsRemoveItems
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_RemoveAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup;

@end

/**
 *  Creates a new FirewallEndpoint in a given project and location.
 *
 *  Method: networksecurity.organizations.locations.firewallEndpoints.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Id of the requesting object. If auto-generating Id server-side,
 *  remove this field and firewall_endpoint_id from the method_signature of
 *  Create RPC.
 */
@property(nonatomic, copy, nullable) NSString *firewallEndpointId;

/** Required. Value for parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new FirewallEndpoint in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_FirewallEndpoint to include in the
 *    query.
 *  @param parent Required. Value for parent.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpoint *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Endpoint.
 *
 *  Method: networksecurity.organizations.locations.firewallEndpoints.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsDelete : GTLRNetworkSecurityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single Endpoint.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Endpoint.
 *
 *  Method: networksecurity.organizations.locations.firewallEndpoints.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsGet : GTLRNetworkSecurityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_FirewallEndpoint.
 *
 *  Gets details of a single Endpoint.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists FirewallEndpoints in a given project and location.
 *
 *  Method: networksecurity.organizations.locations.firewallEndpoints.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsList : GTLRNetworkSecurityQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListEndpointsRequest */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListFirewallEndpointsResponse.
 *
 *  Lists FirewallEndpoints in a given project and location.
 *
 *  @param parent Required. Parent value for ListEndpointsRequest
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single Endpoint.
 *
 *  Method: networksecurity.organizations.locations.firewallEndpoints.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsPatch : GTLRNetworkSecurityQuery

/** Immutable. Identifier. name of resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Endpoint resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Update a single Endpoint.
 *
 *  @param object The @c GTLRNetworkSecurity_FirewallEndpoint to include in the
 *    query.
 *  @param name Immutable. Identifier. name of resource
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsFirewallEndpointsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpoint *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: networksecurity.organizations.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsCancel : GTLRNetworkSecurityQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRNetworkSecurity_CancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: networksecurity.organizations.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsDelete : GTLRNetworkSecurityQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: networksecurity.organizations.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsGet : GTLRNetworkSecurityQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: networksecurity.organizations.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsList : GTLRNetworkSecurityQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new SecurityProfileGroup in a given organization and location.
 *
 *  Method: networksecurity.organizations.locations.securityProfileGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The parent resource of the SecurityProfileGroup. Must be in the
 *  format `projects|organizations/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Short name of the SecurityProfileGroup resource to be created.
 *  This value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "security_profile_group1".
 */
@property(nonatomic, copy, nullable) NSString *securityProfileGroupId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new SecurityProfileGroup in a given organization and location.
 *
 *  @param object The @c GTLRNetworkSecurity_SecurityProfileGroup to include in
 *    the query.
 *  @param parent Required. The parent resource of the SecurityProfileGroup.
 *    Must be in the format `projects|organizations/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfileGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single SecurityProfileGroup.
 *
 *  Method: networksecurity.organizations.locations.securityProfileGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsDelete : GTLRNetworkSecurityQuery

/**
 *  Optional. If client provided etag is out of date, delete will return
 *  FAILED_PRECONDITION error.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. A name of the SecurityProfileGroup to delete. Must be in the
 *  format `projects|organizations/ *
 *  /locations/{location}/securityProfileGroups/{security_profile_group}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single SecurityProfileGroup.
 *
 *  @param name Required. A name of the SecurityProfileGroup to delete. Must be
 *    in the format `projects|organizations/ *
 *    /locations/{location}/securityProfileGroups/{security_profile_group}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single SecurityProfileGroup.
 *
 *  Method: networksecurity.organizations.locations.securityProfileGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the SecurityProfileGroup to get. Must be in the format
 *  `projects|organizations/ *
 *  /locations/{location}/securityProfileGroups/{security_profile_group}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_SecurityProfileGroup.
 *
 *  Gets details of a single SecurityProfileGroup.
 *
 *  @param name Required. A name of the SecurityProfileGroup to get. Must be in
 *    the format `projects|organizations/ *
 *    /locations/{location}/securityProfileGroups/{security_profile_group}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists SecurityProfileGroups in a given organization and location.
 *
 *  Method: networksecurity.organizations.locations.securityProfileGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsList : GTLRNetworkSecurityQuery

/** Maximum number of SecurityProfileGroups to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListSecurityProfileGroupsResponse` Indicates
 *  that this is a continuation of a prior `ListSecurityProfileGroups` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project or organization and location from which the
 *  SecurityProfileGroups should be listed, specified in the format
 *  `projects|organizations/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListSecurityProfileGroupsResponse.
 *
 *  Lists SecurityProfileGroups in a given organization and location.
 *
 *  @param parent Required. The project or organization and location from which
 *    the SecurityProfileGroups should be listed, specified in the format
 *    `projects|organizations/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single SecurityProfileGroup.
 *
 *  Method: networksecurity.organizations.locations.securityProfileGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsPatch : GTLRNetworkSecurityQuery

/**
 *  Immutable. Identifier. Name of the SecurityProfileGroup resource. It matches
 *  pattern `projects|organizations/ *
 *  /locations/{location}/securityProfileGroups/{security_profile_group}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  SecurityProfileGroup resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single SecurityProfileGroup.
 *
 *  @param object The @c GTLRNetworkSecurity_SecurityProfileGroup to include in
 *    the query.
 *  @param name Immutable. Identifier. Name of the SecurityProfileGroup
 *    resource. It matches pattern `projects|organizations/ *
 *    /locations/{location}/securityProfileGroups/{security_profile_group}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfileGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfileGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new SecurityProfile in a given organization and location.
 *
 *  Method: networksecurity.organizations.locations.securityProfiles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The parent resource of the SecurityProfile. Must be in the format
 *  `projects|organizations/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Short name of the SecurityProfile resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "security_profile1".
 */
@property(nonatomic, copy, nullable) NSString *securityProfileId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new SecurityProfile in a given organization and location.
 *
 *  @param object The @c GTLRNetworkSecurity_SecurityProfile to include in the
 *    query.
 *  @param parent Required. The parent resource of the SecurityProfile. Must be
 *    in the format `projects|organizations/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfile *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single SecurityProfile.
 *
 *  Method: networksecurity.organizations.locations.securityProfiles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesDelete : GTLRNetworkSecurityQuery

/**
 *  Optional. If client provided etag is out of date, delete will return
 *  FAILED_PRECONDITION error.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. A name of the SecurityProfile to delete. Must be in the format
 *  `projects|organizations/ *
 *  /locations/{location}/securityProfiles/{security_profile_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single SecurityProfile.
 *
 *  @param name Required. A name of the SecurityProfile to delete. Must be in
 *    the format `projects|organizations/ *
 *    /locations/{location}/securityProfiles/{security_profile_id}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single SecurityProfile.
 *
 *  Method: networksecurity.organizations.locations.securityProfiles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the SecurityProfile to get. Must be in the format
 *  `projects|organizations/ *
 *  /locations/{location}/securityProfiles/{security_profile_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_SecurityProfile.
 *
 *  Gets details of a single SecurityProfile.
 *
 *  @param name Required. A name of the SecurityProfile to get. Must be in the
 *    format `projects|organizations/ *
 *    /locations/{location}/securityProfiles/{security_profile_id}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists SecurityProfiles in a given organization and location.
 *
 *  Method: networksecurity.organizations.locations.securityProfiles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesList : GTLRNetworkSecurityQuery

/** Maximum number of SecurityProfiles to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListSecurityProfilesResponse` Indicates that
 *  this is a continuation of a prior `ListSecurityProfiles` call, and that the
 *  system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project or organization and location from which the
 *  SecurityProfiles should be listed, specified in the format
 *  `projects|organizations/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListSecurityProfilesResponse.
 *
 *  Lists SecurityProfiles in a given organization and location.
 *
 *  @param parent Required. The project or organization and location from which
 *    the SecurityProfiles should be listed, specified in the format
 *    `projects|organizations/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single SecurityProfile.
 *
 *  Method: networksecurity.organizations.locations.securityProfiles.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesPatch : GTLRNetworkSecurityQuery

/**
 *  Immutable. Identifier. Name of the SecurityProfile resource. It matches
 *  pattern `projects|organizations/ *
 *  /locations/{location}/securityProfiles/{security_profile}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  SecurityProfile resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single SecurityProfile.
 *
 *  @param object The @c GTLRNetworkSecurity_SecurityProfile to include in the
 *    query.
 *  @param name Immutable. Identifier. Name of the SecurityProfile resource. It
 *    matches pattern `projects|organizations/ *
 *    /locations/{location}/securityProfiles/{security_profile}`.
 *
 *  @return GTLRNetworkSecurityQuery_OrganizationsLocationsSecurityProfilesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_SecurityProfile *)object
                           name:(NSString *)name;

@end

/**
 *  Adds items to an address group.
 *
 *  Method: networksecurity.projects.locations.addressGroups.addItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsAddItems : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to add items to. Must be in the format
 *  `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Adds items to an address group.
 *
 *  @param object The @c GTLRNetworkSecurity_AddAddressGroupItemsRequest to
 *    include in the query.
 *  @param addressGroup Required. A name of the AddressGroup to add items to.
 *    Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsAddItems
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup;

@end

/**
 *  Clones items from one address group to another.
 *
 *  Method: networksecurity.projects.locations.addressGroups.cloneItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCloneItems : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to clone items to. Must be in the
 *  format `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Clones items from one address group to another.
 *
 *  @param object The @c GTLRNetworkSecurity_CloneAddressGroupItemsRequest to
 *    include in the query.
 *  @param addressGroup Required. A name of the AddressGroup to clone items to.
 *    Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCloneItems
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CloneAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup;

@end

/**
 *  Creates a new address group in a given project and location.
 *
 *  Method: networksecurity.projects.locations.addressGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Short name of the AddressGroup resource to be created. This value
 *  should be 1-63 characters long, containing only letters, numbers, hyphens,
 *  and underscores, and should not start with a number. E.g. "authz_policy".
 */
@property(nonatomic, copy, nullable) NSString *addressGroupId;

/**
 *  Required. The parent resource of the AddressGroup. Must be in the format
 *  `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new address group in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_AddressGroup to include in the
 *    query.
 *  @param parent Required. The parent resource of the AddressGroup. Must be in
 *    the format `projects/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single address group.
 *
 *  Method: networksecurity.projects.locations.addressGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to delete. Must be in the format
 *  `projects/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single address group.
 *
 *  @param name Required. A name of the AddressGroup to delete. Must be in the
 *    format `projects/ * /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single address group.
 *
 *  Method: networksecurity.projects.locations.addressGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to get. Must be in the format
 *  `projects/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_AddressGroup.
 *
 *  Gets details of a single address group.
 *
 *  @param name Required. A name of the AddressGroup to get. Must be in the
 *    format `projects/ * /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.addressGroups.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists address groups in a given project and location.
 *
 *  Method: networksecurity.projects.locations.addressGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsList : GTLRNetworkSecurityQuery

/** Maximum number of AddressGroups to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListAddressGroupsResponse` Indicates that
 *  this is a continuation of a prior `ListAddressGroups` call, and that the
 *  system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the AddressGroups should be
 *  listed, specified in the format `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. If true, allow partial responses for multi-regional Aggregated
 *  List requests.
 */
@property(nonatomic, assign) BOOL returnPartialSuccess;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListAddressGroupsResponse.
 *
 *  Lists address groups in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    AddressGroups should be listed, specified in the format `projects/ *
 *    /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists references of an address group.
 *
 *  Method: networksecurity.projects.locations.addressGroups.listReferences
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsListReferences : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to clone items to. Must be in the
 *  format `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  The maximum number of references to return. If unspecified, server will pick
 *  an appropriate default. Server may return fewer items than requested. A
 *  caller should only rely on response's next_page_token to determine if there
 *  are more AddressGroupUsers left to be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous List request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListAddressGroupReferencesResponse.
 *
 *  Lists references of an address group.
 *
 *  @param addressGroup Required. A name of the AddressGroup to clone items to.
 *    Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsListReferences
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAddressGroup:(NSString *)addressGroup;

@end

/**
 *  Updates the parameters of a single address group.
 *
 *  Method: networksecurity.projects.locations.addressGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the AddressGroup resource. It matches pattern `projects/ *
 *  /locations/{location}/addressGroups/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  AddressGroup resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single address group.
 *
 *  @param object The @c GTLRNetworkSecurity_AddressGroup to include in the
 *    query.
 *  @param name Required. Name of the AddressGroup resource. It matches pattern
 *    `projects/ * /locations/{location}/addressGroups/`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AddressGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Removes items from an address group.
 *
 *  Method: networksecurity.projects.locations.addressGroups.removeItems
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsRemoveItems : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AddressGroup to remove items from. Must be in the
 *  format `projects|organization/ * /locations/{location}/addressGroups/ *`.
 */
@property(nonatomic, copy, nullable) NSString *addressGroup;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Removes items from an address group.
 *
 *  @param object The @c GTLRNetworkSecurity_RemoveAddressGroupItemsRequest to
 *    include in the query.
 *  @param addressGroup Required. A name of the AddressGroup to remove items
 *    from. Must be in the format `projects|organization/ *
 *    /locations/{location}/addressGroups/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsRemoveItems
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_RemoveAddressGroupItemsRequest *)object
                   addressGroup:(NSString *)addressGroup;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.addressGroups.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.addressGroups.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAddressGroupsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new AuthorizationPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Short name of the AuthorizationPolicy resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "authz_policy".
 */
@property(nonatomic, copy, nullable) NSString *authorizationPolicyId;

/**
 *  Required. The parent resource of the AuthorizationPolicy. Must be in the
 *  format `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new AuthorizationPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_AuthorizationPolicy to include in
 *    the query.
 *  @param parent Required. The parent resource of the AuthorizationPolicy. Must
 *    be in the format `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single AuthorizationPolicy.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AuthorizationPolicy to delete. Must be in the format
 *  `projects/{project}/locations/{location}/authorizationPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single AuthorizationPolicy.
 *
 *  @param name Required. A name of the AuthorizationPolicy to delete. Must be
 *    in the format
 *    `projects/{project}/locations/{location}/authorizationPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single AuthorizationPolicy.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AuthorizationPolicy to get. Must be in the format
 *  `projects/{project}/locations/{location}/authorizationPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_AuthorizationPolicy.
 *
 *  Gets details of a single AuthorizationPolicy.
 *
 *  @param name Required. A name of the AuthorizationPolicy to get. Must be in
 *    the format `projects/{project}/locations/{location}/authorizationPolicies/
 *    *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists AuthorizationPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of AuthorizationPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListAuthorizationPoliciesResponse` Indicates
 *  that this is a continuation of a prior `ListAuthorizationPolicies` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the AuthorizationPolicies
 *  should be listed, specified in the format
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListAuthorizationPoliciesResponse.
 *
 *  Lists AuthorizationPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    AuthorizationPolicies should be listed, specified in the format
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single AuthorizationPolicy.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the AuthorizationPolicy resource. It matches pattern
 *  `projects/{project}/locations/{location}/authorizationPolicies/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  AuthorizationPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single AuthorizationPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_AuthorizationPolicy to include in
 *    the query.
 *  @param name Required. Name of the AuthorizationPolicy resource. It matches
 *    pattern `projects/{project}/locations/{location}/authorizationPolicies/`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new AuthzPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesCreate : GTLRNetworkSecurityQuery

/** Required. User-provided ID of the `AuthzPolicy` resource to be created. */
@property(nonatomic, copy, nullable) NSString *authzPolicyId;

/**
 *  Required. The parent resource of the `AuthzPolicy` resource. Must be in the
 *  format `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server can ignore the
 *  request if it has already been completed. The server guarantees that for at
 *  least 60 minutes since the first request. For example, consider a situation
 *  where you make an initial request and the request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, ignores the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new AuthzPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_AuthzPolicy to include in the
 *    query.
 *  @param parent Required. The parent resource of the `AuthzPolicy` resource.
 *    Must be in the format `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthzPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single AuthzPolicy.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. The name of the `AuthzPolicy` resource to delete. Must be in the
 *  format
 *  `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server can ignore the
 *  request if it has already been completed. The server guarantees that for at
 *  least 60 minutes after the first request. For example, consider a situation
 *  where you make an initial request and the request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, ignores the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single AuthzPolicy.
 *
 *  @param name Required. The name of the `AuthzPolicy` resource to delete. Must
 *    be in the format
 *    `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single AuthzPolicy.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the `AuthzPolicy` resource to get. Must be in the format
 *  `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_AuthzPolicy.
 *
 *  Gets details of a single AuthzPolicy.
 *
 *  @param name Required. A name of the `AuthzPolicy` resource to get. Must be
 *    in the format
 *    `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists AuthzPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesList : GTLRNetworkSecurityQuery

/** Optional. Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. The server might return fewer items than
 *  requested. If unspecified, the server picks an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results that the server returns.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the `AuthzPolicy` resources
 *  are listed, specified in the following format:
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListAuthzPoliciesResponse.
 *
 *  Lists AuthzPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    `AuthzPolicy` resources are listed, specified in the following format:
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single AuthzPolicy.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Identifier. Name of the `AuthzPolicy` resource in the following
 *  format:
 *  `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server can ignore the
 *  request if it has already been completed. The server guarantees that for at
 *  least 60 minutes since the first request. For example, consider a situation
 *  where you make an initial request and the request times out. If you make the
 *  request again with the same request ID, the server can check if original
 *  operation with the same request ID was received, and if so, ignores the
 *  second request. This prevents clients from accidentally creating duplicate
 *  commitments. The request ID must be a valid UUID with the exception that
 *  zero UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Used to specify the fields to be overwritten in the `AuthzPolicy`
 *  resource by the update. The fields specified in the `update_mask` are
 *  relative to the resource, not the full request. A field is overwritten if it
 *  is in the mask. If the user does not specify a mask, then all fields are
 *  overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single AuthzPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_AuthzPolicy to include in the
 *    query.
 *  @param name Required. Identifier. Name of the `AuthzPolicy` resource in the
 *    following format:
 *    `projects/{project}/locations/{location}/authzPolicies/{authz_policy}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthzPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.authzPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthzPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new ClientTlsPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Short name of the ClientTlsPolicy resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "client_mtls_policy".
 */
@property(nonatomic, copy, nullable) NSString *clientTlsPolicyId;

/**
 *  Required. The parent resource of the ClientTlsPolicy. Must be in the format
 *  `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new ClientTlsPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_ClientTlsPolicy to include in the
 *    query.
 *  @param parent Required. The parent resource of the ClientTlsPolicy. Must be
 *    in the format `projects/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ClientTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ClientTlsPolicy to delete. Must be in the format
 *  `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single ClientTlsPolicy.
 *
 *  @param name Required. A name of the ClientTlsPolicy to delete. Must be in
 *    the format `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ClientTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ClientTlsPolicy to get. Must be in the format
 *  `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_ClientTlsPolicy.
 *
 *  Gets details of a single ClientTlsPolicy.
 *
 *  @param name Required. A name of the ClientTlsPolicy to get. Must be in the
 *    format `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ClientTlsPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of ClientTlsPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListClientTlsPoliciesResponse` Indicates
 *  that this is a continuation of a prior `ListClientTlsPolicies` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the ClientTlsPolicies should
 *  be listed, specified in the format `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListClientTlsPoliciesResponse.
 *
 *  Lists ClientTlsPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    ClientTlsPolicies should be listed, specified in the format `projects/ *
 *    /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single ClientTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the ClientTlsPolicy resource. It matches the pattern
 *  `projects/ * /locations/{location}/clientTlsPolicies/{client_tls_policy}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ClientTlsPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single ClientTlsPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_ClientTlsPolicy to include in the
 *    query.
 *  @param name Required. Name of the ClientTlsPolicy resource. It matches the
 *    pattern `projects/ *
 *    /locations/{location}/clientTlsPolicies/{client_tls_policy}`
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new FirewallEndpointAssociation in a given project and location.
 *
 *  Method: networksecurity.projects.locations.firewallEndpointAssociations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsCreate : GTLRNetworkSecurityQuery

/**
 *  Optional. Id of the requesting object. If auto-generating Id server-side,
 *  remove this field and firewall_endpoint_association_id from the
 *  method_signature of Create RPC.
 */
@property(nonatomic, copy, nullable) NSString *firewallEndpointAssociationId;

/** Required. Value for parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new FirewallEndpointAssociation in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_FirewallEndpointAssociation to
 *    include in the query.
 *  @param parent Required. Value for parent.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpointAssociation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single FirewallEndpointAssociation.
 *
 *  Method: networksecurity.projects.locations.firewallEndpointAssociations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsDelete : GTLRNetworkSecurityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single FirewallEndpointAssociation.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single FirewallEndpointAssociation.
 *
 *  Method: networksecurity.projects.locations.firewallEndpointAssociations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsGet : GTLRNetworkSecurityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_FirewallEndpointAssociation.
 *
 *  Gets details of a single FirewallEndpointAssociation.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Associations in a given project and location.
 *
 *  Method: networksecurity.projects.locations.firewallEndpointAssociations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsList : GTLRNetworkSecurityQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListAssociationsRequest */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListFirewallEndpointAssociationsResponse.
 *
 *  Lists Associations in a given project and location.
 *
 *  @param parent Required. Parent value for ListAssociationsRequest
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single FirewallEndpointAssociation.
 *
 *  Method: networksecurity.projects.locations.firewallEndpointAssociations.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsPatch : GTLRNetworkSecurityQuery

/** Immutable. Identifier. name of resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Association resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Update a single FirewallEndpointAssociation.
 *
 *  @param object The @c GTLRNetworkSecurity_FirewallEndpointAssociation to
 *    include in the query.
 *  @param name Immutable. Identifier. name of resource
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsFirewallEndpointAssociationsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_FirewallEndpointAssociation *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new GatewaySecurityPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Short name of the GatewaySecurityPolicy resource to be created.
 *  This value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "gateway_security_policy1".
 */
@property(nonatomic, copy, nullable) NSString *gatewaySecurityPolicyId;

/**
 *  Required. The parent resource of the GatewaySecurityPolicy. Must be in the
 *  format `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new GatewaySecurityPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_GatewaySecurityPolicy to include in
 *    the query.
 *  @param parent Required. The parent resource of the GatewaySecurityPolicy.
 *    Must be in the format `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single GatewaySecurityPolicy.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the GatewaySecurityPolicy to delete. Must be in the
 *  format `projects/{project}/locations/{location}/gatewaySecurityPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single GatewaySecurityPolicy.
 *
 *  @param name Required. A name of the GatewaySecurityPolicy to delete. Must be
 *    in the format
 *    `projects/{project}/locations/{location}/gatewaySecurityPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single GatewaySecurityPolicy.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the GatewaySecurityPolicy to get. Must be in the format
 *  `projects/{project}/locations/{location}/gatewaySecurityPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_GatewaySecurityPolicy.
 *
 *  Gets details of a single GatewaySecurityPolicy.
 *
 *  @param name Required. A name of the GatewaySecurityPolicy to get. Must be in
 *    the format
 *    `projects/{project}/locations/{location}/gatewaySecurityPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists GatewaySecurityPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of GatewaySecurityPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last 'ListGatewaySecurityPoliciesResponse'
 *  Indicates that this is a continuation of a prior
 *  'ListGatewaySecurityPolicies' call, and that the system should return the
 *  next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the GatewaySecurityPolicies
 *  should be listed, specified in the format
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListGatewaySecurityPoliciesResponse.
 *
 *  Lists GatewaySecurityPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    GatewaySecurityPolicies should be listed, specified in the format
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single GatewaySecurityPolicy.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the resource. Name is of the form
 *  projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}
 *  gateway_security_policy should match the
 *  pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  GatewaySecurityPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single GatewaySecurityPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_GatewaySecurityPolicy to include in
 *    the query.
 *  @param name Required. Name of the resource. Name is of the form
 *    projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}
 *    gateway_security_policy should match the
 *    pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new GatewaySecurityPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.rules.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesCreate : GTLRNetworkSecurityQuery

/**
 *  The ID to use for the rule, which will become the final component of the
 *  rule's resource name. This value should be 4-63 characters, and valid
 *  characters are /a-z-/.
 */
@property(nonatomic, copy, nullable) NSString *gatewaySecurityPolicyRuleId;

/**
 *  Required. The parent where this rule will be created. Format :
 *  projects/{project}/location/{location}/gatewaySecurityPolicies/ *
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new GatewaySecurityPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_GatewaySecurityPolicyRule to
 *    include in the query.
 *  @param parent Required. The parent where this rule will be created. Format :
 *    projects/{project}/location/{location}/gatewaySecurityPolicies/ *
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicyRule *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single GatewaySecurityPolicyRule.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.rules.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the GatewaySecurityPolicyRule to delete. Must be in the
 *  format
 *  `projects/{project}/locations/{location}/gatewaySecurityPolicies/{gatewaySecurityPolicy}/rules/
 *  *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single GatewaySecurityPolicyRule.
 *
 *  @param name Required. A name of the GatewaySecurityPolicyRule to delete.
 *    Must be in the format
 *    `projects/{project}/locations/{location}/gatewaySecurityPolicies/{gatewaySecurityPolicy}/rules/
 *    *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single GatewaySecurityPolicyRule.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.rules.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesGet : GTLRNetworkSecurityQuery

/**
 *  Required. The name of the GatewaySecurityPolicyRule to retrieve. Format:
 *  projects/{project}/location/{location}/gatewaySecurityPolicies/ * /rules/ *
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_GatewaySecurityPolicyRule.
 *
 *  Gets details of a single GatewaySecurityPolicyRule.
 *
 *  @param name Required. The name of the GatewaySecurityPolicyRule to retrieve.
 *    Format: projects/{project}/location/{location}/gatewaySecurityPolicies/ *
 *    /rules/ *
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists GatewaySecurityPolicyRules in a given project and location.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.rules.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesList : GTLRNetworkSecurityQuery

/** Maximum number of GatewaySecurityPolicyRules to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last 'ListGatewaySecurityPolicyRulesResponse'
 *  Indicates that this is a continuation of a prior
 *  'ListGatewaySecurityPolicyRules' call, and that the system should return the
 *  next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project, location and GatewaySecurityPolicy from which the
 *  GatewaySecurityPolicyRules should be listed, specified in the format
 *  `projects/{project}/locations/{location}/gatewaySecurityPolicies/{gatewaySecurityPolicy}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListGatewaySecurityPolicyRulesResponse.
 *
 *  Lists GatewaySecurityPolicyRules in a given project and location.
 *
 *  @param parent Required. The project, location and GatewaySecurityPolicy from
 *    which the GatewaySecurityPolicyRules should be listed, specified in the
 *    format
 *    `projects/{project}/locations/{location}/gatewaySecurityPolicies/{gatewaySecurityPolicy}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single GatewaySecurityPolicyRule.
 *
 *  Method: networksecurity.projects.locations.gatewaySecurityPolicies.rules.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Immutable. Name of the resource. ame is the full resource name so
 *  projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
 *  rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  GatewaySecurityPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single GatewaySecurityPolicyRule.
 *
 *  @param object The @c GTLRNetworkSecurity_GatewaySecurityPolicyRule to
 *    include in the query.
 *  @param name Required. Immutable. Name of the resource. ame is the full
 *    resource name so
 *    projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
 *    rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGatewaySecurityPoliciesRulesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GatewaySecurityPolicyRule *)object
                           name:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: networksecurity.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGet : GTLRNetworkSecurityQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: networksecurity.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsList : GTLRNetworkSecurityQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a deployment group in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  Method: networksecurity.projects.locations.mirroringDeploymentGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The ID to use for the new deployment group, which will become the
 *  final component of the deployment group's resource name.
 */
@property(nonatomic, copy, nullable) NSString *mirroringDeploymentGroupId;

/**
 *  Required. The parent resource where this deployment group will be created.
 *  Format: projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a deployment group in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringDeploymentGroup to include
 *    in the query.
 *  @param parent Required. The parent resource where this deployment group will
 *    be created. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringDeploymentGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a deployment group. See https://google.aip.dev/135.
 *
 *  Method: networksecurity.projects.locations.mirroringDeploymentGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsDelete : GTLRNetworkSecurityQuery

/** Required. The deployment group to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a deployment group. See https://google.aip.dev/135.
 *
 *  @param name Required. The deployment group to delete.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a specific deployment group. See https://google.aip.dev/131.
 *
 *  Method: networksecurity.projects.locations.mirroringDeploymentGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsGet : GTLRNetworkSecurityQuery

/**
 *  Required. The name of the deployment group to retrieve. Format:
 *  projects/{project}/locations/{location}/mirroringDeploymentGroups/{mirroring_deployment_group}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_MirroringDeploymentGroup.
 *
 *  Gets a specific deployment group. See https://google.aip.dev/131.
 *
 *  @param name Required. The name of the deployment group to retrieve. Format:
 *    projects/{project}/locations/{location}/mirroringDeploymentGroups/{mirroring_deployment_group}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists deployment groups in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  Method: networksecurity.projects.locations.mirroringDeploymentGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsList : GTLRNetworkSecurityQuery

/**
 *  Optional. Filter expression. See https://google.aip.dev/160#filtering for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Sort expression. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous
 *  `ListMirroringDeploymentGroups` call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  `ListMirroringDeploymentGroups` must match the call that provided the page
 *  token. See https://google.aip.dev/158 for more details.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of deployment groups.
 *  Example: `projects/123456789/locations/global`. See
 *  https://google.aip.dev/132 for more details.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListMirroringDeploymentGroupsResponse.
 *
 *  Lists deployment groups in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  @param parent Required. The parent, which owns this collection of deployment
 *    groups. Example: `projects/123456789/locations/global`. See
 *    https://google.aip.dev/132 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a deployment group. See https://google.aip.dev/134.
 *
 *  Method: networksecurity.projects.locations.mirroringDeploymentGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsPatch : GTLRNetworkSecurityQuery

/**
 *  Immutable. Identifier. The resource name of this deployment group, for
 *  example:
 *  `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`. See
 *  https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. The list of fields to update. Fields are specified relative to the
 *  deployment group (e.g. `description`; *not*
 *  `mirroring_deployment_group.description`). See https://google.aip.dev/161
 *  for more details.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates a deployment group. See https://google.aip.dev/134.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringDeploymentGroup to include
 *    in the query.
 *  @param name Immutable. Identifier. The resource name of this deployment
 *    group, for example:
 *    `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`. See
 *    https://google.aip.dev/122 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringDeploymentGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a deployment in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  Method: networksecurity.projects.locations.mirroringDeployments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The ID to use for the new deployment, which will become the final
 *  component of the deployment's resource name.
 */
@property(nonatomic, copy, nullable) NSString *mirroringDeploymentId;

/**
 *  Required. The parent resource where this deployment will be created. Format:
 *  projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a deployment in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringDeployment to include in
 *    the query.
 *  @param parent Required. The parent resource where this deployment will be
 *    created. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringDeployment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a deployment. See https://google.aip.dev/135.
 *
 *  Method: networksecurity.projects.locations.mirroringDeployments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsDelete : GTLRNetworkSecurityQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a deployment. See https://google.aip.dev/135.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a specific deployment. See https://google.aip.dev/131.
 *
 *  Method: networksecurity.projects.locations.mirroringDeployments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsGet : GTLRNetworkSecurityQuery

/**
 *  Required. The name of the deployment to retrieve. Format:
 *  projects/{project}/locations/{location}/mirroringDeployments/{mirroring_deployment}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_MirroringDeployment.
 *
 *  Gets a specific deployment. See https://google.aip.dev/131.
 *
 *  @param name Required. The name of the deployment to retrieve. Format:
 *    projects/{project}/locations/{location}/mirroringDeployments/{mirroring_deployment}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists deployments in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  Method: networksecurity.projects.locations.mirroringDeployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsList : GTLRNetworkSecurityQuery

/**
 *  Optional. Filter expression. See https://google.aip.dev/160#filtering for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Sort expression. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListMirroringDeployments`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListMirroringDeployments` must match the call
 *  that provided the page token. See https://google.aip.dev/158 for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of deployments. Example:
 *  `projects/123456789/locations/us-central1-a`. See https://google.aip.dev/132
 *  for more details.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListMirroringDeploymentsResponse.
 *
 *  Lists deployments in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    deployments. Example: `projects/123456789/locations/us-central1-a`. See
 *    https://google.aip.dev/132 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a deployment. See https://google.aip.dev/134.
 *
 *  Method: networksecurity.projects.locations.mirroringDeployments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsPatch : GTLRNetworkSecurityQuery

/**
 *  Immutable. Identifier. The resource name of this deployment, for example:
 *  `projects/123456789/locations/us-central1-a/mirroringDeployments/my-dep`.
 *  See https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. The list of fields to update. Fields are specified relative to the
 *  deployment (e.g. `description`; *not* `mirroring_deployment.description`).
 *  See https://google.aip.dev/161 for more details.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates a deployment. See https://google.aip.dev/134.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringDeployment to include in
 *    the query.
 *  @param name Immutable. Identifier. The resource name of this deployment, for
 *    example:
 *    `projects/123456789/locations/us-central1-a/mirroringDeployments/my-dep`.
 *    See https://google.aip.dev/122 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringDeploymentsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringDeployment *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an association in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroupAssociations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsCreate : GTLRNetworkSecurityQuery

/**
 *  Optional. The ID to use for the new association, which will become the final
 *  component of the endpoint group's resource name. If not provided, the server
 *  will generate a unique ID.
 */
@property(nonatomic, copy, nullable) NSString *mirroringEndpointGroupAssociationId;

/**
 *  Required. The parent resource where this association will be created.
 *  Format: projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates an association in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringEndpointGroupAssociation
 *    to include in the query.
 *  @param parent Required. The parent resource where this association will be
 *    created. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringEndpointGroupAssociation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an association. See https://google.aip.dev/135.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroupAssociations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsDelete : GTLRNetworkSecurityQuery

/** Required. The association to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes an association. See https://google.aip.dev/135.
 *
 *  @param name Required. The association to delete.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a specific association. See https://google.aip.dev/131.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroupAssociations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsGet : GTLRNetworkSecurityQuery

/**
 *  Required. The name of the association to retrieve. Format:
 *  projects/{project}/locations/{location}/mirroringEndpointGroupAssociations/{mirroring_endpoint_group_association}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_MirroringEndpointGroupAssociation.
 *
 *  Gets a specific association. See https://google.aip.dev/131.
 *
 *  @param name Required. The name of the association to retrieve. Format:
 *    projects/{project}/locations/{location}/mirroringEndpointGroupAssociations/{mirroring_endpoint_group_association}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists associations in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroupAssociations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsList : GTLRNetworkSecurityQuery

/**
 *  Optional. Filter expression. See https://google.aip.dev/160#filtering for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Sort expression. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous
 *  `ListMirroringEndpointGroups` call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  `ListMirroringEndpointGroups` must match the call that provided the page
 *  token. See https://google.aip.dev/158 for more details.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of associations. Example:
 *  `projects/123456789/locations/global`. See https://google.aip.dev/132 for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRNetworkSecurity_ListMirroringEndpointGroupAssociationsResponse.
 *
 *  Lists associations in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    associations. Example: `projects/123456789/locations/global`. See
 *    https://google.aip.dev/132 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an association. See https://google.aip.dev/134.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroupAssociations.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsPatch : GTLRNetworkSecurityQuery

/**
 *  Immutable. Identifier. The resource name of this endpoint group association,
 *  for example:
 *  `projects/123456789/locations/global/mirroringEndpointGroupAssociations/my-eg-association`.
 *  See https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. The list of fields to update. Fields are specified relative to the
 *  association (e.g. `description`; *not*
 *  `mirroring_endpoint_group_association.description`). See
 *  https://google.aip.dev/161 for more details.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates an association. See https://google.aip.dev/134.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringEndpointGroupAssociation
 *    to include in the query.
 *  @param name Immutable. Identifier. The resource name of this endpoint group
 *    association, for example:
 *    `projects/123456789/locations/global/mirroringEndpointGroupAssociations/my-eg-association`.
 *    See https://google.aip.dev/122 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupAssociationsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringEndpointGroupAssociation *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an endpoint group in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The ID to use for the endpoint group, which will become the final
 *  component of the endpoint group's resource name.
 */
@property(nonatomic, copy, nullable) NSString *mirroringEndpointGroupId;

/**
 *  Required. The parent resource where this endpoint group will be created.
 *  Format: projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates an endpoint group in a given project and location. See
 *  https://google.aip.dev/133.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringEndpointGroup to include
 *    in the query.
 *  @param parent Required. The parent resource where this endpoint group will
 *    be created. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringEndpointGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an endpoint group. See https://google.aip.dev/135.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsDelete : GTLRNetworkSecurityQuery

/** Required. The endpoint group to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes an endpoint group. See https://google.aip.dev/135.
 *
 *  @param name Required. The endpoint group to delete.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a specific endpoint group. See https://google.aip.dev/131.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsGet : GTLRNetworkSecurityQuery

/**
 *  Required. The name of the endpoint group to retrieve. Format:
 *  projects/{project}/locations/{location}/mirroringEndpointGroups/{mirroring_endpoint_group}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_MirroringEndpointGroup.
 *
 *  Gets a specific endpoint group. See https://google.aip.dev/131.
 *
 *  @param name Required. The name of the endpoint group to retrieve. Format:
 *    projects/{project}/locations/{location}/mirroringEndpointGroups/{mirroring_endpoint_group}
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists endpoint groups in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsList : GTLRNetworkSecurityQuery

/**
 *  Optional. Filter expression. See https://google.aip.dev/160#filtering for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Sort expression. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default. See
 *  https://google.aip.dev/158 for more details.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous
 *  `ListMirroringEndpointGroups` call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  `ListMirroringEndpointGroups` must match the call that provided the page
 *  token. See https://google.aip.dev/158 for more details.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of endpoint groups.
 *  Example: `projects/123456789/locations/global`. See
 *  https://google.aip.dev/132 for more details.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListMirroringEndpointGroupsResponse.
 *
 *  Lists endpoint groups in a given project and location. See
 *  https://google.aip.dev/132.
 *
 *  @param parent Required. The parent, which owns this collection of endpoint
 *    groups. Example: `projects/123456789/locations/global`. See
 *    https://google.aip.dev/132 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an endpoint group. See https://google.aip.dev/134.
 *
 *  Method: networksecurity.projects.locations.mirroringEndpointGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsPatch : GTLRNetworkSecurityQuery

/**
 *  Immutable. Identifier. The resource name of this endpoint group, for
 *  example:
 *  `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`. See
 *  https://google.aip.dev/122 for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A unique identifier for this request. Must be a UUID4. This
 *  request is only idempotent if a `request_id` is provided. See
 *  https://google.aip.dev/155 for more details.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. The list of fields to update. Fields are specified relative to the
 *  endpoint group (e.g. `description`; *not*
 *  `mirroring_endpoint_group.description`). See https://google.aip.dev/161 for
 *  more details.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates an endpoint group. See https://google.aip.dev/134.
 *
 *  @param object The @c GTLRNetworkSecurity_MirroringEndpointGroup to include
 *    in the query.
 *  @param name Immutable. Identifier. The resource name of this endpoint group,
 *    for example:
 *    `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`. See
 *    https://google.aip.dev/122 for more details.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsMirroringEndpointGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_MirroringEndpointGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: networksecurity.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel : GTLRNetworkSecurityQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of `1`, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRNetworkSecurity_CancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: networksecurity.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete : GTLRNetworkSecurityQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: networksecurity.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet : GTLRNetworkSecurityQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: networksecurity.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList : GTLRNetworkSecurityQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new ServerTlsPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The parent resource of the ServerTlsPolicy. Must be in the format
 *  `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Short name of the ServerTlsPolicy resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "server_mtls_policy".
 */
@property(nonatomic, copy, nullable) NSString *serverTlsPolicyId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new ServerTlsPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_ServerTlsPolicy to include in the
 *    query.
 *  @param parent Required. The parent resource of the ServerTlsPolicy. Must be
 *    in the format `projects/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ServerTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ServerTlsPolicy to delete. Must be in the format
 *  `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single ServerTlsPolicy.
 *
 *  @param name Required. A name of the ServerTlsPolicy to delete. Must be in
 *    the format `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ServerTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ServerTlsPolicy to get. Must be in the format
 *  `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_ServerTlsPolicy.
 *
 *  Gets details of a single ServerTlsPolicy.
 *
 *  @param name Required. A name of the ServerTlsPolicy to get. Must be in the
 *    format `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ServerTlsPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of ServerTlsPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListServerTlsPoliciesResponse` Indicates
 *  that this is a continuation of a prior `ListServerTlsPolicies` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the ServerTlsPolicies should
 *  be listed, specified in the format `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Setting this field to `true` will opt the request into returning
 *  the resources that are reachable, and into including the names of those that
 *  were unreachable in the [ListServerTlsPoliciesResponse.unreachable] field.
 *  This can only be `true` when reading across collections e.g. when `parent`
 *  is set to `"projects/example/locations/-"`.
 */
@property(nonatomic, assign) BOOL returnPartialSuccess;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListServerTlsPoliciesResponse.
 *
 *  Lists ServerTlsPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    ServerTlsPolicies should be listed, specified in the format `projects/ *
 *    /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single ServerTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the ServerTlsPolicy resource. It matches the pattern
 *  `projects/ * /locations/{location}/serverTlsPolicies/{server_tls_policy}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ServerTlsPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single ServerTlsPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_ServerTlsPolicy to include in the
 *    query.
 *  @param name Required. Name of the ServerTlsPolicy resource. It matches the
 *    pattern `projects/ *
 *    /locations/{location}/serverTlsPolicies/{server_tls_policy}`
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new TlsInspectionPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.tlsInspectionPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The parent resource of the TlsInspectionPolicy. Must be in the
 *  format `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Short name of the TlsInspectionPolicy resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "tls_inspection_policy1".
 */
@property(nonatomic, copy, nullable) NSString *tlsInspectionPolicyId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new TlsInspectionPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_TlsInspectionPolicy to include in
 *    the query.
 *  @param parent Required. The parent resource of the TlsInspectionPolicy. Must
 *    be in the format `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_TlsInspectionPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single TlsInspectionPolicy.
 *
 *  Method: networksecurity.projects.locations.tlsInspectionPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  If set to true, any rules for this TlsInspectionPolicy will also be deleted.
 *  (Otherwise, the request will only work if the TlsInspectionPolicy has no
 *  rules.)
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. A name of the TlsInspectionPolicy to delete. Must be in the format
 *  `projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single TlsInspectionPolicy.
 *
 *  @param name Required. A name of the TlsInspectionPolicy to delete. Must be
 *    in the format
 *    `projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single TlsInspectionPolicy.
 *
 *  Method: networksecurity.projects.locations.tlsInspectionPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the TlsInspectionPolicy to get. Must be in the format
 *  `projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_TlsInspectionPolicy.
 *
 *  Gets details of a single TlsInspectionPolicy.
 *
 *  @param name Required. A name of the TlsInspectionPolicy to get. Must be in
 *    the format
 *    `projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists TlsInspectionPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.tlsInspectionPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of TlsInspectionPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last 'ListTlsInspectionPoliciesResponse' Indicates
 *  that this is a continuation of a prior 'ListTlsInspectionPolicies' call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the TlsInspectionPolicies
 *  should be listed, specified in the format
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListTlsInspectionPoliciesResponse.
 *
 *  Lists TlsInspectionPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    TlsInspectionPolicies should be listed, specified in the format
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single TlsInspectionPolicy.
 *
 *  Method: networksecurity.projects.locations.tlsInspectionPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the resource. Name is of the form
 *  projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy}
 *  tls_inspection_policy should match the
 *  pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  TlsInspectionPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single TlsInspectionPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_TlsInspectionPolicy to include in
 *    the query.
 *  @param name Required. Name of the resource. Name is of the form
 *    projects/{project}/locations/{location}/tlsInspectionPolicies/{tls_inspection_policy}
 *    tls_inspection_policy should match the
 *    pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsTlsInspectionPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_TlsInspectionPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new UrlList in a given project and location.
 *
 *  Method: networksecurity.projects.locations.urlLists.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The parent resource of the UrlList. Must be in the format
 *  `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Short name of the UrlList resource to be created. This value
 *  should be 1-63 characters long, containing only letters, numbers, hyphens,
 *  and underscores, and should not start with a number. E.g. "url_list".
 */
@property(nonatomic, copy, nullable) NSString *urlListId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new UrlList in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_UrlList to include in the query.
 *  @param parent Required. The parent resource of the UrlList. Must be in the
 *    format `projects/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_UrlList *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single UrlList.
 *
 *  Method: networksecurity.projects.locations.urlLists.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the UrlList to delete. Must be in the format `projects/
 *  * /locations/{location}/urlLists/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single UrlList.
 *
 *  @param name Required. A name of the UrlList to delete. Must be in the format
 *    `projects/ * /locations/{location}/urlLists/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single UrlList.
 *
 *  Method: networksecurity.projects.locations.urlLists.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the UrlList to get. Must be in the format `projects/ *
 *  /locations/{location}/urlLists/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_UrlList.
 *
 *  Gets details of a single UrlList.
 *
 *  @param name Required. A name of the UrlList to get. Must be in the format
 *    `projects/ * /locations/{location}/urlLists/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists UrlLists in a given project and location.
 *
 *  Method: networksecurity.projects.locations.urlLists.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsList : GTLRNetworkSecurityQuery

/** Maximum number of UrlLists to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListUrlListsResponse` Indicates that this is
 *  a continuation of a prior `ListUrlLists` call, and that the system should
 *  return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the UrlLists should be listed,
 *  specified in the format `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListUrlListsResponse.
 *
 *  Lists UrlLists in a given project and location.
 *
 *  @param parent Required. The project and location from which the UrlLists
 *    should be listed, specified in the format
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single UrlList.
 *
 *  Method: networksecurity.projects.locations.urlLists.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the resource provided by the user. Name is of the form
 *  projects/{project}/locations/{location}/urlLists/{url_list} url_list should
 *  match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  UrlList resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single UrlList.
 *
 *  @param object The @c GTLRNetworkSecurity_UrlList to include in the query.
 *  @param name Required. Name of the resource provided by the user. Name is of
 *    the form projects/{project}/locations/{location}/urlLists/{url_list}
 *    url_list should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsUrlListsPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_UrlList *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
