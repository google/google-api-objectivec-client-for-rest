// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Network Security API (networksecurity/v1)
// Documentation:
//   https://cloud.google.com/networking

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRNetworkSecurityObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other NetworkSecurity query classes.
 */
@interface GTLRNetworkSecurityQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new AuthorizationPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Short name of the AuthorizationPolicy resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "authz_policy".
 */
@property(nonatomic, copy, nullable) NSString *authorizationPolicyId;

/**
 *  Required. The parent resource of the AuthorizationPolicy. Must be in the
 *  format `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new AuthorizationPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_AuthorizationPolicy to include in
 *    the query.
 *  @param parent Required. The parent resource of the AuthorizationPolicy. Must
 *    be in the format `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single AuthorizationPolicy.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AuthorizationPolicy to delete. Must be in the format
 *  `projects/{project}/locations/{location}/authorizationPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single AuthorizationPolicy.
 *
 *  @param name Required. A name of the AuthorizationPolicy to delete. Must be
 *    in the format
 *    `projects/{project}/locations/{location}/authorizationPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single AuthorizationPolicy.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the AuthorizationPolicy to get. Must be in the format
 *  `projects/{project}/locations/{location}/authorizationPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_AuthorizationPolicy.
 *
 *  Gets details of a single AuthorizationPolicy.
 *
 *  @param name Required. A name of the AuthorizationPolicy to get. Must be in
 *    the format `projects/{project}/locations/{location}/authorizationPolicies/
 *    *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists AuthorizationPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of AuthorizationPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListAuthorizationPoliciesResponse` Indicates
 *  that this is a continuation of a prior `ListAuthorizationPolicies` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the AuthorizationPolicies
 *  should be listed, specified in the format
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListAuthorizationPoliciesResponse.
 *
 *  Lists AuthorizationPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    AuthorizationPolicies should be listed, specified in the format
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single AuthorizationPolicy.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the AuthorizationPolicy resource. It matches pattern
 *  `projects/{project}/locations/{location}/authorizationPolicies/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  AuthorizationPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single AuthorizationPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_AuthorizationPolicy to include in
 *    the query.
 *  @param name Required. Name of the AuthorizationPolicy resource. It matches
 *    pattern `projects/{project}/locations/{location}/authorizationPolicies/`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_AuthorizationPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.authorizationPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsAuthorizationPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new ClientTlsPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. Short name of the ClientTlsPolicy resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "client_mtls_policy".
 */
@property(nonatomic, copy, nullable) NSString *clientTlsPolicyId;

/**
 *  Required. The parent resource of the ClientTlsPolicy. Must be in the format
 *  `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new ClientTlsPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_ClientTlsPolicy to include in the
 *    query.
 *  @param parent Required. The parent resource of the ClientTlsPolicy. Must be
 *    in the format `projects/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ClientTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ClientTlsPolicy to delete. Must be in the format
 *  `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single ClientTlsPolicy.
 *
 *  @param name Required. A name of the ClientTlsPolicy to delete. Must be in
 *    the format `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ClientTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ClientTlsPolicy to get. Must be in the format
 *  `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_ClientTlsPolicy.
 *
 *  Gets details of a single ClientTlsPolicy.
 *
 *  @param name Required. A name of the ClientTlsPolicy to get. Must be in the
 *    format `projects/ * /locations/{location}/clientTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ClientTlsPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of ClientTlsPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListClientTlsPoliciesResponse` Indicates
 *  that this is a continuation of a prior `ListClientTlsPolicies` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the ClientTlsPolicies should
 *  be listed, specified in the format `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListClientTlsPoliciesResponse.
 *
 *  Lists ClientTlsPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    ClientTlsPolicies should be listed, specified in the format `projects/ *
 *    /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single ClientTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the ClientTlsPolicy resource. It matches the pattern
 *  `projects/ * /locations/{location}/clientTlsPolicies/{client_tls_policy}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ClientTlsPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single ClientTlsPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_ClientTlsPolicy to include in the
 *    query.
 *  @param name Required. Name of the ClientTlsPolicy resource. It matches the
 *    pattern `projects/ *
 *    /locations/{location}/clientTlsPolicies/{client_tls_policy}`
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ClientTlsPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.clientTlsPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsClientTlsPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: networksecurity.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsGet : GTLRNetworkSecurityQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: networksecurity.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsList : GTLRNetworkSecurityQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: networksecurity.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel : GTLRNetworkSecurityQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRNetworkSecurity_CancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: networksecurity.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete : GTLRNetworkSecurityQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: networksecurity.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet : GTLRNetworkSecurityQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: networksecurity.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList : GTLRNetworkSecurityQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new ServerTlsPolicy in a given project and location.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate : GTLRNetworkSecurityQuery

/**
 *  Required. The parent resource of the ServerTlsPolicy. Must be in the format
 *  `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Short name of the ServerTlsPolicy resource to be created. This
 *  value should be 1-63 characters long, containing only letters, numbers,
 *  hyphens, and underscores, and should not start with a number. E.g.
 *  "server_mtls_policy".
 */
@property(nonatomic, copy, nullable) NSString *serverTlsPolicyId;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Creates a new ServerTlsPolicy in a given project and location.
 *
 *  @param object The @c GTLRNetworkSecurity_ServerTlsPolicy to include in the
 *    query.
 *  @param parent Required. The parent resource of the ServerTlsPolicy. Must be
 *    in the format `projects/ * /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ServerTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ServerTlsPolicy to delete. Must be in the format
 *  `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Deletes a single ServerTlsPolicy.
 *
 *  @param name Required. A name of the ServerTlsPolicy to delete. Must be in
 *    the format `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ServerTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet : GTLRNetworkSecurityQuery

/**
 *  Required. A name of the ServerTlsPolicy to get. Must be in the format
 *  `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRNetworkSecurity_ServerTlsPolicy.
 *
 *  Gets details of a single ServerTlsPolicy.
 *
 *  @param name Required. A name of the ServerTlsPolicy to get. Must be in the
 *    format `projects/ * /locations/{location}/serverTlsPolicies/ *`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ServerTlsPolicies in a given project and location.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList : GTLRNetworkSecurityQuery

/** Maximum number of ServerTlsPolicies to return per call. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListServerTlsPoliciesResponse` Indicates
 *  that this is a continuation of a prior `ListServerTlsPolicies` call, and
 *  that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location from which the ServerTlsPolicies should
 *  be listed, specified in the format `projects/ * /locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRNetworkSecurity_ListServerTlsPoliciesResponse.
 *
 *  Lists ServerTlsPolicies in a given project and location.
 *
 *  @param parent Required. The project and location from which the
 *    ServerTlsPolicies should be listed, specified in the format `projects/ *
 *    /locations/{location}`.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single ServerTlsPolicy.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch : GTLRNetworkSecurityQuery

/**
 *  Required. Name of the ServerTlsPolicy resource. It matches the pattern
 *  `projects/ * /locations/{location}/serverTlsPolicies/{server_tls_policy}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ServerTlsPolicy resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRNetworkSecurity_Operation.
 *
 *  Updates the parameters of a single ServerTlsPolicy.
 *
 *  @param object The @c GTLRNetworkSecurity_ServerTlsPolicy to include in the
 *    query.
 *  @param name Required. Name of the ServerTlsPolicy resource. It matches the
 *    pattern `projects/ *
 *    /locations/{location}/serverTlsPolicies/{server_tls_policy}`
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_ServerTlsPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: networksecurity.projects.locations.serverTlsPolicies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeNetworkSecurityCloudPlatform
 */
@interface GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions : GTLRNetworkSecurityQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c
 *    GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRNetworkSecurityQuery_ProjectsLocationsServerTlsPoliciesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRNetworkSecurity_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
