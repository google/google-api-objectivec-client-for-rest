// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Chat API (chat/v1)
// Description:
//   Enables apps to fetch information and perform actions in Google Chat.
//   Authentication is a prerequisite for using the Google Chat REST API.
// Documentation:
//   https://developers.google.com/hangouts/chat

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRHangoutsChatObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// messageReplyOption

/**
 *  Default. Starts a thread.
 *
 *  Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified;
/**
 *  Creates the message as a reply to the thread specified by thread ID or
 *  thread_key. If it fails, the message starts a new thread instead.
 *
 *  Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread;
/**
 *  Creates the message as a reply to the thread specified by thread ID or
 *  thread_key. If it fails, a NOT_FOUND error is returned instead.
 *
 *  Value: "REPLY_MESSAGE_OR_FAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Hangouts Chat query classes.
 */
@interface GTLRHangoutsChatQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  Method: chat.dms.conversations.messages
 */
@interface GTLRHangoutsChatQuery_DmsConversationsMessages : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_DmsConversationsMessages
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

/**
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  Method: chat.dms.messages
 */
@interface GTLRHangoutsChatQuery_DmsMessages : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_DmsMessages
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

/**
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  Method: chat.dms.webhooks
 */
@interface GTLRHangoutsChatQuery_DmsWebhooks : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_DmsWebhooks
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

/**
 *  Downloads media. Download is supported on the URI
 *  `/v1/media/{+name}?alt=media`.
 *
 *  Method: chat.media.download
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeHangoutsChatMessages
 *    @c kGTLRAuthScopeHangoutsChatMessagesReadonly
 */
@interface GTLRHangoutsChatQuery_MediaDownload : GTLRHangoutsChatQuery

/**
 *  Name of the media that is being downloaded. See ReadRequest.resource_name.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Fetches a @c GTLRHangoutsChat_Media.
 *
 *  Downloads media. Download is supported on the URI
 *  `/v1/media/{+name}?alt=media`.
 *
 *  @param resourceName Name of the media that is being downloaded. See
 *    ReadRequest.resource_name.
 *
 *  @return GTLRHangoutsChatQuery_MediaDownload
 */
+ (instancetype)queryWithResourceName:(NSString *)resourceName;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Downloads media. Download is supported on the URI
 *  `/v1/media/{+name}?alt=media`.
 *
 *  @param resourceName Name of the media that is being downloaded. See
 *    ReadRequest.resource_name.
 *
 *  @return GTLRHangoutsChatQuery_MediaDownload
 */
+ (instancetype)queryForMediaWithResourceName:(NSString *)resourceName;

@end

/**
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  Method: chat.rooms.conversations.messages
 */
@interface GTLRHangoutsChatQuery_RoomsConversationsMessages : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_RoomsConversationsMessages
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

/**
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  Method: chat.rooms.messages
 */
@interface GTLRHangoutsChatQuery_RoomsMessages : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_RoomsMessages
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

/**
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  Method: chat.rooms.webhooks
 */
@interface GTLRHangoutsChatQuery_RoomsWebhooks : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_RoomsWebhooks
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

/**
 *  Returns a space. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  Method: chat.spaces.get
 */
@interface GTLRHangoutsChatQuery_SpacesGet : GTLRHangoutsChatQuery

/**
 *  Required. Resource name of the space, in the form "spaces/ *". Format:
 *  spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRHangoutsChat_Space.
 *
 *  Returns a space. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  @param name Required. Resource name of the space, in the form "spaces/ *".
 *    Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_SpacesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists spaces the caller is a member of. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  Method: chat.spaces.list
 */
@interface GTLRHangoutsChatQuery_SpacesList : GTLRHangoutsChatQuery

/**
 *  Optional. The maximum number of spaces to return. The service may return
 *  fewer than this value. If unspecified, at most 100 spaces are returned. The
 *  maximum value is 1000; values above 1000 are coerced to 1000. Negative
 *  values return an INVALID_ARGUMENT error.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous list spaces call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRHangoutsChat_ListSpacesResponse.
 *
 *  Lists spaces the caller is a member of. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  @return GTLRHangoutsChatQuery_SpacesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Returns a membership. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  Method: chat.spaces.members.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeHangoutsChatMemberships
 */
@interface GTLRHangoutsChatQuery_SpacesMembersGet : GTLRHangoutsChatQuery

/**
 *  Required. Resource name of the membership to retrieve. Format:
 *  spaces/{space}/members/{member}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRHangoutsChat_Membership.
 *
 *  Returns a membership. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  @param name Required. Resource name of the membership to retrieve. Format:
 *    spaces/{space}/members/{member}
 *
 *  @return GTLRHangoutsChatQuery_SpacesMembersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists memberships in a space. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  Method: chat.spaces.members.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeHangoutsChatMemberships
 */
@interface GTLRHangoutsChatQuery_SpacesMembersList : GTLRHangoutsChatQuery

/**
 *  The maximum number of memberships to return. The service may return fewer
 *  than this value. If unspecified, at most 100 memberships are returned. The
 *  maximum value is 1000; values above 1000 are coerced to 1000. Negative
 *  values return an INVALID_ARGUMENT error.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous list memberships call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the space for which to fetch a membership
 *  list. Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRHangoutsChat_ListMembershipsResponse.
 *
 *  Lists memberships in a space. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  @param parent Required. The resource name of the space for which to fetch a
 *    membership list. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_SpacesMembersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the metadata of a message attachment. The attachment data is fetched
 *  using the media API. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  Method: chat.spaces.messages.attachments.get
 */
@interface GTLRHangoutsChatQuery_SpacesMessagesAttachmentsGet : GTLRHangoutsChatQuery

/**
 *  Required. Resource name of the attachment, in the form "spaces/ * /messages/
 *  * /attachments/ *".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRHangoutsChat_Attachment.
 *
 *  Gets the metadata of a message attachment. The attachment data is fetched
 *  using the media API. Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  @param name Required. Resource name of the attachment, in the form "spaces/
 *    * /messages/ * /attachments/ *".
 *
 *  @return GTLRHangoutsChatQuery_SpacesMessagesAttachmentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a message. For example usage, see [Create a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#create_a_message).
 *  Requires
 *  [authentication](https://developers.google.com/chat/api/guides/auth). Fully
 *  supports [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *  Supports [user
 *  authentication](https://developers.google.com/chat/api/guides/auth/users) as
 *  part of the [Google Workspace Developer Preview
 *  Program](https://developers.google.com/workspace/preview), which grants
 *  early access to certain features. [User
 *  authentication](https://developers.google.com/chat/api/guides/auth/users)
 *  requires the `chat.messages` or `chat.messages.create` authorization scope.
 *
 *  Method: chat.spaces.messages.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeHangoutsChatMessages
 *    @c kGTLRAuthScopeHangoutsChatMessagesCreate
 */
@interface GTLRHangoutsChatQuery_SpacesMessagesCreate : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Creates a message. For example usage, see [Create a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#create_a_message).
 *  Requires
 *  [authentication](https://developers.google.com/chat/api/guides/auth). Fully
 *  supports [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *  Supports [user
 *  authentication](https://developers.google.com/chat/api/guides/auth/users) as
 *  part of the [Google Workspace Developer Preview
 *  Program](https://developers.google.com/workspace/preview), which grants
 *  early access to certain features. [User
 *  authentication](https://developers.google.com/chat/api/guides/auth/users)
 *  requires the `chat.messages` or `chat.messages.create` authorization scope.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_SpacesMessagesCreate
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a message. For example usage, see [Delete a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#delete_a_message).
 *  Requires
 *  [authentication](https://developers.google.com/chat/api/guides/auth). Fully
 *  supports [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *  Supports [user
 *  authentication](https://developers.google.com/chat/api/guides/auth/users) as
 *  part of the [Google Workspace Developer Preview
 *  Program](https://developers.google.com/workspace/preview), which grants
 *  early access to certain features. [User
 *  authentication](https://developers.google.com/chat/api/guides/auth/users)
 *  requires the `chat.messages` authorization scope.
 *
 *  Method: chat.spaces.messages.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeHangoutsChatMessages
 */
@interface GTLRHangoutsChatQuery_SpacesMessagesDelete : GTLRHangoutsChatQuery

/**
 *  Required. Resource name of the message to be deleted, in the form "spaces/ *
 *  /messages/ *" Example: spaces/AAAAAAAAAAA/messages/BBBBBBBBBBB.BBBBBBBBBBB
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRHangoutsChat_Empty.
 *
 *  Deletes a message. For example usage, see [Delete a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#delete_a_message).
 *  Requires
 *  [authentication](https://developers.google.com/chat/api/guides/auth). Fully
 *  supports [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *  Supports [user
 *  authentication](https://developers.google.com/chat/api/guides/auth/users) as
 *  part of the [Google Workspace Developer Preview
 *  Program](https://developers.google.com/workspace/preview), which grants
 *  early access to certain features. [User
 *  authentication](https://developers.google.com/chat/api/guides/auth/users)
 *  requires the `chat.messages` authorization scope.
 *
 *  @param name Required. Resource name of the message to be deleted, in the
 *    form "spaces/ * /messages/ *" Example:
 *    spaces/AAAAAAAAAAA/messages/BBBBBBBBBBB.BBBBBBBBBBB
 *
 *  @return GTLRHangoutsChatQuery_SpacesMessagesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a message. For example usage, see [Read a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#read_a_message).
 *  Requires
 *  [authentication](https://developers.google.com/chat/api/guides/auth). Fully
 *  supports [Service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *  Supports [user
 *  authentication](https://developers.google.com/chat/api/guides/auth/users) as
 *  part of the [Google Workspace Developer Preview
 *  Program](https://developers.google.com/workspace/preview), which grants
 *  early access to certain features. [User
 *  authentication](https://developers.google.com/chat/api/guides/auth/users)
 *  requires the `chat.messages` or `chat.messages.readonly` authorization
 *  scope. Note: Might return a message from a blocked member or space.
 *
 *  Method: chat.spaces.messages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeHangoutsChatMessages
 *    @c kGTLRAuthScopeHangoutsChatMessagesReadonly
 */
@interface GTLRHangoutsChatQuery_SpacesMessagesGet : GTLRHangoutsChatQuery

/**
 *  Required. Resource name of the message to retrieve. Format:
 *  spaces/{space}/messages/{message} If the message begins with `client-`, then
 *  it has a custom name assigned by a Chat app that created it with the Chat
 *  REST API. That Chat app (but not others) can pass the custom name to get,
 *  update, or delete the message. To learn more, see [create and name a
 *  message]
 *  (https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Returns a message. For example usage, see [Read a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#read_a_message).
 *  Requires
 *  [authentication](https://developers.google.com/chat/api/guides/auth). Fully
 *  supports [Service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *  Supports [user
 *  authentication](https://developers.google.com/chat/api/guides/auth/users) as
 *  part of the [Google Workspace Developer Preview
 *  Program](https://developers.google.com/workspace/preview), which grants
 *  early access to certain features. [User
 *  authentication](https://developers.google.com/chat/api/guides/auth/users)
 *  requires the `chat.messages` or `chat.messages.readonly` authorization
 *  scope. Note: Might return a message from a blocked member or space.
 *
 *  @param name Required. Resource name of the message to retrieve. Format:
 *    spaces/{space}/messages/{message} If the message begins with `client-`,
 *    then it has a custom name assigned by a Chat app that created it with the
 *    Chat REST API. That Chat app (but not others) can pass the custom name to
 *    get, update, or delete the message. To learn more, see [create and name a
 *    message]
 *    (https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 *
 *  @return GTLRHangoutsChatQuery_SpacesMessagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a message. For example usage, see [Update a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#update_a_message).
 *  Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  Method: chat.spaces.messages.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeHangoutsChatMessages
 */
@interface GTLRHangoutsChatQuery_SpacesMessagesUpdate : GTLRHangoutsChatQuery

/**
 *  Optional. If `true` and the message is not found, a new message is created
 *  and `updateMask` is ignored. The specified message ID must be
 *  [client-assigned](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message)
 *  or the request fails.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Resource name in the form `spaces/ * /messages/ *`. Example:
 *  `spaces/AAAAAAAAAAA/messages/BBBBBBBBBBB.BBBBBBBBBBB`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The field paths to update. Separate multiple values with commas.
 *  Currently supported field paths: - text - cards (Requires [service account
 *  authentication](/chat/api/guides/auth/service-accounts).) - cards_v2
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Updates a message. For example usage, see [Update a
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#update_a_message).
 *  Requires [service account
 *  authentication](https://developers.google.com/chat/api/guides/auth/service-accounts).
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param name Resource name in the form `spaces/ * /messages/ *`. Example:
 *    `spaces/AAAAAAAAAAA/messages/BBBBBBBBBBB.BBBBBBBBBBB`
 *
 *  @return GTLRHangoutsChatQuery_SpacesMessagesUpdate
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                           name:(NSString *)name;

@end

/**
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  Method: chat.spaces.webhooks
 */
@interface GTLRHangoutsChatQuery_SpacesWebhooks : GTLRHangoutsChatQuery

/**
 *  Optional. A custom name for a Chat message assigned at creation. Must start
 *  with `client-` and contain only lowercase letters, numbers, and hyphens up
 *  to 63 characters in length. Specify this field to get, update, or delete the
 *  message with the specified value. For example usage, see [Name a created
 *  message](https://developers.google.com/chat/api/guides/crudl/messages#name_a_created_message).
 */
@property(nonatomic, copy, nullable) NSString *messageId;

/**
 *  Optional. Specifies whether a message starts a thread or replies to one.
 *  Only supported in named spaces.
 *
 *  Likely values:
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionMessageReplyOptionUnspecified
 *        Default. Starts a thread. (Value: "MESSAGE_REPLY_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageFallbackToNewThread
 *        Creates the message as a reply to the thread specified by thread ID or
 *        thread_key. If it fails, the message starts a new thread instead.
 *        (Value: "REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD")
 *    @arg @c kGTLRHangoutsChatMessageReplyOptionReplyMessageOrFail Creates the
 *        message as a reply to the thread specified by thread ID or thread_key.
 *        If it fails, a NOT_FOUND error is returned instead. (Value:
 *        "REPLY_MESSAGE_OR_FAIL")
 */
@property(nonatomic, copy, nullable) NSString *messageReplyOption;

/**
 *  Required. The resource name of the space in which to create a message.
 *  Format: spaces/{space}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for this message. Specifying an existing
 *  request ID returns the message created with that ID instead of creating a
 *  new message.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Deprecated: Use thread.thread_key instead. Opaque thread
 *  identifier. To start or add to a thread, create a message and specify a
 *  `threadKey` or the thread.name. For example usage, see [Start or reply to a
 *  message
 *  thread](/chat/api/guides/crudl/messages#start_or_reply_to_a_message_thread).
 */
@property(nonatomic, copy, nullable) NSString *threadKey;

/**
 *  Fetches a @c GTLRHangoutsChat_Message.
 *
 *  Legacy path for creating message. Calling these will result in a BadRequest
 *  response.
 *
 *  @param object The @c GTLRHangoutsChat_Message to include in the query.
 *  @param parent Required. The resource name of the space in which to create a
 *    message. Format: spaces/{space}
 *
 *  @return GTLRHangoutsChatQuery_SpacesWebhooks
 */
+ (instancetype)queryWithObject:(GTLRHangoutsChat_Message *)object
                         parent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
