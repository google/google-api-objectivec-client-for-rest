// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   App Hub API (apphub/v1)
// Documentation:
//   https://cloud.google.com/app-hub/docs/

#import <GoogleAPIClientForREST/GTLRAppHubQuery.h>

@implementation GTLRAppHubQuery

@dynamic fields;

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsCreate

@dynamic applicationId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRAppHub_Application *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/applications";
  GTLRAppHubQuery_ProjectsLocationsApplicationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.create";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.delete";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Application class];
  query.loggingName = @"apphub.projects.locations.applications.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRAppHubQuery_ProjectsLocationsApplicationsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRAppHub_Policy class];
  query.loggingName = @"apphub.projects.locations.applications.getIamPolicy";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/applications";
  GTLRAppHubQuery_ProjectsLocationsApplicationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_ListApplicationsResponse class];
  query.loggingName = @"apphub.projects.locations.applications.list";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRAppHub_Application *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.patch";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsServicesCreate

@dynamic parent, requestId, serviceId;

+ (instancetype)queryWithObject:(GTLRAppHub_Service *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/services";
  GTLRAppHubQuery_ProjectsLocationsApplicationsServicesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.services.create";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsServicesDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsServicesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.services.delete";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsServicesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsServicesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Service class];
  query.loggingName = @"apphub.projects.locations.applications.services.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsServicesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/services";
  GTLRAppHubQuery_ProjectsLocationsApplicationsServicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_ListServicesResponse class];
  query.loggingName = @"apphub.projects.locations.applications.services.list";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsServicesPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRAppHub_Service *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsServicesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.services.patch";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAppHub_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRAppHubQuery_ProjectsLocationsApplicationsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAppHub_Policy class];
  query.loggingName = @"apphub.projects.locations.applications.setIamPolicy";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRAppHub_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRAppHubQuery_ProjectsLocationsApplicationsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRAppHub_TestIamPermissionsResponse class];
  query.loggingName = @"apphub.projects.locations.applications.testIamPermissions";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsCreate

@dynamic parent, requestId, workloadId;

+ (instancetype)queryWithObject:(GTLRAppHub_Workload *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/workloads";
  GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.workloads.create";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.workloads.delete";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Workload class];
  query.loggingName = @"apphub.projects.locations.applications.workloads.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/workloads";
  GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_ListWorkloadsResponse class];
  query.loggingName = @"apphub.projects.locations.applications.workloads.list";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRAppHub_Workload *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.applications.workloads.patch";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsDetachServiceProjectAttachment

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAppHub_DetachServiceProjectAttachmentRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:detachServiceProjectAttachment";
  GTLRAppHubQuery_ProjectsLocationsDetachServiceProjectAttachment *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_DetachServiceProjectAttachmentResponse class];
  query.loggingName = @"apphub.projects.locations.detachServiceProjectAttachment";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_DiscoveredService class];
  query.loggingName = @"apphub.projects.locations.discoveredServices.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/discoveredServices";
  GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_ListDiscoveredServicesResponse class];
  query.loggingName = @"apphub.projects.locations.discoveredServices.list";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesLookup

@dynamic parent, uri;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/discoveredServices:lookup";
  GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_LookupDiscoveredServiceResponse class];
  query.loggingName = @"apphub.projects.locations.discoveredServices.lookup";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_DiscoveredWorkload class];
  query.loggingName = @"apphub.projects.locations.discoveredWorkloads.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/discoveredWorkloads";
  GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_ListDiscoveredWorkloadsResponse class];
  query.loggingName = @"apphub.projects.locations.discoveredWorkloads.list";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsLookup

@dynamic parent, uri;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/discoveredWorkloads:lookup";
  GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_LookupDiscoveredWorkloadResponse class];
  query.loggingName = @"apphub.projects.locations.discoveredWorkloads.lookup";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Location class];
  query.loggingName = @"apphub.projects.locations.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRAppHubQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_ListLocationsResponse class];
  query.loggingName = @"apphub.projects.locations.list";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsLookupServiceProjectAttachment

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:lookupServiceProjectAttachment";
  GTLRAppHubQuery_ProjectsLocationsLookupServiceProjectAttachment *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_LookupServiceProjectAttachmentResponse class];
  query.loggingName = @"apphub.projects.locations.lookupServiceProjectAttachment";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAppHub_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRAppHubQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Empty class];
  query.loggingName = @"apphub.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Empty class];
  query.loggingName = @"apphub.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRAppHubQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_ListOperationsResponse class];
  query.loggingName = @"apphub.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsCreate

@dynamic parent, requestId, serviceProjectAttachmentId;

+ (instancetype)queryWithObject:(GTLRAppHub_ServiceProjectAttachment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/serviceProjectAttachments";
  GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.serviceProjectAttachments.create";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_Operation class];
  query.loggingName = @"apphub.projects.locations.serviceProjectAttachments.delete";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAppHub_ServiceProjectAttachment class];
  query.loggingName = @"apphub.projects.locations.serviceProjectAttachments.get";
  return query;
}

@end

@implementation GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/serviceProjectAttachments";
  GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAppHub_ListServiceProjectAttachmentsResponse class];
  query.loggingName = @"apphub.projects.locations.serviceProjectAttachments.list";
  return query;
}

@end
