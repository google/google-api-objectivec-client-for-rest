// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   App Hub API (apphub/v1)
// Documentation:
//   https://cloud.google.com/app-hub/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRAppHubObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other App Hub query classes.
 */
@interface GTLRAppHubQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates an Application in a host project and location.
 *
 *  Method: apphub.projects.locations.applications.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsCreate : GTLRAppHubQuery

/**
 *  Required. The Application identifier. Must contain only lowercase letters,
 *  numbers or hyphens, with the first character a letter, the last a letter or
 *  a number, and a 63 character maximum.
 */
@property(nonatomic, copy, nullable) NSString *applicationId;

/**
 *  Required. Project and location to create Application in. Expected format:
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Creates an Application in a host project and location.
 *
 *  @param object The @c GTLRAppHub_Application to include in the query.
 *  @param parent Required. Project and location to create Application in.
 *    Expected format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsCreate
 */
+ (instancetype)queryWithObject:(GTLRAppHub_Application *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an Application in a host project and location.
 *
 *  Method: apphub.projects.locations.applications.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsDelete : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Application to delete. Expected
 *  format:
 *  `projects/{project}/locations/{location}/applications/{application}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Deletes an Application in a host project and location.
 *
 *  @param name Required. Fully qualified name of the Application to delete.
 *    Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an Application in a host project and location.
 *
 *  Method: apphub.projects.locations.applications.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsGet : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Application to fetch. Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_Application.
 *
 *  Gets an Application in a host project and location.
 *
 *  @param name Required. Fully qualified name of the Application to fetch.
 *    Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: apphub.projects.locations.applications.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsGetIamPolicy : GTLRAppHubQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAppHub_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Applications in a host project and location.
 *
 *  Method: apphub.projects.locations.applications.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsList : GTLRAppHubQuery

/** Optional. Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Project and location to list Applications on. Expected format:
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAppHub_ListApplicationsResponse.
 *
 *  Lists Applications in a host project and location.
 *
 *  @param parent Required. Project and location to list Applications on.
 *    Expected format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an Application in a host project and location.
 *
 *  Method: apphub.projects.locations.applications.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsPatch : GTLRAppHubQuery

/**
 *  Identifier. The resource name of an Application. Format:
 *  `"projects/{host-project-id}/locations/{location}/applications/{application-id}"`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Application resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. The API changes the
 *  values of the fields as specified in the update_mask. The API ignores the
 *  values of all fields not covered by the update_mask. You can also unset a
 *  field by not specifying it in the updated message, but adding the field to
 *  the mask. This clears whatever value the field previously had.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Updates an Application in a host project and location.
 *
 *  @param object The @c GTLRAppHub_Application to include in the query.
 *  @param name Identifier. The resource name of an Application. Format:
 *    `"projects/{host-project-id}/locations/{location}/applications/{application-id}"`
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsPatch
 */
+ (instancetype)queryWithObject:(GTLRAppHub_Application *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Service in an Application.
 *
 *  Method: apphub.projects.locations.applications.services.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsServicesCreate : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the parent Application to create the
 *  Service in. Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. The Service identifier. Must contain only lowercase letters,
 *  numbers or hyphens, with the first character a letter, the last a letter or
 *  a number, and a 63 character maximum.
 */
@property(nonatomic, copy, nullable) NSString *serviceId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Creates a Service in an Application.
 *
 *  @param object The @c GTLRAppHub_Service to include in the query.
 *  @param parent Required. Fully qualified name of the parent Application to
 *    create the Service in. Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsServicesCreate
 */
+ (instancetype)queryWithObject:(GTLRAppHub_Service *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Service from an Application.
 *
 *  Method: apphub.projects.locations.applications.services.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsServicesDelete : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Service to delete from an Application.
 *  Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}/services/{service}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Deletes a Service from an Application.
 *
 *  @param name Required. Fully qualified name of the Service to delete from an
 *    Application. Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}/services/{service}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsServicesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Service in an Application.
 *
 *  Method: apphub.projects.locations.applications.services.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsServicesGet : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Service to fetch. Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}/services/{service}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_Service.
 *
 *  Gets a Service in an Application.
 *
 *  @param name Required. Fully qualified name of the Service to fetch. Expected
 *    format:
 *    `projects/{project}/locations/{location}/applications/{application}/services/{service}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsServicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Services in an Application.
 *
 *  Method: apphub.projects.locations.applications.services.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsServicesList : GTLRAppHubQuery

/** Optional. Filtering results */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Fully qualified name of the parent Application to list Services
 *  for. Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAppHub_ListServicesResponse.
 *
 *  Lists Services in an Application.
 *
 *  @param parent Required. Fully qualified name of the parent Application to
 *    list Services for. Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsServicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Service in an Application.
 *
 *  Method: apphub.projects.locations.applications.services.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsServicesPatch : GTLRAppHubQuery

/**
 *  Identifier. The resource name of a Service. Format:
 *  `"projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Service resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. The API changes the values
 *  of the fields as specified in the update_mask. The API ignores the values of
 *  all fields not covered by the update_mask. You can also unset a field by not
 *  specifying it in the updated message, but adding the field to the mask. This
 *  clears whatever value the field previously had.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Updates a Service in an Application.
 *
 *  @param object The @c GTLRAppHub_Service to include in the query.
 *  @param name Identifier. The resource name of a Service. Format:
 *    `"projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"`
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsServicesPatch
 */
+ (instancetype)queryWithObject:(GTLRAppHub_Service *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: apphub.projects.locations.applications.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsSetIamPolicy : GTLRAppHubQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAppHub_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRAppHub_SetIamPolicyRequest to include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRAppHub_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: apphub.projects.locations.applications.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsTestIamPermissions : GTLRAppHubQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRAppHub_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRAppHub_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRAppHub_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a Workload in an Application.
 *
 *  Method: apphub.projects.locations.applications.workloads.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsCreate : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Application to create Workload in.
 *  Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. The Workload identifier. Must contain only lowercase letters,
 *  numbers or hyphens, with the first character a letter, the last a letter or
 *  a number, and a 63 character maximum.
 */
@property(nonatomic, copy, nullable) NSString *workloadId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Creates a Workload in an Application.
 *
 *  @param object The @c GTLRAppHub_Workload to include in the query.
 *  @param parent Required. Fully qualified name of the Application to create
 *    Workload in. Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsCreate
 */
+ (instancetype)queryWithObject:(GTLRAppHub_Workload *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Workload from an Application.
 *
 *  Method: apphub.projects.locations.applications.workloads.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsDelete : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Workload to delete from an
 *  Application. Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}/workloads/{workload}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Deletes a Workload from an Application.
 *
 *  @param name Required. Fully qualified name of the Workload to delete from an
 *    Application. Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}/workloads/{workload}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Workload in an Application.
 *
 *  Method: apphub.projects.locations.applications.workloads.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsGet : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Workload to fetch. Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}/workloads/{workload}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_Workload.
 *
 *  Gets a Workload in an Application.
 *
 *  @param name Required. Fully qualified name of the Workload to fetch.
 *    Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}/workloads/{workload}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Workloads in an Application.
 *
 *  Method: apphub.projects.locations.applications.workloads.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsList : GTLRAppHubQuery

/** Optional. Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Fully qualified name of the parent Application to list Workloads
 *  for. Expected format:
 *  `projects/{project}/locations/{location}/applications/{application}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAppHub_ListWorkloadsResponse.
 *
 *  Lists Workloads in an Application.
 *
 *  @param parent Required. Fully qualified name of the parent Application to
 *    list Workloads for. Expected format:
 *    `projects/{project}/locations/{location}/applications/{application}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Workload in an Application.
 *
 *  Method: apphub.projects.locations.applications.workloads.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsPatch : GTLRAppHubQuery

/**
 *  Identifier. The resource name of the Workload. Format:
 *  `"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Workload resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. The API changes the values
 *  of the fields as specified in the update_mask. The API ignores the values of
 *  all fields not covered by the update_mask. You can also unset a field by not
 *  specifying it in the updated message, but adding the field to the mask. This
 *  clears whatever value the field previously had.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Updates a Workload in an Application.
 *
 *  @param object The @c GTLRAppHub_Workload to include in the query.
 *  @param name Identifier. The resource name of the Workload. Format:
 *    `"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"`
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsApplicationsWorkloadsPatch
 */
+ (instancetype)queryWithObject:(GTLRAppHub_Workload *)object
                           name:(NSString *)name;

@end

/**
 *  Detaches a service project from a host project. You can call this API from
 *  any service project without needing access to the host project that it is
 *  attached to.
 *
 *  Method: apphub.projects.locations.detachServiceProjectAttachment
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsDetachServiceProjectAttachment : GTLRAppHubQuery

/**
 *  Required. Service project id and location to detach from a host project.
 *  Only global location is supported. Expected format:
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_DetachServiceProjectAttachmentResponse.
 *
 *  Detaches a service project from a host project. You can call this API from
 *  any service project without needing access to the host project that it is
 *  attached to.
 *
 *  @param object The @c GTLRAppHub_DetachServiceProjectAttachmentRequest to
 *    include in the query.
 *  @param name Required. Service project id and location to detach from a host
 *    project. Only global location is supported. Expected format:
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsDetachServiceProjectAttachment
 */
+ (instancetype)queryWithObject:(GTLRAppHub_DetachServiceProjectAttachmentRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a Discovered Service in a host project and location.
 *
 *  Method: apphub.projects.locations.discoveredServices.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesGet : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Discovered Service to fetch. Expected
 *  format:
 *  `projects/{project}/locations/{location}/discoveredServices/{discoveredService}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_DiscoveredService.
 *
 *  Gets a Discovered Service in a host project and location.
 *
 *  @param name Required. Fully qualified name of the Discovered Service to
 *    fetch. Expected format:
 *    `projects/{project}/locations/{location}/discoveredServices/{discoveredService}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Discovered Services that can be added to an Application in a host
 *  project and location.
 *
 *  Method: apphub.projects.locations.discoveredServices.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesList : GTLRAppHubQuery

/** Optional. Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Project and location to list Discovered Services on. Expected
 *  format: `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAppHub_ListDiscoveredServicesResponse.
 *
 *  Lists Discovered Services that can be added to an Application in a host
 *  project and location.
 *
 *  @param parent Required. Project and location to list Discovered Services on.
 *    Expected format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists a Discovered Service in a host project and location, with a given
 *  resource URI.
 *
 *  Method: apphub.projects.locations.discoveredServices.lookup
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesLookup : GTLRAppHubQuery

/**
 *  Required. Host project ID and location to lookup Discovered Service in.
 *  Expected format: `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Resource URI to find DiscoveredService for. Accepts both project
 *  number and project ID and does translation when needed.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Fetches a @c GTLRAppHub_LookupDiscoveredServiceResponse.
 *
 *  Lists a Discovered Service in a host project and location, with a given
 *  resource URI.
 *
 *  @param parent Required. Host project ID and location to lookup Discovered
 *    Service in. Expected format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsDiscoveredServicesLookup
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a Discovered Workload in a host project and location.
 *
 *  Method: apphub.projects.locations.discoveredWorkloads.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsGet : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the Discovered Workload to fetch. Expected
 *  format:
 *  `projects/{project}/locations/{location}/discoveredWorkloads/{discoveredWorkload}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_DiscoveredWorkload.
 *
 *  Gets a Discovered Workload in a host project and location.
 *
 *  @param name Required. Fully qualified name of the Discovered Workload to
 *    fetch. Expected format:
 *    `projects/{project}/locations/{location}/discoveredWorkloads/{discoveredWorkload}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Discovered Workloads that can be added to an Application in a host
 *  project and location.
 *
 *  Method: apphub.projects.locations.discoveredWorkloads.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsList : GTLRAppHubQuery

/** Optional. Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Project and location to list Discovered Workloads on. Expected
 *  format: `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAppHub_ListDiscoveredWorkloadsResponse.
 *
 *  Lists Discovered Workloads that can be added to an Application in a host
 *  project and location.
 *
 *  @param parent Required. Project and location to list Discovered Workloads
 *    on. Expected format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists a Discovered Workload in a host project and location, with a given
 *  resource URI.
 *
 *  Method: apphub.projects.locations.discoveredWorkloads.lookup
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsLookup : GTLRAppHubQuery

/**
 *  Required. Host project ID and location to lookup Discovered Workload in.
 *  Expected format: `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Resource URI to find Discovered Workload for. Accepts both project
 *  number and project ID and does translation when needed.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Fetches a @c GTLRAppHub_LookupDiscoveredWorkloadResponse.
 *
 *  Lists a Discovered Workload in a host project and location, with a given
 *  resource URI.
 *
 *  @param parent Required. Host project ID and location to lookup Discovered
 *    Workload in. Expected format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsDiscoveredWorkloadsLookup
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about a location.
 *
 *  Method: apphub.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsGet : GTLRAppHubQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: apphub.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsList : GTLRAppHubQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAppHub_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists a service project attachment for a given service project. You can call
 *  this API from any project to find if it is attached to a host project.
 *
 *  Method: apphub.projects.locations.lookupServiceProjectAttachment
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsLookupServiceProjectAttachment : GTLRAppHubQuery

/**
 *  Required. Service project ID and location to lookup service project
 *  attachment for. Only global location is supported. Expected format:
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_LookupServiceProjectAttachmentResponse.
 *
 *  Lists a service project attachment for a given service project. You can call
 *  this API from any project to find if it is attached to a host project.
 *
 *  @param name Required. Service project ID and location to lookup service
 *    project attachment for. Only global location is supported. Expected
 *    format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsLookupServiceProjectAttachment
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: apphub.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsOperationsCancel : GTLRAppHubQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRAppHub_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRAppHub_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: apphub.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsOperationsDelete : GTLRAppHubQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: apphub.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsOperationsGet : GTLRAppHubQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: apphub.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsOperationsList : GTLRAppHubQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAppHub_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Attaches a service project to the host project.
 *
 *  Method: apphub.projects.locations.serviceProjectAttachments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsCreate : GTLRAppHubQuery

/**
 *  Required. Host project ID and location to which service project is being
 *  attached. Only global location is supported. Expected format:
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. The service project attachment identifier must contain the project
 *  id of the service project specified in the
 *  service_project_attachment.service_project field.
 */
@property(nonatomic, copy, nullable) NSString *serviceProjectAttachmentId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Attaches a service project to the host project.
 *
 *  @param object The @c GTLRAppHub_ServiceProjectAttachment to include in the
 *    query.
 *  @param parent Required. Host project ID and location to which service
 *    project is being attached. Only global location is supported. Expected
 *    format: `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRAppHub_ServiceProjectAttachment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a service project attachment.
 *
 *  Method: apphub.projects.locations.serviceProjectAttachments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsDelete : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the service project attachment to delete.
 *  Expected format:
 *  `projects/{project}/locations/{location}/serviceProjectAttachments/{serviceProjectAttachment}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRAppHub_Operation.
 *
 *  Deletes a service project attachment.
 *
 *  @param name Required. Fully qualified name of the service project attachment
 *    to delete. Expected format:
 *    `projects/{project}/locations/{location}/serviceProjectAttachments/{serviceProjectAttachment}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a service project attachment.
 *
 *  Method: apphub.projects.locations.serviceProjectAttachments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsGet : GTLRAppHubQuery

/**
 *  Required. Fully qualified name of the service project attachment to
 *  retrieve. Expected format:
 *  `projects/{project}/locations/{location}/serviceProjectAttachments/{serviceProjectAttachment}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAppHub_ServiceProjectAttachment.
 *
 *  Gets a service project attachment.
 *
 *  @param name Required. Fully qualified name of the service project attachment
 *    to retrieve. Expected format:
 *    `projects/{project}/locations/{location}/serviceProjectAttachments/{serviceProjectAttachment}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists service projects attached to the host project.
 *
 *  Method: apphub.projects.locations.serviceProjectAttachments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAppHubCloudPlatform
 */
@interface GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsList : GTLRAppHubQuery

/** Optional. Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Host project ID and location to list service project attachments.
 *  Only global location is supported. Expected format:
 *  `projects/{project}/locations/{location}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAppHub_ListServiceProjectAttachmentsResponse.
 *
 *  Lists service projects attached to the host project.
 *
 *  @param parent Required. Host project ID and location to list service project
 *    attachments. Only global location is supported. Expected format:
 *    `projects/{project}/locations/{location}`.
 *
 *  @return GTLRAppHubQuery_ProjectsLocationsServiceProjectAttachmentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
