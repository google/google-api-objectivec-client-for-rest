// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   ACME DNS API (acmedns/v1)
// Description:
//   Google Domains ACME DNS API that allows users to complete ACME DNS-01
//   challenges for a domain.
// Documentation:
//   https://developers.google.com/domains/acme-dns/

#import <GoogleAPIClientForREST/GTLRACMEDNSQuery.h>

@implementation GTLRACMEDNSQuery

@dynamic fields;

@end

@implementation GTLRACMEDNSQuery_AcmeChallengeSetsGet

@dynamic rootDomain;

+ (instancetype)queryWithRootDomain:(NSString *)rootDomain {
  NSArray *pathParams = @[ @"rootDomain" ];
  NSString *pathURITemplate = @"v1/acmeChallengeSets/{rootDomain}";
  GTLRACMEDNSQuery_AcmeChallengeSetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.rootDomain = rootDomain;
  query.expectedObjectClass = [GTLRACMEDNS_AcmeChallengeSet class];
  query.loggingName = @"acmedns.acmeChallengeSets.get";
  return query;
}

@end

@implementation GTLRACMEDNSQuery_AcmeChallengeSetsRotateChallenges

@dynamic rootDomain;

+ (instancetype)queryWithObject:(GTLRACMEDNS_RotateChallengesRequest *)object
                     rootDomain:(NSString *)rootDomain {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"rootDomain" ];
  NSString *pathURITemplate = @"v1/acmeChallengeSets/{rootDomain}:rotateChallenges";
  GTLRACMEDNSQuery_AcmeChallengeSetsRotateChallenges *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.rootDomain = rootDomain;
  query.expectedObjectClass = [GTLRACMEDNS_AcmeChallengeSet class];
  query.loggingName = @"acmedns.acmeChallengeSets.rotateChallenges";
  return query;
}

@end
