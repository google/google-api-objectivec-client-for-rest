// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Pollen API (pollen/v1)
// Description:
//   The Pollen API.
// Documentation:
//   https://developers.google.com/maps/documentation/pollen

#import <GoogleAPIClientForREST/GTLRPollenQuery.h>

#import <GoogleAPIClientForREST/GTLRPollenObjects.h>

// ----------------------------------------------------------------------------
// Constants

// mapType
NSString * const kGTLRPollenMapTypeGrassUpi           = @"GRASS_UPI";
NSString * const kGTLRPollenMapTypeMapTypeUnspecified = @"MAP_TYPE_UNSPECIFIED";
NSString * const kGTLRPollenMapTypeTreeUpi            = @"TREE_UPI";
NSString * const kGTLRPollenMapTypeWeedUpi            = @"WEED_UPI";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRPollenQuery

@dynamic fields;

@end

@implementation GTLRPollenQuery_ForecastLookup

@dynamic days, languageCode, locationLatitude, locationLongitude, pageSize,
         pageToken, plantsDescription;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"locationLatitude" : @"location.latitude",
    @"locationLongitude" : @"location.longitude"
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/forecast:lookup";
  GTLRPollenQuery_ForecastLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRPollen_LookupForecastResponse class];
  query.loggingName = @"pollen.forecast.lookup";
  return query;
}

@end

@implementation GTLRPollenQuery_MapTypesHeatmapTilesLookupHeatmapTile

@dynamic mapType, x, y, zoom;

+ (instancetype)queryWithMapType:(NSString *)mapType
                            zoom:(NSInteger)zoom
                               x:(NSInteger)x
                               y:(NSInteger)y {
  NSArray *pathParams = @[
    @"mapType", @"x", @"y", @"zoom"
  ];
  NSString *pathURITemplate = @"v1/mapTypes/{mapType}/heatmapTiles/{zoom}/{x}/{y}";
  GTLRPollenQuery_MapTypesHeatmapTilesLookupHeatmapTile *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.mapType = mapType;
  query.zoom = zoom;
  query.x = x;
  query.y = y;
  query.expectedObjectClass = [GTLRPollen_HttpBody class];
  query.loggingName = @"pollen.mapTypes.heatmapTiles.lookupHeatmapTile";
  return query;
}

@end
