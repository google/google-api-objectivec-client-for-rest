// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Pollen API (pollen/v1)
// Description:
//   The Pollen API.
// Documentation:
//   https://developers.google.com/maps/documentation/pollen

#import <GoogleAPIClientForREST/GTLRPollenObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRPollen_IndexInfo.code
NSString * const kGTLRPollen_IndexInfo_Code_IndexUnspecified = @"INDEX_UNSPECIFIED";
NSString * const kGTLRPollen_IndexInfo_Code_Upi              = @"UPI";

// GTLRPollen_PlantDescription.type
NSString * const kGTLRPollen_PlantDescription_Type_Grass       = @"GRASS";
NSString * const kGTLRPollen_PlantDescription_Type_PollenTypeUnspecified = @"POLLEN_TYPE_UNSPECIFIED";
NSString * const kGTLRPollen_PlantDescription_Type_Tree        = @"TREE";
NSString * const kGTLRPollen_PlantDescription_Type_Weed        = @"WEED";

// GTLRPollen_PlantInfo.code
NSString * const kGTLRPollen_PlantInfo_Code_Alder            = @"ALDER";
NSString * const kGTLRPollen_PlantInfo_Code_Ash              = @"ASH";
NSString * const kGTLRPollen_PlantInfo_Code_Birch            = @"BIRCH";
NSString * const kGTLRPollen_PlantInfo_Code_Cottonwood       = @"COTTONWOOD";
NSString * const kGTLRPollen_PlantInfo_Code_CypressPine      = @"CYPRESS_PINE";
NSString * const kGTLRPollen_PlantInfo_Code_Elm              = @"ELM";
NSString * const kGTLRPollen_PlantInfo_Code_Graminales       = @"GRAMINALES";
NSString * const kGTLRPollen_PlantInfo_Code_Hazel            = @"HAZEL";
NSString * const kGTLRPollen_PlantInfo_Code_Juniper          = @"JUNIPER";
NSString * const kGTLRPollen_PlantInfo_Code_Maple            = @"MAPLE";
NSString * const kGTLRPollen_PlantInfo_Code_Mugwort          = @"MUGWORT";
NSString * const kGTLRPollen_PlantInfo_Code_Oak              = @"OAK";
NSString * const kGTLRPollen_PlantInfo_Code_Olive            = @"OLIVE";
NSString * const kGTLRPollen_PlantInfo_Code_Pine             = @"PINE";
NSString * const kGTLRPollen_PlantInfo_Code_PlantUnspecified = @"PLANT_UNSPECIFIED";
NSString * const kGTLRPollen_PlantInfo_Code_Ragweed          = @"RAGWEED";

// GTLRPollen_TypeInfo.code
NSString * const kGTLRPollen_TypeInfo_Code_Grass               = @"GRASS";
NSString * const kGTLRPollen_TypeInfo_Code_PollenTypeUnspecified = @"POLLEN_TYPE_UNSPECIFIED";
NSString * const kGTLRPollen_TypeInfo_Code_Tree                = @"TREE";
NSString * const kGTLRPollen_TypeInfo_Code_Weed                = @"WEED";

// ----------------------------------------------------------------------------
//
//   GTLRPollen_Color
//

@implementation GTLRPollen_Color
@dynamic alpha, blue, green, red;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_Date
//

@implementation GTLRPollen_Date
@dynamic day, month, year;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_DayInfo
//

@implementation GTLRPollen_DayInfo
@dynamic date, plantInfo, pollenTypeInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"plantInfo" : [GTLRPollen_PlantInfo class],
    @"pollenTypeInfo" : [GTLRPollen_TypeInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_HttpBody
//

@implementation GTLRPollen_HttpBody
@dynamic contentType, data, extensions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"extensions" : [GTLRPollen_HttpBody_Extensions_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_HttpBody_Extensions_Item
//

@implementation GTLRPollen_HttpBody_Extensions_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_IndexInfo
//

@implementation GTLRPollen_IndexInfo
@dynamic category, code, color, displayName, indexDescription, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_LookupForecastResponse
//

@implementation GTLRPollen_LookupForecastResponse
@dynamic dailyInfo, nextPageToken, regionCode;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dailyInfo" : [GTLRPollen_DayInfo class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"dailyInfo";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_PlantDescription
//

@implementation GTLRPollen_PlantDescription
@dynamic crossReaction, family, picture, pictureCloseup, season, specialColors,
         specialShapes, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_PlantInfo
//

@implementation GTLRPollen_PlantInfo
@dynamic code, displayName, indexInfo, inSeason, plantDescription;
@end


// ----------------------------------------------------------------------------
//
//   GTLRPollen_TypeInfo
//

@implementation GTLRPollen_TypeInfo
@dynamic code, displayName, healthRecommendations, indexInfo, inSeason;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthRecommendations" : [NSString class]
  };
  return map;
}

@end
