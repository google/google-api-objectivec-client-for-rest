// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Bare Metal Solution API (baremetalsolution/v2)
// Description:
//   Provides ways to manage Bare Metal Solution hardware installed in a
//   regional extension located near a Google Cloud data center.
// Documentation:
//   https://cloud.google.com/bare-metal

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRBareMetalSolutionObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other BareMetalSolution query classes.
 */
@interface GTLRBareMetalSolutionQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: baremetalsolution.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsGet : GTLRBareMetalSolutionQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get instance provisioning settings for a given project. This is hidden
 *  method used by UI only.
 *
 *  Method: baremetalsolution.projects.locations.instanceProvisioningSettings.fetch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstanceProvisioningSettingsFetch : GTLRBareMetalSolutionQuery

/**
 *  Required. The parent project and location containing the
 *  ProvisioningSettings.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Fetches a @c
 *  GTLRBareMetalSolution_FetchInstanceProvisioningSettingsResponse.
 *
 *  Get instance provisioning settings for a given project. This is hidden
 *  method used by UI only.
 *
 *  @param location Required. The parent project and location containing the
 *    ProvisioningSettings.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstanceProvisioningSettingsFetch
 */
+ (instancetype)queryWithLocation:(NSString *)location;

@end

/**
 *  Create an Instance.
 *
 *  Method: baremetalsolution.projects.locations.instances.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesCreate : GTLRBareMetalSolutionQuery

/** Required. The parent project and location. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Create an Instance.
 *
 *  @param object The @c GTLRBareMetalSolution_Instance to include in the query.
 *  @param parent Required. The parent project and location.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesCreate
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_Instance *)object
                         parent:(NSString *)parent;

@end

/**
 *  Detach LUN from Instance.
 *
 *  Method: baremetalsolution.projects.locations.instances.detachLun
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesDetachLun : GTLRBareMetalSolutionQuery

/** Required. Name of the instance. */
@property(nonatomic, copy, nullable) NSString *instance;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Detach LUN from Instance.
 *
 *  @param object The @c GTLRBareMetalSolution_DetachLunRequest to include in
 *    the query.
 *  @param instance Required. Name of the instance.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesDetachLun
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_DetachLunRequest *)object
                       instance:(NSString *)instance;

@end

/**
 *  Disable the interactive serial console feature on an instance.
 *
 *  Method: baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesDisableInteractiveSerialConsole : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Disable the interactive serial console feature on an instance.
 *
 *  @param object The @c
 *    GTLRBareMetalSolution_DisableInteractiveSerialConsoleRequest to include in
 *    the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesDisableInteractiveSerialConsole
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_DisableInteractiveSerialConsoleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Enable the interactive serial console feature on an instance.
 *
 *  Method: baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesEnableInteractiveSerialConsole : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Enable the interactive serial console feature on an instance.
 *
 *  @param object The @c
 *    GTLRBareMetalSolution_EnableInteractiveSerialConsoleRequest to include in
 *    the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesEnableInteractiveSerialConsole
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_EnableInteractiveSerialConsoleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get details about a single server.
 *
 *  Method: baremetalsolution.projects.locations.instances.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesGet : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Instance.
 *
 *  Get details about a single server.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List servers in a given project and location.
 *
 *  Method: baremetalsolution.projects.locations.instances.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesList : GTLRBareMetalSolutionQuery

/** List filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListInstancesRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListInstancesResponse.
 *
 *  List servers in a given project and location.
 *
 *  @param parent Required. Parent value for ListInstancesRequest.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update details of a single server.
 *
 *  Method: baremetalsolution.projects.locations.instances.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesPatch : GTLRBareMetalSolutionQuery

/**
 *  Immutable. The resource name of this `Instance`. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. Format:
 *  `projects/{project}/locations/{location}/instances/{instance}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. The currently supported fields are: `labels`
 *  `hyperthreading_enabled` `os_image`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Update details of a single server.
 *
 *  @param object The @c GTLRBareMetalSolution_Instance to include in the query.
 *  @param name Immutable. The resource name of this `Instance`. Resource names
 *    are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. Format:
 *    `projects/{project}/locations/{location}/instances/{instance}`
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesPatch
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_Instance *)object
                           name:(NSString *)name;

@end

/**
 *  Perform an ungraceful, hard reset on a server. Equivalent to shutting the
 *  power off and then turning it back on.
 *
 *  Method: baremetalsolution.projects.locations.instances.reset
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesReset : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Perform an ungraceful, hard reset on a server. Equivalent to shutting the
 *  power off and then turning it back on.
 *
 *  @param object The @c GTLRBareMetalSolution_ResetInstanceRequest to include
 *    in the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesReset
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_ResetInstanceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Starts a server that was shutdown.
 *
 *  Method: baremetalsolution.projects.locations.instances.start
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesStart : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Starts a server that was shutdown.
 *
 *  @param object The @c GTLRBareMetalSolution_StartInstanceRequest to include
 *    in the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesStart
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_StartInstanceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Stop a running server.
 *
 *  Method: baremetalsolution.projects.locations.instances.stop
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesStop : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Stop a running server.
 *
 *  @param object The @c GTLRBareMetalSolution_StopInstanceRequest to include in
 *    the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsInstancesStop
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_StopInstanceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: baremetalsolution.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsList : GTLRBareMetalSolutionQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get details of a single network.
 *
 *  Method: baremetalsolution.projects.locations.networks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksGet : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Network.
 *
 *  Get details of a single network.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List network in a given project and location.
 *
 *  Method: baremetalsolution.projects.locations.networks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksList : GTLRBareMetalSolutionQuery

/** List filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Requested page size. The server might return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListNetworksRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListNetworksResponse.
 *
 *  List network in a given project and location.
 *
 *  @param parent Required. Parent value for ListNetworksRequest.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  List all Networks (and used IPs for each Network) in the vendor account
 *  associated with the specified project.
 *
 *  Method: baremetalsolution.projects.locations.networks.listNetworkUsage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksListNetworkUsage : GTLRBareMetalSolutionQuery

/** Required. Parent value (project and location). */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListNetworkUsageResponse.
 *
 *  List all Networks (and used IPs for each Network) in the vendor account
 *  associated with the specified project.
 *
 *  @param location Required. Parent value (project and location).
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksListNetworkUsage
 */
+ (instancetype)queryWithLocation:(NSString *)location;

@end

/**
 *  Update details of a single network.
 *
 *  Method: baremetalsolution.projects.locations.networks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksPatch : GTLRBareMetalSolutionQuery

/**
 *  Output only. The resource name of this `Network`. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. Format:
 *  `projects/{project}/locations/{location}/networks/{network}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. The only currently supported fields are:
 *  `labels`, `reservations`, `vrf.vlan_attachments`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Update details of a single network.
 *
 *  @param object The @c GTLRBareMetalSolution_Network to include in the query.
 *  @param name Output only. The resource name of this `Network`. Resource names
 *    are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. Format:
 *    `projects/{project}/locations/{location}/networks/{network}`
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNetworksPatch
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_Network *)object
                           name:(NSString *)name;

@end

/**
 *  Create an NFS share.
 *
 *  Method: baremetalsolution.projects.locations.nfsShares.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesCreate : GTLRBareMetalSolutionQuery

/** Required. The parent project and location. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Create an NFS share.
 *
 *  @param object The @c GTLRBareMetalSolution_NfsShare to include in the query.
 *  @param parent Required. The parent project and location.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesCreate
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_NfsShare *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete an NFS share. The underlying volume is automatically deleted.
 *
 *  Method: baremetalsolution.projects.locations.nfsShares.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesDelete : GTLRBareMetalSolutionQuery

/** Required. The name of the NFS share to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Delete an NFS share. The underlying volume is automatically deleted.
 *
 *  @param name Required. The name of the NFS share to delete.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get details of a single NFS share.
 *
 *  Method: baremetalsolution.projects.locations.nfsShares.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesGet : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_NfsShare.
 *
 *  Get details of a single NFS share.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List NFS shares.
 *
 *  Method: baremetalsolution.projects.locations.nfsShares.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesList : GTLRBareMetalSolutionQuery

/** List filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Requested page size. The server might return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListNfsSharesRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListNfsSharesResponse.
 *
 *  List NFS shares.
 *
 *  @param parent Required. Parent value for ListNfsSharesRequest.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update details of a single NFS share.
 *
 *  Method: baremetalsolution.projects.locations.nfsShares.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesPatch : GTLRBareMetalSolutionQuery

/** Immutable. The name of the NFS share. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. The only currently supported fields are:
 *  `labels` `allowed_clients`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Update details of a single NFS share.
 *
 *  @param object The @c GTLRBareMetalSolution_NfsShare to include in the query.
 *  @param name Immutable. The name of the NFS share.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsNfsSharesPatch
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_NfsShare *)object
                           name:(NSString *)name;

@end

/**
 *  Get details about an operation. This method used only to work around CCFE
 *  lack of passthrough LRO support (b/221498758).
 *
 *  Method: baremetalsolution.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsOperationsGet : GTLRBareMetalSolutionQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Get details about an operation. This method used only to work around CCFE
 *  lack of passthrough LRO support (b/221498758).
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Create new ProvisioningConfig.
 *
 *  Method: baremetalsolution.projects.locations.provisioningConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsCreate : GTLRBareMetalSolutionQuery

/**
 *  Optional. Email provided to send a confirmation with provisioning config to.
 */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  Required. The parent project and location containing the ProvisioningConfig.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ProvisioningConfig.
 *
 *  Create new ProvisioningConfig.
 *
 *  @param object The @c GTLRBareMetalSolution_ProvisioningConfig to include in
 *    the query.
 *  @param parent Required. The parent project and location containing the
 *    ProvisioningConfig.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_ProvisioningConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Get ProvisioningConfig by name.
 *
 *  Method: baremetalsolution.projects.locations.provisioningConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsGet : GTLRBareMetalSolutionQuery

/** Required. Name of the ProvisioningConfig. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_ProvisioningConfig.
 *
 *  Get ProvisioningConfig by name.
 *
 *  @param name Required. Name of the ProvisioningConfig.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Update existing ProvisioningConfig.
 *
 *  Method: baremetalsolution.projects.locations.provisioningConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsPatch : GTLRBareMetalSolutionQuery

/**
 *  Optional. Email provided to send a confirmation with provisioning config to.
 */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  Output only. The system-generated name of the provisioning config. This
 *  follows the UUID format.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBareMetalSolution_ProvisioningConfig.
 *
 *  Update existing ProvisioningConfig.
 *
 *  @param object The @c GTLRBareMetalSolution_ProvisioningConfig to include in
 *    the query.
 *  @param name Output only. The system-generated name of the provisioning
 *    config. This follows the UUID format.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_ProvisioningConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Submit a provisiong configuration for a given project.
 *
 *  Method: baremetalsolution.projects.locations.provisioningConfigs.submit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsSubmit : GTLRBareMetalSolutionQuery

/**
 *  Required. The parent project and location containing the ProvisioningConfig.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_SubmitProvisioningConfigResponse.
 *
 *  Submit a provisiong configuration for a given project.
 *
 *  @param object The @c GTLRBareMetalSolution_SubmitProvisioningConfigRequest
 *    to include in the query.
 *  @param parent Required. The parent project and location containing the
 *    ProvisioningConfig.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningConfigsSubmit
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_SubmitProvisioningConfigRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  List the budget details to provision resources on a given project.
 *
 *  Method: baremetalsolution.projects.locations.provisioningQuotas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningQuotasList : GTLRBareMetalSolutionQuery

/**
 *  Requested page size. The server might return fewer items than requested. If
 *  unspecified, server will pick an appropriate default. Notice that page_size
 *  field is not supported and won't be respected in the API request for now,
 *  will be updated when pagination is supported.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListProvisioningQuotasRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListProvisioningQuotasResponse.
 *
 *  List the budget details to provision resources on a given project.
 *
 *  @param parent Required. Parent value for ListProvisioningQuotasRequest.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsProvisioningQuotasList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Register a public SSH key in the specified project for use with the
 *  interactive serial console feature.
 *
 *  Method: baremetalsolution.projects.locations.sshKeys.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsSshKeysCreate : GTLRBareMetalSolutionQuery

/** Required. The parent containing the SSH keys. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the key, which will become the final component
 *  of the key's resource name. This value must match the regex:
 *  [a-zA-Z0-9\@.\\-_]{1,64}
 */
@property(nonatomic, copy, nullable) NSString *sshKeyId;

/**
 *  Fetches a @c GTLRBareMetalSolution_SSHKey.
 *
 *  Register a public SSH key in the specified project for use with the
 *  interactive serial console feature.
 *
 *  @param object The @c GTLRBareMetalSolution_SSHKey to include in the query.
 *  @param parent Required. The parent containing the SSH keys.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsSshKeysCreate
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_SSHKey *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a public SSH key registered in the specified project.
 *
 *  Method: baremetalsolution.projects.locations.sshKeys.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsSshKeysDelete : GTLRBareMetalSolutionQuery

/**
 *  Required. The name of the SSH key to delete. Currently, the only valid value
 *  for the location is "global".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Empty.
 *
 *  Deletes a public SSH key registered in the specified project.
 *
 *  @param name Required. The name of the SSH key to delete. Currently, the only
 *    valid value for the location is "global".
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsSshKeysDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the public SSH keys registered for the specified project. These SSH
 *  keys are used only for the interactive serial console feature.
 *
 *  Method: baremetalsolution.projects.locations.sshKeys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsSshKeysList : GTLRBareMetalSolutionQuery

/** The maximum number of items to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous List request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent containing the SSH keys. Currently, the only valid
 *  value for the location is "global".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListSSHKeysResponse.
 *
 *  Lists the public SSH keys registered for the specified project. These SSH
 *  keys are used only for the interactive serial console feature.
 *
 *  @param parent Required. The parent containing the SSH keys. Currently, the
 *    only valid value for the location is "global".
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsSshKeysList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Get details of a single storage volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesGet : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Volume.
 *
 *  Get details of a single storage volume.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List storage volumes in a given project and location.
 *
 *  Method: baremetalsolution.projects.locations.volumes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesList : GTLRBareMetalSolutionQuery

/** List filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Requested page size. The server might return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListVolumesRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListVolumesResponse.
 *
 *  List storage volumes in a given project and location.
 *
 *  @param parent Required. Parent value for ListVolumesRequest.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Get details of a single storage logical unit number(LUN).
 *
 *  Method: baremetalsolution.projects.locations.volumes.luns.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesLunsGet : GTLRBareMetalSolutionQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Lun.
 *
 *  Get details of a single storage logical unit number(LUN).
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesLunsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List storage volume luns for given storage volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.luns.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesLunsList : GTLRBareMetalSolutionQuery

/**
 *  Requested page size. The server might return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListLunsRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListLunsResponse.
 *
 *  List storage volume luns for given storage volume.
 *
 *  @param parent Required. Parent value for ListLunsRequest.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesLunsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update details of a single storage volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesPatch : GTLRBareMetalSolutionQuery

/**
 *  Output only. The resource name of this `Volume`. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. Format:
 *  `projects/{project}/locations/{location}/volumes/{volume}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. The only currently supported fields are:
 *  'labels'
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Update details of a single storage volume.
 *
 *  @param object The @c GTLRBareMetalSolution_Volume to include in the query.
 *  @param name Output only. The resource name of this `Volume`. Resource names
 *    are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. Format:
 *    `projects/{project}/locations/{location}/volumes/{volume}`
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesPatch
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_Volume *)object
                           name:(NSString *)name;

@end

/**
 *  Emergency Volume resize.
 *
 *  Method: baremetalsolution.projects.locations.volumes.resize
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesResize : GTLRBareMetalSolutionQuery

/** Required. Volume to resize. */
@property(nonatomic, copy, nullable) NSString *volume;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Emergency Volume resize.
 *
 *  @param object The @c GTLRBareMetalSolution_ResizeVolumeRequest to include in
 *    the query.
 *  @param volume Required. Volume to resize.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesResize
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_ResizeVolumeRequest *)object
                         volume:(NSString *)volume;

@end

/**
 *  Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a
 *  non-boot volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.snapshots.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsCreate : GTLRBareMetalSolutionQuery

/** Required. The volume to snapshot. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_VolumeSnapshot.
 *
 *  Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a
 *  non-boot volume.
 *
 *  @param object The @c GTLRBareMetalSolution_VolumeSnapshot to include in the
 *    query.
 *  @param parent Required. The volume to snapshot.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsCreate
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_VolumeSnapshot *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot
 *  volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.snapshots.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsDelete : GTLRBareMetalSolutionQuery

/** Required. The name of the snapshot to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_Empty.
 *
 *  Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot
 *  volume.
 *
 *  @param name Required. The name of the snapshot to delete.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called
 *  for a non-boot volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.snapshots.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsGet : GTLRBareMetalSolutionQuery

/** Required. The name of the snapshot. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBareMetalSolution_VolumeSnapshot.
 *
 *  Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called
 *  for a non-boot volume.
 *
 *  @param name Required. The name of the snapshot.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the list of snapshots for the specified volume. Returns a response
 *  with an empty list of snapshots if called for a non-boot volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.snapshots.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsList : GTLRBareMetalSolutionQuery

/**
 *  Requested page size. The server might return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results from the server. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListVolumesRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBareMetalSolution_ListVolumeSnapshotsResponse.
 *
 *  Retrieves the list of snapshots for the specified volume. Returns a response
 *  with an empty list of snapshots if called for a non-boot volume.
 *
 *  @param parent Required. Parent value for ListVolumesRequest.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Uses the specified snapshot to restore its parent volume. Returns
 *  INVALID_ARGUMENT if called for a non-boot volume.
 *
 *  Method: baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBareMetalSolutionCloudPlatform
 */
@interface GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsRestoreVolumeSnapshot : GTLRBareMetalSolutionQuery

/**
 *  Required. Name of the snapshot which will be used to restore its parent
 *  volume.
 */
@property(nonatomic, copy, nullable) NSString *volumeSnapshot;

/**
 *  Fetches a @c GTLRBareMetalSolution_Operation.
 *
 *  Uses the specified snapshot to restore its parent volume. Returns
 *  INVALID_ARGUMENT if called for a non-boot volume.
 *
 *  @param object The @c GTLRBareMetalSolution_RestoreVolumeSnapshotRequest to
 *    include in the query.
 *  @param volumeSnapshot Required. Name of the snapshot which will be used to
 *    restore its parent volume.
 *
 *  @return GTLRBareMetalSolutionQuery_ProjectsLocationsVolumesSnapshotsRestoreVolumeSnapshot
 */
+ (instancetype)queryWithObject:(GTLRBareMetalSolution_RestoreVolumeSnapshotRequest *)object
                 volumeSnapshot:(NSString *)volumeSnapshot;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
