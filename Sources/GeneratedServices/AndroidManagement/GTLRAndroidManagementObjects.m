// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Android Management API (androidmanagement/v1)
// Description:
//   The Android Management API provides remote enterprise management of Android
//   devices and apps.
// Documentation:
//   https://developers.google.com/android/management

#import <GoogleAPIClientForREST/GTLRAndroidManagementObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRAndroidManagement_AdvancedSecurityOverrides.commonCriteriaMode
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_CommonCriteriaMode_CommonCriteriaModeDisabled = @"COMMON_CRITERIA_MODE_DISABLED";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_CommonCriteriaMode_CommonCriteriaModeEnabled = @"COMMON_CRITERIA_MODE_ENABLED";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_CommonCriteriaMode_CommonCriteriaModeUnspecified = @"COMMON_CRITERIA_MODE_UNSPECIFIED";

// GTLRAndroidManagement_AdvancedSecurityOverrides.developerSettings
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_DeveloperSettings_DeveloperSettingsAllowed = @"DEVELOPER_SETTINGS_ALLOWED";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_DeveloperSettings_DeveloperSettingsDisabled = @"DEVELOPER_SETTINGS_DISABLED";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_DeveloperSettings_DeveloperSettingsUnspecified = @"DEVELOPER_SETTINGS_UNSPECIFIED";

// GTLRAndroidManagement_AdvancedSecurityOverrides.googlePlayProtectVerifyApps
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_GooglePlayProtectVerifyApps_GooglePlayProtectVerifyAppsUnspecified = @"GOOGLE_PLAY_PROTECT_VERIFY_APPS_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_GooglePlayProtectVerifyApps_VerifyAppsEnforced = @"VERIFY_APPS_ENFORCED";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_GooglePlayProtectVerifyApps_VerifyAppsUserChoice = @"VERIFY_APPS_USER_CHOICE";

// GTLRAndroidManagement_AdvancedSecurityOverrides.untrustedAppsPolicy
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_UntrustedAppsPolicy_AllowInstallDeviceWide = @"ALLOW_INSTALL_DEVICE_WIDE";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_UntrustedAppsPolicy_AllowInstallInPersonalProfileOnly = @"ALLOW_INSTALL_IN_PERSONAL_PROFILE_ONLY";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_UntrustedAppsPolicy_DisallowInstall = @"DISALLOW_INSTALL";
NSString * const kGTLRAndroidManagement_AdvancedSecurityOverrides_UntrustedAppsPolicy_UntrustedAppsPolicyUnspecified = @"UNTRUSTED_APPS_POLICY_UNSPECIFIED";

// GTLRAndroidManagement_Application.appPricing
NSString * const kGTLRAndroidManagement_Application_AppPricing_AppPricingUnspecified = @"APP_PRICING_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Application_AppPricing_Free = @"FREE";
NSString * const kGTLRAndroidManagement_Application_AppPricing_FreeWithInAppPurchase = @"FREE_WITH_IN_APP_PURCHASE";
NSString * const kGTLRAndroidManagement_Application_AppPricing_Paid = @"PAID";

// GTLRAndroidManagement_Application.contentRating
NSString * const kGTLRAndroidManagement_Application_ContentRating_ContentRatingUnspecified = @"CONTENT_RATING_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Application_ContentRating_EighteenYears = @"EIGHTEEN_YEARS";
NSString * const kGTLRAndroidManagement_Application_ContentRating_SevenYears = @"SEVEN_YEARS";
NSString * const kGTLRAndroidManagement_Application_ContentRating_SixteenYears = @"SIXTEEN_YEARS";
NSString * const kGTLRAndroidManagement_Application_ContentRating_ThreeYears = @"THREE_YEARS";
NSString * const kGTLRAndroidManagement_Application_ContentRating_TwelveYears = @"TWELVE_YEARS";

// GTLRAndroidManagement_Application.distributionChannel
NSString * const kGTLRAndroidManagement_Application_DistributionChannel_DistributionChannelUnspecified = @"DISTRIBUTION_CHANNEL_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Application_DistributionChannel_PrivateGoogleHosted = @"PRIVATE_GOOGLE_HOSTED";
NSString * const kGTLRAndroidManagement_Application_DistributionChannel_PrivateSelfHosted = @"PRIVATE_SELF_HOSTED";
NSString * const kGTLRAndroidManagement_Application_DistributionChannel_PublicGoogleHosted = @"PUBLIC_GOOGLE_HOSTED";

// GTLRAndroidManagement_Application.features
NSString * const kGTLRAndroidManagement_Application_Features_AppFeatureUnspecified = @"APP_FEATURE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Application_Features_VpnApp = @"VPN_APP";

// GTLRAndroidManagement_ApplicationEvent.eventType
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_ApplicationEventTypeUnspecified = @"APPLICATION_EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_Changed = @"CHANGED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_DataCleared = @"DATA_CLEARED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_Installed = @"INSTALLED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_Pinned = @"PINNED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_Removed = @"REMOVED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_Replaced = @"REPLACED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_Restarted = @"RESTARTED";
NSString * const kGTLRAndroidManagement_ApplicationEvent_EventType_Unpinned = @"UNPINNED";

// GTLRAndroidManagement_ApplicationPolicy.alwaysOnVpnLockdownExemption
NSString * const kGTLRAndroidManagement_ApplicationPolicy_AlwaysOnVpnLockdownExemption_AlwaysOnVpnLockdownExemptionUnspecified = @"ALWAYS_ON_VPN_LOCKDOWN_EXEMPTION_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_AlwaysOnVpnLockdownExemption_VpnLockdownEnforced = @"VPN_LOCKDOWN_ENFORCED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_AlwaysOnVpnLockdownExemption_VpnLockdownExemption = @"VPN_LOCKDOWN_EXEMPTION";

// GTLRAndroidManagement_ApplicationPolicy.autoUpdateMode
NSString * const kGTLRAndroidManagement_ApplicationPolicy_AutoUpdateMode_AutoUpdateDefault = @"AUTO_UPDATE_DEFAULT";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_AutoUpdateMode_AutoUpdateHighPriority = @"AUTO_UPDATE_HIGH_PRIORITY";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_AutoUpdateMode_AutoUpdateModeUnspecified = @"AUTO_UPDATE_MODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_AutoUpdateMode_AutoUpdatePostponed = @"AUTO_UPDATE_POSTPONED";

// GTLRAndroidManagement_ApplicationPolicy.connectedWorkAndPersonalApp
NSString * const kGTLRAndroidManagement_ApplicationPolicy_ConnectedWorkAndPersonalApp_ConnectedWorkAndPersonalAppAllowed = @"CONNECTED_WORK_AND_PERSONAL_APP_ALLOWED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_ConnectedWorkAndPersonalApp_ConnectedWorkAndPersonalAppDisallowed = @"CONNECTED_WORK_AND_PERSONAL_APP_DISALLOWED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_ConnectedWorkAndPersonalApp_ConnectedWorkAndPersonalAppUnspecified = @"CONNECTED_WORK_AND_PERSONAL_APP_UNSPECIFIED";

// GTLRAndroidManagement_ApplicationPolicy.defaultPermissionPolicy
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DefaultPermissionPolicy_Deny = @"DENY";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DefaultPermissionPolicy_Grant = @"GRANT";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DefaultPermissionPolicy_PermissionPolicyUnspecified = @"PERMISSION_POLICY_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DefaultPermissionPolicy_Prompt = @"PROMPT";

// GTLRAndroidManagement_ApplicationPolicy.delegatedScopes
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_BlockUninstall = @"BLOCK_UNINSTALL";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_CertInstall = @"CERT_INSTALL";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_DelegatedScopeUnspecified = @"DELEGATED_SCOPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_EnableSystemApp = @"ENABLE_SYSTEM_APP";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_ManagedConfigurations = @"MANAGED_CONFIGURATIONS";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_NetworkActivityLogs = @"NETWORK_ACTIVITY_LOGS";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_PackageAccess = @"PACKAGE_ACCESS";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_PermissionGrant = @"PERMISSION_GRANT";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_DelegatedScopes_SecurityLogs = @"SECURITY_LOGS";

// GTLRAndroidManagement_ApplicationPolicy.installType
NSString * const kGTLRAndroidManagement_ApplicationPolicy_InstallType_Available = @"AVAILABLE";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_InstallType_Blocked = @"BLOCKED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_InstallType_ForceInstalled = @"FORCE_INSTALLED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_InstallType_InstallTypeUnspecified = @"INSTALL_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_InstallType_Kiosk = @"KIOSK";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_InstallType_Preinstalled = @"PREINSTALLED";
NSString * const kGTLRAndroidManagement_ApplicationPolicy_InstallType_RequiredForSetup = @"REQUIRED_FOR_SETUP";

// GTLRAndroidManagement_ApplicationReport.applicationSource
NSString * const kGTLRAndroidManagement_ApplicationReport_ApplicationSource_ApplicationSourceUnspecified = @"APPLICATION_SOURCE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationReport_ApplicationSource_InstalledFromPlayStore = @"INSTALLED_FROM_PLAY_STORE";
NSString * const kGTLRAndroidManagement_ApplicationReport_ApplicationSource_SystemAppFactoryVersion = @"SYSTEM_APP_FACTORY_VERSION";
NSString * const kGTLRAndroidManagement_ApplicationReport_ApplicationSource_SystemAppUpdatedVersion = @"SYSTEM_APP_UPDATED_VERSION";

// GTLRAndroidManagement_ApplicationReport.state
NSString * const kGTLRAndroidManagement_ApplicationReport_State_ApplicationStateUnspecified = @"APPLICATION_STATE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ApplicationReport_State_Installed = @"INSTALLED";
NSString * const kGTLRAndroidManagement_ApplicationReport_State_Removed = @"REMOVED";

// GTLRAndroidManagement_BlockAction.blockScope
NSString * const kGTLRAndroidManagement_BlockAction_BlockScope_BlockScopeDevice = @"BLOCK_SCOPE_DEVICE";
NSString * const kGTLRAndroidManagement_BlockAction_BlockScope_BlockScopeUnspecified = @"BLOCK_SCOPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_BlockAction_BlockScope_BlockScopeWorkProfile = @"BLOCK_SCOPE_WORK_PROFILE";

// GTLRAndroidManagement_Command.errorCode
NSString * const kGTLRAndroidManagement_Command_ErrorCode_ApiLevel = @"API_LEVEL";
NSString * const kGTLRAndroidManagement_Command_ErrorCode_CommandErrorCodeUnspecified = @"COMMAND_ERROR_CODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Command_ErrorCode_InvalidValue = @"INVALID_VALUE";
NSString * const kGTLRAndroidManagement_Command_ErrorCode_ManagementMode = @"MANAGEMENT_MODE";
NSString * const kGTLRAndroidManagement_Command_ErrorCode_Unknown = @"UNKNOWN";
NSString * const kGTLRAndroidManagement_Command_ErrorCode_Unsupported = @"UNSUPPORTED";

// GTLRAndroidManagement_Command.resetPasswordFlags
NSString * const kGTLRAndroidManagement_Command_ResetPasswordFlags_DoNotAskCredentialsOnBoot = @"DO_NOT_ASK_CREDENTIALS_ON_BOOT";
NSString * const kGTLRAndroidManagement_Command_ResetPasswordFlags_LockNow = @"LOCK_NOW";
NSString * const kGTLRAndroidManagement_Command_ResetPasswordFlags_RequireEntry = @"REQUIRE_ENTRY";
NSString * const kGTLRAndroidManagement_Command_ResetPasswordFlags_ResetPasswordFlagUnspecified = @"RESET_PASSWORD_FLAG_UNSPECIFIED";

// GTLRAndroidManagement_Command.type
NSString * const kGTLRAndroidManagement_Command_Type_ClearAppData = @"CLEAR_APP_DATA";
NSString * const kGTLRAndroidManagement_Command_Type_CommandTypeUnspecified = @"COMMAND_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Command_Type_Lock      = @"LOCK";
NSString * const kGTLRAndroidManagement_Command_Type_Reboot    = @"REBOOT";
NSString * const kGTLRAndroidManagement_Command_Type_RelinquishOwnership = @"RELINQUISH_OWNERSHIP";
NSString * const kGTLRAndroidManagement_Command_Type_ResetPassword = @"RESET_PASSWORD";

// GTLRAndroidManagement_CommonCriteriaModeInfo.commonCriteriaModeStatus
NSString * const kGTLRAndroidManagement_CommonCriteriaModeInfo_CommonCriteriaModeStatus_CommonCriteriaModeDisabled = @"COMMON_CRITERIA_MODE_DISABLED";
NSString * const kGTLRAndroidManagement_CommonCriteriaModeInfo_CommonCriteriaModeStatus_CommonCriteriaModeEnabled = @"COMMON_CRITERIA_MODE_ENABLED";
NSString * const kGTLRAndroidManagement_CommonCriteriaModeInfo_CommonCriteriaModeStatus_CommonCriteriaModeStatusUnknown = @"COMMON_CRITERIA_MODE_STATUS_UNKNOWN";

// GTLRAndroidManagement_CrossProfilePolicies.crossProfileCopyPaste
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_CrossProfileCopyPaste_CopyFromWorkToPersonalDisallowed = @"COPY_FROM_WORK_TO_PERSONAL_DISALLOWED";
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_CrossProfileCopyPaste_CrossProfileCopyPasteAllowed = @"CROSS_PROFILE_COPY_PASTE_ALLOWED";
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_CrossProfileCopyPaste_CrossProfileCopyPasteUnspecified = @"CROSS_PROFILE_COPY_PASTE_UNSPECIFIED";

// GTLRAndroidManagement_CrossProfilePolicies.crossProfileDataSharing
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_CrossProfileDataSharing_CrossProfileDataSharingAllowed = @"CROSS_PROFILE_DATA_SHARING_ALLOWED";
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_CrossProfileDataSharing_CrossProfileDataSharingDisallowed = @"CROSS_PROFILE_DATA_SHARING_DISALLOWED";
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_CrossProfileDataSharing_CrossProfileDataSharingUnspecified = @"CROSS_PROFILE_DATA_SHARING_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_CrossProfileDataSharing_DataSharingFromWorkToPersonalDisallowed = @"DATA_SHARING_FROM_WORK_TO_PERSONAL_DISALLOWED";

// GTLRAndroidManagement_CrossProfilePolicies.showWorkContactsInPersonalProfile
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_ShowWorkContactsInPersonalProfile_ShowWorkContactsInPersonalProfileAllowed = @"SHOW_WORK_CONTACTS_IN_PERSONAL_PROFILE_ALLOWED";
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_ShowWorkContactsInPersonalProfile_ShowWorkContactsInPersonalProfileDisallowed = @"SHOW_WORK_CONTACTS_IN_PERSONAL_PROFILE_DISALLOWED";
NSString * const kGTLRAndroidManagement_CrossProfilePolicies_ShowWorkContactsInPersonalProfile_ShowWorkContactsInPersonalProfileUnspecified = @"SHOW_WORK_CONTACTS_IN_PERSONAL_PROFILE_UNSPECIFIED";

// GTLRAndroidManagement_Device.appliedState
NSString * const kGTLRAndroidManagement_Device_AppliedState_Active = @"ACTIVE";
NSString * const kGTLRAndroidManagement_Device_AppliedState_Deleted = @"DELETED";
NSString * const kGTLRAndroidManagement_Device_AppliedState_DeviceStateUnspecified = @"DEVICE_STATE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Device_AppliedState_Disabled = @"DISABLED";
NSString * const kGTLRAndroidManagement_Device_AppliedState_Provisioning = @"PROVISIONING";

// GTLRAndroidManagement_Device.managementMode
NSString * const kGTLRAndroidManagement_Device_ManagementMode_DeviceOwner = @"DEVICE_OWNER";
NSString * const kGTLRAndroidManagement_Device_ManagementMode_ManagementModeUnspecified = @"MANAGEMENT_MODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Device_ManagementMode_ProfileOwner = @"PROFILE_OWNER";

// GTLRAndroidManagement_Device.ownership
NSString * const kGTLRAndroidManagement_Device_Ownership_CompanyOwned = @"COMPANY_OWNED";
NSString * const kGTLRAndroidManagement_Device_Ownership_OwnershipUnspecified = @"OWNERSHIP_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Device_Ownership_PersonallyOwned = @"PERSONALLY_OWNED";

// GTLRAndroidManagement_Device.state
NSString * const kGTLRAndroidManagement_Device_State_Active    = @"ACTIVE";
NSString * const kGTLRAndroidManagement_Device_State_Deleted   = @"DELETED";
NSString * const kGTLRAndroidManagement_Device_State_DeviceStateUnspecified = @"DEVICE_STATE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Device_State_Disabled  = @"DISABLED";
NSString * const kGTLRAndroidManagement_Device_State_Provisioning = @"PROVISIONING";

// GTLRAndroidManagement_DeviceSettings.encryptionStatus
NSString * const kGTLRAndroidManagement_DeviceSettings_EncryptionStatus_Activating = @"ACTIVATING";
NSString * const kGTLRAndroidManagement_DeviceSettings_EncryptionStatus_Active = @"ACTIVE";
NSString * const kGTLRAndroidManagement_DeviceSettings_EncryptionStatus_ActiveDefaultKey = @"ACTIVE_DEFAULT_KEY";
NSString * const kGTLRAndroidManagement_DeviceSettings_EncryptionStatus_ActivePerUser = @"ACTIVE_PER_USER";
NSString * const kGTLRAndroidManagement_DeviceSettings_EncryptionStatus_EncryptionStatusUnspecified = @"ENCRYPTION_STATUS_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_DeviceSettings_EncryptionStatus_Inactive = @"INACTIVE";
NSString * const kGTLRAndroidManagement_DeviceSettings_EncryptionStatus_Unsupported = @"UNSUPPORTED";

// GTLRAndroidManagement_Display.state
NSString * const kGTLRAndroidManagement_Display_State_DisplayStateUnspecified = @"DISPLAY_STATE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Display_State_Doze     = @"DOZE";
NSString * const kGTLRAndroidManagement_Display_State_Off      = @"OFF";
NSString * const kGTLRAndroidManagement_Display_State_On       = @"ON";
NSString * const kGTLRAndroidManagement_Display_State_Suspended = @"SUSPENDED";

// GTLRAndroidManagement_EnrollmentToken.allowPersonalUsage
NSString * const kGTLRAndroidManagement_EnrollmentToken_AllowPersonalUsage_AllowPersonalUsageUnspecified = @"ALLOW_PERSONAL_USAGE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_EnrollmentToken_AllowPersonalUsage_PersonalUsageAllowed = @"PERSONAL_USAGE_ALLOWED";
NSString * const kGTLRAndroidManagement_EnrollmentToken_AllowPersonalUsage_PersonalUsageDisallowed = @"PERSONAL_USAGE_DISALLOWED";

// GTLRAndroidManagement_Enterprise.enabledNotificationTypes
NSString * const kGTLRAndroidManagement_Enterprise_EnabledNotificationTypes_Command = @"COMMAND";
NSString * const kGTLRAndroidManagement_Enterprise_EnabledNotificationTypes_ComplianceReport = @"COMPLIANCE_REPORT";
NSString * const kGTLRAndroidManagement_Enterprise_EnabledNotificationTypes_Enrollment = @"ENROLLMENT";
NSString * const kGTLRAndroidManagement_Enterprise_EnabledNotificationTypes_NotificationTypeUnspecified = @"NOTIFICATION_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Enterprise_EnabledNotificationTypes_StatusReport = @"STATUS_REPORT";
NSString * const kGTLRAndroidManagement_Enterprise_EnabledNotificationTypes_UsageLogs = @"USAGE_LOGS";

// GTLRAndroidManagement_KeyedAppState.severity
NSString * const kGTLRAndroidManagement_KeyedAppState_Severity_Error = @"ERROR";
NSString * const kGTLRAndroidManagement_KeyedAppState_Severity_Info = @"INFO";
NSString * const kGTLRAndroidManagement_KeyedAppState_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";

// GTLRAndroidManagement_KioskCustomization.deviceSettings
NSString * const kGTLRAndroidManagement_KioskCustomization_DeviceSettings_DeviceSettingsUnspecified = @"DEVICE_SETTINGS_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_KioskCustomization_DeviceSettings_SettingsAccessAllowed = @"SETTINGS_ACCESS_ALLOWED";
NSString * const kGTLRAndroidManagement_KioskCustomization_DeviceSettings_SettingsAccessBlocked = @"SETTINGS_ACCESS_BLOCKED";

// GTLRAndroidManagement_KioskCustomization.powerButtonActions
NSString * const kGTLRAndroidManagement_KioskCustomization_PowerButtonActions_PowerButtonActionsUnspecified = @"POWER_BUTTON_ACTIONS_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_KioskCustomization_PowerButtonActions_PowerButtonAvailable = @"POWER_BUTTON_AVAILABLE";
NSString * const kGTLRAndroidManagement_KioskCustomization_PowerButtonActions_PowerButtonBlocked = @"POWER_BUTTON_BLOCKED";

// GTLRAndroidManagement_KioskCustomization.statusBar
NSString * const kGTLRAndroidManagement_KioskCustomization_StatusBar_NotificationsAndSystemInfoDisabled = @"NOTIFICATIONS_AND_SYSTEM_INFO_DISABLED";
NSString * const kGTLRAndroidManagement_KioskCustomization_StatusBar_NotificationsAndSystemInfoEnabled = @"NOTIFICATIONS_AND_SYSTEM_INFO_ENABLED";
NSString * const kGTLRAndroidManagement_KioskCustomization_StatusBar_StatusBarUnspecified = @"STATUS_BAR_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_KioskCustomization_StatusBar_SystemInfoOnly = @"SYSTEM_INFO_ONLY";

// GTLRAndroidManagement_KioskCustomization.systemErrorWarnings
NSString * const kGTLRAndroidManagement_KioskCustomization_SystemErrorWarnings_ErrorAndWarningsEnabled = @"ERROR_AND_WARNINGS_ENABLED";
NSString * const kGTLRAndroidManagement_KioskCustomization_SystemErrorWarnings_ErrorAndWarningsMuted = @"ERROR_AND_WARNINGS_MUTED";
NSString * const kGTLRAndroidManagement_KioskCustomization_SystemErrorWarnings_SystemErrorWarningsUnspecified = @"SYSTEM_ERROR_WARNINGS_UNSPECIFIED";

// GTLRAndroidManagement_KioskCustomization.systemNavigation
NSString * const kGTLRAndroidManagement_KioskCustomization_SystemNavigation_HomeButtonOnly = @"HOME_BUTTON_ONLY";
NSString * const kGTLRAndroidManagement_KioskCustomization_SystemNavigation_NavigationDisabled = @"NAVIGATION_DISABLED";
NSString * const kGTLRAndroidManagement_KioskCustomization_SystemNavigation_NavigationEnabled = @"NAVIGATION_ENABLED";
NSString * const kGTLRAndroidManagement_KioskCustomization_SystemNavigation_SystemNavigationUnspecified = @"SYSTEM_NAVIGATION_UNSPECIFIED";

// GTLRAndroidManagement_ManagedProperty.type
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_Bool = @"BOOL";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_Bundle = @"BUNDLE";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_BundleArray = @"BUNDLE_ARRAY";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_Choice = @"CHOICE";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_Hidden = @"HIDDEN";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_Integer = @"INTEGER";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_ManagedPropertyTypeUnspecified = @"MANAGED_PROPERTY_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_Multiselect = @"MULTISELECT";
NSString * const kGTLRAndroidManagement_ManagedProperty_Type_String = @"STRING";

// GTLRAndroidManagement_MemoryEvent.eventType
NSString * const kGTLRAndroidManagement_MemoryEvent_EventType_ExternalStorageDetected = @"EXTERNAL_STORAGE_DETECTED";
NSString * const kGTLRAndroidManagement_MemoryEvent_EventType_ExternalStorageMeasured = @"EXTERNAL_STORAGE_MEASURED";
NSString * const kGTLRAndroidManagement_MemoryEvent_EventType_ExternalStorageRemoved = @"EXTERNAL_STORAGE_REMOVED";
NSString * const kGTLRAndroidManagement_MemoryEvent_EventType_InternalStorageMeasured = @"INTERNAL_STORAGE_MEASURED";
NSString * const kGTLRAndroidManagement_MemoryEvent_EventType_MemoryEventTypeUnspecified = @"MEMORY_EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_MemoryEvent_EventType_RamMeasured = @"RAM_MEASURED";

// GTLRAndroidManagement_NonComplianceDetail.installationFailureReason
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_InProgress = @"IN_PROGRESS";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_InstallationFailureReasonUnknown = @"INSTALLATION_FAILURE_REASON_UNKNOWN";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_InstallationFailureReasonUnspecified = @"INSTALLATION_FAILURE_REASON_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_NoLicensesRemaining = @"NO_LICENSES_REMAINING";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_NotApproved = @"NOT_APPROVED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_NotAvailableInCountry = @"NOT_AVAILABLE_IN_COUNTRY";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_NotCompatibleWithDevice = @"NOT_COMPATIBLE_WITH_DEVICE";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_NotEnrolled = @"NOT_ENROLLED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_NotFound = @"NOT_FOUND";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_PermissionsNotAccepted = @"PERMISSIONS_NOT_ACCEPTED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_InstallationFailureReason_UserInvalid = @"USER_INVALID";

// GTLRAndroidManagement_NonComplianceDetail.nonComplianceReason
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_ApiLevel = @"API_LEVEL";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_AppIncompatible = @"APP_INCOMPATIBLE";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_AppInstalled = @"APP_INSTALLED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_AppNotInstalled = @"APP_NOT_INSTALLED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_AppNotUpdated = @"APP_NOT_UPDATED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_InvalidValue = @"INVALID_VALUE";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_ManagementMode = @"MANAGEMENT_MODE";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_NonComplianceReasonUnspecified = @"NON_COMPLIANCE_REASON_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_Pending = @"PENDING";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_Unsupported = @"UNSUPPORTED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_NonComplianceReason_UserAction = @"USER_ACTION";

// GTLRAndroidManagement_NonComplianceDetail.specificNonComplianceReason
NSString * const kGTLRAndroidManagement_NonComplianceDetail_SpecificNonComplianceReason_OncWifiApiLevel = @"ONC_WIFI_API_LEVEL";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_SpecificNonComplianceReason_OncWifiInvalidValue = @"ONC_WIFI_INVALID_VALUE";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_SpecificNonComplianceReason_PasswordPoliciesPasswordExpired = @"PASSWORD_POLICIES_PASSWORD_EXPIRED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_SpecificNonComplianceReason_PasswordPoliciesPasswordNotSufficient = @"PASSWORD_POLICIES_PASSWORD_NOT_SUFFICIENT";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_SpecificNonComplianceReason_PasswordPoliciesUserCredentialsConfirmationRequired = @"PASSWORD_POLICIES_USER_CREDENTIALS_CONFIRMATION_REQUIRED";
NSString * const kGTLRAndroidManagement_NonComplianceDetail_SpecificNonComplianceReason_SpecificNonComplianceReasonUnspecified = @"SPECIFIC_NON_COMPLIANCE_REASON_UNSPECIFIED";

// GTLRAndroidManagement_NonComplianceDetailCondition.nonComplianceReason
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_ApiLevel = @"API_LEVEL";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_AppIncompatible = @"APP_INCOMPATIBLE";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_AppInstalled = @"APP_INSTALLED";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_AppNotInstalled = @"APP_NOT_INSTALLED";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_AppNotUpdated = @"APP_NOT_UPDATED";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_InvalidValue = @"INVALID_VALUE";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_ManagementMode = @"MANAGEMENT_MODE";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_NonComplianceReasonUnspecified = @"NON_COMPLIANCE_REASON_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_Pending = @"PENDING";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_Unsupported = @"UNSUPPORTED";
NSString * const kGTLRAndroidManagement_NonComplianceDetailCondition_NonComplianceReason_UserAction = @"USER_ACTION";

// GTLRAndroidManagement_OsStartupEvent.verifiedBootState
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerifiedBootState_Green = @"GREEN";
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerifiedBootState_Orange = @"ORANGE";
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerifiedBootState_VerifiedBootStateUnspecified = @"VERIFIED_BOOT_STATE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerifiedBootState_Yellow = @"YELLOW";

// GTLRAndroidManagement_OsStartupEvent.verityMode
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerityMode_Disabled = @"DISABLED";
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerityMode_DmVerityModeUnspecified = @"DM_VERITY_MODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerityMode_Enforcing = @"ENFORCING";
NSString * const kGTLRAndroidManagement_OsStartupEvent_VerityMode_IoError = @"IO_ERROR";

// GTLRAndroidManagement_PasswordPoliciesContext.passwordPolicyScope
NSString * const kGTLRAndroidManagement_PasswordPoliciesContext_PasswordPolicyScope_ScopeDevice = @"SCOPE_DEVICE";
NSString * const kGTLRAndroidManagement_PasswordPoliciesContext_PasswordPolicyScope_ScopeProfile = @"SCOPE_PROFILE";
NSString * const kGTLRAndroidManagement_PasswordPoliciesContext_PasswordPolicyScope_ScopeUnspecified = @"SCOPE_UNSPECIFIED";

// GTLRAndroidManagement_PasswordRequirements.passwordQuality
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_Alphabetic = @"ALPHABETIC";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_Alphanumeric = @"ALPHANUMERIC";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_BiometricWeak = @"BIOMETRIC_WEAK";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_Complex = @"COMPLEX";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_ComplexityHigh = @"COMPLEXITY_HIGH";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_ComplexityLow = @"COMPLEXITY_LOW";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_ComplexityMedium = @"COMPLEXITY_MEDIUM";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_Numeric = @"NUMERIC";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_NumericComplex = @"NUMERIC_COMPLEX";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_PasswordQualityUnspecified = @"PASSWORD_QUALITY_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordQuality_Something = @"SOMETHING";

// GTLRAndroidManagement_PasswordRequirements.passwordScope
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordScope_ScopeDevice = @"SCOPE_DEVICE";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordScope_ScopeProfile = @"SCOPE_PROFILE";
NSString * const kGTLRAndroidManagement_PasswordRequirements_PasswordScope_ScopeUnspecified = @"SCOPE_UNSPECIFIED";

// GTLRAndroidManagement_PasswordRequirements.requirePasswordUnlock
NSString * const kGTLRAndroidManagement_PasswordRequirements_RequirePasswordUnlock_RequireEveryDay = @"REQUIRE_EVERY_DAY";
NSString * const kGTLRAndroidManagement_PasswordRequirements_RequirePasswordUnlock_RequirePasswordUnlockUnspecified = @"REQUIRE_PASSWORD_UNLOCK_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_PasswordRequirements_RequirePasswordUnlock_UseDefaultDeviceTimeout = @"USE_DEFAULT_DEVICE_TIMEOUT";

// GTLRAndroidManagement_PasswordRequirements.unifiedLockSettings
NSString * const kGTLRAndroidManagement_PasswordRequirements_UnifiedLockSettings_AllowUnifiedWorkAndPersonalLock = @"ALLOW_UNIFIED_WORK_AND_PERSONAL_LOCK";
NSString * const kGTLRAndroidManagement_PasswordRequirements_UnifiedLockSettings_RequireSeparateWorkLock = @"REQUIRE_SEPARATE_WORK_LOCK";
NSString * const kGTLRAndroidManagement_PasswordRequirements_UnifiedLockSettings_UnifiedLockSettingsUnspecified = @"UNIFIED_LOCK_SETTINGS_UNSPECIFIED";

// GTLRAndroidManagement_PerAppResult.clearingResult
NSString * const kGTLRAndroidManagement_PerAppResult_ClearingResult_ApiLevel = @"API_LEVEL";
NSString * const kGTLRAndroidManagement_PerAppResult_ClearingResult_AppNotFound = @"APP_NOT_FOUND";
NSString * const kGTLRAndroidManagement_PerAppResult_ClearingResult_AppProtected = @"APP_PROTECTED";
NSString * const kGTLRAndroidManagement_PerAppResult_ClearingResult_ClearingResultUnspecified = @"CLEARING_RESULT_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_PerAppResult_ClearingResult_Success = @"SUCCESS";

// GTLRAndroidManagement_PermissionGrant.policy
NSString * const kGTLRAndroidManagement_PermissionGrant_Policy_Deny = @"DENY";
NSString * const kGTLRAndroidManagement_PermissionGrant_Policy_Grant = @"GRANT";
NSString * const kGTLRAndroidManagement_PermissionGrant_Policy_PermissionPolicyUnspecified = @"PERMISSION_POLICY_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_PermissionGrant_Policy_Prompt = @"PROMPT";

// GTLRAndroidManagement_PersonalApplicationPolicy.installType
NSString * const kGTLRAndroidManagement_PersonalApplicationPolicy_InstallType_Available = @"AVAILABLE";
NSString * const kGTLRAndroidManagement_PersonalApplicationPolicy_InstallType_Blocked = @"BLOCKED";
NSString * const kGTLRAndroidManagement_PersonalApplicationPolicy_InstallType_InstallTypeUnspecified = @"INSTALL_TYPE_UNSPECIFIED";

// GTLRAndroidManagement_PersonalUsagePolicies.personalPlayStoreMode
NSString * const kGTLRAndroidManagement_PersonalUsagePolicies_PersonalPlayStoreMode_Allowlist = @"ALLOWLIST";
NSString * const kGTLRAndroidManagement_PersonalUsagePolicies_PersonalPlayStoreMode_Blacklist = @"BLACKLIST";
NSString * const kGTLRAndroidManagement_PersonalUsagePolicies_PersonalPlayStoreMode_Blocklist = @"BLOCKLIST";
NSString * const kGTLRAndroidManagement_PersonalUsagePolicies_PersonalPlayStoreMode_PlayStoreModeUnspecified = @"PLAY_STORE_MODE_UNSPECIFIED";

// GTLRAndroidManagement_Policy.androidDevicePolicyTracks
NSString * const kGTLRAndroidManagement_Policy_AndroidDevicePolicyTracks_AppTrackUnspecified = @"APP_TRACK_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_AndroidDevicePolicyTracks_Beta = @"BETA";
NSString * const kGTLRAndroidManagement_Policy_AndroidDevicePolicyTracks_Production = @"PRODUCTION";

// GTLRAndroidManagement_Policy.appAutoUpdatePolicy
NSString * const kGTLRAndroidManagement_Policy_AppAutoUpdatePolicy_Always = @"ALWAYS";
NSString * const kGTLRAndroidManagement_Policy_AppAutoUpdatePolicy_AppAutoUpdatePolicyUnspecified = @"APP_AUTO_UPDATE_POLICY_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_AppAutoUpdatePolicy_ChoiceToTheUser = @"CHOICE_TO_THE_USER";
NSString * const kGTLRAndroidManagement_Policy_AppAutoUpdatePolicy_Never = @"NEVER";
NSString * const kGTLRAndroidManagement_Policy_AppAutoUpdatePolicy_WifiOnly = @"WIFI_ONLY";

// GTLRAndroidManagement_Policy.autoDateAndTimeZone
NSString * const kGTLRAndroidManagement_Policy_AutoDateAndTimeZone_AutoDateAndTimeZoneEnforced = @"AUTO_DATE_AND_TIME_ZONE_ENFORCED";
NSString * const kGTLRAndroidManagement_Policy_AutoDateAndTimeZone_AutoDateAndTimeZoneUnspecified = @"AUTO_DATE_AND_TIME_ZONE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_AutoDateAndTimeZone_AutoDateAndTimeZoneUserChoice = @"AUTO_DATE_AND_TIME_ZONE_USER_CHOICE";

// GTLRAndroidManagement_Policy.cameraAccess
NSString * const kGTLRAndroidManagement_Policy_CameraAccess_CameraAccessDisabled = @"CAMERA_ACCESS_DISABLED";
NSString * const kGTLRAndroidManagement_Policy_CameraAccess_CameraAccessEnforced = @"CAMERA_ACCESS_ENFORCED";
NSString * const kGTLRAndroidManagement_Policy_CameraAccess_CameraAccessUnspecified = @"CAMERA_ACCESS_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_CameraAccess_CameraAccessUserChoice = @"CAMERA_ACCESS_USER_CHOICE";

// GTLRAndroidManagement_Policy.defaultPermissionPolicy
NSString * const kGTLRAndroidManagement_Policy_DefaultPermissionPolicy_Deny = @"DENY";
NSString * const kGTLRAndroidManagement_Policy_DefaultPermissionPolicy_Grant = @"GRANT";
NSString * const kGTLRAndroidManagement_Policy_DefaultPermissionPolicy_PermissionPolicyUnspecified = @"PERMISSION_POLICY_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_DefaultPermissionPolicy_Prompt = @"PROMPT";

// GTLRAndroidManagement_Policy.encryptionPolicy
NSString * const kGTLRAndroidManagement_Policy_EncryptionPolicy_EnabledWithoutPassword = @"ENABLED_WITHOUT_PASSWORD";
NSString * const kGTLRAndroidManagement_Policy_EncryptionPolicy_EnabledWithPassword = @"ENABLED_WITH_PASSWORD";
NSString * const kGTLRAndroidManagement_Policy_EncryptionPolicy_EncryptionPolicyUnspecified = @"ENCRYPTION_POLICY_UNSPECIFIED";

// GTLRAndroidManagement_Policy.keyguardDisabledFeatures
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_AllFeatures = @"ALL_FEATURES";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_Biometrics = @"BIOMETRICS";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_Camera = @"CAMERA";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_DisableFingerprint = @"DISABLE_FINGERPRINT";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_DisableRemoteInput = @"DISABLE_REMOTE_INPUT";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_Face = @"FACE";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_Iris = @"IRIS";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_KeyguardDisabledFeatureUnspecified = @"KEYGUARD_DISABLED_FEATURE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_Notifications = @"NOTIFICATIONS";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_TrustAgents = @"TRUST_AGENTS";
NSString * const kGTLRAndroidManagement_Policy_KeyguardDisabledFeatures_UnredactedNotifications = @"UNREDACTED_NOTIFICATIONS";

// GTLRAndroidManagement_Policy.locationMode
NSString * const kGTLRAndroidManagement_Policy_LocationMode_BatterySaving = @"BATTERY_SAVING";
NSString * const kGTLRAndroidManagement_Policy_LocationMode_HighAccuracy = @"HIGH_ACCURACY";
NSString * const kGTLRAndroidManagement_Policy_LocationMode_LocationDisabled = @"LOCATION_DISABLED";
NSString * const kGTLRAndroidManagement_Policy_LocationMode_LocationEnforced = @"LOCATION_ENFORCED";
NSString * const kGTLRAndroidManagement_Policy_LocationMode_LocationModeUnspecified = @"LOCATION_MODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_LocationMode_LocationUserChoice = @"LOCATION_USER_CHOICE";
NSString * const kGTLRAndroidManagement_Policy_LocationMode_Off = @"OFF";
NSString * const kGTLRAndroidManagement_Policy_LocationMode_SensorsOnly = @"SENSORS_ONLY";

// GTLRAndroidManagement_Policy.microphoneAccess
NSString * const kGTLRAndroidManagement_Policy_MicrophoneAccess_MicrophoneAccessDisabled = @"MICROPHONE_ACCESS_DISABLED";
NSString * const kGTLRAndroidManagement_Policy_MicrophoneAccess_MicrophoneAccessEnforced = @"MICROPHONE_ACCESS_ENFORCED";
NSString * const kGTLRAndroidManagement_Policy_MicrophoneAccess_MicrophoneAccessUnspecified = @"MICROPHONE_ACCESS_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_MicrophoneAccess_MicrophoneAccessUserChoice = @"MICROPHONE_ACCESS_USER_CHOICE";

// GTLRAndroidManagement_Policy.playStoreMode
NSString * const kGTLRAndroidManagement_Policy_PlayStoreMode_Blacklist = @"BLACKLIST";
NSString * const kGTLRAndroidManagement_Policy_PlayStoreMode_PlayStoreModeUnspecified = @"PLAY_STORE_MODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_PlayStoreMode_Whitelist = @"WHITELIST";

// GTLRAndroidManagement_Policy.preferentialNetworkService
NSString * const kGTLRAndroidManagement_Policy_PreferentialNetworkService_PreferentialNetworkServiceDisabled = @"PREFERENTIAL_NETWORK_SERVICE_DISABLED";
NSString * const kGTLRAndroidManagement_Policy_PreferentialNetworkService_PreferentialNetworkServiceEnabled = @"PREFERENTIAL_NETWORK_SERVICE_ENABLED";
NSString * const kGTLRAndroidManagement_Policy_PreferentialNetworkService_PreferentialNetworkServiceUnspecified = @"PREFERENTIAL_NETWORK_SERVICE_UNSPECIFIED";

// GTLRAndroidManagement_Policy.stayOnPluggedModes
NSString * const kGTLRAndroidManagement_Policy_StayOnPluggedModes_Ac = @"AC";
NSString * const kGTLRAndroidManagement_Policy_StayOnPluggedModes_BatteryPluggedModeUnspecified = @"BATTERY_PLUGGED_MODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_Policy_StayOnPluggedModes_Usb = @"USB";
NSString * const kGTLRAndroidManagement_Policy_StayOnPluggedModes_Wireless = @"WIRELESS";

// GTLRAndroidManagement_PostureDetail.securityRisk
NSString * const kGTLRAndroidManagement_PostureDetail_SecurityRisk_CompromisedOs = @"COMPROMISED_OS";
NSString * const kGTLRAndroidManagement_PostureDetail_SecurityRisk_HardwareBackedEvaluationFailed = @"HARDWARE_BACKED_EVALUATION_FAILED";
NSString * const kGTLRAndroidManagement_PostureDetail_SecurityRisk_SecurityRiskUnspecified = @"SECURITY_RISK_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_PostureDetail_SecurityRisk_UnknownOs = @"UNKNOWN_OS";

// GTLRAndroidManagement_PowerManagementEvent.eventType
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_BatteryLevelCollected = @"BATTERY_LEVEL_COLLECTED";
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_BatteryLow = @"BATTERY_LOW";
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_BatteryOkay = @"BATTERY_OKAY";
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_BootCompleted = @"BOOT_COMPLETED";
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_PowerConnected = @"POWER_CONNECTED";
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_PowerDisconnected = @"POWER_DISCONNECTED";
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_PowerManagementEventTypeUnspecified = @"POWER_MANAGEMENT_EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_PowerManagementEvent_EventType_Shutdown = @"SHUTDOWN";

// GTLRAndroidManagement_SecurityPosture.devicePosture
NSString * const kGTLRAndroidManagement_SecurityPosture_DevicePosture_AtRisk = @"AT_RISK";
NSString * const kGTLRAndroidManagement_SecurityPosture_DevicePosture_PostureUnspecified = @"POSTURE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_SecurityPosture_DevicePosture_PotentiallyCompromised = @"POTENTIALLY_COMPROMISED";
NSString * const kGTLRAndroidManagement_SecurityPosture_DevicePosture_Secure = @"SECURE";

// GTLRAndroidManagement_SigninDetail.allowPersonalUsage
NSString * const kGTLRAndroidManagement_SigninDetail_AllowPersonalUsage_AllowPersonalUsageUnspecified = @"ALLOW_PERSONAL_USAGE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_SigninDetail_AllowPersonalUsage_PersonalUsageAllowed = @"PERSONAL_USAGE_ALLOWED";
NSString * const kGTLRAndroidManagement_SigninDetail_AllowPersonalUsage_PersonalUsageDisallowed = @"PERSONAL_USAGE_DISALLOWED";

// GTLRAndroidManagement_SystemUpdate.type
NSString * const kGTLRAndroidManagement_SystemUpdate_Type_Automatic = @"AUTOMATIC";
NSString * const kGTLRAndroidManagement_SystemUpdate_Type_Postpone = @"POSTPONE";
NSString * const kGTLRAndroidManagement_SystemUpdate_Type_SystemUpdateTypeUnspecified = @"SYSTEM_UPDATE_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_SystemUpdate_Type_Windowed = @"WINDOWED";

// GTLRAndroidManagement_SystemUpdateInfo.updateStatus
NSString * const kGTLRAndroidManagement_SystemUpdateInfo_UpdateStatus_OsUpdateAvailable = @"OS_UPDATE_AVAILABLE";
NSString * const kGTLRAndroidManagement_SystemUpdateInfo_UpdateStatus_SecurityUpdateAvailable = @"SECURITY_UPDATE_AVAILABLE";
NSString * const kGTLRAndroidManagement_SystemUpdateInfo_UpdateStatus_UnknownUpdateAvailable = @"UNKNOWN_UPDATE_AVAILABLE";
NSString * const kGTLRAndroidManagement_SystemUpdateInfo_UpdateStatus_UpdateStatusUnknown = @"UPDATE_STATUS_UNKNOWN";
NSString * const kGTLRAndroidManagement_SystemUpdateInfo_UpdateStatus_UpToDate = @"UP_TO_DATE";

// GTLRAndroidManagement_UsageLog.enabledLogTypes
NSString * const kGTLRAndroidManagement_UsageLog_EnabledLogTypes_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_UsageLog_EnabledLogTypes_NetworkActivityLogs = @"NETWORK_ACTIVITY_LOGS";
NSString * const kGTLRAndroidManagement_UsageLog_EnabledLogTypes_SecurityLogs = @"SECURITY_LOGS";

// GTLRAndroidManagement_UsageLog.uploadOnCellularAllowed
NSString * const kGTLRAndroidManagement_UsageLog_UploadOnCellularAllowed_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_UsageLog_UploadOnCellularAllowed_NetworkActivityLogs = @"NETWORK_ACTIVITY_LOGS";
NSString * const kGTLRAndroidManagement_UsageLog_UploadOnCellularAllowed_SecurityLogs = @"SECURITY_LOGS";

// GTLRAndroidManagement_UsageLogEvent.eventType
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_AdbShellCommand = @"ADB_SHELL_COMMAND";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_AdbShellInteractive = @"ADB_SHELL_INTERACTIVE";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_AppProcessStart = @"APP_PROCESS_START";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_CertAuthorityInstalled = @"CERT_AUTHORITY_INSTALLED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_CertAuthorityRemoved = @"CERT_AUTHORITY_REMOVED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_CertValidationFailure = @"CERT_VALIDATION_FAILURE";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_Connect = @"CONNECT";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_CryptoSelfTestCompleted = @"CRYPTO_SELF_TEST_COMPLETED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_Dns = @"DNS";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_EventTypeUnspecified = @"EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_FilePulled = @"FILE_PULLED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_FilePushed = @"FILE_PUSHED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_KeyDestruction = @"KEY_DESTRUCTION";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_KeyGenerated = @"KEY_GENERATED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_KeyguardDismissAuthAttempt = @"KEYGUARD_DISMISS_AUTH_ATTEMPT";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_KeyguardDismissed = @"KEYGUARD_DISMISSED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_KeyguardSecured = @"KEYGUARD_SECURED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_KeyImport = @"KEY_IMPORT";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_KeyIntegrityViolation = @"KEY_INTEGRITY_VIOLATION";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_LogBufferSizeCritical = @"LOG_BUFFER_SIZE_CRITICAL";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_LoggingStarted = @"LOGGING_STARTED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_LoggingStopped = @"LOGGING_STOPPED";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_MediaMount = @"MEDIA_MOUNT";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_MediaUnmount = @"MEDIA_UNMOUNT";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_OsShutdown = @"OS_SHUTDOWN";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_OsStartup = @"OS_STARTUP";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_RemoteLock = @"REMOTE_LOCK";
NSString * const kGTLRAndroidManagement_UsageLogEvent_EventType_WipeFailure = @"WIPE_FAILURE";

// GTLRAndroidManagement_WebApp.displayMode
NSString * const kGTLRAndroidManagement_WebApp_DisplayMode_DisplayModeUnspecified = @"DISPLAY_MODE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_WebApp_DisplayMode_FullScreen = @"FULL_SCREEN";
NSString * const kGTLRAndroidManagement_WebApp_DisplayMode_MinimalUi = @"MINIMAL_UI";
NSString * const kGTLRAndroidManagement_WebApp_DisplayMode_Standalone = @"STANDALONE";

// GTLRAndroidManagement_WebToken.enabledFeatures
NSString * const kGTLRAndroidManagement_WebToken_EnabledFeatures_FeatureUnspecified = @"FEATURE_UNSPECIFIED";
NSString * const kGTLRAndroidManagement_WebToken_EnabledFeatures_ManagedConfigurations = @"MANAGED_CONFIGURATIONS";
NSString * const kGTLRAndroidManagement_WebToken_EnabledFeatures_PlaySearch = @"PLAY_SEARCH";
NSString * const kGTLRAndroidManagement_WebToken_EnabledFeatures_PrivateApps = @"PRIVATE_APPS";
NSString * const kGTLRAndroidManagement_WebToken_EnabledFeatures_StoreBuilder = @"STORE_BUILDER";
NSString * const kGTLRAndroidManagement_WebToken_EnabledFeatures_WebApps = @"WEB_APPS";
NSString * const kGTLRAndroidManagement_WebToken_EnabledFeatures_ZeroTouchCustomerManagement = @"ZERO_TOUCH_CUSTOMER_MANAGEMENT";

// GTLRAndroidManagement_WebToken.permissions
NSString * const kGTLRAndroidManagement_WebToken_Permissions_ApproveApps = @"APPROVE_APPS";
NSString * const kGTLRAndroidManagement_WebToken_Permissions_WebTokenPermissionUnspecified = @"WEB_TOKEN_PERMISSION_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AdbShellCommandEvent
//

@implementation GTLRAndroidManagement_AdbShellCommandEvent
@dynamic shellCmd;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AdbShellInteractiveEvent
//

@implementation GTLRAndroidManagement_AdbShellInteractiveEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AdvancedSecurityOverrides
//

@implementation GTLRAndroidManagement_AdvancedSecurityOverrides
@dynamic commonCriteriaMode, developerSettings, googlePlayProtectVerifyApps,
         personalAppsThatCanReadWorkNotifications, untrustedAppsPolicy;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"personalAppsThatCanReadWorkNotifications" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AlwaysOnVpnPackage
//

@implementation GTLRAndroidManagement_AlwaysOnVpnPackage
@dynamic lockdownEnabled, packageName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ApiLevelCondition
//

@implementation GTLRAndroidManagement_ApiLevelCondition
@dynamic minApiLevel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Application
//

@implementation GTLRAndroidManagement_Application
@dynamic appPricing, appTracks, appVersions, author, availableCountries,
         category, contentRating, descriptionProperty, distributionChannel,
         features, fullDescription, iconUrl, managedProperties,
         minAndroidSdkVersion, name, permissions, playStoreUrl, recentChanges,
         screenshotUrls, smallIconUrl, title, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"appTracks" : [GTLRAndroidManagement_AppTrackInfo class],
    @"appVersions" : [GTLRAndroidManagement_AppVersion class],
    @"availableCountries" : [NSString class],
    @"features" : [NSString class],
    @"managedProperties" : [GTLRAndroidManagement_ManagedProperty class],
    @"permissions" : [GTLRAndroidManagement_ApplicationPermission class],
    @"screenshotUrls" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ApplicationEvent
//

@implementation GTLRAndroidManagement_ApplicationEvent
@dynamic createTime, eventType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ApplicationPermission
//

@implementation GTLRAndroidManagement_ApplicationPermission
@dynamic descriptionProperty, name, permissionId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ApplicationPolicy
//

@implementation GTLRAndroidManagement_ApplicationPolicy
@dynamic accessibleTrackIds, alwaysOnVpnLockdownExemption, autoUpdateMode,
         connectedWorkAndPersonalApp, defaultPermissionPolicy, delegatedScopes,
         disabled, extensionConfig, installType, lockTaskAllowed,
         managedConfiguration, managedConfigurationTemplate, minimumVersionCode,
         packageName, permissionGrants;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessibleTrackIds" : [NSString class],
    @"delegatedScopes" : [NSString class],
    @"permissionGrants" : [GTLRAndroidManagement_PermissionGrant class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ApplicationPolicy_ManagedConfiguration
//

@implementation GTLRAndroidManagement_ApplicationPolicy_ManagedConfiguration

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ApplicationReport
//

@implementation GTLRAndroidManagement_ApplicationReport
@dynamic applicationSource, displayName, events, installerPackageName,
         keyedAppStates, packageName, packageSha256Hash,
         signingKeyCertFingerprints, state, versionCode, versionName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"events" : [GTLRAndroidManagement_ApplicationEvent class],
    @"keyedAppStates" : [GTLRAndroidManagement_KeyedAppState class],
    @"signingKeyCertFingerprints" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ApplicationReportingSettings
//

@implementation GTLRAndroidManagement_ApplicationReportingSettings
@dynamic includeRemovedApps;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AppProcessInfo
//

@implementation GTLRAndroidManagement_AppProcessInfo
@dynamic apkSha256Hash, packageNames, pid, processName, seinfo, startTime, uid;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AppProcessStartEvent
//

@implementation GTLRAndroidManagement_AppProcessStartEvent
@dynamic processInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AppTrackInfo
//

@implementation GTLRAndroidManagement_AppTrackInfo
@dynamic trackAlias, trackId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_AppVersion
//

@implementation GTLRAndroidManagement_AppVersion
@dynamic production, trackIds, versionCode, versionString;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"trackIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_BatchUsageLogEvents
//

@implementation GTLRAndroidManagement_BatchUsageLogEvents
@dynamic device, retrievalTime, usageLogEvents, user;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"usageLogEvents" : [GTLRAndroidManagement_UsageLogEvent class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_BlockAction
//

@implementation GTLRAndroidManagement_BlockAction
@dynamic blockAfterDays, blockScope;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_CertAuthorityInstalledEvent
//

@implementation GTLRAndroidManagement_CertAuthorityInstalledEvent
@dynamic certificate, success, userId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_CertAuthorityRemovedEvent
//

@implementation GTLRAndroidManagement_CertAuthorityRemovedEvent
@dynamic certificate, success, userId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_CertValidationFailureEvent
//

@implementation GTLRAndroidManagement_CertValidationFailureEvent
@dynamic failureReason;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ChoosePrivateKeyRule
//

@implementation GTLRAndroidManagement_ChoosePrivateKeyRule
@dynamic packageNames, privateKeyAlias, urlPattern;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ClearAppsDataParams
//

@implementation GTLRAndroidManagement_ClearAppsDataParams
@dynamic packageNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ClearAppsDataStatus
//

@implementation GTLRAndroidManagement_ClearAppsDataStatus
@dynamic results;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ClearAppsDataStatus_Results
//

@implementation GTLRAndroidManagement_ClearAppsDataStatus_Results

+ (Class)classForAdditionalProperties {
  return [GTLRAndroidManagement_PerAppResult class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Command
//

@implementation GTLRAndroidManagement_Command
@dynamic clearAppsDataParams, clearAppsDataStatus, createTime, duration,
         errorCode, newPassword, resetPasswordFlags, type, userName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resetPasswordFlags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_CommonCriteriaModeInfo
//

@implementation GTLRAndroidManagement_CommonCriteriaModeInfo
@dynamic commonCriteriaModeStatus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ComplianceRule
//

@implementation GTLRAndroidManagement_ComplianceRule
@dynamic apiLevelCondition, disableApps, nonComplianceDetailCondition,
         packageNamesToDisable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageNamesToDisable" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ConnectEvent
//

@implementation GTLRAndroidManagement_ConnectEvent
@dynamic destinationIpAddress, destinationPort, packageName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ContactInfo
//

@implementation GTLRAndroidManagement_ContactInfo
@dynamic contactEmail, dataProtectionOfficerEmail, dataProtectionOfficerName,
         dataProtectionOfficerPhone, euRepresentativeEmail,
         euRepresentativeName, euRepresentativePhone;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ContentProviderEndpoint
//

@implementation GTLRAndroidManagement_ContentProviderEndpoint
@dynamic packageName, signingCertsSha256, uri;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signingCertsSha256" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_CrossProfilePolicies
//

@implementation GTLRAndroidManagement_CrossProfilePolicies
@dynamic crossProfileCopyPaste, crossProfileDataSharing,
         showWorkContactsInPersonalProfile;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_CryptoSelfTestCompletedEvent
//

@implementation GTLRAndroidManagement_CryptoSelfTestCompletedEvent
@dynamic success;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Date
//

@implementation GTLRAndroidManagement_Date
@dynamic day, month, year;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Device
//

@implementation GTLRAndroidManagement_Device
@dynamic apiLevel, applicationReports, appliedPasswordPolicies,
         appliedPolicyName, appliedPolicyVersion, appliedState,
         commonCriteriaModeInfo, deviceSettings, disabledReason, displays,
         enrollmentTime, enrollmentTokenData, enrollmentTokenName, hardwareInfo,
         hardwareStatusSamples, lastPolicyComplianceReportTime,
         lastPolicySyncTime, lastStatusReportTime, managementMode, memoryEvents,
         memoryInfo, name, networkInfo, nonComplianceDetails, ownership,
         policyCompliant, policyName, powerManagementEvents,
         previousDeviceNames, securityPosture, softwareInfo, state,
         systemProperties, user, userName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"applicationReports" : [GTLRAndroidManagement_ApplicationReport class],
    @"appliedPasswordPolicies" : [GTLRAndroidManagement_PasswordRequirements class],
    @"displays" : [GTLRAndroidManagement_Display class],
    @"hardwareStatusSamples" : [GTLRAndroidManagement_HardwareStatus class],
    @"memoryEvents" : [GTLRAndroidManagement_MemoryEvent class],
    @"nonComplianceDetails" : [GTLRAndroidManagement_NonComplianceDetail class],
    @"powerManagementEvents" : [GTLRAndroidManagement_PowerManagementEvent class],
    @"previousDeviceNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Device_SystemProperties
//

@implementation GTLRAndroidManagement_Device_SystemProperties

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_DeviceSettings
//

@implementation GTLRAndroidManagement_DeviceSettings
@dynamic adbEnabled, developmentSettingsEnabled, encryptionStatus,
         isDeviceSecure, isEncrypted, unknownSourcesEnabled, verifyAppsEnabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Display
//

@implementation GTLRAndroidManagement_Display
@dynamic density, displayId, height, name, refreshRate, state, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_DnsEvent
//

@implementation GTLRAndroidManagement_DnsEvent
@dynamic hostname, ipAddresses, packageName, totalIpAddressesReturned;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ipAddresses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Empty
//

@implementation GTLRAndroidManagement_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_EnrollmentToken
//

@implementation GTLRAndroidManagement_EnrollmentToken
@dynamic additionalData, allowPersonalUsage, duration, expirationTimestamp,
         name, oneTimeOnly, policyName, qrCode, user, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Enterprise
//

@implementation GTLRAndroidManagement_Enterprise
@dynamic appAutoApprovalEnabled, contactInfo, enabledNotificationTypes,
         enterpriseDisplayName, logo, name, primaryColor, pubsubTopic,
         signinDetails, termsAndConditions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enabledNotificationTypes" : [NSString class],
    @"signinDetails" : [GTLRAndroidManagement_SigninDetail class],
    @"termsAndConditions" : [GTLRAndroidManagement_TermsAndConditions class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ExtensionConfig
//

@implementation GTLRAndroidManagement_ExtensionConfig
@dynamic notificationReceiver, signingKeyFingerprintsSha256;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signingKeyFingerprintsSha256" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ExternalData
//

@implementation GTLRAndroidManagement_ExternalData
@dynamic sha256Hash, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_FilePulledEvent
//

@implementation GTLRAndroidManagement_FilePulledEvent
@dynamic filePath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_FilePushedEvent
//

@implementation GTLRAndroidManagement_FilePushedEvent
@dynamic filePath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_FreezePeriod
//

@implementation GTLRAndroidManagement_FreezePeriod
@dynamic endDate, startDate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_HardwareInfo
//

@implementation GTLRAndroidManagement_HardwareInfo
@dynamic batteryShutdownTemperatures, batteryThrottlingTemperatures, brand,
         cpuShutdownTemperatures, cpuThrottlingTemperatures,
         deviceBasebandVersion, enterpriseSpecificId, gpuShutdownTemperatures,
         gpuThrottlingTemperatures, hardware, manufacturer, model, serialNumber,
         skinShutdownTemperatures, skinThrottlingTemperatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"batteryShutdownTemperatures" : [NSNumber class],
    @"batteryThrottlingTemperatures" : [NSNumber class],
    @"cpuShutdownTemperatures" : [NSNumber class],
    @"cpuThrottlingTemperatures" : [NSNumber class],
    @"gpuShutdownTemperatures" : [NSNumber class],
    @"gpuThrottlingTemperatures" : [NSNumber class],
    @"skinShutdownTemperatures" : [NSNumber class],
    @"skinThrottlingTemperatures" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_HardwareStatus
//

@implementation GTLRAndroidManagement_HardwareStatus
@dynamic batteryTemperatures, cpuTemperatures, cpuUsages, createTime, fanSpeeds,
         gpuTemperatures, skinTemperatures;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"batteryTemperatures" : [NSNumber class],
    @"cpuTemperatures" : [NSNumber class],
    @"cpuUsages" : [NSNumber class],
    @"fanSpeeds" : [NSNumber class],
    @"gpuTemperatures" : [NSNumber class],
    @"skinTemperatures" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_IssueCommandResponse
//

@implementation GTLRAndroidManagement_IssueCommandResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyDestructionEvent
//

@implementation GTLRAndroidManagement_KeyDestructionEvent
@dynamic applicationUid, keyAlias, success;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyedAppState
//

@implementation GTLRAndroidManagement_KeyedAppState
@dynamic createTime, data, key, lastUpdateTime, message, severity;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyGeneratedEvent
//

@implementation GTLRAndroidManagement_KeyGeneratedEvent
@dynamic applicationUid, keyAlias, success;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyguardDismissAuthAttemptEvent
//

@implementation GTLRAndroidManagement_KeyguardDismissAuthAttemptEvent
@dynamic strongAuthMethodUsed, success;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyguardDismissedEvent
//

@implementation GTLRAndroidManagement_KeyguardDismissedEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyguardSecuredEvent
//

@implementation GTLRAndroidManagement_KeyguardSecuredEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyImportEvent
//

@implementation GTLRAndroidManagement_KeyImportEvent
@dynamic applicationUid, keyAlias, success;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KeyIntegrityViolationEvent
//

@implementation GTLRAndroidManagement_KeyIntegrityViolationEvent
@dynamic applicationUid, keyAlias;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_KioskCustomization
//

@implementation GTLRAndroidManagement_KioskCustomization
@dynamic deviceSettings, powerButtonActions, statusBar, systemErrorWarnings,
         systemNavigation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_LaunchAppAction
//

@implementation GTLRAndroidManagement_LaunchAppAction
@dynamic packageName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ListDevicesResponse
//

@implementation GTLRAndroidManagement_ListDevicesResponse
@dynamic devices, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"devices" : [GTLRAndroidManagement_Device class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"devices";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ListEnrollmentTokensResponse
//

@implementation GTLRAndroidManagement_ListEnrollmentTokensResponse
@dynamic enrollmentTokens, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enrollmentTokens" : [GTLRAndroidManagement_EnrollmentToken class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"enrollmentTokens";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ListEnterprisesResponse
//

@implementation GTLRAndroidManagement_ListEnterprisesResponse
@dynamic enterprises, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enterprises" : [GTLRAndroidManagement_Enterprise class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"enterprises";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ListOperationsResponse
//

@implementation GTLRAndroidManagement_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRAndroidManagement_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ListPoliciesResponse
//

@implementation GTLRAndroidManagement_ListPoliciesResponse
@dynamic nextPageToken, policies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policies" : [GTLRAndroidManagement_Policy class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"policies";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ListWebAppsResponse
//

@implementation GTLRAndroidManagement_ListWebAppsResponse
@dynamic nextPageToken, webApps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"webApps" : [GTLRAndroidManagement_WebApp class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"webApps";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_LogBufferSizeCriticalEvent
//

@implementation GTLRAndroidManagement_LogBufferSizeCriticalEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_LoggingStartedEvent
//

@implementation GTLRAndroidManagement_LoggingStartedEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_LoggingStoppedEvent
//

@implementation GTLRAndroidManagement_LoggingStoppedEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ManagedConfigurationTemplate
//

@implementation GTLRAndroidManagement_ManagedConfigurationTemplate
@dynamic configurationVariables, templateId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ManagedConfigurationTemplate_ConfigurationVariables
//

@implementation GTLRAndroidManagement_ManagedConfigurationTemplate_ConfigurationVariables

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ManagedProperty
//

@implementation GTLRAndroidManagement_ManagedProperty
@dynamic defaultValue, descriptionProperty, entries, key, nestedProperties,
         title, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"entries" : [GTLRAndroidManagement_ManagedPropertyEntry class],
    @"nestedProperties" : [GTLRAndroidManagement_ManagedProperty class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ManagedPropertyEntry
//

@implementation GTLRAndroidManagement_ManagedPropertyEntry
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_MediaMountEvent
//

@implementation GTLRAndroidManagement_MediaMountEvent
@dynamic mountPoint, volumeLabel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_MediaUnmountEvent
//

@implementation GTLRAndroidManagement_MediaUnmountEvent
@dynamic mountPoint, volumeLabel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_MemoryEvent
//

@implementation GTLRAndroidManagement_MemoryEvent
@dynamic byteCount, createTime, eventType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_MemoryInfo
//

@implementation GTLRAndroidManagement_MemoryInfo
@dynamic totalInternalStorage, totalRam;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_NetworkInfo
//

@implementation GTLRAndroidManagement_NetworkInfo
@dynamic imei, meid, networkOperatorName, telephonyInfos, wifiMacAddress;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"telephonyInfos" : [GTLRAndroidManagement_TelephonyInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_NonComplianceDetail
//

@implementation GTLRAndroidManagement_NonComplianceDetail
@dynamic currentValue, fieldPath, installationFailureReason,
         nonComplianceReason, packageName, settingName,
         specificNonComplianceContext, specificNonComplianceReason;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_NonComplianceDetailCondition
//

@implementation GTLRAndroidManagement_NonComplianceDetailCondition
@dynamic nonComplianceReason, packageName, settingName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_OncCertificateProvider
//

@implementation GTLRAndroidManagement_OncCertificateProvider
@dynamic certificateReferences, contentProviderEndpoint;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"certificateReferences" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_OncWifiContext
//

@implementation GTLRAndroidManagement_OncWifiContext
@dynamic wifiGuid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Operation
//

@implementation GTLRAndroidManagement_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Operation_Metadata
//

@implementation GTLRAndroidManagement_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Operation_Response
//

@implementation GTLRAndroidManagement_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_OsShutdownEvent
//

@implementation GTLRAndroidManagement_OsShutdownEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_OsStartupEvent
//

@implementation GTLRAndroidManagement_OsStartupEvent
@dynamic verifiedBootState, verityMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PackageNameList
//

@implementation GTLRAndroidManagement_PackageNameList
@dynamic packageNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packageNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PasswordPoliciesContext
//

@implementation GTLRAndroidManagement_PasswordPoliciesContext
@dynamic passwordPolicyScope;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PasswordRequirements
//

@implementation GTLRAndroidManagement_PasswordRequirements
@dynamic maximumFailedPasswordsForWipe, passwordExpirationTimeout,
         passwordHistoryLength, passwordMinimumLength, passwordMinimumLetters,
         passwordMinimumLowerCase, passwordMinimumNonLetter,
         passwordMinimumNumeric, passwordMinimumSymbols,
         passwordMinimumUpperCase, passwordQuality, passwordScope,
         requirePasswordUnlock, unifiedLockSettings;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PerAppResult
//

@implementation GTLRAndroidManagement_PerAppResult
@dynamic clearingResult;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PermissionGrant
//

@implementation GTLRAndroidManagement_PermissionGrant
@dynamic permission, policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PersistentPreferredActivity
//

@implementation GTLRAndroidManagement_PersistentPreferredActivity
@dynamic actions, categories, receiverActivity;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"actions" : [NSString class],
    @"categories" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PersonalApplicationPolicy
//

@implementation GTLRAndroidManagement_PersonalApplicationPolicy
@dynamic installType, packageName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PersonalUsagePolicies
//

@implementation GTLRAndroidManagement_PersonalUsagePolicies
@dynamic accountTypesWithManagementDisabled, cameraDisabled, maxDaysWithWorkOff,
         personalApplications, personalPlayStoreMode, screenCaptureDisabled;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accountTypesWithManagementDisabled" : [NSString class],
    @"personalApplications" : [GTLRAndroidManagement_PersonalApplicationPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Policy
//

@implementation GTLRAndroidManagement_Policy
@dynamic accountTypesWithManagementDisabled, addUserDisabled,
         adjustVolumeDisabled, advancedSecurityOverrides, alwaysOnVpnPackage,
         androidDevicePolicyTracks, appAutoUpdatePolicy, applications,
         autoDateAndTimeZone, autoTimeRequired, blockApplicationsEnabled,
         bluetoothConfigDisabled, bluetoothContactSharingDisabled,
         bluetoothDisabled, cameraAccess, cameraDisabled,
         cellBroadcastsConfigDisabled, choosePrivateKeyRules, complianceRules,
         createWindowsDisabled, credentialsConfigDisabled, crossProfilePolicies,
         dataRoamingDisabled, debuggingFeaturesAllowed, defaultPermissionPolicy,
         deviceOwnerLockScreenInfo, encryptionPolicy, ensureVerifyAppsEnabled,
         factoryResetDisabled, frpAdminEmails, funDisabled, installAppsDisabled,
         installUnknownSourcesAllowed, keyguardDisabled,
         keyguardDisabledFeatures, kioskCustomization,
         kioskCustomLauncherEnabled, locationMode, longSupportMessage,
         maximumTimeToLock, microphoneAccess, minimumApiLevel,
         mobileNetworksConfigDisabled, modifyAccountsDisabled,
         mountPhysicalMediaDisabled, name, networkEscapeHatchEnabled,
         networkResetDisabled, oncCertificateProviders,
         openNetworkConfiguration, outgoingBeamDisabled, outgoingCallsDisabled,
         passwordPolicies, passwordRequirements, permissionGrants,
         permittedAccessibilityServices, permittedInputMethods,
         persistentPreferredActivities, personalUsagePolicies, playStoreMode,
         policyEnforcementRules, preferentialNetworkService,
         privateKeySelectionEnabled, recommendedGlobalProxy, removeUserDisabled,
         safeBootDisabled, screenCaptureDisabled, setupActions,
         setUserIconDisabled, setWallpaperDisabled, shareLocationDisabled,
         shortSupportMessage, skipFirstUseHintsEnabled, smsDisabled,
         statusBarDisabled, statusReportingSettings, stayOnPluggedModes,
         systemUpdate, tetheringConfigDisabled, uninstallAppsDisabled,
         unmuteMicrophoneDisabled, usageLog, usbFileTransferDisabled,
         usbMassStorageEnabled, version, vpnConfigDisabled, wifiConfigDisabled,
         wifiConfigsLockdownEnabled;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accountTypesWithManagementDisabled" : [NSString class],
    @"androidDevicePolicyTracks" : [NSString class],
    @"applications" : [GTLRAndroidManagement_ApplicationPolicy class],
    @"choosePrivateKeyRules" : [GTLRAndroidManagement_ChoosePrivateKeyRule class],
    @"complianceRules" : [GTLRAndroidManagement_ComplianceRule class],
    @"frpAdminEmails" : [NSString class],
    @"keyguardDisabledFeatures" : [NSString class],
    @"oncCertificateProviders" : [GTLRAndroidManagement_OncCertificateProvider class],
    @"passwordPolicies" : [GTLRAndroidManagement_PasswordRequirements class],
    @"permissionGrants" : [GTLRAndroidManagement_PermissionGrant class],
    @"persistentPreferredActivities" : [GTLRAndroidManagement_PersistentPreferredActivity class],
    @"policyEnforcementRules" : [GTLRAndroidManagement_PolicyEnforcementRule class],
    @"setupActions" : [GTLRAndroidManagement_SetupAction class],
    @"stayOnPluggedModes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Policy_OpenNetworkConfiguration
//

@implementation GTLRAndroidManagement_Policy_OpenNetworkConfiguration

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PolicyEnforcementRule
//

@implementation GTLRAndroidManagement_PolicyEnforcementRule
@dynamic blockAction, settingName, wipeAction;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PostureDetail
//

@implementation GTLRAndroidManagement_PostureDetail
@dynamic advice, securityRisk;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advice" : [GTLRAndroidManagement_UserFacingMessage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_PowerManagementEvent
//

@implementation GTLRAndroidManagement_PowerManagementEvent
@dynamic batteryLevel, createTime, eventType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_ProxyInfo
//

@implementation GTLRAndroidManagement_ProxyInfo
@dynamic excludedHosts, host, pacUri, port;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"excludedHosts" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_RemoteLockEvent
//

@implementation GTLRAndroidManagement_RemoteLockEvent
@dynamic adminPackageName, adminUserId, targetUserId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SecurityPosture
//

@implementation GTLRAndroidManagement_SecurityPosture
@dynamic devicePosture, postureDetails;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"postureDetails" : [GTLRAndroidManagement_PostureDetail class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SetupAction
//

@implementation GTLRAndroidManagement_SetupAction
@dynamic descriptionProperty, launchApp, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SigninDetail
//

@implementation GTLRAndroidManagement_SigninDetail
@dynamic allowPersonalUsage, qrCode, signinEnrollmentToken, signinUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SignupUrl
//

@implementation GTLRAndroidManagement_SignupUrl
@dynamic name, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SoftwareInfo
//

@implementation GTLRAndroidManagement_SoftwareInfo
@dynamic androidBuildNumber, androidBuildTime, androidDevicePolicyVersionCode,
         androidDevicePolicyVersionName, androidVersion, bootloaderVersion,
         deviceBuildSignature, deviceKernelVersion, primaryLanguageCode,
         securityPatchLevel, systemUpdateInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SpecificNonComplianceContext
//

@implementation GTLRAndroidManagement_SpecificNonComplianceContext
@dynamic oncWifiContext, passwordPoliciesContext;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Status
//

@implementation GTLRAndroidManagement_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRAndroidManagement_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_Status_Details_Item
//

@implementation GTLRAndroidManagement_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_StatusReportingSettings
//

@implementation GTLRAndroidManagement_StatusReportingSettings
@dynamic applicationReportingSettings, applicationReportsEnabled,
         commonCriteriaModeEnabled, deviceSettingsEnabled, displayInfoEnabled,
         hardwareStatusEnabled, memoryInfoEnabled, networkInfoEnabled,
         powerManagementEventsEnabled, softwareInfoEnabled,
         systemPropertiesEnabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SystemUpdate
//

@implementation GTLRAndroidManagement_SystemUpdate
@dynamic endMinutes, freezePeriods, startMinutes, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"freezePeriods" : [GTLRAndroidManagement_FreezePeriod class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_SystemUpdateInfo
//

@implementation GTLRAndroidManagement_SystemUpdateInfo
@dynamic updateReceivedTime, updateStatus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_TelephonyInfo
//

@implementation GTLRAndroidManagement_TelephonyInfo
@dynamic carrierName, phoneNumber;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_TermsAndConditions
//

@implementation GTLRAndroidManagement_TermsAndConditions
@dynamic content, header;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_UsageLog
//

@implementation GTLRAndroidManagement_UsageLog
@dynamic enabledLogTypes, uploadOnCellularAllowed;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enabledLogTypes" : [NSString class],
    @"uploadOnCellularAllowed" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_UsageLogEvent
//

@implementation GTLRAndroidManagement_UsageLogEvent
@dynamic adbShellCommandEvent, adbShellInteractiveEvent, appProcessStartEvent,
         certAuthorityInstalledEvent, certAuthorityRemovedEvent,
         certValidationFailureEvent, connectEvent, cryptoSelfTestCompletedEvent,
         dnsEvent, eventId, eventTime, eventType, filePulledEvent,
         filePushedEvent, keyDestructionEvent, keyGeneratedEvent,
         keyguardDismissAuthAttemptEvent, keyguardDismissedEvent,
         keyguardSecuredEvent, keyImportEvent, keyIntegrityViolationEvent,
         logBufferSizeCriticalEvent, loggingStartedEvent, loggingStoppedEvent,
         mediaMountEvent, mediaUnmountEvent, osShutdownEvent, osStartupEvent,
         remoteLockEvent, wipeFailureEvent;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_User
//

@implementation GTLRAndroidManagement_User
@dynamic accountIdentifier;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_UserFacingMessage
//

@implementation GTLRAndroidManagement_UserFacingMessage
@dynamic defaultMessage, localizedMessages;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_UserFacingMessage_LocalizedMessages
//

@implementation GTLRAndroidManagement_UserFacingMessage_LocalizedMessages

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_WebApp
//

@implementation GTLRAndroidManagement_WebApp
@dynamic displayMode, icons, name, startUrl, title, versionCode;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"icons" : [GTLRAndroidManagement_WebAppIcon class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_WebAppIcon
//

@implementation GTLRAndroidManagement_WebAppIcon
@dynamic imageData;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_WebToken
//

@implementation GTLRAndroidManagement_WebToken
@dynamic enabledFeatures, name, parentFrameUrl, permissions, value;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enabledFeatures" : [NSString class],
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_WipeAction
//

@implementation GTLRAndroidManagement_WipeAction
@dynamic preserveFrp, wipeAfterDays;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAndroidManagement_WipeFailureEvent
//

@implementation GTLRAndroidManagement_WipeFailureEvent
@end
