// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Text-to-Speech API (texttospeech/v1)
// Description:
//   Synthesizes natural-sounding speech by applying powerful neural network
//   models.
// Documentation:
//   https://cloud.google.com/text-to-speech/

#import <GoogleAPIClientForREST/GTLRTexttospeechQuery.h>

@implementation GTLRTexttospeechQuery

@dynamic fields;

@end

@implementation GTLRTexttospeechQuery_OperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRTexttospeech_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRTexttospeechQuery_OperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRTexttospeech_Empty class];
  query.loggingName = @"texttospeech.operations.cancel";
  return query;
}

@end

@implementation GTLRTexttospeechQuery_OperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRTexttospeechQuery_OperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTexttospeech_Empty class];
  query.loggingName = @"texttospeech.operations.delete";
  return query;
}

@end

@implementation GTLRTexttospeechQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRTexttospeechQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTexttospeech_Operation class];
  query.loggingName = @"texttospeech.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRTexttospeechQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRTexttospeechQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTexttospeech_ListOperationsResponse class];
  query.loggingName = @"texttospeech.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRTexttospeechQuery_ProjectsLocationsSynthesizeLongAudio

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRTexttospeech_SynthesizeLongAudioRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:synthesizeLongAudio";
  GTLRTexttospeechQuery_ProjectsLocationsSynthesizeLongAudio *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRTexttospeech_Operation class];
  query.loggingName = @"texttospeech.projects.locations.synthesizeLongAudio";
  return query;
}

@end

@implementation GTLRTexttospeechQuery_TextSynthesize

+ (instancetype)queryWithObject:(GTLRTexttospeech_SynthesizeSpeechRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/text:synthesize";
  GTLRTexttospeechQuery_TextSynthesize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRTexttospeech_SynthesizeSpeechResponse class];
  query.loggingName = @"texttospeech.text.synthesize";
  return query;
}

@end

@implementation GTLRTexttospeechQuery_VoicesList

@dynamic languageCode;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1/voices";
  GTLRTexttospeechQuery_VoicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRTexttospeech_ListVoicesResponse class];
  query.loggingName = @"texttospeech.voices.list";
  return query;
}

@end
