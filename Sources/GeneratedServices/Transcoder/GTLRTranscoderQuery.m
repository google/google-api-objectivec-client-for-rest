// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Transcoder API (transcoder/v1)
// Description:
//   This API converts video files into formats suitable for consumer
//   distribution. For more information, see the Transcoder API overview.
// Documentation:
//   https://cloud.google.com/transcoder/docs/

#import <GoogleAPIClientForREST/GTLRTranscoderQuery.h>

@implementation GTLRTranscoderQuery

@dynamic fields;

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRTranscoder_Job *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/jobs";
  GTLRTranscoderQuery_ProjectsLocationsJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRTranscoder_Job class];
  query.loggingName = @"transcoder.projects.locations.jobs.create";
  return query;
}

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobsDelete

@dynamic allowMissing, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRTranscoderQuery_ProjectsLocationsJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTranscoder_Empty class];
  query.loggingName = @"transcoder.projects.locations.jobs.delete";
  return query;
}

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRTranscoderQuery_ProjectsLocationsJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTranscoder_Job class];
  query.loggingName = @"transcoder.projects.locations.jobs.get";
  return query;
}

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/jobs";
  GTLRTranscoderQuery_ProjectsLocationsJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRTranscoder_ListJobsResponse class];
  query.loggingName = @"transcoder.projects.locations.jobs.list";
  return query;
}

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobTemplatesCreate

@dynamic jobTemplateId, parent;

+ (instancetype)queryWithObject:(GTLRTranscoder_JobTemplate *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/jobTemplates";
  GTLRTranscoderQuery_ProjectsLocationsJobTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRTranscoder_JobTemplate class];
  query.loggingName = @"transcoder.projects.locations.jobTemplates.create";
  return query;
}

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobTemplatesDelete

@dynamic allowMissing, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRTranscoderQuery_ProjectsLocationsJobTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTranscoder_Empty class];
  query.loggingName = @"transcoder.projects.locations.jobTemplates.delete";
  return query;
}

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRTranscoderQuery_ProjectsLocationsJobTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTranscoder_JobTemplate class];
  query.loggingName = @"transcoder.projects.locations.jobTemplates.get";
  return query;
}

@end

@implementation GTLRTranscoderQuery_ProjectsLocationsJobTemplatesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/jobTemplates";
  GTLRTranscoderQuery_ProjectsLocationsJobTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRTranscoder_ListJobTemplatesResponse class];
  query.loggingName = @"transcoder.projects.locations.jobTemplates.list";
  return query;
}

@end
