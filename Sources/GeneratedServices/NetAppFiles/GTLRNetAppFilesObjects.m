// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   NetApp API (netapp/v1)
// Description:
//   Google Cloud NetApp Volumes is a fully-managed, cloud-based data storage
//   service that provides advanced data management capabilities and highly
//   scalable performance with global availability.
// Documentation:
//   https://cloud.google.com/netapp/

#import <GoogleAPIClientForREST/GTLRNetAppFilesObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRNetAppFiles_ActiveDirectory.state
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_Creating = @"CREATING";
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_Deleting = @"DELETING";
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_Diagnosing = @"DIAGNOSING";
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_Error  = @"ERROR";
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_InUse  = @"IN_USE";
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_Ready  = @"READY";
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_ActiveDirectory_State_Updating = @"UPDATING";

// GTLRNetAppFiles_Backup.backupType
NSString * const kGTLRNetAppFiles_Backup_BackupType_Manual     = @"MANUAL";
NSString * const kGTLRNetAppFiles_Backup_BackupType_Scheduled  = @"SCHEDULED";
NSString * const kGTLRNetAppFiles_Backup_BackupType_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRNetAppFiles_Backup.state
NSString * const kGTLRNetAppFiles_Backup_State_Creating        = @"CREATING";
NSString * const kGTLRNetAppFiles_Backup_State_Deleting        = @"DELETING";
NSString * const kGTLRNetAppFiles_Backup_State_Error           = @"ERROR";
NSString * const kGTLRNetAppFiles_Backup_State_Ready           = @"READY";
NSString * const kGTLRNetAppFiles_Backup_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Backup_State_Updating        = @"UPDATING";
NSString * const kGTLRNetAppFiles_Backup_State_Uploading       = @"UPLOADING";

// GTLRNetAppFiles_BackupPolicy.state
NSString * const kGTLRNetAppFiles_BackupPolicy_State_Creating  = @"CREATING";
NSString * const kGTLRNetAppFiles_BackupPolicy_State_Deleting  = @"DELETING";
NSString * const kGTLRNetAppFiles_BackupPolicy_State_Error     = @"ERROR";
NSString * const kGTLRNetAppFiles_BackupPolicy_State_Ready     = @"READY";
NSString * const kGTLRNetAppFiles_BackupPolicy_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_BackupPolicy_State_Updating  = @"UPDATING";

// GTLRNetAppFiles_BackupVault.state
NSString * const kGTLRNetAppFiles_BackupVault_State_Creating   = @"CREATING";
NSString * const kGTLRNetAppFiles_BackupVault_State_Deleting   = @"DELETING";
NSString * const kGTLRNetAppFiles_BackupVault_State_Error      = @"ERROR";
NSString * const kGTLRNetAppFiles_BackupVault_State_Ready      = @"READY";
NSString * const kGTLRNetAppFiles_BackupVault_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_BackupVault_State_Updating   = @"UPDATING";

// GTLRNetAppFiles_KmsConfig.state
NSString * const kGTLRNetAppFiles_KmsConfig_State_Creating     = @"CREATING";
NSString * const kGTLRNetAppFiles_KmsConfig_State_Deleting     = @"DELETING";
NSString * const kGTLRNetAppFiles_KmsConfig_State_Disabled     = @"DISABLED";
NSString * const kGTLRNetAppFiles_KmsConfig_State_Disabling    = @"DISABLING";
NSString * const kGTLRNetAppFiles_KmsConfig_State_Error        = @"ERROR";
NSString * const kGTLRNetAppFiles_KmsConfig_State_InUse        = @"IN_USE";
NSString * const kGTLRNetAppFiles_KmsConfig_State_KeyCheckPending = @"KEY_CHECK_PENDING";
NSString * const kGTLRNetAppFiles_KmsConfig_State_KeyNotReachable = @"KEY_NOT_REACHABLE";
NSString * const kGTLRNetAppFiles_KmsConfig_State_Migrating    = @"MIGRATING";
NSString * const kGTLRNetAppFiles_KmsConfig_State_Ready        = @"READY";
NSString * const kGTLRNetAppFiles_KmsConfig_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_KmsConfig_State_Updating     = @"UPDATING";

// GTLRNetAppFiles_LocationMetadata.supportedServiceLevels
NSString * const kGTLRNetAppFiles_LocationMetadata_SupportedServiceLevels_Extreme = @"EXTREME";
NSString * const kGTLRNetAppFiles_LocationMetadata_SupportedServiceLevels_Flex = @"FLEX";
NSString * const kGTLRNetAppFiles_LocationMetadata_SupportedServiceLevels_Premium = @"PREMIUM";
NSString * const kGTLRNetAppFiles_LocationMetadata_SupportedServiceLevels_ServiceLevelUnspecified = @"SERVICE_LEVEL_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_LocationMetadata_SupportedServiceLevels_Standard = @"STANDARD";

// GTLRNetAppFiles_MountOption.protocol
NSString * const kGTLRNetAppFiles_MountOption_Protocol_Nfsv3   = @"NFSV3";
NSString * const kGTLRNetAppFiles_MountOption_Protocol_Nfsv4   = @"NFSV4";
NSString * const kGTLRNetAppFiles_MountOption_Protocol_ProtocolsUnspecified = @"PROTOCOLS_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_MountOption_Protocol_Smb     = @"SMB";

// GTLRNetAppFiles_Replication.hybridReplicationType
NSString * const kGTLRNetAppFiles_Replication_HybridReplicationType_ContinuousReplication = @"CONTINUOUS_REPLICATION";
NSString * const kGTLRNetAppFiles_Replication_HybridReplicationType_HybridReplicationTypeUnspecified = @"HYBRID_REPLICATION_TYPE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Replication_HybridReplicationType_Migration = @"MIGRATION";

// GTLRNetAppFiles_Replication.mirrorState
NSString * const kGTLRNetAppFiles_Replication_MirrorState_Aborted = @"ABORTED";
NSString * const kGTLRNetAppFiles_Replication_MirrorState_BaselineTransferring = @"BASELINE_TRANSFERRING";
NSString * const kGTLRNetAppFiles_Replication_MirrorState_Mirrored = @"MIRRORED";
NSString * const kGTLRNetAppFiles_Replication_MirrorState_MirrorStateUnspecified = @"MIRROR_STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Replication_MirrorState_Preparing = @"PREPARING";
NSString * const kGTLRNetAppFiles_Replication_MirrorState_Stopped = @"STOPPED";
NSString * const kGTLRNetAppFiles_Replication_MirrorState_Transferring = @"TRANSFERRING";

// GTLRNetAppFiles_Replication.replicationSchedule
NSString * const kGTLRNetAppFiles_Replication_ReplicationSchedule_Daily = @"DAILY";
NSString * const kGTLRNetAppFiles_Replication_ReplicationSchedule_Every10Minutes = @"EVERY_10_MINUTES";
NSString * const kGTLRNetAppFiles_Replication_ReplicationSchedule_Hourly = @"HOURLY";
NSString * const kGTLRNetAppFiles_Replication_ReplicationSchedule_ReplicationScheduleUnspecified = @"REPLICATION_SCHEDULE_UNSPECIFIED";

// GTLRNetAppFiles_Replication.role
NSString * const kGTLRNetAppFiles_Replication_Role_Destination = @"DESTINATION";
NSString * const kGTLRNetAppFiles_Replication_Role_ReplicationRoleUnspecified = @"REPLICATION_ROLE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Replication_Role_Source      = @"SOURCE";

// GTLRNetAppFiles_Replication.state
NSString * const kGTLRNetAppFiles_Replication_State_Creating   = @"CREATING";
NSString * const kGTLRNetAppFiles_Replication_State_Deleting   = @"DELETING";
NSString * const kGTLRNetAppFiles_Replication_State_Error      = @"ERROR";
NSString * const kGTLRNetAppFiles_Replication_State_PendingClusterPeering = @"PENDING_CLUSTER_PEERING";
NSString * const kGTLRNetAppFiles_Replication_State_PendingSvmPeering = @"PENDING_SVM_PEERING";
NSString * const kGTLRNetAppFiles_Replication_State_Ready      = @"READY";
NSString * const kGTLRNetAppFiles_Replication_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Replication_State_Updating   = @"UPDATING";

// GTLRNetAppFiles_SimpleExportPolicyRule.accessType
NSString * const kGTLRNetAppFiles_SimpleExportPolicyRule_AccessType_AccessTypeUnspecified = @"ACCESS_TYPE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_SimpleExportPolicyRule_AccessType_ReadNone = @"READ_NONE";
NSString * const kGTLRNetAppFiles_SimpleExportPolicyRule_AccessType_ReadOnly = @"READ_ONLY";
NSString * const kGTLRNetAppFiles_SimpleExportPolicyRule_AccessType_ReadWrite = @"READ_WRITE";

// GTLRNetAppFiles_Snapshot.state
NSString * const kGTLRNetAppFiles_Snapshot_State_Creating      = @"CREATING";
NSString * const kGTLRNetAppFiles_Snapshot_State_Deleting      = @"DELETING";
NSString * const kGTLRNetAppFiles_Snapshot_State_Disabled      = @"DISABLED";
NSString * const kGTLRNetAppFiles_Snapshot_State_Error         = @"ERROR";
NSString * const kGTLRNetAppFiles_Snapshot_State_Ready         = @"READY";
NSString * const kGTLRNetAppFiles_Snapshot_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Snapshot_State_Updating      = @"UPDATING";

// GTLRNetAppFiles_StoragePool.encryptionType
NSString * const kGTLRNetAppFiles_StoragePool_EncryptionType_CloudKms = @"CLOUD_KMS";
NSString * const kGTLRNetAppFiles_StoragePool_EncryptionType_EncryptionTypeUnspecified = @"ENCRYPTION_TYPE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_StoragePool_EncryptionType_ServiceManaged = @"SERVICE_MANAGED";

// GTLRNetAppFiles_StoragePool.serviceLevel
NSString * const kGTLRNetAppFiles_StoragePool_ServiceLevel_Extreme = @"EXTREME";
NSString * const kGTLRNetAppFiles_StoragePool_ServiceLevel_Flex = @"FLEX";
NSString * const kGTLRNetAppFiles_StoragePool_ServiceLevel_Premium = @"PREMIUM";
NSString * const kGTLRNetAppFiles_StoragePool_ServiceLevel_ServiceLevelUnspecified = @"SERVICE_LEVEL_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_StoragePool_ServiceLevel_Standard = @"STANDARD";

// GTLRNetAppFiles_StoragePool.state
NSString * const kGTLRNetAppFiles_StoragePool_State_Creating   = @"CREATING";
NSString * const kGTLRNetAppFiles_StoragePool_State_Deleting   = @"DELETING";
NSString * const kGTLRNetAppFiles_StoragePool_State_Disabled   = @"DISABLED";
NSString * const kGTLRNetAppFiles_StoragePool_State_Error      = @"ERROR";
NSString * const kGTLRNetAppFiles_StoragePool_State_Ready      = @"READY";
NSString * const kGTLRNetAppFiles_StoragePool_State_Restoring  = @"RESTORING";
NSString * const kGTLRNetAppFiles_StoragePool_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_StoragePool_State_Updating   = @"UPDATING";

// GTLRNetAppFiles_TieringPolicy.tierAction
NSString * const kGTLRNetAppFiles_TieringPolicy_TierAction_Enabled = @"ENABLED";
NSString * const kGTLRNetAppFiles_TieringPolicy_TierAction_Paused = @"PAUSED";
NSString * const kGTLRNetAppFiles_TieringPolicy_TierAction_TierActionUnspecified = @"TIER_ACTION_UNSPECIFIED";

// GTLRNetAppFiles_ValidateDirectoryServiceRequest.directoryServiceType
NSString * const kGTLRNetAppFiles_ValidateDirectoryServiceRequest_DirectoryServiceType_ActiveDirectory = @"ACTIVE_DIRECTORY";
NSString * const kGTLRNetAppFiles_ValidateDirectoryServiceRequest_DirectoryServiceType_DirectoryServiceTypeUnspecified = @"DIRECTORY_SERVICE_TYPE_UNSPECIFIED";

// GTLRNetAppFiles_Volume.encryptionType
NSString * const kGTLRNetAppFiles_Volume_EncryptionType_CloudKms = @"CLOUD_KMS";
NSString * const kGTLRNetAppFiles_Volume_EncryptionType_EncryptionTypeUnspecified = @"ENCRYPTION_TYPE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Volume_EncryptionType_ServiceManaged = @"SERVICE_MANAGED";

// GTLRNetAppFiles_Volume.protocols
NSString * const kGTLRNetAppFiles_Volume_Protocols_Nfsv3       = @"NFSV3";
NSString * const kGTLRNetAppFiles_Volume_Protocols_Nfsv4       = @"NFSV4";
NSString * const kGTLRNetAppFiles_Volume_Protocols_ProtocolsUnspecified = @"PROTOCOLS_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Volume_Protocols_Smb         = @"SMB";

// GTLRNetAppFiles_Volume.restrictedActions
NSString * const kGTLRNetAppFiles_Volume_RestrictedActions_Delete = @"DELETE";
NSString * const kGTLRNetAppFiles_Volume_RestrictedActions_RestrictedActionUnspecified = @"RESTRICTED_ACTION_UNSPECIFIED";

// GTLRNetAppFiles_Volume.securityStyle
NSString * const kGTLRNetAppFiles_Volume_SecurityStyle_Ntfs    = @"NTFS";
NSString * const kGTLRNetAppFiles_Volume_SecurityStyle_SecurityStyleUnspecified = @"SECURITY_STYLE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Volume_SecurityStyle_Unix    = @"UNIX";

// GTLRNetAppFiles_Volume.serviceLevel
NSString * const kGTLRNetAppFiles_Volume_ServiceLevel_Extreme  = @"EXTREME";
NSString * const kGTLRNetAppFiles_Volume_ServiceLevel_Flex     = @"FLEX";
NSString * const kGTLRNetAppFiles_Volume_ServiceLevel_Premium  = @"PREMIUM";
NSString * const kGTLRNetAppFiles_Volume_ServiceLevel_ServiceLevelUnspecified = @"SERVICE_LEVEL_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Volume_ServiceLevel_Standard = @"STANDARD";

// GTLRNetAppFiles_Volume.smbSettings
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_AccessBasedEnumeration = @"ACCESS_BASED_ENUMERATION";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_Browsable = @"BROWSABLE";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_ChangeNotify = @"CHANGE_NOTIFY";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_ContinuouslyAvailable = @"CONTINUOUSLY_AVAILABLE";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_EncryptData = @"ENCRYPT_DATA";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_NonBrowsable = @"NON_BROWSABLE";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_Oplocks   = @"OPLOCKS";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_ShowPreviousVersions = @"SHOW_PREVIOUS_VERSIONS";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_ShowSnapshot = @"SHOW_SNAPSHOT";
NSString * const kGTLRNetAppFiles_Volume_SmbSettings_SmbSettingsUnspecified = @"SMB_SETTINGS_UNSPECIFIED";

// GTLRNetAppFiles_Volume.state
NSString * const kGTLRNetAppFiles_Volume_State_Creating        = @"CREATING";
NSString * const kGTLRNetAppFiles_Volume_State_Deleting        = @"DELETING";
NSString * const kGTLRNetAppFiles_Volume_State_Disabled        = @"DISABLED";
NSString * const kGTLRNetAppFiles_Volume_State_Error           = @"ERROR";
NSString * const kGTLRNetAppFiles_Volume_State_Preparing       = @"PREPARING";
NSString * const kGTLRNetAppFiles_Volume_State_ReadOnly        = @"READ_ONLY";
NSString * const kGTLRNetAppFiles_Volume_State_Ready           = @"READY";
NSString * const kGTLRNetAppFiles_Volume_State_Restoring       = @"RESTORING";
NSString * const kGTLRNetAppFiles_Volume_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRNetAppFiles_Volume_State_Updating        = @"UPDATING";

// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ActiveDirectory
//

@implementation GTLRNetAppFiles_ActiveDirectory
@dynamic administrators, aesEncryption, backupOperators, createTime,
         descriptionProperty, dns, domain, encryptDcConnections, kdcHostname,
         kdcIp, labels, ldapSigning, name, netBiosPrefix, nfsUsersWithLdap,
         organizationalUnit, password, securityOperators, site, state,
         stateDetails, username;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"administrators" : [NSString class],
    @"backupOperators" : [NSString class],
    @"securityOperators" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ActiveDirectory_Labels
//

@implementation GTLRNetAppFiles_ActiveDirectory_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Backup
//

@implementation GTLRNetAppFiles_Backup
@dynamic backupType, chainStorageBytes, createTime, descriptionProperty, labels,
         name, satisfiesPzi, satisfiesPzs, sourceSnapshot, sourceVolume, state,
         volumeUsageBytes;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Backup_Labels
//

@implementation GTLRNetAppFiles_Backup_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_BackupConfig
//

@implementation GTLRNetAppFiles_BackupConfig
@dynamic backupChainBytes, backupPolicies, backupVault, scheduledBackupEnabled;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backupPolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_BackupPolicy
//

@implementation GTLRNetAppFiles_BackupPolicy
@dynamic assignedVolumeCount, createTime, dailyBackupLimit, descriptionProperty,
         enabled, labels, monthlyBackupLimit, name, state, weeklyBackupLimit;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_BackupPolicy_Labels
//

@implementation GTLRNetAppFiles_BackupPolicy_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_BackupVault
//

@implementation GTLRNetAppFiles_BackupVault
@dynamic createTime, descriptionProperty, labels, name, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_BackupVault_Labels
//

@implementation GTLRNetAppFiles_BackupVault_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_CancelOperationRequest
//

@implementation GTLRNetAppFiles_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_DailySchedule
//

@implementation GTLRNetAppFiles_DailySchedule
@dynamic hour, minute, snapshotsToKeep;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_DestinationVolumeParameters
//

@implementation GTLRNetAppFiles_DestinationVolumeParameters
@dynamic descriptionProperty, shareName, storagePool, tieringPolicy, volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_EncryptVolumesRequest
//

@implementation GTLRNetAppFiles_EncryptVolumesRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_EstablishPeeringRequest
//

@implementation GTLRNetAppFiles_EstablishPeeringRequest
@dynamic peerClusterName, peerIpAddresses, peerSvmName, peerVolumeName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"peerIpAddresses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ExportPolicy
//

@implementation GTLRNetAppFiles_ExportPolicy
@dynamic rules;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRNetAppFiles_SimpleExportPolicyRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_GoogleProtobufEmpty
//

@implementation GTLRNetAppFiles_GoogleProtobufEmpty
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_HourlySchedule
//

@implementation GTLRNetAppFiles_HourlySchedule
@dynamic minute, snapshotsToKeep;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_HybridPeeringDetails
//

@implementation GTLRNetAppFiles_HybridPeeringDetails
@dynamic command, commandExpiryTime, passphrase, subnetIp;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_HybridReplicationParameters
//

@implementation GTLRNetAppFiles_HybridReplicationParameters
@dynamic clusterLocation, descriptionProperty, labels, peerClusterName,
         peerIpAddresses, peerSvmName, peerVolumeName, replication;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"peerIpAddresses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_HybridReplicationParameters_Labels
//

@implementation GTLRNetAppFiles_HybridReplicationParameters_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_KmsConfig
//

@implementation GTLRNetAppFiles_KmsConfig
@dynamic createTime, cryptoKeyName, descriptionProperty, instructions, labels,
         name, serviceAccount, state, stateDetails;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_KmsConfig_Labels
//

@implementation GTLRNetAppFiles_KmsConfig_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListActiveDirectoriesResponse
//

@implementation GTLRNetAppFiles_ListActiveDirectoriesResponse
@dynamic activeDirectories, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"activeDirectories" : [GTLRNetAppFiles_ActiveDirectory class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"activeDirectories";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListBackupPoliciesResponse
//

@implementation GTLRNetAppFiles_ListBackupPoliciesResponse
@dynamic backupPolicies, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backupPolicies" : [GTLRNetAppFiles_BackupPolicy class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"backupPolicies";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListBackupsResponse
//

@implementation GTLRNetAppFiles_ListBackupsResponse
@dynamic backups, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backups" : [GTLRNetAppFiles_Backup class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"backups";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListBackupVaultsResponse
//

@implementation GTLRNetAppFiles_ListBackupVaultsResponse
@dynamic backupVaults, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backupVaults" : [GTLRNetAppFiles_BackupVault class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"backupVaults";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListKmsConfigsResponse
//

@implementation GTLRNetAppFiles_ListKmsConfigsResponse
@dynamic kmsConfigs, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"kmsConfigs" : [GTLRNetAppFiles_KmsConfig class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"kmsConfigs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListLocationsResponse
//

@implementation GTLRNetAppFiles_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRNetAppFiles_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListOperationsResponse
//

@implementation GTLRNetAppFiles_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRNetAppFiles_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListReplicationsResponse
//

@implementation GTLRNetAppFiles_ListReplicationsResponse
@dynamic nextPageToken, replications, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"replications" : [GTLRNetAppFiles_Replication class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"replications";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListSnapshotsResponse
//

@implementation GTLRNetAppFiles_ListSnapshotsResponse
@dynamic nextPageToken, snapshots, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"snapshots" : [GTLRNetAppFiles_Snapshot class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"snapshots";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListStoragePoolsResponse
//

@implementation GTLRNetAppFiles_ListStoragePoolsResponse
@dynamic nextPageToken, storagePools, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"storagePools" : [GTLRNetAppFiles_StoragePool class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"storagePools";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ListVolumesResponse
//

@implementation GTLRNetAppFiles_ListVolumesResponse
@dynamic nextPageToken, unreachable, volumes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachable" : [NSString class],
    @"volumes" : [GTLRNetAppFiles_Volume class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"volumes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Location
//

@implementation GTLRNetAppFiles_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Location_Labels
//

@implementation GTLRNetAppFiles_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Location_Metadata
//

@implementation GTLRNetAppFiles_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_LocationMetadata
//

@implementation GTLRNetAppFiles_LocationMetadata
@dynamic supportedServiceLevels;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"supportedServiceLevels" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_MonthlySchedule
//

@implementation GTLRNetAppFiles_MonthlySchedule
@dynamic daysOfMonth, hour, minute, snapshotsToKeep;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_MountOption
//

@implementation GTLRNetAppFiles_MountOption
@dynamic exportProperty, exportFull, instructions, protocol;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"exportProperty" : @"export" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Operation
//

@implementation GTLRNetAppFiles_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Operation_Metadata
//

@implementation GTLRNetAppFiles_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Operation_Response
//

@implementation GTLRNetAppFiles_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_OperationMetadata
//

@implementation GTLRNetAppFiles_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Replication
//

@implementation GTLRNetAppFiles_Replication
@dynamic clusterLocation, createTime, descriptionProperty, destinationVolume,
         destinationVolumeParameters, healthy, hybridPeeringDetails,
         hybridReplicationType, labels, mirrorState, name, replicationSchedule,
         role, sourceVolume, state, stateDetails, transferStats;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Replication_Labels
//

@implementation GTLRNetAppFiles_Replication_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_RestoreParameters
//

@implementation GTLRNetAppFiles_RestoreParameters
@dynamic sourceBackup, sourceSnapshot;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ResumeReplicationRequest
//

@implementation GTLRNetAppFiles_ResumeReplicationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ReverseReplicationDirectionRequest
//

@implementation GTLRNetAppFiles_ReverseReplicationDirectionRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_RevertVolumeRequest
//

@implementation GTLRNetAppFiles_RevertVolumeRequest
@dynamic snapshotId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_SimpleExportPolicyRule
//

@implementation GTLRNetAppFiles_SimpleExportPolicyRule
@dynamic accessType, allowedClients, hasRootAccess, kerberos5iReadOnly,
         kerberos5iReadWrite, kerberos5pReadOnly, kerberos5pReadWrite,
         kerberos5ReadOnly, kerberos5ReadWrite, nfsv3, nfsv4;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Snapshot
//

@implementation GTLRNetAppFiles_Snapshot
@dynamic createTime, descriptionProperty, labels, name, state, stateDetails,
         usedBytes;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Snapshot_Labels
//

@implementation GTLRNetAppFiles_Snapshot_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_SnapshotPolicy
//

@implementation GTLRNetAppFiles_SnapshotPolicy
@dynamic dailySchedule, enabled, hourlySchedule, monthlySchedule,
         weeklySchedule;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Status
//

@implementation GTLRNetAppFiles_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRNetAppFiles_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Status_Details_Item
//

@implementation GTLRNetAppFiles_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_StopReplicationRequest
//

@implementation GTLRNetAppFiles_StopReplicationRequest
@dynamic force;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_StoragePool
//

@implementation GTLRNetAppFiles_StoragePool
@dynamic activeDirectory, allowAutoTiering, capacityGib, createTime,
         descriptionProperty, encryptionType, globalAccessAllowed, kmsConfig,
         labels, ldapEnabled, name, network, psaRange, replicaZone,
         satisfiesPzi, satisfiesPzs, serviceLevel, state, stateDetails,
         volumeCapacityGib, volumeCount, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_StoragePool_Labels
//

@implementation GTLRNetAppFiles_StoragePool_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_SwitchActiveReplicaZoneRequest
//

@implementation GTLRNetAppFiles_SwitchActiveReplicaZoneRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_SyncReplicationRequest
//

@implementation GTLRNetAppFiles_SyncReplicationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_TieringPolicy
//

@implementation GTLRNetAppFiles_TieringPolicy
@dynamic coolingThresholdDays, tierAction;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_TransferStats
//

@implementation GTLRNetAppFiles_TransferStats
@dynamic lagDuration, lastTransferBytes, lastTransferDuration,
         lastTransferEndTime, lastTransferError, totalTransferDuration,
         transferBytes, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_ValidateDirectoryServiceRequest
//

@implementation GTLRNetAppFiles_ValidateDirectoryServiceRequest
@dynamic directoryServiceType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_VerifyKmsConfigRequest
//

@implementation GTLRNetAppFiles_VerifyKmsConfigRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_VerifyKmsConfigResponse
//

@implementation GTLRNetAppFiles_VerifyKmsConfigResponse
@dynamic healthError, healthy, instructions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Volume
//

@implementation GTLRNetAppFiles_Volume
@dynamic activeDirectory, backupConfig, capacityGib, coldTierSizeGib,
         createTime, descriptionProperty, encryptionType, exportPolicy,
         hasReplication, hybridReplicationParameters, kerberosEnabled,
         kmsConfig, labels, largeCapacity, ldapEnabled, mountOptions,
         multipleEndpoints, name, network, protocols, psaRange, replicaZone,
         restoreParameters, restrictedActions, securityStyle, serviceLevel,
         shareName, smbSettings, snapReserve, snapshotDirectory, snapshotPolicy,
         state, stateDetails, storagePool, tieringPolicy, unixPermissions,
         usedGib, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"mountOptions" : [GTLRNetAppFiles_MountOption class],
    @"protocols" : [NSString class],
    @"restrictedActions" : [NSString class],
    @"smbSettings" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_Volume_Labels
//

@implementation GTLRNetAppFiles_Volume_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRNetAppFiles_WeeklySchedule
//

@implementation GTLRNetAppFiles_WeeklySchedule
@dynamic day, hour, minute, snapshotsToKeep;
@end
