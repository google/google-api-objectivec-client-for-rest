// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Fact Check Tools API (factchecktools/v1alpha1)
// Documentation:
//   https://developers.google.com/fact-check/tools/api/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1Claim;
@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor;
@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating;
@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview;
@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor;
@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup;
@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage;
@class GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1Publisher;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Information about the claim.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1Claim : GTLRObject

/** A person or organization stating the claim. For instance, "John Doe". */
@property(nonatomic, copy, nullable) NSString *claimant;

/** The date that the claim was made. */
@property(nonatomic, strong, nullable) GTLRDateTime *claimDate;

/** One or more reviews of this claim (namely, a fact-checking article). */
@property(nonatomic, strong, nullable) NSArray<GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview *> *claimReview;

/** The claim text. For instance, "Crime has doubled in the last 2 years." */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Information about the claim author.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor : GTLRObject

/** Corresponds to `ClaimReview.itemReviewed.author.image`. */
@property(nonatomic, copy, nullable) NSString *imageUrl;

/** Corresponds to `ClaimReview.itemReviewed.author.jobTitle`. */
@property(nonatomic, copy, nullable) NSString *jobTitle;

/**
 *  A person or organization stating the claim. For instance, "John Doe".
 *  Corresponds to `ClaimReview.itemReviewed.author.name`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Corresponds to `ClaimReview.itemReviewed.author.sameAs`. */
@property(nonatomic, copy, nullable) NSString *sameAs;

@end


/**
 *  Information about the claim rating.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating : GTLRObject

/**
 *  For numeric ratings, the best value possible in the scale from worst to
 *  best. Corresponds to `ClaimReview.reviewRating.bestRating`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bestRating;

/** Corresponds to `ClaimReview.reviewRating.image`. */
@property(nonatomic, copy, nullable) NSString *imageUrl;

/** Corresponds to `ClaimReview.reviewRating.ratingExplanation`. */
@property(nonatomic, copy, nullable) NSString *ratingExplanation;

/**
 *  A numeric rating of this claim, in the range worstRating â€” bestRating
 *  inclusive. Corresponds to `ClaimReview.reviewRating.ratingValue`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ratingValue;

/**
 *  The truthfulness rating as a human-readible short word or phrase.
 *  Corresponds to `ClaimReview.reviewRating.alternateName`.
 */
@property(nonatomic, copy, nullable) NSString *textualRating;

/**
 *  For numeric ratings, the worst value possible in the scale from worst to
 *  best. Corresponds to `ClaimReview.reviewRating.worstRating`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *worstRating;

@end


/**
 *  Information about a claim review.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview : GTLRObject

/** The language this review was written in. For instance, "en" or "de". */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** The publisher of this claim review. */
@property(nonatomic, strong, nullable) GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1Publisher *publisher;

/** The date the claim was reviewed. */
@property(nonatomic, strong, nullable) GTLRDateTime *reviewDate;

/** Textual rating. For instance, "Mostly false". */
@property(nonatomic, copy, nullable) NSString *textualRating;

/** The title of this claim review, if it can be determined. */
@property(nonatomic, copy, nullable) NSString *title;

/** The URL of this claim review. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Information about the claim review author.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor : GTLRObject

/** Corresponds to `ClaimReview.author.image`. */
@property(nonatomic, copy, nullable) NSString *imageUrl;

/**
 *  Name of the organization that is publishing the fact check. Corresponds to
 *  `ClaimReview.author.name`.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Fields for an individual `ClaimReview` element. Except for sub-messages that
 *  group fields together, each of these fields correspond those in
 *  https://schema.org/ClaimReview. We list the precise mapping for each field.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup : GTLRObject

/**
 *  A list of links to works in which this claim appears, aside from the one
 *  specified in `claim_first_appearance`. Corresponds to
 *  `ClaimReview.itemReviewed[\@type=Claim].appearance.url`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *claimAppearances;

/** Info about the author of this claim. */
@property(nonatomic, strong, nullable) GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor *claimAuthor;

/**
 *  The date when the claim was made or entered public discourse. Corresponds to
 *  `ClaimReview.itemReviewed.datePublished`.
 */
@property(nonatomic, copy, nullable) NSString *claimDate;

/**
 *  A link to a work in which this claim first appears. Corresponds to
 *  `ClaimReview.itemReviewed[\@type=Claim].firstAppearance.url`.
 */
@property(nonatomic, copy, nullable) NSString *claimFirstAppearance;

/**
 *  The location where this claim was made. Corresponds to
 *  `ClaimReview.itemReviewed.name`.
 */
@property(nonatomic, copy, nullable) NSString *claimLocation;

/**
 *  A short summary of the claim being evaluated. Corresponds to
 *  `ClaimReview.claimReviewed`.
 */
@property(nonatomic, copy, nullable) NSString *claimReviewed;

/** Info about the rating of this claim review. */
@property(nonatomic, strong, nullable) GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating *rating;

/**
 *  This field is optional, and will default to the page URL. We provide this
 *  field to allow you the override the default value, but the only permitted
 *  override is the page URL plus an optional anchor link ("page jump").
 *  Corresponds to `ClaimReview.url`
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Holds one or more instances of `ClaimReview` markup for a webpage.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage : GTLRObject

/**
 *  Info about the author of this claim review. Similar to the above,
 *  semantically these are page-level fields, and each `ClaimReview` on this
 *  page will contain the same values.
 */
@property(nonatomic, strong, nullable) GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor *claimReviewAuthor;

/**
 *  A list of individual claim reviews for this page. Each item in the list
 *  corresponds to one `ClaimReview` element.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup *> *claimReviewMarkups;

/**
 *  The name of this `ClaimReview` markup page resource, in the form of
 *  `pages/{page_id}`. Except for update requests, this field is output-only and
 *  should not be set by the user.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The URL of the page associated with this `ClaimReview` markup. While every
 *  individual `ClaimReview` has its own URL field, semantically this is a
 *  page-level field, and each `ClaimReview` on this page will use this value
 *  unless individually overridden. Corresponds to `ClaimReview.url`
 */
@property(nonatomic, copy, nullable) NSString *pageUrl;

/**
 *  The date when the fact check was published. Similar to the URL, semantically
 *  this is a page-level field, and each `ClaimReview` on this page will contain
 *  the same value. Corresponds to `ClaimReview.datePublished`
 */
@property(nonatomic, copy, nullable) NSString *publishDate;

/**
 *  The version ID for this markup. Except for update requests, this field is
 *  output-only and should not be set by the user.
 */
@property(nonatomic, copy, nullable) NSString *versionId;

@end


/**
 *  Response from searching fact-checked claims.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "claims" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse : GTLRCollectionObject

/**
 *  The list of claims and all of their associated information.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1Claim *> *claims;

/**
 *  The next pagination token in the Search response. It should be used as the
 *  `page_token` for the following request. An empty value means no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response from listing `ClaimReview` markup.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "claimReviewMarkupPages" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse : GTLRCollectionObject

/**
 *  The result list of pages of `ClaimReview` markup.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage *> *claimReviewMarkupPages;

/**
 *  The next pagination token in the Search response. It should be used as the
 *  `page_token` for the following request. An empty value means no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Information about the publisher.
 */
@interface GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1Publisher : GTLRObject

/** The name of this publisher. For instance, "Awesome Fact Checks". */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Host-level site name, without the protocol or "www" prefix. For instance,
 *  "awesomefactchecks.com". This value of this field is based purely on the
 *  claim review URL.
 */
@property(nonatomic, copy, nullable) NSString *site;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRFactCheckTools_GoogleProtobufEmpty : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
