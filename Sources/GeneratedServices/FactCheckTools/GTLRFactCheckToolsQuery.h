// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Fact Check Tools API (factchecktools/v1alpha1)
// Documentation:
//   https://developers.google.com/fact-check/tools/api/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRFactCheckToolsObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Fact Check Tools query classes.
 */
@interface GTLRFactCheckToolsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Search through fact-checked claims.
 *
 *  Method: factchecktools.claims.search
 */
@interface GTLRFactCheckToolsQuery_ClaimsSearch : GTLRFactCheckToolsQuery

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". Can be used to
 *  restrict results by language, though we do not currently consider the
 *  region.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum age of the returned search results, in days. Age is determined
 *  by either claim date or review date, whichever is newer.
 */
@property(nonatomic, assign) NSInteger maxAgeDays;

/**
 *  An integer that specifies the current offset (that is, starting result
 *  location) in search results. This field is only considered if `page_token`
 *  is unset. For example, 0 means to return results starting from the first
 *  matching result, and 10 means to return from the 11th result.
 */
@property(nonatomic, assign) NSInteger offset;

/**
 *  The pagination size. We will return up to that many results. Defaults to 10
 *  if not set.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The pagination token. You may provide the `next_page_token` returned from a
 *  previous List request, if any, in order to get the next page. All other
 *  fields must have the same values as in the previous request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Textual query string. Required unless `review_publisher_site_filter` is
 *  specified.
 */
@property(nonatomic, copy, nullable) NSString *query;

/** The review publisher site to filter results by, e.g. nytimes.com. */
@property(nonatomic, copy, nullable) NSString *reviewPublisherSiteFilter;

/**
 *  Fetches a @c
 *  GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
 *
 *  Search through fact-checked claims.
 *
 *  @return GTLRFactCheckToolsQuery_ClaimsSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Create `ClaimReview` markup on a page.
 *
 *  Method: factchecktools.pages.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeFactCheckToolsUserinfoEmail
 */
@interface GTLRFactCheckToolsQuery_PagesCreate : GTLRFactCheckToolsQuery

/**
 *  Fetches a @c
 *  GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage.
 *
 *  Create `ClaimReview` markup on a page.
 *
 *  @param object The @c
 *    GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage
 *    to include in the query.
 *
 *  @return GTLRFactCheckToolsQuery_PagesCreate
 */
+ (instancetype)queryWithObject:(GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage *)object;

@end

/**
 *  Delete all `ClaimReview` markup on a page.
 *
 *  Method: factchecktools.pages.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeFactCheckToolsUserinfoEmail
 */
@interface GTLRFactCheckToolsQuery_PagesDelete : GTLRFactCheckToolsQuery

/** The name of the resource to delete, in the form of `pages/{page_id}`. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRFactCheckTools_GoogleProtobufEmpty.
 *
 *  Delete all `ClaimReview` markup on a page.
 *
 *  @param name The name of the resource to delete, in the form of
 *    `pages/{page_id}`.
 *
 *  @return GTLRFactCheckToolsQuery_PagesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get all `ClaimReview` markup on a page.
 *
 *  Method: factchecktools.pages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeFactCheckToolsUserinfoEmail
 */
@interface GTLRFactCheckToolsQuery_PagesGet : GTLRFactCheckToolsQuery

/** The name of the resource to get, in the form of `pages/{page_id}`. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage.
 *
 *  Get all `ClaimReview` markup on a page.
 *
 *  @param name The name of the resource to get, in the form of
 *    `pages/{page_id}`.
 *
 *  @return GTLRFactCheckToolsQuery_PagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List the `ClaimReview` markup pages for a specific URL or for an
 *  organization.
 *
 *  Method: factchecktools.pages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeFactCheckToolsUserinfoEmail
 */
@interface GTLRFactCheckToolsQuery_PagesList : GTLRFactCheckToolsQuery

/**
 *  An integer that specifies the current offset (that is, starting result
 *  location) in search results. This field is only considered if `page_token`
 *  is unset, and if the request is not for a specific URL. For example, 0 means
 *  to return results starting from the first matching result, and 10 means to
 *  return from the 11th result.
 */
@property(nonatomic, assign) NSInteger offset;

/**
 *  The organization for which we want to fetch markups for. For instance,
 *  "site.com". Cannot be specified along with an URL.
 */
@property(nonatomic, copy, nullable) NSString *organization;

/**
 *  The pagination size. We will return up to that many results. Defaults to 10
 *  if not set. Has no effect if a URL is requested.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The pagination token. You may provide the `next_page_token` returned from a
 *  previous List request, if any, in order to get the next page. All other
 *  fields must have the same values as in the previous request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The URL from which to get `ClaimReview` markup. There will be at most one
 *  result. If markup is associated with a more canonical version of the URL
 *  provided, we will return that URL instead. Cannot be specified along with an
 *  organization.
 */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  Fetches a @c
 *  GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse.
 *
 *  List the `ClaimReview` markup pages for a specific URL or for an
 *  organization.
 *
 *  @return GTLRFactCheckToolsQuery_PagesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Update for all `ClaimReview` markup on a page Note that this is a full
 *  update. To retain the existing `ClaimReview` markup on a page, first perform
 *  a Get operation, then modify the returned markup, and finally call Update
 *  with the entire `ClaimReview` markup as the body.
 *
 *  Method: factchecktools.pages.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeFactCheckToolsUserinfoEmail
 */
@interface GTLRFactCheckToolsQuery_PagesUpdate : GTLRFactCheckToolsQuery

/**
 *  The name of this `ClaimReview` markup page resource, in the form of
 *  `pages/{page_id}`. Except for update requests, this field is output-only and
 *  should not be set by the user.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage.
 *
 *  Update for all `ClaimReview` markup on a page Note that this is a full
 *  update. To retain the existing `ClaimReview` markup on a page, first perform
 *  a Get operation, then modify the returned markup, and finally call Update
 *  with the entire `ClaimReview` markup as the body.
 *
 *  @param object The @c
 *    GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage
 *    to include in the query.
 *  @param name The name of this `ClaimReview` markup page resource, in the form
 *    of `pages/{page_id}`. Except for update requests, this field is
 *    output-only and should not be set by the user.
 *
 *  @return GTLRFactCheckToolsQuery_PagesUpdate
 */
+ (instancetype)queryWithObject:(GTLRFactCheckTools_GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
