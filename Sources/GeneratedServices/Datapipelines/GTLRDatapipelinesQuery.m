// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Data pipelines API (datapipelines/v1)
// Description:
//   Data Pipelines provides an interface for creating, updating, and managing
//   recurring Data Analytics jobs.
// Documentation:
//   https://cloud.google.com/dataflow/docs/guides/data-pipelines

#import <GoogleAPIClientForREST/GTLRDatapipelinesQuery.h>

@implementation GTLRDatapipelinesQuery

@dynamic fields;

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsListPipelines

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}";
  GTLRDatapipelinesQuery_ProjectsLocationsListPipelines *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleCloudDatapipelinesV1ListPipelinesResponse class];
  query.loggingName = @"datapipelines.projects.locations.listPipelines";
  return query;
}

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsPipelinesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDatapipelines_GoogleCloudDatapipelinesV1Pipeline *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/pipelines";
  GTLRDatapipelinesQuery_ProjectsLocationsPipelinesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleCloudDatapipelinesV1Pipeline class];
  query.loggingName = @"datapipelines.projects.locations.pipelines.create";
  return query;
}

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsPipelinesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatapipelinesQuery_ProjectsLocationsPipelinesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleProtobufEmpty class];
  query.loggingName = @"datapipelines.projects.locations.pipelines.delete";
  return query;
}

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsPipelinesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatapipelinesQuery_ProjectsLocationsPipelinesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleCloudDatapipelinesV1Pipeline class];
  query.loggingName = @"datapipelines.projects.locations.pipelines.get";
  return query;
}

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsPipelinesJobsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/jobs";
  GTLRDatapipelinesQuery_ProjectsLocationsPipelinesJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleCloudDatapipelinesV1ListJobsResponse class];
  query.loggingName = @"datapipelines.projects.locations.pipelines.jobs.list";
  return query;
}

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsPipelinesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDatapipelines_GoogleCloudDatapipelinesV1Pipeline *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatapipelinesQuery_ProjectsLocationsPipelinesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleCloudDatapipelinesV1Pipeline class];
  query.loggingName = @"datapipelines.projects.locations.pipelines.patch";
  return query;
}

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsPipelinesRun

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatapipelines_GoogleCloudDatapipelinesV1RunPipelineRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:run";
  GTLRDatapipelinesQuery_ProjectsLocationsPipelinesRun *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleCloudDatapipelinesV1RunPipelineResponse class];
  query.loggingName = @"datapipelines.projects.locations.pipelines.run";
  return query;
}

@end

@implementation GTLRDatapipelinesQuery_ProjectsLocationsPipelinesStop

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatapipelines_GoogleCloudDatapipelinesV1StopPipelineRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:stop";
  GTLRDatapipelinesQuery_ProjectsLocationsPipelinesStop *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatapipelines_GoogleCloudDatapipelinesV1Pipeline class];
  query.loggingName = @"datapipelines.projects.locations.pipelines.stop";
  return query;
}

@end
