// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Merchant API (merchantapi/reviews_v1beta)
// Description:
//   Programmatically manage your Merchant Center Accounts.
// Documentation:
//   https://developers.devsite.corp.google.com/merchant/api

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRMerchantObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Merchant query classes.
 */
@interface GTLRMerchantQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Deletes merchant review.
 *
 *  Method: merchantapi.accounts.merchantReviews.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsMerchantReviewsDelete : GTLRMerchantQuery

/**
 *  Required. The ID of the merchant review. Format:
 *  accounts/{account}/merchantReviews/{merchantReview}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMerchant_Empty.
 *
 *  Deletes merchant review.
 *
 *  @param name Required. The ID of the merchant review. Format:
 *    accounts/{account}/merchantReviews/{merchantReview}
 *
 *  @return GTLRMerchantQuery_AccountsMerchantReviewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a merchant review.
 *
 *  Method: merchantapi.accounts.merchantReviews.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsMerchantReviewsGet : GTLRMerchantQuery

/**
 *  Required. The ID of the merchant review. Format:
 *  accounts/{account}/merchantReviews/{merchantReview}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMerchant_Review.
 *
 *  Gets a merchant review.
 *
 *  @param name Required. The ID of the merchant review. Format:
 *    accounts/{account}/merchantReviews/{merchantReview}
 *
 *  @return GTLRMerchantQuery_AccountsMerchantReviewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Inserts a review for your Merchant Center account. If the review already
 *  exists, then the review is replaced with the new instance.
 *
 *  Method: merchantapi.accounts.merchantReviews.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsMerchantReviewsInsert : GTLRMerchantQuery

/**
 *  Required. The data source of the
 *  [merchantreview](https://support.google.com/merchants/answer/7045996?sjid=5253581244217581976-EU)
 *  Format: `accounts/{account}/dataSources/{datasource}`.
 */
@property(nonatomic, copy, nullable) NSString *dataSource;

/**
 *  Required. The account where the merchant review will be inserted. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMerchant_Review.
 *
 *  Inserts a review for your Merchant Center account. If the review already
 *  exists, then the review is replaced with the new instance.
 *
 *  @param object The @c GTLRMerchant_Review to include in the query.
 *  @param parent Required. The account where the merchant review will be
 *    inserted. Format: accounts/{account}
 *
 *  @return GTLRMerchantQuery_AccountsMerchantReviewsInsert
 */
+ (instancetype)queryWithObject:(GTLRMerchant_Review *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists merchant reviews.
 *
 *  Method: merchantapi.accounts.merchantReviews.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsMerchantReviewsList : GTLRMerchantQuery

/**
 *  Optional. The maximum number of merchant reviews to return. The service can
 *  return fewer than this value. The maximum value is 1000; values above 1000
 *  are coerced to 1000. If unspecified, the maximum number of reviews is
 *  returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListMerchantReviews` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListMerchantReviews` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The account to list merchant reviews for. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMerchant_ListMerchantReviewsResponse.
 *
 *  Lists merchant reviews.
 *
 *  @param parent Required. The account to list merchant reviews for. Format:
 *    accounts/{account}
 *
 *  @return GTLRMerchantQuery_AccountsMerchantReviewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a product review.
 *
 *  Method: merchantapi.accounts.productReviews.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsProductReviewsDelete : GTLRMerchantQuery

/**
 *  Required. The ID of the Product review. Format:
 *  accounts/{account}/productReviews/{productReview}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMerchant_Empty.
 *
 *  Deletes a product review.
 *
 *  @param name Required. The ID of the Product review. Format:
 *    accounts/{account}/productReviews/{productReview}
 *
 *  @return GTLRMerchantQuery_AccountsProductReviewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a product review.
 *
 *  Method: merchantapi.accounts.productReviews.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsProductReviewsGet : GTLRMerchantQuery

/**
 *  Required. The ID of the merchant review. Format:
 *  accounts/{account}/productReviews/{productReview}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMerchant_ProductReview.
 *
 *  Gets a product review.
 *
 *  @param name Required. The ID of the merchant review. Format:
 *    accounts/{account}/productReviews/{productReview}
 *
 *  @return GTLRMerchantQuery_AccountsProductReviewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Inserts a product review.
 *
 *  Method: merchantapi.accounts.productReviews.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsProductReviewsInsert : GTLRMerchantQuery

/** Required. Format: `accounts/{account}/dataSources/{datasource}`. */
@property(nonatomic, copy, nullable) NSString *dataSource;

/**
 *  Required. The account where the product review will be inserted. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMerchant_ProductReview.
 *
 *  Inserts a product review.
 *
 *  @param object The @c GTLRMerchant_ProductReview to include in the query.
 *  @param parent Required. The account where the product review will be
 *    inserted. Format: accounts/{account}
 *
 *  @return GTLRMerchantQuery_AccountsProductReviewsInsert
 */
+ (instancetype)queryWithObject:(GTLRMerchant_ProductReview *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists product reviews.
 *
 *  Method: merchantapi.accounts.productReviews.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMerchantContent
 */
@interface GTLRMerchantQuery_AccountsProductReviewsList : GTLRMerchantQuery

/**
 *  Optional. The maximum number of products to return. The service may return
 *  fewer than this value.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListProductReviews` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListProductReviews` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The account to list product reviews for. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMerchant_ListProductReviewsResponse.
 *
 *  Lists product reviews.
 *
 *  @param parent Required. The account to list product reviews for. Format:
 *    accounts/{account}
 *
 *  @return GTLRMerchantQuery_AccountsProductReviewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
