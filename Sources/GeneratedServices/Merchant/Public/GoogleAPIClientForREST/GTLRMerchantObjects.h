// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Merchant API (merchantapi/reports_v1beta)
// Description:
//   Programmatically manage your Merchant Center Accounts.
// Documentation:
//   https://developers.devsite.corp.google.com/merchant/api

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRMerchant_BestSellersBrandView;
@class GTLRMerchant_BestSellersProductClusterView;
@class GTLRMerchant_CompetitiveVisibilityBenchmarkView;
@class GTLRMerchant_CompetitiveVisibilityCompetitorView;
@class GTLRMerchant_CompetitiveVisibilityTopMerchantView;
@class GTLRMerchant_Date;
@class GTLRMerchant_IssueSeverityPerReportingContext;
@class GTLRMerchant_ItemIssue;
@class GTLRMerchant_ItemIssueSeverity;
@class GTLRMerchant_ItemIssueType;
@class GTLRMerchant_NonProductPerformanceView;
@class GTLRMerchant_Price;
@class GTLRMerchant_PriceCompetitivenessProductView;
@class GTLRMerchant_PriceInsightsProductView;
@class GTLRMerchant_ProductChange;
@class GTLRMerchant_ProductPerformanceView;
@class GTLRMerchant_ProductView;
@class GTLRMerchant_ReportRow;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersBrandView.previousRelativeDemand

/**
 *  Demand is 21-50% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_High;
/**
 *  Demand is 6-10% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_Low;
/**
 *  Demand is 11-20% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_Medium;
/**
 *  Not specified.
 *
 *  Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_RelativeDemandEnumUnspecified;
/**
 *  Demand is 51-100% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "VERY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_VeryHigh;
/**
 *  Demand is 0-5% of the demand of the highest ranked product cluster or brand.
 *
 *  Value: "VERY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_VeryLow;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersBrandView.relativeDemand

/**
 *  Demand is 21-50% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemand_High;
/**
 *  Demand is 6-10% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemand_Low;
/**
 *  Demand is 11-20% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemand_Medium;
/**
 *  Not specified.
 *
 *  Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemand_RelativeDemandEnumUnspecified;
/**
 *  Demand is 51-100% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "VERY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemand_VeryHigh;
/**
 *  Demand is 0-5% of the demand of the highest ranked product cluster or brand.
 *
 *  Value: "VERY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemand_VeryLow;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersBrandView.relativeDemandChange

/**
 *  Relative demand is equal to the previous time period.
 *
 *  Value: "FLAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_Flat;
/**
 *  Not specified.
 *
 *  Value: "RELATIVE_DEMAND_CHANGE_TYPE_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_RelativeDemandChangeTypeEnumUnspecified;
/**
 *  Relative demand is higher than the previous time period.
 *
 *  Value: "RISER"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_Riser;
/**
 *  Relative demand is lower than the previous time period.
 *
 *  Value: "SINKER"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_Sinker;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersBrandView.reportGranularity

/**
 *  Report is computed over a month timeframe.
 *
 *  Value: "MONTHLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_ReportGranularity_Monthly;
/**
 *  Not specified.
 *
 *  Value: "REPORT_GRANULARITY_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_ReportGranularity_ReportGranularityEnumUnspecified;
/**
 *  Report is computed over a week timeframe.
 *
 *  Value: "WEEKLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersBrandView_ReportGranularity_Weekly;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersProductClusterView.brandInventoryStatus

/**
 *  You have a product for this product cluster or brand in stock.
 *
 *  Value: "IN_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_InStock;
/**
 *  Not specified.
 *
 *  Value: "INVENTORY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_InventoryStatusUnspecified;
/**
 *  You do not have a product for this product cluster or brand in inventory.
 *
 *  Value: "NOT_IN_INVENTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_NotInInventory;
/**
 *  You have a product for this product cluster or brand in inventory but it is
 *  currently out of stock.
 *
 *  Value: "OUT_OF_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_OutOfStock;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersProductClusterView.inventoryStatus

/**
 *  You have a product for this product cluster or brand in stock.
 *
 *  Value: "IN_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_InStock;
/**
 *  Not specified.
 *
 *  Value: "INVENTORY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_InventoryStatusUnspecified;
/**
 *  You do not have a product for this product cluster or brand in inventory.
 *
 *  Value: "NOT_IN_INVENTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_NotInInventory;
/**
 *  You have a product for this product cluster or brand in inventory but it is
 *  currently out of stock.
 *
 *  Value: "OUT_OF_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_OutOfStock;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersProductClusterView.previousRelativeDemand

/**
 *  Demand is 21-50% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_High;
/**
 *  Demand is 6-10% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_Low;
/**
 *  Demand is 11-20% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_Medium;
/**
 *  Not specified.
 *
 *  Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_RelativeDemandEnumUnspecified;
/**
 *  Demand is 51-100% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "VERY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_VeryHigh;
/**
 *  Demand is 0-5% of the demand of the highest ranked product cluster or brand.
 *
 *  Value: "VERY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_VeryLow;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersProductClusterView.relativeDemand

/**
 *  Demand is 21-50% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_High;
/**
 *  Demand is 6-10% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_Low;
/**
 *  Demand is 11-20% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_Medium;
/**
 *  Not specified.
 *
 *  Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_RelativeDemandEnumUnspecified;
/**
 *  Demand is 51-100% of the demand of the highest ranked product cluster or
 *  brand.
 *
 *  Value: "VERY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_VeryHigh;
/**
 *  Demand is 0-5% of the demand of the highest ranked product cluster or brand.
 *
 *  Value: "VERY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_VeryLow;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersProductClusterView.relativeDemandChange

/**
 *  Relative demand is equal to the previous time period.
 *
 *  Value: "FLAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_Flat;
/**
 *  Not specified.
 *
 *  Value: "RELATIVE_DEMAND_CHANGE_TYPE_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_RelativeDemandChangeTypeEnumUnspecified;
/**
 *  Relative demand is higher than the previous time period.
 *
 *  Value: "RISER"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_Riser;
/**
 *  Relative demand is lower than the previous time period.
 *
 *  Value: "SINKER"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_Sinker;

// ----------------------------------------------------------------------------
// GTLRMerchant_BestSellersProductClusterView.reportGranularity

/**
 *  Report is computed over a month timeframe.
 *
 *  Value: "MONTHLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_ReportGranularity_Monthly;
/**
 *  Not specified.
 *
 *  Value: "REPORT_GRANULARITY_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_ReportGranularity_ReportGranularityEnumUnspecified;
/**
 *  Report is computed over a week timeframe.
 *
 *  Value: "WEEKLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_BestSellersProductClusterView_ReportGranularity_Weekly;

// ----------------------------------------------------------------------------
// GTLRMerchant_CompetitiveVisibilityBenchmarkView.trafficSource

/**
 *  Traffic from ads.
 *
 *  Value: "ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_Ads;
/**
 *  Organic and ads traffic.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_All;
/**
 *  Organic traffic.
 *
 *  Value: "ORGANIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_Organic;
/**
 *  Not specified.
 *
 *  Value: "TRAFFIC_SOURCE_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_TrafficSourceEnumUnspecified;

// ----------------------------------------------------------------------------
// GTLRMerchant_CompetitiveVisibilityCompetitorView.trafficSource

/**
 *  Traffic from ads.
 *
 *  Value: "ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_Ads;
/**
 *  Organic and ads traffic.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_All;
/**
 *  Organic traffic.
 *
 *  Value: "ORGANIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_Organic;
/**
 *  Not specified.
 *
 *  Value: "TRAFFIC_SOURCE_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_TrafficSourceEnumUnspecified;

// ----------------------------------------------------------------------------
// GTLRMerchant_CompetitiveVisibilityTopMerchantView.trafficSource

/**
 *  Traffic from ads.
 *
 *  Value: "ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_Ads;
/**
 *  Organic and ads traffic.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_All;
/**
 *  Organic traffic.
 *
 *  Value: "ORGANIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_Organic;
/**
 *  Not specified.
 *
 *  Value: "TRAFFIC_SOURCE_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_TrafficSourceEnumUnspecified;

// ----------------------------------------------------------------------------
// GTLRMerchant_IssueSeverityPerReportingContext.reportingContext

/**
 *  [Cloud retail](https://cloud.google.com/solutions/retail).
 *
 *  Value: "CLOUD_RETAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_CloudRetail;
/**
 *  [Demand Gen ads](https://support.google.com/merchants/answer/13389785).
 *
 *  Value: "DEMAND_GEN_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DemandGenAds;
/**
 *  [Demand Gen ads on Discover
 *  surface](https://support.google.com/merchants/answer/13389785).
 *
 *  Value: "DEMAND_GEN_ADS_DISCOVER_SURFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DemandGenAdsDiscoverSurface;
/**
 *  Deprecated: Use `DEMAND_GEN_ADS` instead. [Discovery and Demand Gen
 *  ads](https://support.google.com/merchants/answer/13389785).
 *
 *  Value: "DISCOVERY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DiscoveryAds GTLR_DEPRECATED;
/**
 *  [Display ads](https://support.google.com/merchants/answer/6069387).
 *
 *  Value: "DISPLAY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DisplayAds;
/**
 *  [Free product
 *  listings](https://support.google.com/merchants/answer/9199328).
 *
 *  Value: "FREE_LISTINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_FreeListings;
/**
 *  [Free local product
 *  listings](https://support.google.com/merchants/answer/9825611).
 *
 *  Value: "FREE_LOCAL_LISTINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_FreeLocalListings;
/**
 *  [Free local vehicle
 *  listings](https://support.google.com/merchants/answer/11544533).
 *
 *  Value: "FREE_LOCAL_VEHICLE_LISTINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_FreeLocalVehicleListings;
/**
 *  [Local cloud retail](https://cloud.google.com/solutions/retail).
 *
 *  Value: "LOCAL_CLOUD_RETAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_LocalCloudRetail;
/**
 *  [Local inventory ads](https://support.google.com/merchants/answer/3271956).
 *
 *  Value: "LOCAL_INVENTORY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_LocalInventoryAds;
/**
 *  Not specified.
 *
 *  Value: "REPORTING_CONTEXT_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_ReportingContextEnumUnspecified;
/**
 *  [Shopping ads](https://support.google.com/merchants/answer/6149970).
 *
 *  Value: "SHOPPING_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_ShoppingAds;
/**
 *  [Vehicle inventory
 *  ads](https://support.google.com/merchants/answer/11544533).
 *
 *  Value: "VEHICLE_INVENTORY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_VehicleInventoryAds;
/**
 *  [Video ads](https://support.google.com/google-ads/answer/6340491).
 *
 *  Value: "VIDEO_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_VideoAds;
/**
 *  [YouTube Shopping](https://support.google.com/merchants/answer/13478370).
 *
 *  Value: "YOUTUBE_SHOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_YoutubeShopping;

// ----------------------------------------------------------------------------
// GTLRMerchant_ItemIssue.resolution

/**
 *  Not specified.
 *
 *  Value: "ITEM_ISSUE_RESOLUTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ItemIssue_Resolution_ItemIssueResolutionUnspecified;
/**
 *  The merchant has to fix the issue.
 *
 *  Value: "MERCHANT_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ItemIssue_Resolution_MerchantAction;
/**
 *  The issue will be resolved automatically (for example, image crawl) or
 *  through a Google review. No merchant action is required now. Resolution
 *  might lead to another issue (for example, if crawl fails).
 *
 *  Value: "PENDING_PROCESSING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ItemIssue_Resolution_PendingProcessing;

// ----------------------------------------------------------------------------
// GTLRMerchant_ItemIssueSeverity.aggregatedSeverity

/**
 *  Not specified.
 *
 *  Value: "AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_AggregatedIssueSeverityUnspecified;
/**
 *  Issue demotes the product in all reporting contexts it affects.
 *
 *  Value: "DEMOTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_Demoted;
/**
 *  Issue disapproves the product in at least one reporting context.
 *
 *  Value: "DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_Disapproved;
/**
 *  Issue resolution is `PENDING_PROCESSING`.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_Pending;

// ----------------------------------------------------------------------------
// GTLRMerchant_PriceInsightsProductView.effectiveness

/**
 *  Effectiveness is unknown.
 *
 *  Value: "EFFECTIVENESS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_PriceInsightsProductView_Effectiveness_EffectivenessUnspecified;
/**
 *  Effectiveness is high.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_PriceInsightsProductView_Effectiveness_High;
/**
 *  Effectiveness is low.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_PriceInsightsProductView_Effectiveness_Low;
/**
 *  Effectiveness is medium.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_PriceInsightsProductView_Effectiveness_Medium;

// ----------------------------------------------------------------------------
// GTLRMerchant_ProductChange.reportingContext

/**
 *  [Cloud retail](https://cloud.google.com/solutions/retail).
 *
 *  Value: "CLOUD_RETAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_CloudRetail;
/**
 *  [Demand Gen ads](https://support.google.com/merchants/answer/13389785).
 *
 *  Value: "DEMAND_GEN_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_DemandGenAds;
/**
 *  [Demand Gen ads on Discover
 *  surface](https://support.google.com/merchants/answer/13389785).
 *
 *  Value: "DEMAND_GEN_ADS_DISCOVER_SURFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_DemandGenAdsDiscoverSurface;
/**
 *  Deprecated: Use `DEMAND_GEN_ADS` instead. [Discovery and Demand Gen
 *  ads](https://support.google.com/merchants/answer/13389785).
 *
 *  Value: "DISCOVERY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_DiscoveryAds GTLR_DEPRECATED;
/**
 *  [Display ads](https://support.google.com/merchants/answer/6069387).
 *
 *  Value: "DISPLAY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_DisplayAds;
/**
 *  [Free product
 *  listings](https://support.google.com/merchants/answer/9199328).
 *
 *  Value: "FREE_LISTINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_FreeListings;
/**
 *  [Free local product
 *  listings](https://support.google.com/merchants/answer/9825611).
 *
 *  Value: "FREE_LOCAL_LISTINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_FreeLocalListings;
/**
 *  [Free local vehicle
 *  listings](https://support.google.com/merchants/answer/11544533).
 *
 *  Value: "FREE_LOCAL_VEHICLE_LISTINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_FreeLocalVehicleListings;
/**
 *  [Local cloud retail](https://cloud.google.com/solutions/retail).
 *
 *  Value: "LOCAL_CLOUD_RETAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_LocalCloudRetail;
/**
 *  [Local inventory ads](https://support.google.com/merchants/answer/3271956).
 *
 *  Value: "LOCAL_INVENTORY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_LocalInventoryAds;
/**
 *  Not specified.
 *
 *  Value: "REPORTING_CONTEXT_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_ReportingContextEnumUnspecified;
/**
 *  [Shopping ads](https://support.google.com/merchants/answer/6149970).
 *
 *  Value: "SHOPPING_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_ShoppingAds;
/**
 *  [Vehicle inventory
 *  ads](https://support.google.com/merchants/answer/11544533).
 *
 *  Value: "VEHICLE_INVENTORY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_VehicleInventoryAds;
/**
 *  [Video ads](https://support.google.com/google-ads/answer/6340491).
 *
 *  Value: "VIDEO_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_VideoAds;
/**
 *  [YouTube Shopping](https://support.google.com/merchants/answer/13478370).
 *
 *  Value: "YOUTUBE_SHOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductChange_ReportingContext_YoutubeShopping;

// ----------------------------------------------------------------------------
// GTLRMerchant_ProductPerformanceView.marketingMethod

/**
 *  Ads-based marketing.
 *
 *  Value: "ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductPerformanceView_MarketingMethod_Ads;
/**
 *  Not specified.
 *
 *  Value: "MARKETING_METHOD_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductPerformanceView_MarketingMethod_MarketingMethodEnumUnspecified;
/**
 *  Organic marketing.
 *
 *  Value: "ORGANIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductPerformanceView_MarketingMethod_Organic;

// ----------------------------------------------------------------------------
// GTLRMerchant_ProductStatusChangeMessage.attribute

/**
 *  Unspecified attribute
 *
 *  Value: "ATTRIBUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductStatusChangeMessage_Attribute_AttributeUnspecified;
/**
 *  Status of the changed entity
 *
 *  Value: "STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductStatusChangeMessage_Attribute_Status;

// ----------------------------------------------------------------------------
// GTLRMerchant_ProductStatusChangeMessage.resourceType

/**
 *  Resource type : product
 *
 *  Value: "PRODUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductStatusChangeMessage_ResourceType_Product;
/**
 *  Unspecified resource
 *
 *  Value: "RESOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductStatusChangeMessage_ResourceType_ResourceUnspecified;

// ----------------------------------------------------------------------------
// GTLRMerchant_ProductView.aggregatedReportingContextStatus

/**
 *  Not specified.
 *
 *  Value: "AGGREGATED_REPORTING_CONTEXT_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_AggregatedReportingContextStatus_AggregatedReportingContextStatusUnspecified;
/**
 *  Product is eligible for all reporting contexts.
 *
 *  Value: "ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_AggregatedReportingContextStatus_Eligible;
/**
 *  Product is eligible for some (but not all) reporting contexts.
 *
 *  Value: "ELIGIBLE_LIMITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_AggregatedReportingContextStatus_EligibleLimited;
/**
 *  Product is not eligible or is disapproved for all reporting contexts.
 *
 *  Value: "NOT_ELIGIBLE_OR_DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_AggregatedReportingContextStatus_NotEligibleOrDisapproved;
/**
 *  Product's status is pending in all reporting contexts.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_AggregatedReportingContextStatus_Pending;

// ----------------------------------------------------------------------------
// GTLRMerchant_ProductView.channel

/**
 *  Not specified.
 *
 *  Value: "CHANNEL_ENUM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_Channel_ChannelEnumUnspecified;
/**
 *  Local product.
 *
 *  Value: "LOCAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_Channel_Local;
/**
 *  Online product.
 *
 *  Value: "ONLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_Channel_Online;

// ----------------------------------------------------------------------------
// GTLRMerchant_ProductView.clickPotential

/**
 *  Unknown predicted clicks impact.
 *
 *  Value: "CLICK_POTENTIAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_ClickPotential_ClickPotentialUnspecified;
/**
 *  Potential to receive a similar number of clicks as the highest performing
 *  products of the merchant.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_ClickPotential_High;
/**
 *  Potential to receive a low number of clicks compared to the highest
 *  performing products of the merchant.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_ClickPotential_Low;
/**
 *  Potential to receive a moderate number of clicks compared to the highest
 *  performing products of the merchant.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMerchant_ProductView_ClickPotential_Medium;

/**
 *  Fields available for query in `best_sellers_brand_view` table. [Best
 *  sellers](https://support.google.com/merchants/answer/9488679) report with
 *  top brands. Values are only set for fields requested explicitly in the
 *  request's search query.
 */
@interface GTLRMerchant_BestSellersBrandView : GTLRObject

/** Name of the brand. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Popularity rank in the previous week or month.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *previousRank;

/**
 *  Estimated demand in relation to the brand with the highest popularity rank
 *  in the same category and country in the previous week or month.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_High
 *        Demand is 21-50% of the demand of the highest ranked product cluster
 *        or brand. (Value: "HIGH")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_Low
 *        Demand is 6-10% of the demand of the highest ranked product cluster or
 *        brand. (Value: "LOW")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_Medium
 *        Demand is 11-20% of the demand of the highest ranked product cluster
 *        or brand. (Value: "MEDIUM")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_RelativeDemandEnumUnspecified
 *        Not specified. (Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_VeryHigh
 *        Demand is 51-100% of the demand of the highest ranked product cluster
 *        or brand. (Value: "VERY_HIGH")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_PreviousRelativeDemand_VeryLow
 *        Demand is 0-5% of the demand of the highest ranked product cluster or
 *        brand. (Value: "VERY_LOW")
 */
@property(nonatomic, copy, nullable) NSString *previousRelativeDemand;

/**
 *  Popularity of the brand on Ads and organic surfaces, in the selected
 *  category and country, based on the estimated number of units sold.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rank;

/**
 *  Estimated demand in relation to the brand with the highest popularity rank
 *  in the same category and country.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemand_High Demand is
 *        21-50% of the demand of the highest ranked product cluster or brand.
 *        (Value: "HIGH")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemand_Low Demand is
 *        6-10% of the demand of the highest ranked product cluster or brand.
 *        (Value: "LOW")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemand_Medium Demand is
 *        11-20% of the demand of the highest ranked product cluster or brand.
 *        (Value: "MEDIUM")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemand_RelativeDemandEnumUnspecified
 *        Not specified. (Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemand_VeryHigh Demand
 *        is 51-100% of the demand of the highest ranked product cluster or
 *        brand. (Value: "VERY_HIGH")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemand_VeryLow Demand
 *        is 0-5% of the demand of the highest ranked product cluster or brand.
 *        (Value: "VERY_LOW")
 */
@property(nonatomic, copy, nullable) NSString *relativeDemand;

/**
 *  Change in the estimated demand. Whether it rose, sank or remained flat.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_Flat
 *        Relative demand is equal to the previous time period. (Value: "FLAT")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_RelativeDemandChangeTypeEnumUnspecified
 *        Not specified. (Value: "RELATIVE_DEMAND_CHANGE_TYPE_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_Riser
 *        Relative demand is higher than the previous time period. (Value:
 *        "RISER")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_RelativeDemandChange_Sinker
 *        Relative demand is lower than the previous time period. (Value:
 *        "SINKER")
 */
@property(nonatomic, copy, nullable) NSString *relativeDemandChange;

/**
 *  Google product category ID to calculate the ranking for, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436). Required in
 *  the `SELECT` clause. If a `WHERE` condition on `report_category_id` is not
 *  specified in the query, rankings for all top-level categories are returned.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reportCategoryId;

/**
 *  Country where the ranking is calculated. Represented in the ISO 3166 format.
 *  Required in the `SELECT` clause. Condition on `report_country_code` is
 *  required in the `WHERE` clause.
 */
@property(nonatomic, copy, nullable) NSString *reportCountryCode;

/**
 *  Report date. The value of this field can only be one of the following: * The
 *  first day of the week (Monday) for weekly reports, * The first day of the
 *  month for monthly reports. Required in the `SELECT` clause. If a `WHERE`
 *  condition on `report_date` is not specified in the query, the latest
 *  available weekly or monthly report is returned.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *reportDate;

/**
 *  Granularity of the report. The ranking can be done over a week or a month
 *  timeframe. Required in the `SELECT` clause. Condition on
 *  `report_granularity` is required in the `WHERE` clause.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersBrandView_ReportGranularity_Monthly
 *        Report is computed over a month timeframe. (Value: "MONTHLY")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_ReportGranularity_ReportGranularityEnumUnspecified
 *        Not specified. (Value: "REPORT_GRANULARITY_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersBrandView_ReportGranularity_Weekly Report
 *        is computed over a week timeframe. (Value: "WEEKLY")
 */
@property(nonatomic, copy, nullable) NSString *reportGranularity;

@end


/**
 *  Fields available for query in `best_sellers_product_cluster_view` table.
 *  [Best sellers](https://support.google.com/merchants/answer/9488679) report
 *  with top product clusters. A product cluster is a grouping for different
 *  offers and variants that represent the same product, for example, Google
 *  Pixel 7. Values are only set for fields requested explicitly in the
 *  request's search query.
 */
@interface GTLRMerchant_BestSellersProductClusterView : GTLRObject

/** Brand of the product cluster. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Whether there is at least one product of the brand currently `IN_STOCK` in
 *  your product data source in at least one of the countries, all products are
 *  `OUT_OF_STOCK` in your product data source in all countries, or
 *  `NOT_IN_INVENTORY`. The field doesn't take the Best sellers report country
 *  filter into account.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_InStock
 *        You have a product for this product cluster or brand in stock. (Value:
 *        "IN_STOCK")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_InventoryStatusUnspecified
 *        Not specified. (Value: "INVENTORY_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_NotInInventory
 *        You do not have a product for this product cluster or brand in
 *        inventory. (Value: "NOT_IN_INVENTORY")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_BrandInventoryStatus_OutOfStock
 *        You have a product for this product cluster or brand in inventory but
 *        it is currently out of stock. (Value: "OUT_OF_STOCK")
 */
@property(nonatomic, copy, nullable) NSString *brandInventoryStatus;

/**
 *  Product category (1st level) of the product cluster, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL1;

/**
 *  Product category (2nd level) of the product cluster, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL2;

/**
 *  Product category (3rd level) of the product cluster, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL3;

/**
 *  Product category (4th level) of the product cluster, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL4;

/**
 *  Product category (5th level) of the product cluster, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL5;

/**
 *  Whether the product cluster is `IN_STOCK` in your product data source in at
 *  least one of the countries, `OUT_OF_STOCK` in your product data source in
 *  all countries, or `NOT_IN_INVENTORY` at all. The field doesn't take the Best
 *  sellers report country filter into account.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_InStock
 *        You have a product for this product cluster or brand in stock. (Value:
 *        "IN_STOCK")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_InventoryStatusUnspecified
 *        Not specified. (Value: "INVENTORY_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_NotInInventory
 *        You do not have a product for this product cluster or brand in
 *        inventory. (Value: "NOT_IN_INVENTORY")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_InventoryStatus_OutOfStock
 *        You have a product for this product cluster or brand in inventory but
 *        it is currently out of stock. (Value: "OUT_OF_STOCK")
 */
@property(nonatomic, copy, nullable) NSString *inventoryStatus;

/**
 *  Popularity rank in the previous week or month.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *previousRank;

/**
 *  Estimated demand in relation to the product cluster with the highest
 *  popularity rank in the same category and country in the previous week or
 *  month.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_High
 *        Demand is 21-50% of the demand of the highest ranked product cluster
 *        or brand. (Value: "HIGH")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_Low
 *        Demand is 6-10% of the demand of the highest ranked product cluster or
 *        brand. (Value: "LOW")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_Medium
 *        Demand is 11-20% of the demand of the highest ranked product cluster
 *        or brand. (Value: "MEDIUM")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_RelativeDemandEnumUnspecified
 *        Not specified. (Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_VeryHigh
 *        Demand is 51-100% of the demand of the highest ranked product cluster
 *        or brand. (Value: "VERY_HIGH")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_PreviousRelativeDemand_VeryLow
 *        Demand is 0-5% of the demand of the highest ranked product cluster or
 *        brand. (Value: "VERY_LOW")
 */
@property(nonatomic, copy, nullable) NSString *previousRelativeDemand;

/**
 *  Popularity of the product cluster on Ads and organic surfaces, in the
 *  selected category and country, based on the estimated number of units sold.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rank;

/**
 *  Estimated demand in relation to the product cluster with the highest
 *  popularity rank in the same category and country.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_High
 *        Demand is 21-50% of the demand of the highest ranked product cluster
 *        or brand. (Value: "HIGH")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_Low
 *        Demand is 6-10% of the demand of the highest ranked product cluster or
 *        brand. (Value: "LOW")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_Medium
 *        Demand is 11-20% of the demand of the highest ranked product cluster
 *        or brand. (Value: "MEDIUM")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_RelativeDemandEnumUnspecified
 *        Not specified. (Value: "RELATIVE_DEMAND_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_VeryHigh
 *        Demand is 51-100% of the demand of the highest ranked product cluster
 *        or brand. (Value: "VERY_HIGH")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemand_VeryLow
 *        Demand is 0-5% of the demand of the highest ranked product cluster or
 *        brand. (Value: "VERY_LOW")
 */
@property(nonatomic, copy, nullable) NSString *relativeDemand;

/**
 *  Change in the estimated demand. Whether it rose, sank or remained flat.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_Flat
 *        Relative demand is equal to the previous time period. (Value: "FLAT")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_RelativeDemandChangeTypeEnumUnspecified
 *        Not specified. (Value: "RELATIVE_DEMAND_CHANGE_TYPE_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_Riser
 *        Relative demand is higher than the previous time period. (Value:
 *        "RISER")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_RelativeDemandChange_Sinker
 *        Relative demand is lower than the previous time period. (Value:
 *        "SINKER")
 */
@property(nonatomic, copy, nullable) NSString *relativeDemandChange;

/**
 *  Google product category ID to calculate the ranking for, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436). Required in
 *  the `SELECT` clause. If a `WHERE` condition on `report_category_id` is not
 *  specified in the query, rankings for all top-level categories are returned.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reportCategoryId;

/**
 *  Country where the ranking is calculated. Represented in the ISO 3166 format.
 *  Required in the `SELECT` clause. Condition on `report_country_code` is
 *  required in the `WHERE` clause.
 */
@property(nonatomic, copy, nullable) NSString *reportCountryCode;

/**
 *  Report date. The value of this field can only be one of the following: * The
 *  first day of the week (Monday) for weekly reports, * The first day of the
 *  month for monthly reports. Required in the `SELECT` clause. If a `WHERE`
 *  condition on `report_date` is not specified in the query, the latest
 *  available weekly or monthly report is returned.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *reportDate;

/**
 *  Granularity of the report. The ranking can be done over a week or a month
 *  timeframe. Required in the `SELECT` clause. Condition on
 *  `report_granularity` is required in the `WHERE` clause.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_ReportGranularity_Monthly
 *        Report is computed over a month timeframe. (Value: "MONTHLY")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_ReportGranularity_ReportGranularityEnumUnspecified
 *        Not specified. (Value: "REPORT_GRANULARITY_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_BestSellersProductClusterView_ReportGranularity_Weekly
 *        Report is computed over a week timeframe. (Value: "WEEKLY")
 */
@property(nonatomic, copy, nullable) NSString *reportGranularity;

/** Title of the product cluster. */
@property(nonatomic, copy, nullable) NSString *title;

/** GTINs of example variants of the product cluster. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *variantGtins;

@end


/**
 *  Fields available for query in `competitive_visibility_benchmark_view` table.
 *  [Competitive
 *  visibility](https://support.google.com/merchants/answer/11366442) report
 *  with the category benchmark. Values are only set for fields requested
 *  explicitly in the request's search query.
 */
@interface GTLRMerchant_CompetitiveVisibilityBenchmarkView : GTLRObject

/**
 *  Change in visibility based on impressions with respect to the start of the
 *  selected time range (or first day with non-zero impressions) for a combined
 *  set of merchants with highest visibility approximating the market. Cannot be
 *  filtered on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *categoryBenchmarkVisibilityTrend;

/**
 *  Date of this row. Required in the `SELECT` clause. A condition on `date` is
 *  required in the `WHERE` clause.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *date;

/**
 *  Google product category ID to calculate the report for, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436). Required in
 *  the `SELECT` clause. A condition on `report_category_id` is required in the
 *  `WHERE` clause.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reportCategoryId;

/**
 *  Country where impressions appeared. Required in the `SELECT` clause. A
 *  condition on `report_country_code` is required in the `WHERE` clause.
 */
@property(nonatomic, copy, nullable) NSString *reportCountryCode;

/**
 *  Traffic source of impressions. Required in the `SELECT` clause.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_Ads
 *        Traffic from ads. (Value: "ADS")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_All
 *        Organic and ads traffic. (Value: "ALL")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_Organic
 *        Organic traffic. (Value: "ORGANIC")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityBenchmarkView_TrafficSource_TrafficSourceEnumUnspecified
 *        Not specified. (Value: "TRAFFIC_SOURCE_ENUM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trafficSource;

/**
 *  Change in visibility based on impressions for your domain with respect to
 *  the start of the selected time range (or first day with non-zero
 *  impressions). Cannot be filtered on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yourDomainVisibilityTrend;

@end


/**
 *  Fields available for query in `competitive_visibility_competitor_view`
 *  table. [Competitive
 *  visibility](https://support.google.com/merchants/answer/11366442) report
 *  with businesses with similar visibility. Values are only set for fields
 *  requested explicitly in the request's search query.
 */
@interface GTLRMerchant_CompetitiveVisibilityCompetitorView : GTLRObject

/**
 *  [Ads / organic ratio]
 *  (https://support.google.com/merchants/answer/11366442#zippy=%2Cads-free-ratio)
 *  shows how often the domain receives impressions from Shopping ads compared
 *  to organic traffic. The number is rounded and bucketed. Cannot be filtered
 *  on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adsOrganicRatio;

/**
 *  Date of this row. A condition on `date` is required in the `WHERE` clause.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *date;

/**
 *  Domain of your competitor or your domain, if 'is_your_domain' is true.
 *  Required in the `SELECT` clause. Cannot be filtered on in the 'WHERE'
 *  clause.
 */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  [Higher position rate]
 *  (https://support.google.com/merchants/answer/11366442#zippy=%2Chigher-position-rate)
 *  shows how often a competitor’s offer got placed in a higher position on the
 *  page than your offer. Cannot be filtered on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *higherPositionRate;

/**
 *  True if this row contains data for your domain. Cannot be filtered on in the
 *  'WHERE' clause.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isYourDomain;

/**
 *  [Page overlap rate]
 *  (https://support.google.com/merchants/answer/11366442#zippy=%2Cpage-overlap-rate)
 *  shows how frequently competing retailers’ offers are shown together with
 *  your offers on the same page. Cannot be filtered on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageOverlapRate;

/**
 *  Position of the domain in the similar businesses ranking for the selected
 *  keys (`date`, `report_category_id`, `report_country_code`, `traffic_source`)
 *  based on impressions. 1 is the highest. Cannot be filtered on in the 'WHERE'
 *  clause.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rank;

/**
 *  [Relative visibility]
 *  (https://support.google.com/merchants/answer/11366442#zippy=%2Crelative-visibility)
 *  shows how often your competitors’ offers are shown compared to your offers.
 *  In other words, this is the number of displayed impressions of a competitor
 *  retailer divided by the number of your displayed impressions during a
 *  selected time range for a selected product category and country. Cannot be
 *  filtered on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relativeVisibility;

/**
 *  Google product category ID to calculate the report for, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436). Required in
 *  the `SELECT` clause. A condition on `report_category_id` is required in the
 *  `WHERE` clause.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reportCategoryId;

/**
 *  Country where impressions appeared. Required in the `SELECT` clause. A
 *  condition on `report_country_code` is required in the `WHERE` clause.
 */
@property(nonatomic, copy, nullable) NSString *reportCountryCode;

/**
 *  Traffic source of impressions. Required in the `SELECT` clause.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_Ads
 *        Traffic from ads. (Value: "ADS")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_All
 *        Organic and ads traffic. (Value: "ALL")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_Organic
 *        Organic traffic. (Value: "ORGANIC")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityCompetitorView_TrafficSource_TrafficSourceEnumUnspecified
 *        Not specified. (Value: "TRAFFIC_SOURCE_ENUM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trafficSource;

@end


/**
 *  Fields available for query in `competitive_visibility_top_merchant_view`
 *  table. [Competitive
 *  visibility](https://support.google.com/merchants/answer/11366442) report
 *  with business with highest visibility. Values are only set for fields
 *  requested explicitly in the request's search query.
 */
@interface GTLRMerchant_CompetitiveVisibilityTopMerchantView : GTLRObject

/**
 *  [Ads / organic ratio]
 *  (https://support.google.com/merchants/answer/11366442#zippy=%2Cads-free-ratio)
 *  shows how often the domain receives impressions from Shopping ads compared
 *  to organic traffic. The number is rounded and bucketed. Cannot be filtered
 *  on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adsOrganicRatio;

/**
 *  Date of this row. Cannot be selected in the `SELECT` clause. A condition on
 *  `date` is required in the `WHERE` clause.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *date;

/**
 *  Domain of your competitor or your domain, if 'is_your_domain' is true.
 *  Required in the `SELECT` clause. Cannot be filtered on in the 'WHERE'
 *  clause.
 */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  [Higher position rate]
 *  (https://support.google.com/merchants/answer/11366442#zippy=%2Chigher-position-rate)
 *  shows how often a competitor’s offer got placed in a higher position on the
 *  page than your offer. Cannot be filtered on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *higherPositionRate;

/**
 *  True if this row contains data for your domain. Cannot be filtered on in the
 *  'WHERE' clause.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isYourDomain;

/**
 *  [Page overlap rate]
 *  (https://support.google.com/merchants/answer/11366442#zippy=%2Cpage-overlap-rate)
 *  shows how frequently competing retailers’ offers are shown together with
 *  your offers on the same page. Cannot be filtered on in the 'WHERE' clause.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageOverlapRate;

/**
 *  Position of the domain in the top merchants ranking for the selected keys
 *  (`date`, `report_category_id`, `report_country_code`, `traffic_source`)
 *  based on impressions. 1 is the highest. Cannot be filtered on in the 'WHERE'
 *  clause.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rank;

/**
 *  Google product category ID to calculate the report for, represented in
 *  [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436). Required in
 *  the `SELECT` clause. A condition on `report_category_id` is required in the
 *  `WHERE` clause.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reportCategoryId;

/**
 *  Country where impressions appeared. Required in the `SELECT` clause. A
 *  condition on `report_country_code` is required in the `WHERE` clause.
 */
@property(nonatomic, copy, nullable) NSString *reportCountryCode;

/**
 *  Traffic source of impressions. Required in the `SELECT` clause.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_Ads
 *        Traffic from ads. (Value: "ADS")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_All
 *        Organic and ads traffic. (Value: "ALL")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_Organic
 *        Organic traffic. (Value: "ORGANIC")
 *    @arg @c kGTLRMerchant_CompetitiveVisibilityTopMerchantView_TrafficSource_TrafficSourceEnumUnspecified
 *        Not specified. (Value: "TRAFFIC_SOURCE_ENUM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trafficSource;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRMerchant_Date : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Issue severity per reporting context.
 */
@interface GTLRMerchant_IssueSeverityPerReportingContext : GTLRObject

/**
 *  List of demoted countries in the reporting context, represented in ISO 3166
 *  format.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *demotedCountries;

/**
 *  List of disapproved countries in the reporting context, represented in ISO
 *  3166 format.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *disapprovedCountries;

/**
 *  Reporting context the issue applies to.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_CloudRetail
 *        [Cloud retail](https://cloud.google.com/solutions/retail). (Value:
 *        "CLOUD_RETAIL")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DemandGenAds
 *        [Demand Gen
 *        ads](https://support.google.com/merchants/answer/13389785). (Value:
 *        "DEMAND_GEN_ADS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DemandGenAdsDiscoverSurface
 *        [Demand Gen ads on Discover
 *        surface](https://support.google.com/merchants/answer/13389785).
 *        (Value: "DEMAND_GEN_ADS_DISCOVER_SURFACE")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DiscoveryAds
 *        Deprecated: Use `DEMAND_GEN_ADS` instead. [Discovery and Demand Gen
 *        ads](https://support.google.com/merchants/answer/13389785). (Value:
 *        "DISCOVERY_ADS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_DisplayAds
 *        [Display ads](https://support.google.com/merchants/answer/6069387).
 *        (Value: "DISPLAY_ADS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_FreeListings
 *        [Free product
 *        listings](https://support.google.com/merchants/answer/9199328).
 *        (Value: "FREE_LISTINGS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_FreeLocalListings
 *        [Free local product
 *        listings](https://support.google.com/merchants/answer/9825611).
 *        (Value: "FREE_LOCAL_LISTINGS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_FreeLocalVehicleListings
 *        [Free local vehicle
 *        listings](https://support.google.com/merchants/answer/11544533).
 *        (Value: "FREE_LOCAL_VEHICLE_LISTINGS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_LocalCloudRetail
 *        [Local cloud retail](https://cloud.google.com/solutions/retail).
 *        (Value: "LOCAL_CLOUD_RETAIL")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_LocalInventoryAds
 *        [Local inventory
 *        ads](https://support.google.com/merchants/answer/3271956). (Value:
 *        "LOCAL_INVENTORY_ADS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_ReportingContextEnumUnspecified
 *        Not specified. (Value: "REPORTING_CONTEXT_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_ShoppingAds
 *        [Shopping ads](https://support.google.com/merchants/answer/6149970).
 *        (Value: "SHOPPING_ADS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_VehicleInventoryAds
 *        [Vehicle inventory
 *        ads](https://support.google.com/merchants/answer/11544533). (Value:
 *        "VEHICLE_INVENTORY_ADS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_VideoAds
 *        [Video ads](https://support.google.com/google-ads/answer/6340491).
 *        (Value: "VIDEO_ADS")
 *    @arg @c kGTLRMerchant_IssueSeverityPerReportingContext_ReportingContext_YoutubeShopping
 *        [YouTube
 *        Shopping](https://support.google.com/merchants/answer/13478370).
 *        (Value: "YOUTUBE_SHOPPING")
 */
@property(nonatomic, copy, nullable) NSString *reportingContext;

@end


/**
 *  Item issue associated with the product.
 */
@interface GTLRMerchant_ItemIssue : GTLRObject

/**
 *  Item issue resolution.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ItemIssue_Resolution_ItemIssueResolutionUnspecified
 *        Not specified. (Value: "ITEM_ISSUE_RESOLUTION_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ItemIssue_Resolution_MerchantAction The merchant has
 *        to fix the issue. (Value: "MERCHANT_ACTION")
 *    @arg @c kGTLRMerchant_ItemIssue_Resolution_PendingProcessing The issue
 *        will be resolved automatically (for example, image crawl) or through a
 *        Google review. No merchant action is required now. Resolution might
 *        lead to another issue (for example, if crawl fails). (Value:
 *        "PENDING_PROCESSING")
 */
@property(nonatomic, copy, nullable) NSString *resolution;

/** Item issue severity. */
@property(nonatomic, strong, nullable) GTLRMerchant_ItemIssueSeverity *severity;

/** Item issue type. */
@property(nonatomic, strong, nullable) GTLRMerchant_ItemIssueType *type;

@end


/**
 *  How the issue affects the serving of the product.
 */
@interface GTLRMerchant_ItemIssueSeverity : GTLRObject

/**
 *  Aggregated severity of the issue for all reporting contexts it affects.
 *  **This field can be used for filtering the results.**
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_AggregatedIssueSeverityUnspecified
 *        Not specified. (Value: "AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_Demoted Issue
 *        demotes the product in all reporting contexts it affects. (Value:
 *        "DEMOTED")
 *    @arg @c kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_Disapproved
 *        Issue disapproves the product in at least one reporting context.
 *        (Value: "DISAPPROVED")
 *    @arg @c kGTLRMerchant_ItemIssueSeverity_AggregatedSeverity_Pending Issue
 *        resolution is `PENDING_PROCESSING`. (Value: "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *aggregatedSeverity;

/** Issue severity per reporting context. */
@property(nonatomic, strong, nullable) NSArray<GTLRMerchant_IssueSeverityPerReportingContext *> *severityPerReportingContext;

@end


/**
 *  Issue type.
 */
@interface GTLRMerchant_ItemIssueType : GTLRObject

/** Canonical attribute name for attribute-specific issues. */
@property(nonatomic, copy, nullable) NSString *canonicalAttribute;

/**
 *  Error code of the issue, equivalent to the `code` of [Product
 *  issues](https://developers.google.com/shopping-content/guides/product-issues).
 */
@property(nonatomic, copy, nullable) NSString *code;

@end


/**
 *  Fields available for query in `non_product_performance_view` table.
 *  Performance data on images and online store links leading to your
 *  non-product pages. This includes performance metrics (for example, `clicks`)
 *  and dimensions according to which performance metrics are segmented (for
 *  example, `date`). Segment fields cannot be selected in queries without also
 *  selecting at least one metric field. Values are only set for fields
 *  requested explicitly in the request's search query.
 */
@interface GTLRMerchant_NonProductPerformanceView : GTLRObject

/**
 *  Number of clicks on images and online store links leading to your
 *  non-product pages. Metric.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clicks;

/**
 *  Click-through rate - the number of clicks (`clicks`) divided by the number
 *  of impressions (`impressions`) of images and online store links leading to
 *  your non-product pages. Metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clickThroughRate;

/**
 *  Date in the merchant timezone to which metrics apply. Segment. Condition on
 *  `date` is required in the `WHERE` clause.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *date;

/**
 *  Number of times images and online store links leading to your non-product
 *  pages were shown. Metric.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *impressions;

/**
 *  First day of the week (Monday) of the metrics date in the merchant timezone.
 *  Segment.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *week;

@end


/**
 *  The price represented as a number and currency.
 */
@interface GTLRMerchant_Price : GTLRObject

/**
 *  The price represented as a number in micros (1 million micros is an
 *  equivalent to one's currency standard unit, for example, 1 USD = 1000000
 *  micros).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *amountMicros;

/**
 *  The currency of the price using three-letter acronyms according to [ISO
 *  4217](http://en.wikipedia.org/wiki/ISO_4217).
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

@end


/**
 *  Fields available for query in `price_competitiveness_product_view` table.
 *  [Price competitiveness](https://support.google.com/merchants/answer/9626903)
 *  report. Values are only set for fields requested explicitly in the request's
 *  search query.
 */
@interface GTLRMerchant_PriceCompetitivenessProductView : GTLRObject

/**
 *  Latest available price benchmark for the product's catalog in the benchmark
 *  country.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Price *benchmarkPrice;

/** Brand of the product. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Product category (1st level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL1;

/**
 *  Product category (2nd level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL2;

/**
 *  Product category (3rd level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL3;

/**
 *  Product category (4th level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL4;

/**
 *  Product category (5th level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL5;

/**
 *  REST ID of the product, in the form of
 *  `channel~languageCode~feedLabel~offerId`. Can be used to join data with the
 *  `product_view` table. Required in the `SELECT` clause.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Merchant-provided id of the product. */
@property(nonatomic, copy, nullable) NSString *offerId;

/** Current price of the product. */
@property(nonatomic, strong, nullable) GTLRMerchant_Price *price;

/**
 *  Product type (1st level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL1;

/**
 *  Product type (2nd level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL2;

/**
 *  Product type (3rd level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL3;

/**
 *  Product type (4th level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL4;

/**
 *  Product type (5th level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL5;

/**
 *  Country of the price benchmark. Represented in the ISO 3166 format. Required
 *  in the `SELECT` clause.
 */
@property(nonatomic, copy, nullable) NSString *reportCountryCode;

/** Title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Fields available for query in `price_insights_product_view` table. [Price
 *  insights](https://support.google.com/merchants/answer/11916926) report.
 *  Values are only set for fields requested explicitly in the request's search
 *  query.
 */
@interface GTLRMerchant_PriceInsightsProductView : GTLRObject

/** Brand of the product. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Product category (1st level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL1;

/**
 *  Product category (2nd level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL2;

/**
 *  Product category (3rd level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL3;

/**
 *  Product category (4th level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL4;

/**
 *  Product category (5th level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL5;

/**
 *  The predicted effectiveness of applying the price suggestion, bucketed.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_PriceInsightsProductView_Effectiveness_EffectivenessUnspecified
 *        Effectiveness is unknown. (Value: "EFFECTIVENESS_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_PriceInsightsProductView_Effectiveness_High
 *        Effectiveness is high. (Value: "HIGH")
 *    @arg @c kGTLRMerchant_PriceInsightsProductView_Effectiveness_Low
 *        Effectiveness is low. (Value: "LOW")
 *    @arg @c kGTLRMerchant_PriceInsightsProductView_Effectiveness_Medium
 *        Effectiveness is medium. (Value: "MEDIUM")
 */
@property(nonatomic, copy, nullable) NSString *effectiveness;

/**
 *  REST ID of the product, in the form of
 *  `channel~languageCode~feedLabel~offerId`. Can be used to join data with the
 *  `product_view` table. Required in the `SELECT` clause.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Merchant-provided id of the product. */
@property(nonatomic, copy, nullable) NSString *offerId;

/**
 *  Predicted change in clicks as a fraction after introducing the suggested
 *  price compared to current active price. For example, 0.05 is a 5% predicted
 *  increase in clicks.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *predictedClicksChangeFraction;

/**
 *  Predicted change in conversions as a fraction after introducing the
 *  suggested price compared to current active price. For example, 0.05 is a 5%
 *  predicted increase in conversions).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *predictedConversionsChangeFraction;

/**
 *  Predicted change in impressions as a fraction after introducing the
 *  suggested price compared to current active price. For example, 0.05 is a 5%
 *  predicted increase in impressions.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *predictedImpressionsChangeFraction;

/** Current price of the product. */
@property(nonatomic, strong, nullable) GTLRMerchant_Price *price;

/**
 *  Product type (1st level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL1;

/**
 *  Product type (2nd level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL2;

/**
 *  Product type (3rd level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL3;

/**
 *  Product type (4th level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL4;

/**
 *  Product type (5th level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL5;

/** Latest suggested price for the product. */
@property(nonatomic, strong, nullable) GTLRMerchant_Price *suggestedPrice;

/** Title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The change that happened to the product including old value, new value,
 *  country code as the region code and reporting context.
 */
@interface GTLRMerchant_ProductChange : GTLRObject

/** The new value of the changed resource or attribute. */
@property(nonatomic, copy, nullable) NSString *newValue NS_RETURNS_NOT_RETAINED;

/** The old value of the changed resource or attribute. */
@property(nonatomic, copy, nullable) NSString *oldValue;

/** Countries that have the change (if applicable) */
@property(nonatomic, copy, nullable) NSString *regionCode;

/**
 *  Reporting contexts that have the change (if applicable)
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_CloudRetail [Cloud
 *        retail](https://cloud.google.com/solutions/retail). (Value:
 *        "CLOUD_RETAIL")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_DemandGenAds [Demand
 *        Gen ads](https://support.google.com/merchants/answer/13389785).
 *        (Value: "DEMAND_GEN_ADS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_DemandGenAdsDiscoverSurface
 *        [Demand Gen ads on Discover
 *        surface](https://support.google.com/merchants/answer/13389785).
 *        (Value: "DEMAND_GEN_ADS_DISCOVER_SURFACE")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_DiscoveryAds
 *        Deprecated: Use `DEMAND_GEN_ADS` instead. [Discovery and Demand Gen
 *        ads](https://support.google.com/merchants/answer/13389785). (Value:
 *        "DISCOVERY_ADS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_DisplayAds [Display
 *        ads](https://support.google.com/merchants/answer/6069387). (Value:
 *        "DISPLAY_ADS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_FreeListings [Free
 *        product
 *        listings](https://support.google.com/merchants/answer/9199328).
 *        (Value: "FREE_LISTINGS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_FreeLocalListings
 *        [Free local product
 *        listings](https://support.google.com/merchants/answer/9825611).
 *        (Value: "FREE_LOCAL_LISTINGS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_FreeLocalVehicleListings
 *        [Free local vehicle
 *        listings](https://support.google.com/merchants/answer/11544533).
 *        (Value: "FREE_LOCAL_VEHICLE_LISTINGS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_LocalCloudRetail
 *        [Local cloud retail](https://cloud.google.com/solutions/retail).
 *        (Value: "LOCAL_CLOUD_RETAIL")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_LocalInventoryAds
 *        [Local inventory
 *        ads](https://support.google.com/merchants/answer/3271956). (Value:
 *        "LOCAL_INVENTORY_ADS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_ReportingContextEnumUnspecified
 *        Not specified. (Value: "REPORTING_CONTEXT_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_ShoppingAds [Shopping
 *        ads](https://support.google.com/merchants/answer/6149970). (Value:
 *        "SHOPPING_ADS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_VehicleInventoryAds
 *        [Vehicle inventory
 *        ads](https://support.google.com/merchants/answer/11544533). (Value:
 *        "VEHICLE_INVENTORY_ADS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_VideoAds [Video
 *        ads](https://support.google.com/google-ads/answer/6340491). (Value:
 *        "VIDEO_ADS")
 *    @arg @c kGTLRMerchant_ProductChange_ReportingContext_YoutubeShopping
 *        [YouTube
 *        Shopping](https://support.google.com/merchants/answer/13478370).
 *        (Value: "YOUTUBE_SHOPPING")
 */
@property(nonatomic, copy, nullable) NSString *reportingContext;

@end


/**
 *  Fields available for query in `product_performance_view` table. Product
 *  performance data for your account, including performance metrics (for
 *  example, `clicks`) and dimensions according to which performance metrics are
 *  segmented (for example, `offer_id`). Values of product dimensions, such as
 *  `offer_id`, reflect the state of a product at the time of the impression.
 *  Segment fields cannot be selected in queries without also selecting at least
 *  one metric field. Values are only set for fields requested explicitly in the
 *  request's search query.
 */
@interface GTLRMerchant_ProductPerformanceView : GTLRObject

/** Brand of the product. Segment. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  [Product category (1st
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *categoryL1;

/**
 *  [Product category (2nd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *categoryL2;

/**
 *  [Product category (3rd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *categoryL3;

/**
 *  [Product category (4th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *categoryL4;

/**
 *  [Product category (5th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *categoryL5;

/**
 *  Number of clicks. Metric.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clicks;

/**
 *  Click-through rate - the number of clicks merchant's products receive
 *  (clicks) divided by the number of times the products are shown
 *  (impressions). Metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clickThroughRate;

/**
 *  Number of conversions divided by the number of clicks, reported on the
 *  impression date. Metric. Available only for the `FREE` traffic source.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversionRate;

/**
 *  Number of conversions attributed to the product, reported on the conversion
 *  date. Depending on the attribution model, a conversion might be distributed
 *  across multiple clicks, where each click gets its own credit assigned. This
 *  metric is a sum of all such credits. Metric. Available only for the `FREE`
 *  traffic source.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversions;

/**
 *  Value of conversions attributed to the product, reported on the conversion
 *  date. Metric. Available only for the `FREE` traffic source.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Price *conversionValue;

/**
 *  Code of the country where the customer is located at the time of the event.
 *  Represented in the ISO 3166 format. Segment. If the customer country cannot
 *  be determined, a special 'ZZ' code is returned.
 */
@property(nonatomic, copy, nullable) NSString *customerCountryCode;

/** Custom label 0 for custom grouping of products. Segment. */
@property(nonatomic, copy, nullable) NSString *customLabel0;

/** Custom label 1 for custom grouping of products. Segment. */
@property(nonatomic, copy, nullable) NSString *customLabel1;

/** Custom label 2 for custom grouping of products. Segment. */
@property(nonatomic, copy, nullable) NSString *customLabel2;

/** Custom label 3 for custom grouping of products. Segment. */
@property(nonatomic, copy, nullable) NSString *customLabel3;

/** Custom label 4 for custom grouping of products. Segment. */
@property(nonatomic, copy, nullable) NSString *customLabel4;

/**
 *  Date in the merchant timezone to which metrics apply. Segment. Condition on
 *  `date` is required in the `WHERE` clause.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *date;

/**
 *  Number of times merchant's products are shown. Metric.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *impressions;

/**
 *  Marketing method to which metrics apply. Segment.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ProductPerformanceView_MarketingMethod_Ads Ads-based
 *        marketing. (Value: "ADS")
 *    @arg @c kGTLRMerchant_ProductPerformanceView_MarketingMethod_MarketingMethodEnumUnspecified
 *        Not specified. (Value: "MARKETING_METHOD_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ProductPerformanceView_MarketingMethod_Organic
 *        Organic marketing. (Value: "ORGANIC")
 */
@property(nonatomic, copy, nullable) NSString *marketingMethod;

/** Merchant-provided id of the product. Segment. */
@property(nonatomic, copy, nullable) NSString *offerId;

/**
 *  [Product type (1st
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL1;

/**
 *  [Product type (2nd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL2;

/**
 *  [Product type (3rd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL3;

/**
 *  [Product type (4th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL4;

/**
 *  [Product type (5th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy. Segment.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL5;

/** Title of the product. Segment. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  First day of the week (Monday) of the metrics date in the merchant timezone.
 *  Segment.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *week;

@end


/**
 *  The message that the merchant will receive to notify about product status
 *  change event
 */
@interface GTLRMerchant_ProductStatusChangeMessage : GTLRObject

/**
 *  The target account that owns the entity that changed. Format :
 *  `accounts/{merchant_id}`
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  The attribute in the resource that changed, in this case it will be always
 *  `Status`.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ProductStatusChangeMessage_Attribute_AttributeUnspecified
 *        Unspecified attribute (Value: "ATTRIBUTE_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ProductStatusChangeMessage_Attribute_Status Status
 *        of the changed entity (Value: "STATUS")
 */
@property(nonatomic, copy, nullable) NSString *attribute;

/** A message to describe the change that happened to the product */
@property(nonatomic, strong, nullable) NSArray<GTLRMerchant_ProductChange *> *changes;

/**
 *  The account that manages the merchant's account. can be the same as merchant
 *  id if it is standalone account. Format : `accounts/{service_provider_id}`
 */
@property(nonatomic, copy, nullable) NSString *managingAccount;

/**
 *  The product name. Format:
 *  `{product.name=accounts/{account}/products/{product}}`
 */
@property(nonatomic, copy, nullable) NSString *resource;

/** The product id. */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  The resource that changed, in this case it will always be `Product`.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ProductStatusChangeMessage_ResourceType_Product
 *        Resource type : product (Value: "PRODUCT")
 *    @arg @c kGTLRMerchant_ProductStatusChangeMessage_ResourceType_ResourceUnspecified
 *        Unspecified resource (Value: "RESOURCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

@end


/**
 *  Fields available for query in `product_view` table. Products in the current
 *  inventory. Products in this table are the same as in Products sub-API but
 *  not all product attributes from Products sub-API are available for query in
 *  this table. In contrast to Products sub-API, this table allows to filter the
 *  returned list of products by product attributes. To retrieve a single
 *  product by `id` or list all products, Products sub-API should be used.
 *  Values are only set for fields requested explicitly in the request's search
 *  query.
 */
@interface GTLRMerchant_ProductView : GTLRObject

/**
 *  Aggregated status.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ProductView_AggregatedReportingContextStatus_AggregatedReportingContextStatusUnspecified
 *        Not specified. (Value:
 *        "AGGREGATED_REPORTING_CONTEXT_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ProductView_AggregatedReportingContextStatus_Eligible
 *        Product is eligible for all reporting contexts. (Value: "ELIGIBLE")
 *    @arg @c kGTLRMerchant_ProductView_AggregatedReportingContextStatus_EligibleLimited
 *        Product is eligible for some (but not all) reporting contexts. (Value:
 *        "ELIGIBLE_LIMITED")
 *    @arg @c kGTLRMerchant_ProductView_AggregatedReportingContextStatus_NotEligibleOrDisapproved
 *        Product is not eligible or is disapproved for all reporting contexts.
 *        (Value: "NOT_ELIGIBLE_OR_DISAPPROVED")
 *    @arg @c kGTLRMerchant_ProductView_AggregatedReportingContextStatus_Pending
 *        Product's status is pending in all reporting contexts. (Value:
 *        "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *aggregatedReportingContextStatus;

/**
 *  [Availability](https://support.google.com/merchants/answer/6324448) of the
 *  product.
 */
@property(nonatomic, copy, nullable) NSString *availability;

/** Brand of the product. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Product category (1st level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL1;

/**
 *  Product category (2nd level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL2;

/**
 *  Product category (3rd level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL3;

/**
 *  Product category (4th level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL4;

/**
 *  Product category (5th level) in [Google's product
 *  taxonomy](https://support.google.com/merchants/answer/6324436).
 */
@property(nonatomic, copy, nullable) NSString *categoryL5;

/**
 *  Channel of the product. Can be `ONLINE` or `LOCAL`.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ProductView_Channel_ChannelEnumUnspecified Not
 *        specified. (Value: "CHANNEL_ENUM_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ProductView_Channel_Local Local product. (Value:
 *        "LOCAL")
 *    @arg @c kGTLRMerchant_ProductView_Channel_Online Online product. (Value:
 *        "ONLINE")
 */
@property(nonatomic, copy, nullable) NSString *channel;

/**
 *  Estimated performance potential compared to highest performing products of
 *  the merchant.
 *
 *  Likely values:
 *    @arg @c kGTLRMerchant_ProductView_ClickPotential_ClickPotentialUnspecified
 *        Unknown predicted clicks impact. (Value:
 *        "CLICK_POTENTIAL_UNSPECIFIED")
 *    @arg @c kGTLRMerchant_ProductView_ClickPotential_High Potential to receive
 *        a similar number of clicks as the highest performing products of the
 *        merchant. (Value: "HIGH")
 *    @arg @c kGTLRMerchant_ProductView_ClickPotential_Low Potential to receive
 *        a low number of clicks compared to the highest performing products of
 *        the merchant. (Value: "LOW")
 *    @arg @c kGTLRMerchant_ProductView_ClickPotential_Medium Potential to
 *        receive a moderate number of clicks compared to the highest performing
 *        products of the merchant. (Value: "MEDIUM")
 */
@property(nonatomic, copy, nullable) NSString *clickPotential;

/**
 *  Rank of the product based on its click potential. A product with
 *  `click_potential_rank` 1 has the highest click potential among the
 *  merchant's products that fulfill the search query conditions.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clickPotentialRank;

/**
 *  [Condition](https://support.google.com/merchants/answer/6324469) of the
 *  product.
 */
@property(nonatomic, copy, nullable) NSString *condition;

/** The time the merchant created the product in timestamp seconds. */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/** Expiration date for the product, specified on insertion. */
@property(nonatomic, strong, nullable) GTLRMerchant_Date *expirationDate;

/** Feed label of the product. */
@property(nonatomic, copy, nullable) NSString *feedLabel;

/** List of Global Trade Item Numbers (GTINs) of the product. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *gtin;

/**
 *  REST ID of the product, in the form of
 *  `channel~languageCode~feedLabel~offerId`. Merchant API methods that operate
 *  on products take this as their `name` parameter. Required in the `SELECT`
 *  clause.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Item group id provided by the merchant for grouping variants together. */
@property(nonatomic, copy, nullable) NSString *itemGroupId;

/**
 *  List of item issues for the product. **This field cannot be used for sorting
 *  the results.** **Only selected attributes of this field (for example,
 *  `item_issues.severity.aggregated_severity`) can be used for filtering the
 *  results.**
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMerchant_ItemIssue *> *itemIssues;

/** Language code of the product in BCP 47 format. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Merchant-provided id of the product. */
@property(nonatomic, copy, nullable) NSString *offerId;

/**
 *  Product price. Absent if the information about the price of the product is
 *  not available.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_Price *price;

/**
 *  Product type (1st level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL1;

/**
 *  Product type (2nd level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL2;

/**
 *  Product type (3rd level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL3;

/**
 *  Product type (4th level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL4;

/**
 *  Product type (5th level) in merchant's own [product
 *  taxonomy](https://support.google.com/merchants/answer/6324406).
 */
@property(nonatomic, copy, nullable) NSString *productTypeL5;

/**
 *  Normalized [shipping
 *  label](https://support.google.com/merchants/answer/6324504) specified in the
 *  data source.
 */
@property(nonatomic, copy, nullable) NSString *shippingLabel;

/**
 *  Link to the processed image of the product, hosted on the Google
 *  infrastructure.
 */
@property(nonatomic, copy, nullable) NSString *thumbnailLink;

/** Title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Result row returned from the search query. Only the message corresponding to
 *  the queried table is populated in the response. Within the populated
 *  message, only the fields requested explicitly in the query are populated.
 */
@interface GTLRMerchant_ReportRow : GTLRObject

/** Fields available for query in `best_sellers_brand_view` table. */
@property(nonatomic, strong, nullable) GTLRMerchant_BestSellersBrandView *bestSellersBrandView;

/**
 *  Fields available for query in `best_sellers_product_cluster_view` table.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_BestSellersProductClusterView *bestSellersProductClusterView;

/**
 *  Fields available for query in `competitive_visibility_benchmark_view` table.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_CompetitiveVisibilityBenchmarkView *competitiveVisibilityBenchmarkView;

/**
 *  Fields available for query in `competitive_visibility_competitor_view`
 *  table.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_CompetitiveVisibilityCompetitorView *competitiveVisibilityCompetitorView;

/**
 *  Fields available for query in `competitive_visibility_top_merchant_view`
 *  table.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_CompetitiveVisibilityTopMerchantView *competitiveVisibilityTopMerchantView;

/** Fields available for query in `non_product_performance_view` table. */
@property(nonatomic, strong, nullable) GTLRMerchant_NonProductPerformanceView *nonProductPerformanceView;

/**
 *  Fields available for query in `price_competitiveness_product_view` table.
 */
@property(nonatomic, strong, nullable) GTLRMerchant_PriceCompetitivenessProductView *priceCompetitivenessProductView;

/** Fields available for query in `price_insights_product_view` table. */
@property(nonatomic, strong, nullable) GTLRMerchant_PriceInsightsProductView *priceInsightsProductView;

/** Fields available for query in `product_performance_view` table. */
@property(nonatomic, strong, nullable) GTLRMerchant_ProductPerformanceView *productPerformanceView;

/** Fields available for query in `product_view` table. */
@property(nonatomic, strong, nullable) GTLRMerchant_ProductView *productView;

@end


/**
 *  Request message for the `ReportService.Search` method.
 */
@interface GTLRMerchant_SearchRequest : GTLRObject

/**
 *  Optional. Number of `ReportRows` to retrieve in a single page. Defaults to
 *  1000. Values above 5000 are coerced to 5000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Optional. Token of the page to retrieve. If not specified, the first page of
 *  results is returned. In order to request the next page of results, the value
 *  obtained from `next_page_token` in the previous response should be used.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Query that defines a report to be retrieved. For details on how to
 *  construct your query, see the Query Language guide. For the full list of
 *  available tables and fields, see the Available fields.
 */
@property(nonatomic, copy, nullable) NSString *query;

@end


/**
 *  Response message for the `ReportService.Search` method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "results" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMerchant_SearchResponse : GTLRCollectionObject

/**
 *  Token which can be sent as `page_token` to retrieve the next page. If
 *  omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Rows that matched the search query.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMerchant_ReportRow *> *results;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
