// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Policy Simulator API (policysimulator/v1)
// Description:
//   Policy Simulator is a collection of endpoints for creating, running, and
//   viewing a Replay. A `Replay` is a type of simulation that lets you see how
//   your members' access to resources might change if you changed your IAM
//   policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past
//   access attempts under both the current policy and your proposed policy, and
//   compares those results to determine how your members' access might change
//   under the proposed policy.
// Documentation:
//   https://cloud.google.com/iam/docs/simulating-access

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRPolicySimulator_GoogleCloudOrgpolicyV2AlternatePolicySpec;
@class GTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint;
@class GTLRPolicySimulator_GoogleCloudOrgpolicyV2Policy;
@class GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpec;
@class GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpecPolicyRule;
@class GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessTuple;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Memberships;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig_PolicyOverlay;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayDiff;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayResult;
@class GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayResultsSummary;
@class GTLRPolicySimulator_GoogleIamV1AuditConfig;
@class GTLRPolicySimulator_GoogleIamV1AuditLogConfig;
@class GTLRPolicySimulator_GoogleIamV1Binding;
@class GTLRPolicySimulator_GoogleIamV1Policy;
@class GTLRPolicySimulator_GoogleLongrunningOperation;
@class GTLRPolicySimulator_GoogleLongrunningOperation_Metadata;
@class GTLRPolicySimulator_GoogleLongrunningOperation_Response;
@class GTLRPolicySimulator_GoogleRpcStatus;
@class GTLRPolicySimulator_GoogleRpcStatus_Details_Item;
@class GTLRPolicySimulator_GoogleTypeDate;
@class GTLRPolicySimulator_GoogleTypeExpr;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint.actionType

/**
 *  Unspecified. Results in an error.
 *
 *  Value: "ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_ActionType_ActionTypeUnspecified;
/**
 *  Allowed action type.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_ActionType_Allow;
/**
 *  Deny action type.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_ActionType_Deny;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint.methodTypes

/**
 *  Constraint applied when creating the resource.
 *
 *  Value: "CREATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_MethodTypes_Create;
/**
 *  Constraint applied when deleting the resource. Not supported yet.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_MethodTypes_Delete;
/**
 *  Unspecified. Results in an error.
 *
 *  Value: "METHOD_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_MethodTypes_MethodTypeUnspecified;
/**
 *  Constraint applied when updating the resource.
 *
 *  Value: "UPDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_MethodTypes_Update;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff.accessChange

/**
 *  Default value. This value is unused.
 *
 *  Value: "ACCESS_CHANGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessChangeTypeUnspecified;
/**
 *  The principal did not have access under the current policies
 *  (`NOT_GRANTED`), but will have access after the proposed changes
 *  (`GRANTED`).
 *
 *  Value: "ACCESS_GAINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessGained;
/**
 *  This result can occur for the following reasons: * The principal did not
 *  have access under the current policies (`NOT_GRANTED`), but their access
 *  after the proposed changes is `UNKNOWN`. * The principal's access under the
 *  current policies is `UNKNOWN`, but they will have access after the proposed
 *  changes (`GRANTED`).
 *
 *  Value: "ACCESS_MAYBE_GAINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessMaybeGained;
/**
 *  This result can occur for the following reasons: * The principal had access
 *  under the current policies (`GRANTED`), but their access after the proposed
 *  changes is `UNKNOWN`. * The principal's access under the current policies is
 *  `UNKNOWN`, but they will not have access after the proposed changes
 *  (`NOT_GRANTED`).
 *
 *  Value: "ACCESS_MAYBE_REVOKED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessMaybeRevoked;
/**
 *  The principal had access under the current policies (`GRANTED`), but will no
 *  longer have access after the proposed changes (`NOT_GRANTED`).
 *
 *  Value: "ACCESS_REVOKED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessRevoked;
/**
 *  The principal's access did not change. This includes the case where both
 *  baseline and simulated are UNKNOWN, but the unknown information is
 *  equivalent.
 *
 *  Value: "NO_CHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_NoChange;
/**
 *  The principal's access under both the current policies and the proposed
 *  policies is `UNKNOWN`, but the unknown information differs between them.
 *
 *  Value: "UNKNOWN_CHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_UnknownChange;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata.state

/**
 *  The OrgPolicyViolationsPreview creation failed with an error.
 *
 *  Value: "PREVIEW_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewFailed;
/**
 *  The OrgPolicyViolationsPreview has not been created yet.
 *
 *  Value: "PREVIEW_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewPending;
/**
 *  The OrgPolicyViolationsPreview is currently being created.
 *
 *  Value: "PREVIEW_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewRunning;
/**
 *  The state is unspecified.
 *
 *  Value: "PREVIEW_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewStateUnspecified;
/**
 *  The OrgPolicyViolationsPreview creation finished successfully.
 *
 *  Value: "PREVIEW_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewSucceeded;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview.state

/**
 *  The OrgPolicyViolationsPreview creation failed with an error.
 *
 *  Value: "PREVIEW_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewFailed;
/**
 *  The OrgPolicyViolationsPreview has not been created yet.
 *
 *  Value: "PREVIEW_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewPending;
/**
 *  The OrgPolicyViolationsPreview is currently being created.
 *
 *  Value: "PREVIEW_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewRunning;
/**
 *  The state is unspecified.
 *
 *  Value: "PREVIEW_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewStateUnspecified;
/**
 *  The OrgPolicyViolationsPreview creation finished successfully.
 *
 *  Value: "PREVIEW_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewSucceeded;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata.state

/**
 *  The OrgPolicyViolationsPreview creation failed with an error.
 *
 *  Value: "PREVIEW_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewFailed;
/**
 *  The OrgPolicyViolationsPreview has not been created yet.
 *
 *  Value: "PREVIEW_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewPending;
/**
 *  The OrgPolicyViolationsPreview is currently being created.
 *
 *  Value: "PREVIEW_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewRunning;
/**
 *  The state is unspecified.
 *
 *  Value: "PREVIEW_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewStateUnspecified;
/**
 *  The OrgPolicyViolationsPreview creation finished successfully.
 *
 *  Value: "PREVIEW_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewSucceeded;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview.state

/**
 *  The OrgPolicyViolationsPreview creation failed with an error.
 *
 *  Value: "PREVIEW_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewFailed;
/**
 *  The OrgPolicyViolationsPreview has not been created yet.
 *
 *  Value: "PREVIEW_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewPending;
/**
 *  The OrgPolicyViolationsPreview is currently being created.
 *
 *  Value: "PREVIEW_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewRunning;
/**
 *  The state is unspecified.
 *
 *  Value: "PREVIEW_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewStateUnspecified;
/**
 *  The OrgPolicyViolationsPreview creation finished successfully.
 *
 *  Value: "PREVIEW_SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewSucceeded;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation.access

/**
 *  Default value. This value is unused.
 *
 *  Value: "ACCESS_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_AccessStateUnspecified;
/**
 *  The principal has the permission.
 *
 *  Value: "GRANTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_Granted;
/**
 *  The principal does not have the permission.
 *
 *  Value: "NOT_GRANTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_NotGranted;
/**
 *  The principal has the permission only if a condition expression evaluates to
 *  `true`.
 *
 *  Value: "UNKNOWN_CONDITIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_UnknownConditional;
/**
 *  The user who created the Replay does not have access to all of the policies
 *  that Policy Simulator needs to evaluate.
 *
 *  Value: "UNKNOWN_INFO_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_UnknownInfoDenied;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation.relevance

/**
 *  Default value. This value is unused.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Relevance_HeuristicRelevanceUnspecified;
/**
 *  The data point has a strong effect on the result. Changing the data point is
 *  likely to affect the overall determination.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Relevance_High;
/**
 *  The data point has a limited effect on the result. Changing the data point
 *  is unlikely to affect the overall determination.
 *
 *  Value: "NORMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Relevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation.rolePermission

/**
 *  The permission is included in the role.
 *
 *  Value: "ROLE_PERMISSION_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionIncluded;
/**
 *  The permission is not included in the role.
 *
 *  Value: "ROLE_PERMISSION_NOT_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionNotIncluded;
/**
 *  The user who created the Replay is not allowed to access the binding.
 *
 *  Value: "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionUnknownInfoDenied;
/**
 *  Default value. This value is unused.
 *
 *  Value: "ROLE_PERMISSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionUnspecified;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation.rolePermissionRelevance

/**
 *  Default value. This value is unused.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermissionRelevance_HeuristicRelevanceUnspecified;
/**
 *  The data point has a strong effect on the result. Changing the data point is
 *  likely to affect the overall determination.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermissionRelevance_High;
/**
 *  The data point has a limited effect on the result. Changing the data point
 *  is unlikely to affect the overall determination.
 *
 *  Value: "NORMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermissionRelevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.membership

/**
 *  The binding includes the principal. The principal can be included directly
 *  or indirectly. For example: * A principal is included directly if that
 *  principal is listed in the binding. * A principal is included indirectly if
 *  that principal is in a Google group or Google Workspace domain that is
 *  listed in the binding.
 *
 *  Value: "MEMBERSHIP_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipIncluded;
/**
 *  The binding does not include the principal.
 *
 *  Value: "MEMBERSHIP_NOT_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipNotIncluded;
/**
 *  The user who created the Replay is not allowed to access the binding.
 *
 *  Value: "MEMBERSHIP_UNKNOWN_INFO_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipUnknownInfoDenied;
/**
 *  The principal is an unsupported type. Only Google Accounts and service
 *  accounts are supported.
 *
 *  Value: "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipUnknownUnsupported;
/**
 *  Default value. This value is unused.
 *
 *  Value: "MEMBERSHIP_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipUnspecified;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.relevance

/**
 *  Default value. This value is unused.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Relevance_HeuristicRelevanceUnspecified;
/**
 *  The data point has a strong effect on the result. Changing the data point is
 *  likely to affect the overall determination.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Relevance_High;
/**
 *  The data point has a limited effect on the result. Changing the data point
 *  is unlikely to affect the overall determination.
 *
 *  Value: "NORMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Relevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess.accessState

/**
 *  Default value. This value is unused.
 *
 *  Value: "ACCESS_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_AccessStateUnspecified;
/**
 *  The principal has the permission.
 *
 *  Value: "GRANTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_Granted;
/**
 *  The principal does not have the permission.
 *
 *  Value: "NOT_GRANTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_NotGranted;
/**
 *  The principal has the permission only if a condition expression evaluates to
 *  `true`.
 *
 *  Value: "UNKNOWN_CONDITIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_UnknownConditional;
/**
 *  The user who created the Replay does not have access to all of the policies
 *  that Policy Simulator needs to evaluate.
 *
 *  Value: "UNKNOWN_INFO_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_UnknownInfoDenied;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy.access

/**
 *  Default value. This value is unused.
 *
 *  Value: "ACCESS_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_AccessStateUnspecified;
/**
 *  The principal has the permission.
 *
 *  Value: "GRANTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_Granted;
/**
 *  The principal does not have the permission.
 *
 *  Value: "NOT_GRANTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_NotGranted;
/**
 *  The principal has the permission only if a condition expression evaluates to
 *  `true`.
 *
 *  Value: "UNKNOWN_CONDITIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_UnknownConditional;
/**
 *  The user who created the Replay does not have access to all of the policies
 *  that Policy Simulator needs to evaluate.
 *
 *  Value: "UNKNOWN_INFO_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_UnknownInfoDenied;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy.relevance

/**
 *  Default value. This value is unused.
 *
 *  Value: "HEURISTIC_RELEVANCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Relevance_HeuristicRelevanceUnspecified;
/**
 *  The data point has a strong effect on the result. Changing the data point is
 *  likely to affect the overall determination.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Relevance_High;
/**
 *  The data point has a limited effect on the result. Changing the data point
 *  is unlikely to affect the overall determination.
 *
 *  Value: "NORMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Relevance_Normal;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay.state

/**
 *  The `Replay` has finished with an error.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Failed;
/**
 *  The `Replay` has not started yet.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Pending;
/**
 *  The `Replay` is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Running;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_StateUnspecified;
/**
 *  The `Replay` has successfully completed.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig.logSource

/**
 *  An unspecified log source. If the log source is unspecified, the Replay
 *  defaults to using `RECENT_ACCESSES`.
 *
 *  Value: "LOG_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig_LogSource_LogSourceUnspecified;
/**
 *  All access logs from the last 90 days. These logs may not include logs from
 *  the most recent 7 days.
 *
 *  Value: "RECENT_ACCESSES"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig_LogSource_RecentAccesses;

// ----------------------------------------------------------------------------
// GTLRPolicySimulator_GoogleIamV1AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified;

/**
 *  Similar to PolicySpec but with an extra 'launch' field for launch reference.
 *  The PolicySpec here is specific for dry-run/darklaunch.
 */
@interface GTLRPolicySimulator_GoogleCloudOrgpolicyV2AlternatePolicySpec : GTLRObject

/**
 *  Reference to the launch that will be used while audit logging and to control
 *  the launch. Should be set only in the alternate policy.
 */
@property(nonatomic, copy, nullable) NSString *launch;

/** Specify constraint for configurations of Google Cloud resources. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpec *spec;

@end


/**
 *  A custom constraint defined by customers which can *only* be applied to the
 *  given resource types and organization. By creating a custom constraint,
 *  customers can apply policies of this custom constraint. *Creating a custom
 *  constraint itself does NOT apply any policy enforcement*.
 */
@interface GTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint : GTLRObject

/**
 *  Allow or deny type.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_ActionType_ActionTypeUnspecified
 *        Unspecified. Results in an error. (Value: "ACTION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_ActionType_Allow
 *        Allowed action type. (Value: "ALLOW")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint_ActionType_Deny
 *        Deny action type. (Value: "DENY")
 */
@property(nonatomic, copy, nullable) NSString *actionType;

/**
 *  Org policy condition/expression. For example:
 *  `resource.instanceName.matches("[production|test]_.*_(\\d)+")` or,
 *  `resource.management.auto_upgrade == true` The max length of the condition
 *  is 1000 characters.
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  Detailed information about this custom policy constraint. The max length of
 *  the description is 2000 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  One line display name for the UI. The max length of the display_name is 200
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** All the operations being applied for this constraint. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *methodTypes;

/**
 *  Immutable. Name of the constraint. This is unique within the organization.
 *  Format of the name should be *
 *  `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
 *  Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
 *  The max length is 70 characters and the minimum length is 1. Note that the
 *  prefix `organizations/{organization_id}/customConstraints/` is not counted.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. The resource instance type on which this policy applies. Format
 *  will be of the form : `/` Example: * `compute.googleapis.com/Instance`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceTypes;

/**
 *  Output only. The last time this custom constraint was updated. This
 *  represents the last time that the `CreateCustomConstraint` or
 *  `UpdateCustomConstraint` RPC was called
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Defines an organization policy which is used to specify constraints for
 *  configurations of Google Cloud resources.
 */
@interface GTLRPolicySimulator_GoogleCloudOrgpolicyV2Policy : GTLRObject

/** Deprecated. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2AlternatePolicySpec *alternate GTLR_DEPRECATED;

/**
 *  Dry-run policy. Audit-only policy, can be used to monitor how the policy
 *  would have impacted the existing and future resources if it's enforced.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpec *dryRunSpec;

/**
 *  Immutable. The resource name of the policy. Must be one of the following
 *  forms, where `constraint_name` is the name of the constraint which this
 *  policy configures: * `projects/{project_number}/policies/{constraint_name}`
 *  * `folders/{folder_id}/policies/{constraint_name}` *
 *  `organizations/{organization_id}/policies/{constraint_name}` For example,
 *  `projects/123/policies/compute.disableSerialPortAccess`. Note:
 *  `projects/{project_id}/policies/{constraint_name}` is also an acceptable
 *  name for API requests, but responses will return the name using the
 *  equivalent project number.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Basic information about the Organization Policy. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpec *spec;

@end


/**
 *  Defines a Google Cloud policy specification which is used to specify
 *  constraints for configurations of Google Cloud resources.
 */
@interface GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpec : GTLRObject

/**
 *  An opaque tag indicating the current version of the policy, used for
 *  concurrency control. This field is ignored if used in a `CreatePolicy`
 *  request. When the policy` is returned from either a `GetPolicy` or a
 *  `ListPolicies` request, this `etag` indicates the version of the current
 *  policy to use when executing a read-modify-write loop. When the policy is
 *  returned from a `GetEffectivePolicy` request, the `etag` will be unset.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Determines the inheritance behavior for this policy. If
 *  `inherit_from_parent` is true, policy rules set higher up in the hierarchy
 *  (up to the closest root) are inherited and present in the effective policy.
 *  If it is false, then no rules are inherited, and this policy becomes the new
 *  root for evaluation. This field can be set only for policies which configure
 *  list constraints.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inheritFromParent;

/**
 *  Ignores policies set above this resource and restores the
 *  `constraint_default` enforcement behavior of the specific constraint at this
 *  resource. This field can be set in policies for either list or boolean
 *  constraints. If set, `rules` must be empty and `inherit_from_parent` must be
 *  set to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reset;

/**
 *  In policies for boolean constraints, the following requirements apply: -
 *  There must be one and only one policy rule where condition is unset. -
 *  Boolean policy rules with conditions must set `enforced` to the opposite of
 *  the policy rule without a condition. - During policy evaluation, policy
 *  rules with conditions that are true for a target resource take precedence.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpecPolicyRule *> *rules;

/**
 *  Output only. The time stamp this was previously updated. This represents the
 *  last time a call to `CreatePolicy` or `UpdatePolicy` was made for that
 *  policy.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  A rule used to express this policy.
 */
@interface GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpecPolicyRule : GTLRObject

/**
 *  Setting this to true means that all values are allowed. This field can be
 *  set only in policies for list constraints.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowAll;

/**
 *  A condition which determines whether this rule is used in the evaluation of
 *  the policy. When set, the `expression` field in the `Expr' must include from
 *  1 to 10 subexpressions, joined by the "||" or "&&" operators. Each
 *  subexpression must be of the form "resource.matchTag('/tag_key_short_name,
 *  'tag_value_short_name')". or "resource.matchTagId('tagKeys/key_id',
 *  'tagValues/value_id')". where key_name and value_name are the resource names
 *  for Label Keys and Values. These names are available from the Tag Manager
 *  Service. An example expression is:
 *  "resource.matchTag('123456789/environment, 'prod')". or
 *  "resource.matchTagId('tagKeys/123', 'tagValues/456')".
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleTypeExpr *condition;

/**
 *  Setting this to true means that all values are denied. This field can be set
 *  only in policies for list constraints.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *denyAll;

/**
 *  If `true`, then the policy is enforced. If `false`, then any configuration
 *  is acceptable. This field can be set only in policies for boolean
 *  constraints.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enforce;

/**
 *  List of values to be used for this policy rule. This field can be set only
 *  in policies for list constraints.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues *values;

@end


/**
 *  A message that holds specific allowed and denied values. This message can
 *  define specific values and subtrees of the Resource Manager resource
 *  hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or
 *  denied. This is achieved by using the `under:` and optional `is:` prefixes.
 *  The `under:` prefix is used to denote resource subtree values. The `is:`
 *  prefix is used to denote specific values, and is required only if the value
 *  contains a ":". Values prefixed with "is:" are treated the same as values
 *  with no prefix. Ancestry subtrees must be in one of the following formats: -
 *  `projects/` (for example, `projects/tokyo-rain-123`) - `folders/` (for
 *  example, `folders/1234`) - `organizations/` (for example,
 *  `organizations/1234`) The `supports_under` field of the associated
 *  `Constraint` defines whether ancestry prefixes can be used.
 */
@interface GTLRPolicySimulator_GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues : GTLRObject

/** List of values allowed at this resource. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedValues;

/** List of values denied at this resource. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deniedValues;

@end


/**
 *  A summary and comparison of the principal's access under the current
 *  (baseline) policies and the proposed (simulated) policies for a single
 *  access tuple.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff : GTLRObject

/**
 *  How the principal's access, specified in the AccessState field, changed
 *  between the current (baseline) policies and proposed (simulated) policies.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessChangeTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "ACCESS_CHANGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessGained
 *        The principal did not have access under the current policies
 *        (`NOT_GRANTED`), but will have access after the proposed changes
 *        (`GRANTED`). (Value: "ACCESS_GAINED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessMaybeGained
 *        This result can occur for the following reasons: * The principal did
 *        not have access under the current policies (`NOT_GRANTED`), but their
 *        access after the proposed changes is `UNKNOWN`. * The principal's
 *        access under the current policies is `UNKNOWN`, but they will have
 *        access after the proposed changes (`GRANTED`). (Value:
 *        "ACCESS_MAYBE_GAINED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessMaybeRevoked
 *        This result can occur for the following reasons: * The principal had
 *        access under the current policies (`GRANTED`), but their access after
 *        the proposed changes is `UNKNOWN`. * The principal's access under the
 *        current policies is `UNKNOWN`, but they will not have access after the
 *        proposed changes (`NOT_GRANTED`). (Value: "ACCESS_MAYBE_REVOKED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_AccessRevoked
 *        The principal had access under the current policies (`GRANTED`), but
 *        will no longer have access after the proposed changes (`NOT_GRANTED`).
 *        (Value: "ACCESS_REVOKED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_NoChange
 *        The principal's access did not change. This includes the case where
 *        both baseline and simulated are UNKNOWN, but the unknown information
 *        is equivalent. (Value: "NO_CHANGE")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff_AccessChange_UnknownChange
 *        The principal's access under both the current policies and the
 *        proposed policies is `UNKNOWN`, but the unknown information differs
 *        between them. (Value: "UNKNOWN_CHANGE")
 */
@property(nonatomic, copy, nullable) NSString *accessChange;

/**
 *  The results of evaluating the access tuple under the current (baseline)
 *  policies. If the AccessState couldn't be fully evaluated, this field
 *  explains why.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess *baseline;

/**
 *  The results of evaluating the access tuple under the proposed (simulated)
 *  policies. If the AccessState couldn't be fully evaluated, this field
 *  explains why.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess *simulated;

@end


/**
 *  Information about the principal, resource, and permission to check.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessTuple : GTLRObject

/**
 *  Required. The full resource name that identifies the resource. For example,
 *  `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
 *  For examples of full resource names for Google Cloud services, see
 *  https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
 */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

/**
 *  Required. The IAM permission to check for the specified principal and
 *  resource. For a complete list of IAM permissions, see
 *  https://cloud.google.com/iam/help/permissions/reference. For a complete list
 *  of predefined IAM roles and the permissions in each role, see
 *  https://cloud.google.com/iam/help/roles/reference.
 */
@property(nonatomic, copy, nullable) NSString *permission;

/**
 *  Required. The principal whose access you want to check, in the form of the
 *  email address that represents that principal. For example,
 *  `alice\@example.com` or
 *  `my-service-account\@my-project.iam.gserviceaccount.com`. The principal must
 *  be a Google Account or a service account. Other types of principals are not
 *  supported.
 */
@property(nonatomic, copy, nullable) NSString *principal;

@end


/**
 *  GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
 *  OrgPolicyViolationsPreview generations operation.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata : GTLRObject

/** Time when the request was received. */
@property(nonatomic, strong, nullable) GTLRDateTime *requestTime;

/**
 *  Total number of resources that need scanning. Should equal resource_scanned
 *  + resources_pending
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourcesFound;

/**
 *  Number of resources still to scan.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourcesPending;

/**
 *  Number of resources already scanned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourcesScanned;

/**
 *  Time when the request started processing, i.e. when the state was set to
 *  RUNNING.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The current state of the operation.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewFailed
 *        The OrgPolicyViolationsPreview creation failed with an error. (Value:
 *        "PREVIEW_FAILED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewPending
 *        The OrgPolicyViolationsPreview has not been created yet. (Value:
 *        "PREVIEW_PENDING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewRunning
 *        The OrgPolicyViolationsPreview is currently being created. (Value:
 *        "PREVIEW_RUNNING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewStateUnspecified
 *        The state is unspecified. (Value: "PREVIEW_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewSucceeded
 *        The OrgPolicyViolationsPreview creation finished successfully. (Value:
 *        "PREVIEW_SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The proposed changes to OrgPolicy.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay : GTLRObject

/**
 *  The OrgPolicy CustomConstraint changes to preview violations for. Any
 *  existing CustomConstraints with the same name will be overridden in the
 *  simulation. That is, violations will be determined as if all custom
 *  constraints in the overlay were instantiated. Only a single
 *  custom_constraint is supported in the overlay at a time. For evaluating
 *  multiple constraints, multiple `GenerateOrgPolicyViolationsPreview` requests
 *  are made, where each request evaluates a single constraint.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay *> *customConstraints;

/**
 *  The OrgPolicy changes to preview violations for. Any existing OrgPolicies
 *  with the same name will be overridden in the simulation. That is, violations
 *  will be determined as if all policies in the overlay were created or
 *  updated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay *> *policies;

@end


/**
 *  A change to an OrgPolicy custom constraint.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay : GTLRObject

/** The new or updated custom constraint. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint *customConstraint;

/** Resource the constraint is attached to. Example: "organization/987654" */
@property(nonatomic, copy, nullable) NSString *customConstraintParent;

@end


/**
 *  A change to an OrgPolicy.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay : GTLRObject

/** The new or updated OrgPolicy. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2Policy *policy;

/**
 *  The parent of the policy we are attaching to. Example: "projects/123456"
 */
@property(nonatomic, copy, nullable) NSString *policyParent;

@end


/**
 *  OrgPolicyViolationsPreview is a resource providing a preview of the
 *  violations that will exist if an OrgPolicy change is made. The list of
 *  violations are modeled as child resources and retrieved via a
 *  ListOrgPolicyViolations API call. There are potentially more
 *  OrgPolicyViolations than could fit in an embedded field. Thus, the use of a
 *  child resource instead of a field.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview : GTLRObject

/** Output only. Time when this `OrgPolicyViolationsPreview` was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The names of the constraints against which all
 *  `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only contains
 *  `PolicyOverlay` then it contains the name of the configured custom
 *  constraint, applicable to the specified policies. Otherwise it contains the
 *  name of the constraint specified in `CustomConstraintOverlay`. Format:
 *  `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
 *  Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *customConstraints;

/**
 *  Output only. The resource name of the `OrgPolicyViolationsPreview`. It has
 *  the following format:
 *  `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}`
 *  Example:
 *  `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The proposed changes we are previewing violations for. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay *overlay;

/**
 *  Output only. A summary of the state of all resources scanned for compliance
 *  with the changed OrgPolicy.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts *resourceCounts;

/**
 *  Output only. The state of the `OrgPolicyViolationsPreview`.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewFailed
 *        The OrgPolicyViolationsPreview creation failed with an error. (Value:
 *        "PREVIEW_FAILED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewPending
 *        The OrgPolicyViolationsPreview has not been created yet. (Value:
 *        "PREVIEW_PENDING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewRunning
 *        The OrgPolicyViolationsPreview is currently being created. (Value:
 *        "PREVIEW_RUNNING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewStateUnspecified
 *        The state is unspecified. (Value: "PREVIEW_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview_State_PreviewSucceeded
 *        The OrgPolicyViolationsPreview creation finished successfully. (Value:
 *        "PREVIEW_SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The number of OrgPolicyViolations in this
 *  `OrgPolicyViolationsPreview`. This count may differ from
 *  `resource_summary.noncompliant_count` because each OrgPolicyViolation is
 *  specific to a resource **and** constraint. If there are multiple constraints
 *  being evaluated (i.e. multiple policies in the overlay), a single resource
 *  may violate multiple constraints.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *violationsCount;

@end


/**
 *  A summary of the state of all resources scanned for compliance with the
 *  changed OrgPolicy.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts : GTLRObject

/**
 *  Number of scanned resources with zero violations.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *compliant;

/**
 *  Number of resources that returned an error when scanned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *errors;

/**
 *  Number of scanned resources with at least one violation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *noncompliant;

/**
 *  Number of resources checked for compliance. Must equal: unenforced +
 *  noncompliant + compliant + error
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scanned;

/**
 *  Number of resources where the constraint was not enforced, i.e. the Policy
 *  set `enforced: false` for that resource.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unenforced;

@end


/**
 *  GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an
 *  OrgPolicyViolationsPreview generations operation.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata : GTLRObject

/** Time when the request was received. */
@property(nonatomic, strong, nullable) GTLRDateTime *requestTime;

/**
 *  Total number of resources that need scanning. Should equal resource_scanned
 *  + resources_pending
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourcesFound;

/**
 *  Number of resources still to scan.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourcesPending;

/**
 *  Number of resources already scanned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resourcesScanned;

/**
 *  Time when the request started processing, i.e. when the state was set to
 *  RUNNING.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The current state of the operation.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewFailed
 *        The OrgPolicyViolationsPreview creation failed with an error. (Value:
 *        "PREVIEW_FAILED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewPending
 *        The OrgPolicyViolationsPreview has not been created yet. (Value:
 *        "PREVIEW_PENDING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewRunning
 *        The OrgPolicyViolationsPreview is currently being created. (Value:
 *        "PREVIEW_RUNNING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewStateUnspecified
 *        The state is unspecified. (Value: "PREVIEW_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata_State_PreviewSucceeded
 *        The OrgPolicyViolationsPreview creation finished successfully. (Value:
 *        "PREVIEW_SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The proposed changes to OrgPolicy.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay : GTLRObject

/**
 *  The OrgPolicy CustomConstraint changes to preview violations for. Any
 *  existing CustomConstraints with the same name will be overridden in the
 *  simulation. That is, violations will be determined as if all custom
 *  constraints in the overlay were instantiated. Only a single
 *  custom_constraint is supported in the overlay at a time. For evaluating
 *  multiple constraints, multiple `GenerateOrgPolicyViolationsPreview` requests
 *  are made, where each request evaluates a single constraint.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay *> *customConstraints;

/**
 *  The OrgPolicy changes to preview violations for. Any existing OrgPolicies
 *  with the same name will be overridden in the simulation. That is, violations
 *  will be determined as if all policies in the overlay were created or
 *  updated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay *> *policies;

@end


/**
 *  A change to an OrgPolicy custom constraint.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay : GTLRObject

/** The new or updated custom constraint. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2CustomConstraint *customConstraint;

/** Resource the constraint is attached to. Example: "organization/987654" */
@property(nonatomic, copy, nullable) NSString *customConstraintParent;

@end


/**
 *  A change to an OrgPolicy.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay : GTLRObject

/** The new or updated OrgPolicy. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudOrgpolicyV2Policy *policy;

/**
 *  The parent of the policy we are attaching to. Example: "projects/123456"
 */
@property(nonatomic, copy, nullable) NSString *policyParent;

@end


/**
 *  OrgPolicyViolationsPreview is a resource providing a preview of the
 *  violations that will exist if an OrgPolicy change is made. The list of
 *  violations are modeled as child resources and retrieved via a
 *  ListOrgPolicyViolations API call. There are potentially more
 *  OrgPolicyViolations than could fit in an embedded field. Thus, the use of a
 *  child resource instead of a field.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview : GTLRObject

/** Output only. Time when this `OrgPolicyViolationsPreview` was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The names of the constraints against which all
 *  `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only contains
 *  `PolicyOverlay` then it contains the name of the configured custom
 *  constraint, applicable to the specified policies. Otherwise it contains the
 *  name of the constraint specified in `CustomConstraintOverlay`. Format:
 *  `organizations/{organization_id}/customConstraints/{custom_constraint_id}`
 *  Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *customConstraints;

/**
 *  Output only. The resource name of the `OrgPolicyViolationsPreview`. It has
 *  the following format:
 *  `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}`
 *  Example:
 *  `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The proposed changes we are previewing violations for. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay *overlay;

/**
 *  Output only. A summary of the state of all resources scanned for compliance
 *  with the changed OrgPolicy.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts *resourceCounts;

/**
 *  Output only. The state of the `OrgPolicyViolationsPreview`.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewFailed
 *        The OrgPolicyViolationsPreview creation failed with an error. (Value:
 *        "PREVIEW_FAILED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewPending
 *        The OrgPolicyViolationsPreview has not been created yet. (Value:
 *        "PREVIEW_PENDING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewRunning
 *        The OrgPolicyViolationsPreview is currently being created. (Value:
 *        "PREVIEW_RUNNING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewStateUnspecified
 *        The state is unspecified. (Value: "PREVIEW_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview_State_PreviewSucceeded
 *        The OrgPolicyViolationsPreview creation finished successfully. (Value:
 *        "PREVIEW_SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The number of OrgPolicyViolations in this
 *  `OrgPolicyViolationsPreview`. This count may differ from
 *  `resource_summary.noncompliant_count` because each OrgPolicyViolation is
 *  specific to a resource **and** constraint. If there are multiple constraints
 *  being evaluated (i.e. multiple policies in the overlay), a single resource
 *  may violate multiple constraints.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *violationsCount;

@end


/**
 *  A summary of the state of all resources scanned for compliance with the
 *  changed OrgPolicy.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts : GTLRObject

/**
 *  Number of scanned resources with zero violations.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *compliant;

/**
 *  Number of resources that returned an error when scanned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *errors;

/**
 *  Number of scanned resources with at least one violation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *noncompliant;

/**
 *  Number of resources checked for compliance. Must equal: unenforced +
 *  noncompliant + compliant + error
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scanned;

/**
 *  Number of resources where the constraint was not enforced, i.e. the Policy
 *  set `enforced: false` for that resource.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unenforced;

@end


/**
 *  Details about how a binding in a policy affects a principal's ability to use
 *  a permission.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation : GTLRObject

/**
 *  Required. Indicates whether _this binding_ provides the specified permission
 *  to the specified principal for the specified resource. This field does _not_
 *  indicate whether the principal actually has the permission for the resource.
 *  There might be another binding that overrides this binding. To determine
 *  whether the principal actually has the permission, use the `access` field in
 *  the TroubleshootIamPolicyResponse.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_AccessStateUnspecified
 *        Default value. This value is unused. (Value:
 *        "ACCESS_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_Granted
 *        The principal has the permission. (Value: "GRANTED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_NotGranted
 *        The principal does not have the permission. (Value: "NOT_GRANTED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_UnknownConditional
 *        The principal has the permission only if a condition expression
 *        evaluates to `true`. (Value: "UNKNOWN_CONDITIONAL")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Access_UnknownInfoDenied
 *        The user who created the Replay does not have access to all of the
 *        policies that Policy Simulator needs to evaluate. (Value:
 *        "UNKNOWN_INFO_DENIED")
 */
@property(nonatomic, copy, nullable) NSString *access;

/**
 *  A condition expression that prevents this binding from granting access
 *  unless the expression evaluates to `true`. To learn about IAM Conditions,
 *  see https://cloud.google.com/iam/docs/conditions-overview.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleTypeExpr *condition;

/**
 *  Indicates whether each principal in the binding includes the principal
 *  specified in the request, either directly or indirectly. Each key identifies
 *  a principal in the binding, and each value indicates whether the principal
 *  in the binding includes the principal in the request. For example, suppose
 *  that a binding includes the following principals: *
 *  `user:alice\@example.com` * `group:product-eng\@example.com` The principal
 *  in the replayed access tuple is `user:bob\@example.com`. This user is a
 *  principal of the group `group:product-eng\@example.com`. For the first
 *  principal in the binding, the key is `user:alice\@example.com`, and the
 *  `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the
 *  second principal in the binding, the key is
 *  `group:product-eng\@example.com`, and the `membership` field in the value is
 *  set to `MEMBERSHIP_INCLUDED`.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Memberships *memberships;

/**
 *  The relevance of this binding to the overall determination for the entire
 *  policy.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Relevance_HeuristicRelevanceUnspecified
 *        Default value. This value is unused. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Relevance_High
 *        The data point has a strong effect on the result. Changing the data
 *        point is likely to affect the overall determination. (Value: "HIGH")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Relevance_Normal
 *        The data point has a limited effect on the result. Changing the data
 *        point is unlikely to affect the overall determination. (Value:
 *        "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *relevance;

/**
 *  The role that this binding grants. For example,
 *  `roles/compute.serviceAgent`. For a complete list of predefined IAM roles,
 *  as well as the permissions in each role, see
 *  https://cloud.google.com/iam/help/roles/reference.
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  Indicates whether the role granted by this binding contains the specified
 *  permission.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionIncluded
 *        The permission is included in the role. (Value:
 *        "ROLE_PERMISSION_INCLUDED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionNotIncluded
 *        The permission is not included in the role. (Value:
 *        "ROLE_PERMISSION_NOT_INCLUDED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionUnknownInfoDenied
 *        The user who created the Replay is not allowed to access the binding.
 *        (Value: "ROLE_PERMISSION_UNKNOWN_INFO_DENIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermission_RolePermissionUnspecified
 *        Default value. This value is unused. (Value:
 *        "ROLE_PERMISSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *rolePermission;

/**
 *  The relevance of the permission's existence, or nonexistence, in the role to
 *  the overall determination for the entire policy.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermissionRelevance_HeuristicRelevanceUnspecified
 *        Default value. This value is unused. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermissionRelevance_High
 *        The data point has a strong effect on the result. Changing the data
 *        point is likely to affect the overall determination. (Value: "HIGH")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_RolePermissionRelevance_Normal
 *        The data point has a limited effect on the result. Changing the data
 *        point is unlikely to affect the overall determination. (Value:
 *        "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *rolePermissionRelevance;

@end


/**
 *  Indicates whether each principal in the binding includes the principal
 *  specified in the request, either directly or indirectly. Each key identifies
 *  a principal in the binding, and each value indicates whether the principal
 *  in the binding includes the principal in the request. For example, suppose
 *  that a binding includes the following principals: *
 *  `user:alice\@example.com` * `group:product-eng\@example.com` The principal
 *  in the replayed access tuple is `user:bob\@example.com`. This user is a
 *  principal of the group `group:product-eng\@example.com`. For the first
 *  principal in the binding, the key is `user:alice\@example.com`, and the
 *  `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the
 *  second principal in the binding, the key is
 *  `group:product-eng\@example.com`, and the `membership` field in the value is
 *  set to `MEMBERSHIP_INCLUDED`.
 *
 *  @note This class is documented as having more properties of
 *        GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation_Memberships : GTLRObject
@end


/**
 *  Details about whether the binding includes the principal.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership : GTLRObject

/**
 *  Indicates whether the binding includes the principal.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipIncluded
 *        The binding includes the principal. The principal can be included
 *        directly or indirectly. For example: * A principal is included
 *        directly if that principal is listed in the binding. * A principal is
 *        included indirectly if that principal is in a Google group or Google
 *        Workspace domain that is listed in the binding. (Value:
 *        "MEMBERSHIP_INCLUDED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipNotIncluded
 *        The binding does not include the principal. (Value:
 *        "MEMBERSHIP_NOT_INCLUDED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipUnknownInfoDenied
 *        The user who created the Replay is not allowed to access the binding.
 *        (Value: "MEMBERSHIP_UNKNOWN_INFO_DENIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipUnknownUnsupported
 *        The principal is an unsupported type. Only Google Accounts and service
 *        accounts are supported. (Value: "MEMBERSHIP_UNKNOWN_UNSUPPORTED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Membership_MembershipUnspecified
 *        Default value. This value is unused. (Value: "MEMBERSHIP_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *membership;

/**
 *  The relevance of the principal's status to the overall determination for the
 *  binding.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Relevance_HeuristicRelevanceUnspecified
 *        Default value. This value is unused. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Relevance_High
 *        The data point has a strong effect on the result. Changing the data
 *        point is likely to affect the overall determination. (Value: "HIGH")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership_Relevance_Normal
 *        The data point has a limited effect on the result. Changing the data
 *        point is unlikely to affect the overall determination. (Value:
 *        "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *relevance;

@end


/**
 *  Details about how a set of policies, listed in ExplainedPolicy, resulted in
 *  a certain AccessState when replaying an access tuple.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess : GTLRObject

/**
 *  Whether the principal in the access tuple has permission to access the
 *  resource in the access tuple under the given policies.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_AccessStateUnspecified
 *        Default value. This value is unused. (Value:
 *        "ACCESS_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_Granted
 *        The principal has the permission. (Value: "GRANTED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_NotGranted
 *        The principal does not have the permission. (Value: "NOT_GRANTED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_UnknownConditional
 *        The principal has the permission only if a condition expression
 *        evaluates to `true`. (Value: "UNKNOWN_CONDITIONAL")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedAccess_AccessState_UnknownInfoDenied
 *        The user who created the Replay does not have access to all of the
 *        policies that Policy Simulator needs to evaluate. (Value:
 *        "UNKNOWN_INFO_DENIED")
 */
@property(nonatomic, copy, nullable) NSString *accessState;

/**
 *  If the AccessState is `UNKNOWN`, this field contains a list of errors
 *  explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or
 *  `NOT_GRANTED`, this field is omitted.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleRpcStatus *> *errors;

/**
 *  If the AccessState is `UNKNOWN`, this field contains the policies that led
 *  to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this
 *  field is omitted.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy *> *policies;

@end


/**
 *  Details about how a specific IAM Policy contributed to the access check.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy : GTLRObject

/**
 *  Indicates whether _this policy_ provides the specified permission to the
 *  specified principal for the specified resource. This field does _not_
 *  indicate whether the principal actually has the permission for the resource.
 *  There might be another policy that overrides this policy. To determine
 *  whether the principal actually has the permission, use the `access` field in
 *  the TroubleshootIamPolicyResponse.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_AccessStateUnspecified
 *        Default value. This value is unused. (Value:
 *        "ACCESS_STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_Granted
 *        The principal has the permission. (Value: "GRANTED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_NotGranted
 *        The principal does not have the permission. (Value: "NOT_GRANTED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_UnknownConditional
 *        The principal has the permission only if a condition expression
 *        evaluates to `true`. (Value: "UNKNOWN_CONDITIONAL")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Access_UnknownInfoDenied
 *        The user who created the Replay does not have access to all of the
 *        policies that Policy Simulator needs to evaluate. (Value:
 *        "UNKNOWN_INFO_DENIED")
 */
@property(nonatomic, copy, nullable) NSString *access;

/**
 *  Details about how each binding in the policy affects the principal's
 *  ability, or inability, to use the permission for the resource. If the user
 *  who created the Replay does not have access to the policy, this field is
 *  omitted.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudPolicysimulatorV1BindingExplanation *> *bindingExplanations;

/**
 *  The full resource name that identifies the resource. For example,
 *  `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`.
 *  If the user who created the Replay does not have access to the policy, this
 *  field is omitted. For examples of full resource names for Google Cloud
 *  services, see
 *  https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
 */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

/**
 *  The IAM policy attached to the resource. If the user who created the Replay
 *  does not have access to the policy, this field is empty.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleIamV1Policy *policy;

/**
 *  The relevance of this policy to the overall determination in the
 *  TroubleshootIamPolicyResponse. If the user who created the Replay does not
 *  have access to the policy, this field is omitted.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Relevance_HeuristicRelevanceUnspecified
 *        Default value. This value is unused. (Value:
 *        "HEURISTIC_RELEVANCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Relevance_High
 *        The data point has a strong effect on the result. Changing the data
 *        point is likely to affect the overall determination. (Value: "HIGH")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ExplainedPolicy_Relevance_Normal
 *        The data point has a limited effect on the result. Changing the data
 *        point is unlikely to affect the overall determination. (Value:
 *        "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *relevance;

@end


/**
 *  Response message for Simulator.ListReplayResults.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "replayResults" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ListReplayResultsResponse : GTLRCollectionObject

/**
 *  A token that you can use to retrieve the next page of ReplayResult objects.
 *  If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The results of running a Replay.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayResult *> *replayResults;

@end


/**
 *  A resource describing a `Replay`, or simulation.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay : GTLRObject

/** Required. The configuration used for the `Replay`. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig *config;

/**
 *  Output only. The resource name of the `Replay`, which has the following
 *  format:
 *  `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`,
 *  where `{resource-id}` is the ID of the project, folder, or organization that
 *  owns the Replay. Example:
 *  `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Summary statistics about the replayed log entries. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayResultsSummary *resultsSummary;

/**
 *  Output only. The current state of the `Replay`.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Failed
 *        The `Replay` has finished with an error. (Value: "FAILED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Pending
 *        The `Replay` has not started yet. (Value: "PENDING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Running
 *        The `Replay` is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_StateUnspecified
 *        Default value. This value is unused. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1Replay_State_Succeeded
 *        The `Replay` has successfully completed. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The configuration used for a Replay.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig : GTLRObject

/**
 *  The logs to use as input for the Replay.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig_LogSource_LogSourceUnspecified
 *        An unspecified log source. If the log source is unspecified, the
 *        Replay defaults to using `RECENT_ACCESSES`. (Value:
 *        "LOG_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig_LogSource_RecentAccesses
 *        All access logs from the last 90 days. These logs may not include logs
 *        from the most recent 7 days. (Value: "RECENT_ACCESSES")
 */
@property(nonatomic, copy, nullable) NSString *logSource;

/**
 *  A mapping of the resources that you want to simulate policies for and the
 *  policies that you want to simulate. Keys are the full resource names for the
 *  resources. For example,
 *  `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of
 *  full resource names for Google Cloud services, see
 *  https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values
 *  are Policy objects representing the policies that you want to simulate.
 *  Replays automatically take into account any IAM policies inherited through
 *  the resource hierarchy, and any policies set on descendant resources. You do
 *  not need to include these policies in the policy overlay.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig_PolicyOverlay *policyOverlay;

@end


/**
 *  A mapping of the resources that you want to simulate policies for and the
 *  policies that you want to simulate. Keys are the full resource names for the
 *  resources. For example,
 *  `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of
 *  full resource names for Google Cloud services, see
 *  https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values
 *  are Policy objects representing the policies that you want to simulate.
 *  Replays automatically take into account any IAM policies inherited through
 *  the resource hierarchy, and any policies set on descendant resources. You do
 *  not need to include these policies in the policy overlay.
 *
 *  @note This class is documented as having more properties of
 *        GTLRPolicySimulator_GoogleIamV1Policy. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayConfig_PolicyOverlay : GTLRObject
@end


/**
 *  The difference between the results of evaluating an access tuple under the
 *  current (baseline) policies and under the proposed (simulated) policies.
 *  This difference explains how a principal's access could change if the
 *  proposed policies were applied.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayDiff : GTLRObject

/**
 *  A summary and comparison of the principal's access under the current
 *  (baseline) policies and the proposed (simulated) policies for a single
 *  access tuple. The evaluation of the principal's access is reported in the
 *  AccessState field.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessStateDiff *accessDiff;

@end


/**
 *  Metadata about a Replay operation.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayOperationMetadata : GTLRObject

/** Time when the request was received. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  The result of replaying a single access tuple against a simulated state.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayResult : GTLRObject

/**
 *  The access tuple that was replayed. This field includes information about
 *  the principal, resource, and permission that were involved in the access
 *  attempt.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1AccessTuple *accessTuple;

/**
 *  The difference between the principal's access under the current (baseline)
 *  policies and the principal's access under the proposed (simulated) policies.
 *  This field is only included for access tuples that were successfully
 *  replayed and had different results under the current policies and the
 *  proposed policies.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayDiff *diff;

/**
 *  The error that caused the access tuple replay to fail. This field is only
 *  included for access tuples that were not replayed successfully.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleRpcStatus *error;

/** The latest date this access tuple was seen in the logs. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleTypeDate *lastSeenDate;

/**
 *  The resource name of the `ReplayResult`, in the following format:
 *  `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`,
 *  where `{resource-id}` is the ID of the project, folder, or organization that
 *  owns the Replay. Example:
 *  `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The Replay that the access tuple was included in. */
@property(nonatomic, copy, nullable) NSString *parent;

@end


/**
 *  Summary statistics about the replayed log entries.
 */
@interface GTLRPolicySimulator_GoogleCloudPolicysimulatorV1ReplayResultsSummary : GTLRObject

/**
 *  The number of replayed log entries with a difference between baseline and
 *  simulated policies.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *differenceCount;

/**
 *  The number of log entries that could not be replayed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *errorCount;

/**
 *  The total number of log entries replayed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *logCount;

/** The date of the newest log entry replayed. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleTypeDate *newestDate;

/** The date of the oldest log entry replayed. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleTypeDate *oldestDate;

/**
 *  The number of replayed log entries with no difference between baseline and
 *  simulated policies.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unchangedCount;

@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRPolicySimulator_GoogleIamV1AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleIamV1AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRPolicySimulator_GoogleIamV1AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_AdminRead
 *        Admin reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_DataRead
 *        Data reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_DataWrite
 *        Data writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRPolicySimulator_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRPolicySimulator_GoogleIamV1Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleTypeExpr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `domain:{domain}`: The G Suite domain
 *  (primary) that represents all the users of that domain. For example,
 *  `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** ``` { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
 *  members: - user:mike\@example.com - group:admins\@example.com -
 *  domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 ``` For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRPolicySimulator_GoogleIamV1Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleIamV1AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleIamV1Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPolicySimulator_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRPolicySimulator_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRPolicySimulator_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRPolicySimulator_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRPolicySimulator_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRPolicySimulator_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPolicySimulator_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRPolicySimulator_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRPolicySimulator_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRPolicySimulator_GoogleTypeDate : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRPolicySimulator_GoogleTypeExpr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
