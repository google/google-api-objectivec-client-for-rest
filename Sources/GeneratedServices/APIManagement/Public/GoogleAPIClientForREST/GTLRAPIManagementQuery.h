// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   API Management API (apim/v1alpha)
// Description:
//   Enables users to discover shadow APIs in existing Google Cloud
//   infrastructure.
// Documentation:
//   https://cloud.google.com/apigee/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRAPIManagementObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other API Management query classes.
 */
@interface GTLRAPIManagementQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: apim.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsGet : GTLRAPIManagementQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: apim.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsList : GTLRAPIManagementQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAPIManagement_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  ListApiObservationTags lists all extant tags on any observation in the given
 *  project.
 *
 *  Method: apim.projects.locations.listApiObservationTags
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsListApiObservationTags : GTLRAPIManagementQuery

/**
 *  Optional. The maximum number of tags to return. The service may return fewer
 *  than this value. If unspecified, at most 10 tags will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListApiObservationTags`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListApiObservationTags` must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of tags. Format:
 *  projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAPIManagement_ListApiObservationTagsResponse.
 *
 *  ListApiObservationTags lists all extant tags on any observation in the given
 *  project.
 *
 *  @param parent Required. The parent, which owns this collection of tags.
 *    Format: projects/{project}/locations/{location}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsListApiObservationTags
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  GetApiOperation retrieves a single ApiOperation by name.
 *
 *  Method: apim.projects.locations.observationJobs.apiObservations.apiOperations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsGet : GTLRAPIManagementQuery

/**
 *  Required. The name of the ApiOperation to retrieve. Format:
 *  projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}/apiOperation/{api_operation}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_ApiOperation.
 *
 *  GetApiOperation retrieves a single ApiOperation by name.
 *
 *  @param name Required. The name of the ApiOperation to retrieve. Format:
 *    projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}/apiOperation/{api_operation}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  ListApiOperations gets all ApiOperations for a given project and location
 *  and ObservationJob and ApiObservation.
 *
 *  Method: apim.projects.locations.observationJobs.apiObservations.apiOperations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsList : GTLRAPIManagementQuery

/**
 *  Optional. The maximum number of ApiOperations to return. The service may
 *  return fewer than this value. If unspecified, at most 10 ApiOperations will
 *  be returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListApiApiOperations`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListApiApiOperations` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of ApiOperations. Format:
 *  projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAPIManagement_ListApiOperationsResponse.
 *
 *  ListApiOperations gets all ApiOperations for a given project and location
 *  and ObservationJob and ApiObservation.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    ApiOperations. Format:
 *    projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  BatchEditTagsApiObservations adds or removes Tags for ApiObservations.
 *
 *  Method: apim.projects.locations.observationJobs.apiObservations.batchEditTags
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsBatchEditTags : GTLRAPIManagementQuery

/**
 *  Required. The parent resource shared by all ApiObservations being edited.
 *  Format:
 *  projects/{project}/locations/{location}/observationJobs/{observation_job}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAPIManagement_BatchEditTagsApiObservationsResponse.
 *
 *  BatchEditTagsApiObservations adds or removes Tags for ApiObservations.
 *
 *  @param object The @c GTLRAPIManagement_BatchEditTagsApiObservationsRequest
 *    to include in the query.
 *  @param parent Required. The parent resource shared by all ApiObservations
 *    being edited. Format:
 *    projects/{project}/locations/{location}/observationJobs/{observation_job}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsBatchEditTags
 */
+ (instancetype)queryWithObject:(GTLRAPIManagement_BatchEditTagsApiObservationsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  GetApiObservation retrieves a single ApiObservation by name.
 *
 *  Method: apim.projects.locations.observationJobs.apiObservations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsGet : GTLRAPIManagementQuery

/**
 *  Required. The name of the ApiObservation to retrieve. Format:
 *  projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_ApiObservation.
 *
 *  GetApiObservation retrieves a single ApiObservation by name.
 *
 *  @param name Required. The name of the ApiObservation to retrieve. Format:
 *    projects/{project}/locations/{location}/observationJobs/{observation_job}/apiObservations/{api_observation}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  ListApiObservations gets all ApiObservations for a given project and
 *  location and ObservationJob.
 *
 *  Method: apim.projects.locations.observationJobs.apiObservations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsList : GTLRAPIManagementQuery

/**
 *  Optional. The maximum number of ApiObservations to return. The service may
 *  return fewer than this value. If unspecified, at most 10 ApiObservations
 *  will be returned. The maximum value is 1000; values above 1000 will be
 *  coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListApiObservations` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListApiObservations` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of ApiObservations. Format:
 *  projects/{project}/locations/{location}/observationJobs/{observation_job}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAPIManagement_ListApiObservationsResponse.
 *
 *  ListApiObservations gets all ApiObservations for a given project and
 *  location and ObservationJob.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    ApiObservations. Format:
 *    projects/{project}/locations/{location}/observationJobs/{observation_job}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  CreateObservationJob creates a new ObservationJob but does not have any
 *  effecton its own. It is a configuration that can be used in an Observation
 *  Job to collect data about existing APIs.
 *
 *  Method: apim.projects.locations.observationJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsCreate : GTLRAPIManagementQuery

/**
 *  Required. The ID to use for the Observation Job. This value should be 4-63
 *  characters, and valid characters are /a-z-/.
 */
@property(nonatomic, copy, nullable) NSString *observationJobId;

/**
 *  Required. The parent resource where this ObservationJob will be created.
 *  Format: projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRAPIManagement_Operation.
 *
 *  CreateObservationJob creates a new ObservationJob but does not have any
 *  effecton its own. It is a configuration that can be used in an Observation
 *  Job to collect data about existing APIs.
 *
 *  @param object The @c GTLRAPIManagement_ObservationJob to include in the
 *    query.
 *  @param parent Required. The parent resource where this ObservationJob will
 *    be created. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRAPIManagement_ObservationJob *)object
                         parent:(NSString *)parent;

@end

/**
 *  DeleteObservationJob deletes an ObservationJob. This method will fail if the
 *  observation job is currently being used by any ObservationSource, even if
 *  not enabled.
 *
 *  Method: apim.projects.locations.observationJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDelete : GTLRAPIManagementQuery

/**
 *  Required. Name of the resource Format:
 *  projects/{project}/locations/{location}/observationJobs/{observation_job}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Operation.
 *
 *  DeleteObservationJob deletes an ObservationJob. This method will fail if the
 *  observation job is currently being used by any ObservationSource, even if
 *  not enabled.
 *
 *  @param name Required. Name of the resource Format:
 *    projects/{project}/locations/{location}/observationJobs/{observation_job}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Disables the given ObservationJob.
 *
 *  Method: apim.projects.locations.observationJobs.disable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDisable : GTLRAPIManagementQuery

/**
 *  Required. The name of the ObservationJob to disable. Format:
 *  projects/{project}/locations/{location}/observationJobs/{job}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Operation.
 *
 *  Disables the given ObservationJob.
 *
 *  @param object The @c GTLRAPIManagement_DisableObservationJobRequest to
 *    include in the query.
 *  @param name Required. The name of the ObservationJob to disable. Format:
 *    projects/{project}/locations/{location}/observationJobs/{job}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDisable
 */
+ (instancetype)queryWithObject:(GTLRAPIManagement_DisableObservationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Enables the given ObservationJob.
 *
 *  Method: apim.projects.locations.observationJobs.enable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsEnable : GTLRAPIManagementQuery

/**
 *  Required. The name of the ObservationJob to enable. Format:
 *  projects/{project}/locations/{location}/observationJobs/{job}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Operation.
 *
 *  Enables the given ObservationJob.
 *
 *  @param object The @c GTLRAPIManagement_EnableObservationJobRequest to
 *    include in the query.
 *  @param name Required. The name of the ObservationJob to enable. Format:
 *    projects/{project}/locations/{location}/observationJobs/{job}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsEnable
 */
+ (instancetype)queryWithObject:(GTLRAPIManagement_EnableObservationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  GetObservationJob retrieves a single ObservationJob by name.
 *
 *  Method: apim.projects.locations.observationJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsGet : GTLRAPIManagementQuery

/**
 *  Required. The name of the ObservationJob to retrieve. Format:
 *  projects/{project}/locations/{location}/observationJobs/{job}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_ObservationJob.
 *
 *  GetObservationJob retrieves a single ObservationJob by name.
 *
 *  @param name Required. The name of the ObservationJob to retrieve. Format:
 *    projects/{project}/locations/{location}/observationJobs/{job}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  ListObservationJobs gets all ObservationJobs for a given project and
 *  location.
 *
 *  Method: apim.projects.locations.observationJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationJobsList : GTLRAPIManagementQuery

/**
 *  Optional. The maximum number of ObservationJobs to return. The service may
 *  return fewer than this value. If unspecified, at most 10 ObservationJobs
 *  will be returned. The maximum value is 1000; values above 1000 will be
 *  coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListObservationJobs` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListObservationJobs` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of ObservationJobs. Format:
 *  projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAPIManagement_ListObservationJobsResponse.
 *
 *  ListObservationJobs gets all ObservationJobs for a given project and
 *  location.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    ObservationJobs. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  CreateObservationSource creates a new ObservationSource but does not affect
 *  any deployed infrastructure. It is a configuration that can be used in an
 *  Observation Job to collect data about APIs running in user's dataplane.
 *
 *  Method: apim.projects.locations.observationSources.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesCreate : GTLRAPIManagementQuery

/**
 *  Required. The ID to use for the Observation Source. This value should be
 *  4-63 characters, and valid characters are /a-z-/.
 */
@property(nonatomic, copy, nullable) NSString *observationSourceId;

/** Required. Value for parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRAPIManagement_Operation.
 *
 *  CreateObservationSource creates a new ObservationSource but does not affect
 *  any deployed infrastructure. It is a configuration that can be used in an
 *  Observation Job to collect data about APIs running in user's dataplane.
 *
 *  @param object The @c GTLRAPIManagement_ObservationSource to include in the
 *    query.
 *  @param parent Required. Value for parent.
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesCreate
 */
+ (instancetype)queryWithObject:(GTLRAPIManagement_ObservationSource *)object
                         parent:(NSString *)parent;

@end

/**
 *  DeleteObservationSource deletes an observation source. This method will fail
 *  if the observation source is currently being used by any ObservationJob,
 *  even if not enabled.
 *
 *  Method: apim.projects.locations.observationSources.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesDelete : GTLRAPIManagementQuery

/**
 *  Required. Name of the resource Format:
 *  projects/{project}/locations/{location}/observationSources/{source}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Operation.
 *
 *  DeleteObservationSource deletes an observation source. This method will fail
 *  if the observation source is currently being used by any ObservationJob,
 *  even if not enabled.
 *
 *  @param name Required. Name of the resource Format:
 *    projects/{project}/locations/{location}/observationSources/{source}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  GetObservationSource retrieves a single ObservationSource by name.
 *
 *  Method: apim.projects.locations.observationSources.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesGet : GTLRAPIManagementQuery

/**
 *  Required. The name of the ObservationSource to retrieve. Format:
 *  projects/{project}/locations/{location}/observationSources/{source}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_ObservationSource.
 *
 *  GetObservationSource retrieves a single ObservationSource by name.
 *
 *  @param name Required. The name of the ObservationSource to retrieve. Format:
 *    projects/{project}/locations/{location}/observationSources/{source}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  ListObservationSources gets all ObservationSources for a given project and
 *  location.
 *
 *  Method: apim.projects.locations.observationSources.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesList : GTLRAPIManagementQuery

/**
 *  Optional. The maximum number of ObservationSources to return. The service
 *  may return fewer than this value. If unspecified, at most 10
 *  ObservationSources will be returned. The maximum value is 1000; values above
 *  1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListObservationSources`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListObservationSources` must match the call
 *  that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of ObservationSources.
 *  Format: projects/{project}/locations/{location}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAPIManagement_ListObservationSourcesResponse.
 *
 *  ListObservationSources gets all ObservationSources for a given project and
 *  location.
 *
 *  @param parent Required. The parent, which owns this collection of
 *    ObservationSources. Format: projects/{project}/locations/{location}
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: apim.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsOperationsCancel : GTLRAPIManagementQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRAPIManagement_CancelOperationRequest to include in
 *    the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRAPIManagement_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: apim.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsOperationsDelete : GTLRAPIManagementQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: apim.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsOperationsGet : GTLRAPIManagementQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAPIManagement_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: apim.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAPIManagementCloudPlatform
 */
@interface GTLRAPIManagementQuery_ProjectsLocationsOperationsList : GTLRAPIManagementQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAPIManagement_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRAPIManagementQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
