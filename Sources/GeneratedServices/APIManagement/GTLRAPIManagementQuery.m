// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   API Management API (apim/v1alpha)
// Description:
//   Enables users to discover shadow APIs in existing Google Cloud
//   infrastructure.
// Documentation:
//   https://cloud.google.com/apigee/

#import <GoogleAPIClientForREST/GTLRAPIManagementQuery.h>

@implementation GTLRAPIManagementQuery

@dynamic fields;

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Location class];
  query.loggingName = @"apim.projects.locations.get";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}/locations";
  GTLRAPIManagementQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_ListLocationsResponse class];
  query.loggingName = @"apim.projects.locations.list";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsListApiObservationTags

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}:listApiObservationTags";
  GTLRAPIManagementQuery_ProjectsLocationsListApiObservationTags *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_ListApiObservationTagsResponse class];
  query.loggingName = @"apim.projects.locations.listApiObservationTags";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_ApiOperation class];
  query.loggingName = @"apim.projects.locations.observationJobs.apiObservations.apiOperations.get";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/apiOperations";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsApiOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_ListApiOperationsResponse class];
  query.loggingName = @"apim.projects.locations.observationJobs.apiObservations.apiOperations.list";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsBatchEditTags

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRAPIManagement_BatchEditTagsApiObservationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/apiObservations:batchEditTags";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsBatchEditTags *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_BatchEditTagsApiObservationsResponse class];
  query.loggingName = @"apim.projects.locations.observationJobs.apiObservations.batchEditTags";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_ApiObservation class];
  query.loggingName = @"apim.projects.locations.observationJobs.apiObservations.get";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/apiObservations";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsApiObservationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_ListApiObservationsResponse class];
  query.loggingName = @"apim.projects.locations.observationJobs.apiObservations.list";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsCreate

@dynamic observationJobId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRAPIManagement_ObservationJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/observationJobs";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_Operation class];
  query.loggingName = @"apim.projects.locations.observationJobs.create";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Operation class];
  query.loggingName = @"apim.projects.locations.observationJobs.delete";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDisable

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAPIManagement_DisableObservationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:disable";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsDisable *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Operation class];
  query.loggingName = @"apim.projects.locations.observationJobs.disable";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsEnable

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAPIManagement_EnableObservationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:enable";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsEnable *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Operation class];
  query.loggingName = @"apim.projects.locations.observationJobs.enable";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_ObservationJob class];
  query.loggingName = @"apim.projects.locations.observationJobs.get";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationJobsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/observationJobs";
  GTLRAPIManagementQuery_ProjectsLocationsObservationJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_ListObservationJobsResponse class];
  query.loggingName = @"apim.projects.locations.observationJobs.list";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesCreate

@dynamic observationSourceId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRAPIManagement_ObservationSource *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/observationSources";
  GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_Operation class];
  query.loggingName = @"apim.projects.locations.observationSources.create";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Operation class];
  query.loggingName = @"apim.projects.locations.observationSources.delete";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_ObservationSource class];
  query.loggingName = @"apim.projects.locations.observationSources.get";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/observationSources";
  GTLRAPIManagementQuery_ProjectsLocationsObservationSourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRAPIManagement_ListObservationSourcesResponse class];
  query.loggingName = @"apim.projects.locations.observationSources.list";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRAPIManagement_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:cancel";
  GTLRAPIManagementQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Empty class];
  query.loggingName = @"apim.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Empty class];
  query.loggingName = @"apim.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRAPIManagementQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_Operation class];
  query.loggingName = @"apim.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRAPIManagementQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}/operations";
  GTLRAPIManagementQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRAPIManagement_ListOperationsResponse class];
  query.loggingName = @"apim.projects.locations.operations.list";
  return query;
}

@end
