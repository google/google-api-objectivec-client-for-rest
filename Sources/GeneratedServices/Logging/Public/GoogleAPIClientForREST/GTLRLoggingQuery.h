// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Logging API (logging/v2)
// Description:
//   Writes log entries and manages your Cloud Logging configuration.
// Documentation:
//   https://cloud.google.com/logging/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRLoggingObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Logging query classes.
 */
@interface GTLRLoggingQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  Method: logging.billingAccounts.exclusions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsExclusionsCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the exclusion:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *  examples:"projects/my-logging-project" "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param parent Required. The parent resource in which to create the
 *    exclusion: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-logging-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_BillingAccountsExclusionsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an exclusion in the _Default sink.
 *
 *  Method: logging.billingAccounts.exclusions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsExclusionsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion to delete:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion to delete:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_BillingAccountsExclusionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  Method: logging.billingAccounts.exclusions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsExclusionsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_BillingAccountsExclusionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  Method: logging.billingAccounts.exclusions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsExclusionsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose exclusions are to be listed.
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListExclusionsResponse.
 *
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  @param parent Required. The parent resource whose exclusions are to be
 *    listed. "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_BillingAccountsExclusionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  Method: logging.billingAccounts.exclusions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsExclusionsPatch : GTLRLoggingQuery

/**
 *  Required. The resource name of the exclusion to update:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing exclusion.
 *  New values for the fields are taken from the corresponding fields in the
 *  LogExclusion included in this request. Fields not mentioned in update_mask
 *  are not changed and are ignored in the request.For example, to change the
 *  filter and description of an exclusion, specify an update_mask of
 *  "filter,description".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param name Required. The resource name of the exclusion to update:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_BillingAccountsExclusionsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  Method: logging.billingAccounts.getCmekSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsGetCmekSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve CMEK settings.
 *  "projects/[PROJECT_ID]/cmekSettings"
 *  "organizations/[ORGANIZATION_ID]/cmekSettings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *  "folders/[FOLDER_ID]/cmekSettings" For
 *  example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router can
 *  be configured for Google Cloud projects, folders, organizations, and billing
 *  accounts. Once configured for an organization, it applies to all projects
 *  and folders in the Google Cloud organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_CmekSettings.
 *
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  @param name Required. The resource for which to retrieve CMEK settings.
 *    "projects/[PROJECT_ID]/cmekSettings"
 *    "organizations/[ORGANIZATION_ID]/cmekSettings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *    "folders/[FOLDER_ID]/cmekSettings" For
 *    example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router
 *    can be configured for Google Cloud projects, folders, organizations, and
 *    billing accounts. Once configured for an organization, it applies to all
 *    projects and folders in the Google Cloud organization.
 *
 *  @return GTLRLoggingQuery_BillingAccountsGetCmekSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  Method: logging.billingAccounts.getSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsGetSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve settings.
 *  "projects/[PROJECT_ID]/settings" "organizations/[ORGANIZATION_ID]/settings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *  "folders/[FOLDER_ID]/settings" For
 *  example:"organizations/12345/settings"Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  @param name Required. The resource for which to retrieve settings.
 *    "projects/[PROJECT_ID]/settings"
 *    "organizations/[ORGANIZATION_ID]/settings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *    "folders/[FOLDER_ID]/settings" For
 *    example:"organizations/12345/settings"Note: Settings can be retrieved for
 *    Google Cloud projects, folders, organizations, and billing accounts.
 *
 *  @return GTLRLoggingQuery_BillingAccountsGetSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.billingAccounts.locations.buckets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  Method: logging.billingAccounts.locations.buckets.createAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsCreateAsync : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsCreateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  Method: logging.billingAccounts.locations.buckets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  @param name Required. The full resource name of the bucket to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log bucket.
 *
 *  Method: logging.billingAccounts.locations.buckets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Gets a log bucket.
 *
 *  @param name Required. The resource name of the bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  Method: logging.billingAccounts.locations.buckets.links.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksCreate : GTLRLoggingQuery

/**
 *  Required. The ID to use for the link. The link_id can have up to 100
 *  characters. A valid link_id must only have alphanumeric characters and
 *  underscores within it.
 */
@property(nonatomic, copy, nullable) NSString *linkId;

/**
 *  Required. The full resource name of the bucket to create a link for.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  @param object The @c GTLRLogging_Link to include in the query.
 *  @param parent Required. The full resource name of the bucket to create a
 *    link for.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_Link *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  Method: logging.billingAccounts.locations.buckets.links.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the link to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  @param name Required. The full resource name of the link to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a link.
 *
 *  Method: logging.billingAccounts.locations.buckets.links.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the link:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Link.
 *
 *  Gets a link.
 *
 *  @param name Required. The resource name of the link:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists links.
 *
 *  Method: logging.billingAccounts.locations.buckets.links.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksList : GTLRLoggingQuery

/** Optional. The maximum number of results to return from this request. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose links are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLinksResponse.
 *
 *  Lists links.
 *
 *  @param parent Required. The parent resource whose links are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists log buckets.
 *
 *  Method: logging.billingAccounts.locations.buckets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose buckets are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion of
 *  the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all buckets.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListBucketsResponse.
 *
 *  Lists log buckets.
 *
 *  @param parent Required. The parent resource whose buckets are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion
 *    of the resource must be specified, but supplying the character - in place
 *    of LOCATION_ID will return all buckets.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.billingAccounts.locations.buckets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  Method: logging.billingAccounts.locations.buckets.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsUndelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to undelete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  @param object The @c GTLRLogging_UndeleteBucketRequest to include in the
 *    query.
 *  @param name Required. The full resource name of the bucket to undelete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsUndelete
 */
+ (instancetype)queryWithObject:(GTLRLogging_UndeleteBucketRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.billingAccounts.locations.buckets.updateAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsUpdateAsync : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsUpdateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  Method: logging.billingAccounts.locations.buckets.views.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsCreate : GTLRLoggingQuery

/**
 *  Required. The bucket in which to create the view
 *  `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. A client-assigned identifier such as "my-view". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods.
 */
@property(nonatomic, copy, nullable) NSString *viewId;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param parent Required. The bucket in which to create the view
 *    `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  Method: logging.billingAccounts.locations.buckets.views.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  @param name Required. The full resource name of the view to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a view on a log bucket.
 *
 *  Method: logging.billingAccounts.locations.buckets.views.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the policy:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Gets a view on a log bucket.
 *
 *  @param name Required. The resource name of the policy:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists views on a log bucket.
 *
 *  Method: logging.billingAccounts.locations.buckets.views.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The bucket whose views are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListViewsResponse.
 *
 *  Lists views on a log bucket.
 *
 *  @param parent Required. The bucket whose views are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.billingAccounts.locations.buckets.views.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  Method: logging.billingAccounts.locations.buckets.views.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to update
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in view that need an update.
 *  A field will be overwritten if, and only if, it is in the update mask. name
 *  and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param name Required. The full resource name of the view to update
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsBucketsViewsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                           name:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: logging.billingAccounts.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsGet : GTLRLoggingQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: logging.billingAccounts.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsList : GTLRLoggingQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like "displayName=tokyo", and is documented in more
 *  detail in AIP-160 (https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the next_page_token field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  Method: logging.billingAccounts.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsOperationsCancel : GTLRLoggingQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  @param object The @c GTLRLogging_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRLogging_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: logging.billingAccounts.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsOperationsGet : GTLRLoggingQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  Method: logging.billingAccounts.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsOperationsList : GTLRLoggingQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  Method: logging.billingAccounts.locations.recentQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsRecentQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") of the recent
 *  queries to list. The only valid value for this field is one of the two
 *  allowable type function calls, which are the following: type("Logging")
 *  type("OpsAnalytics")
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *  example:projects/my-project/locations/us-central1Note: The location portion
 *  of the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all recent queries.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListRecentQueriesResponse.
 *
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *    example:projects/my-project/locations/us-central1Note: The location
 *    portion of the resource must be specified, but supplying the character -
 *    in place of LOCATION_ID will return all recent queries.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsRecentQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new SavedQuery for the user making the request.
 *
 *  Method: logging.billingAccounts.locations.savedQueries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the saved query:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/global"
 *  "organizations/123456789/locations/us-central1"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The ID to use for the saved query, which will become the final
 *  component of the saved query's resource name.If the saved_query_id is not
 *  provided, the system will generate an alphanumeric ID.The saved_query_id is
 *  limited to 100 characters and can include only the following characters:
 *  upper and lower-case alphanumeric characters, underscores, hyphens,
 *  periods.First character has to be alphanumeric.
 */
@property(nonatomic, copy, nullable) NSString *savedQueryId;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Creates a new SavedQuery for the user making the request.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param parent Required. The parent resource in which to create the saved
 *    query: "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/global"
 *    "organizations/123456789/locations/us-central1"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  Method: logging.billingAccounts.locations.savedQueries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the saved query to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  @param name Required. The full resource name of the saved query to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns all data associated with the requested query.
 *
 *  Method: logging.billingAccounts.locations.savedQueries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the saved query.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Returns all data associated with the requested query.
 *
 *  @param name Required. The resource name of the saved query.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  Method: logging.billingAccounts.locations.savedQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") and the
 *  visibility (PRIVATE or SHARED) of the saved queries to list. If provided,
 *  the filter must contain either the type function or a visibility token, or
 *  both. If both are chosen, they can be placed in any order, but they must be
 *  joined by the AND operator or the empty character.The two supported type
 *  function calls are: type("Logging") type("OpsAnalytics")The two supported
 *  visibility tokens are: visibility = PRIVATE visibility = SHAREDFor
 *  example:type("Logging") AND visibility = PRIVATE visibility=SHARED
 *  type("OpsAnalytics") type("OpsAnalytics)" visibility = PRIVATE visibility =
 *  SHARED
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/us-central1" Note: The locations portion of
 *  the resource must be specified. To get a list of all saved queries, a
 *  wildcard character - can be used for LOCATION_ID, for example:
 *  "projects/my-project/locations/-"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSavedQueriesResponse.
 *
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/us-central1" Note: The locations portion of
 *    the resource must be specified. To get a list of all saved queries, a
 *    wildcard character - can be used for LOCATION_ID, for example:
 *    "projects/my-project/locations/-"
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing SavedQuery.
 *
 *  Method: logging.billingAccounts.locations.savedQueries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesPatch : GTLRLoggingQuery

/**
 *  Output only. Resource name of the saved query.In the format:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  a list of supported locations, see Supported Regions
 *  (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *  the saved query is created, the location cannot be changed.If the user
 *  doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing saved query.
 *  Fields are relative to the saved_query and new values for the fields are
 *  taken from the corresponding fields in the SavedQuery included in this
 *  request. Fields not mentioned in update_mask are not changed and are ignored
 *  in the request.To update all mutable fields, specify an update_mask of *.For
 *  example, to change the description and query filter text of a saved query,
 *  specify an update_mask of "description, query.filter".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Updates an existing SavedQuery.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param name Output only. Resource name of the saved query.In the format:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    For a list of supported locations, see Supported Regions
 *    (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *    the saved query is created, the location cannot be changed.If the user
 *    doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLocationsSavedQueriesPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  Method: logging.billingAccounts.logs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsLogsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log to delete:
 *  projects/[PROJECT_ID]/logs/[LOG_ID]
 *  organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *  folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For example,
 *  "projects/my-project-id/logs/syslog",
 *  "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *  information about log names, see LogEntry.
 */
@property(nonatomic, copy, nullable) NSString *logName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  @param logName Required. The resource name of the log to delete:
 *    projects/[PROJECT_ID]/logs/[LOG_ID]
 *    organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *    folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For
 *    example, "projects/my-project-id/logs/syslog",
 *    "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *    information about log names, see LogEntry.
 *
 *  @return GTLRLoggingQuery_BillingAccountsLogsDelete
 */
+ (instancetype)queryWithLogName:(NSString *)logName;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.billingAccounts.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_BillingAccountsLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  Method: logging.billingAccounts.sinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsSinksCreate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The resource in which to create the sink: "projects/[PROJECT_ID]"
 *  "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]"
 *  "folders/[FOLDER_ID]" For examples:"projects/my-project"
 *  "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Determines the kind of IAM identity returned as writer_identity in
 *  the new sink. If this value is omitted or set to false, and if the sink's
 *  parent is a project, then the value returned as writer_identity is the same
 *  group or service account used by Cloud Logging before the addition of writer
 *  identities to this API. The sink's destination must be in the same project
 *  as the sink itself.If this field is set to true, or if the sink is owned by
 *  a non-project resource such as an organization, then the value of
 *  writer_identity will be a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  used by the sinks with the same parent. For more information, see
 *  writer_identity in LogSink.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param parent Required. The resource in which to create the sink:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_BillingAccountsSinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  Method: logging.billingAccounts.sinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsSinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the sink to delete, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  @param sinkName Required. The full resource name of the sink to delete,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_BillingAccountsSinksDelete
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Gets a sink.
 *
 *  Method: logging.billingAccounts.sinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsSinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the sink:
 *  "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Gets a sink.
 *
 *  @param sinkName Required. The resource name of the sink:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_BillingAccountsSinksGet
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Lists sinks.
 *
 *  Method: logging.billingAccounts.sinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_BillingAccountsSinksList : GTLRLoggingQuery

/**
 *  Optional. A filter expression to constrain the sinks returned. Today, this
 *  only supports the following strings: '' 'in_scope("ALL")',
 *  'in_scope("ANCESTOR")', 'in_scope("DEFAULT")'.Description of scopes below.
 *  ALL: Includes all of the sinks which can be returned in any other scope.
 *  ANCESTOR: Includes intercepting sinks owned by ancestor resources. DEFAULT:
 *  Includes sinks owned by parent.When the empty string is provided, then the
 *  filter 'in_scope("DEFAULT")' is applied.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose sinks are to be listed:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSinksResponse.
 *
 *  Lists sinks.
 *
 *  @param parent Required. The parent resource whose sinks are to be listed:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_BillingAccountsSinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.billingAccounts.sinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsSinksPatch : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_BillingAccountsSinksPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.billingAccounts.sinks.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_BillingAccountsSinksUpdate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_BillingAccountsSinksUpdate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Copies a set of log entries from a log bucket to a Cloud Storage bucket.
 *
 *  Method: logging.entries.copy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_EntriesCopy : GTLRLoggingQuery

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Copies a set of log entries from a log bucket to a Cloud Storage bucket.
 *
 *  @param object The @c GTLRLogging_CopyLogEntriesRequest to include in the
 *    query.
 *
 *  @return GTLRLoggingQuery_EntriesCopy
 */
+ (instancetype)queryWithObject:(GTLRLogging_CopyLogEntriesRequest *)object;

@end

/**
 *  Lists log entries. Use this method to retrieve log entries that originated
 *  from a project/folder/organization/billing account. For ways to export log
 *  entries, see Exporting Logs (https://cloud.google.com/logging/docs/export).
 *
 *  Method: logging.entries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_EntriesList : GTLRLoggingQuery

/**
 *  Fetches a @c GTLRLogging_ListLogEntriesResponse.
 *
 *  Lists log entries. Use this method to retrieve log entries that originated
 *  from a project/folder/organization/billing account. For ways to export log
 *  entries, see Exporting Logs (https://cloud.google.com/logging/docs/export).
 *
 *  @param object The @c GTLRLogging_ListLogEntriesRequest to include in the
 *    query.
 *
 *  @return GTLRLoggingQuery_EntriesList
 */
+ (instancetype)queryWithObject:(GTLRLogging_ListLogEntriesRequest *)object;

@end

/**
 *  Streaming read of log entries as they are received. Until the stream is
 *  terminated, it will continue reading logs.
 *
 *  Method: logging.entries.tail
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_EntriesTail : GTLRLoggingQuery

/**
 *  Fetches a @c GTLRLogging_TailLogEntriesResponse.
 *
 *  Streaming read of log entries as they are received. Until the stream is
 *  terminated, it will continue reading logs.
 *
 *  @param object The @c GTLRLogging_TailLogEntriesRequest to include in the
 *    query.
 *
 *  @return GTLRLoggingQuery_EntriesTail
 */
+ (instancetype)queryWithObject:(GTLRLogging_TailLogEntriesRequest *)object;

@end

/**
 *  Writes log entries to Logging. This API method is the only way to send log
 *  entries to Logging. This method is used, directly or indirectly, by the
 *  Logging agent (fluentd) and all logging libraries configured to use Logging.
 *  A single request may contain log entries for a maximum of 1000 different
 *  resource names (projects, organizations, billing accounts or folders), where
 *  the resource name for a log entry is determined from its logName field.
 *
 *  Method: logging.entries.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingWrite
 */
@interface GTLRLoggingQuery_EntriesWrite : GTLRLoggingQuery

/**
 *  Fetches a @c GTLRLogging_WriteLogEntriesResponse.
 *
 *  Writes log entries to Logging. This API method is the only way to send log
 *  entries to Logging. This method is used, directly or indirectly, by the
 *  Logging agent (fluentd) and all logging libraries configured to use Logging.
 *  A single request may contain log entries for a maximum of 1000 different
 *  resource names (projects, organizations, billing accounts or folders), where
 *  the resource name for a log entry is determined from its logName field.
 *
 *  @param object The @c GTLRLogging_WriteLogEntriesRequest to include in the
 *    query.
 *
 *  @return GTLRLoggingQuery_EntriesWrite
 */
+ (instancetype)queryWithObject:(GTLRLogging_WriteLogEntriesRequest *)object;

@end

/**
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  Method: logging.exclusions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ExclusionsCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the exclusion:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *  examples:"projects/my-logging-project" "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param parent Required. The parent resource in which to create the
 *    exclusion: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-logging-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_ExclusionsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an exclusion in the _Default sink.
 *
 *  Method: logging.exclusions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ExclusionsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion to delete:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion to delete:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_ExclusionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  Method: logging.exclusions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ExclusionsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_ExclusionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  Method: logging.exclusions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ExclusionsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose exclusions are to be listed.
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListExclusionsResponse.
 *
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  @param parent Required. The parent resource whose exclusions are to be
 *    listed. "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_ExclusionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  Method: logging.exclusions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ExclusionsPatch : GTLRLoggingQuery

/**
 *  Required. The resource name of the exclusion to update:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing exclusion.
 *  New values for the fields are taken from the corresponding fields in the
 *  LogExclusion included in this request. Fields not mentioned in update_mask
 *  are not changed and are ignored in the request.For example, to change the
 *  filter and description of an exclusion, specify an update_mask of
 *  "filter,description".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param name Required. The resource name of the exclusion to update:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_ExclusionsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  Method: logging.folders.exclusions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersExclusionsCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the exclusion:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *  examples:"projects/my-logging-project" "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param parent Required. The parent resource in which to create the
 *    exclusion: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-logging-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_FoldersExclusionsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an exclusion in the _Default sink.
 *
 *  Method: logging.folders.exclusions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersExclusionsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion to delete:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion to delete:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_FoldersExclusionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  Method: logging.folders.exclusions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersExclusionsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_FoldersExclusionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  Method: logging.folders.exclusions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersExclusionsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose exclusions are to be listed.
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListExclusionsResponse.
 *
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  @param parent Required. The parent resource whose exclusions are to be
 *    listed. "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersExclusionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  Method: logging.folders.exclusions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersExclusionsPatch : GTLRLoggingQuery

/**
 *  Required. The resource name of the exclusion to update:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing exclusion.
 *  New values for the fields are taken from the corresponding fields in the
 *  LogExclusion included in this request. Fields not mentioned in update_mask
 *  are not changed and are ignored in the request.For example, to change the
 *  filter and description of an exclusion, specify an update_mask of
 *  "filter,description".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param name Required. The resource name of the exclusion to update:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_FoldersExclusionsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  Method: logging.folders.getCmekSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersGetCmekSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve CMEK settings.
 *  "projects/[PROJECT_ID]/cmekSettings"
 *  "organizations/[ORGANIZATION_ID]/cmekSettings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *  "folders/[FOLDER_ID]/cmekSettings" For
 *  example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router can
 *  be configured for Google Cloud projects, folders, organizations, and billing
 *  accounts. Once configured for an organization, it applies to all projects
 *  and folders in the Google Cloud organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_CmekSettings.
 *
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  @param name Required. The resource for which to retrieve CMEK settings.
 *    "projects/[PROJECT_ID]/cmekSettings"
 *    "organizations/[ORGANIZATION_ID]/cmekSettings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *    "folders/[FOLDER_ID]/cmekSettings" For
 *    example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router
 *    can be configured for Google Cloud projects, folders, organizations, and
 *    billing accounts. Once configured for an organization, it applies to all
 *    projects and folders in the Google Cloud organization.
 *
 *  @return GTLRLoggingQuery_FoldersGetCmekSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  Method: logging.folders.getSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersGetSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve settings.
 *  "projects/[PROJECT_ID]/settings" "organizations/[ORGANIZATION_ID]/settings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *  "folders/[FOLDER_ID]/settings" For
 *  example:"organizations/12345/settings"Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  @param name Required. The resource for which to retrieve settings.
 *    "projects/[PROJECT_ID]/settings"
 *    "organizations/[ORGANIZATION_ID]/settings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *    "folders/[FOLDER_ID]/settings" For
 *    example:"organizations/12345/settings"Note: Settings can be retrieved for
 *    Google Cloud projects, folders, organizations, and billing accounts.
 *
 *  @return GTLRLoggingQuery_FoldersGetSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.folders.locations.buckets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  Method: logging.folders.locations.buckets.createAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsCreateAsync : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsCreateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  Method: logging.folders.locations.buckets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  @param name Required. The full resource name of the bucket to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log bucket.
 *
 *  Method: logging.folders.locations.buckets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Gets a log bucket.
 *
 *  @param name Required. The resource name of the bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  Method: logging.folders.locations.buckets.links.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsLinksCreate : GTLRLoggingQuery

/**
 *  Required. The ID to use for the link. The link_id can have up to 100
 *  characters. A valid link_id must only have alphanumeric characters and
 *  underscores within it.
 */
@property(nonatomic, copy, nullable) NSString *linkId;

/**
 *  Required. The full resource name of the bucket to create a link for.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  @param object The @c GTLRLogging_Link to include in the query.
 *  @param parent Required. The full resource name of the bucket to create a
 *    link for.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_Link *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  Method: logging.folders.locations.buckets.links.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsLinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the link to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  @param name Required. The full resource name of the link to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a link.
 *
 *  Method: logging.folders.locations.buckets.links.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsLinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the link:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Link.
 *
 *  Gets a link.
 *
 *  @param name Required. The resource name of the link:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists links.
 *
 *  Method: logging.folders.locations.buckets.links.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsLinksList : GTLRLoggingQuery

/** Optional. The maximum number of results to return from this request. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose links are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLinksResponse.
 *
 *  Lists links.
 *
 *  @param parent Required. The parent resource whose links are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists log buckets.
 *
 *  Method: logging.folders.locations.buckets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose buckets are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion of
 *  the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all buckets.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListBucketsResponse.
 *
 *  Lists log buckets.
 *
 *  @param parent Required. The parent resource whose buckets are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion
 *    of the resource must be specified, but supplying the character - in place
 *    of LOCATION_ID will return all buckets.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.folders.locations.buckets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  Method: logging.folders.locations.buckets.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsUndelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to undelete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  @param object The @c GTLRLogging_UndeleteBucketRequest to include in the
 *    query.
 *  @param name Required. The full resource name of the bucket to undelete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsUndelete
 */
+ (instancetype)queryWithObject:(GTLRLogging_UndeleteBucketRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.folders.locations.buckets.updateAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsUpdateAsync : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsUpdateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  Method: logging.folders.locations.buckets.views.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsCreate : GTLRLoggingQuery

/**
 *  Required. The bucket in which to create the view
 *  `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. A client-assigned identifier such as "my-view". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods.
 */
@property(nonatomic, copy, nullable) NSString *viewId;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param parent Required. The bucket in which to create the view
 *    `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  Method: logging.folders.locations.buckets.views.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  @param name Required. The full resource name of the view to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a view on a log bucket.
 *
 *  Method: logging.folders.locations.buckets.views.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the policy:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Gets a view on a log bucket.
 *
 *  @param name Required. The resource name of the policy:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: logging.folders.locations.buckets.views.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsGetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param object The @c GTLRLogging_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists views on a log bucket.
 *
 *  Method: logging.folders.locations.buckets.views.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The bucket whose views are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListViewsResponse.
 *
 *  Lists views on a log bucket.
 *
 *  @param parent Required. The bucket whose views are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.folders.locations.buckets.views.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  Method: logging.folders.locations.buckets.views.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to update
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in view that need an update.
 *  A field will be overwritten if, and only if, it is in the update mask. name
 *  and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param name Required. The full resource name of the view to update
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  Method: logging.folders.locations.buckets.views.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsSetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  @param object The @c GTLRLogging_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: logging.folders.locations.buckets.views.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsBucketsViewsTestIamPermissions : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  Resource names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRLogging_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsBucketsViewsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRLogging_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: logging.folders.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsGet : GTLRLoggingQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: logging.folders.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsList : GTLRLoggingQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like "displayName=tokyo", and is documented in more
 *  detail in AIP-160 (https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the next_page_token field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a log scope.
 *
 *  Method: logging.folders.locations.logScopes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsLogScopesCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "log-scope". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. First character has to be alphanumeric.
 */
@property(nonatomic, copy, nullable) NSString *logScopeId;

/**
 *  Required. The parent project in which to create the log scope
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Creates a log scope.
 *
 *  @param object The @c GTLRLogging_LogScope to include in the query.
 *  @param parent Required. The parent project in which to create the log scope
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsLogScopesCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogScope *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log scope.
 *
 *  Method: logging.folders.locations.logScopes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsLogScopesDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log scope to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]" For
 *  example:"projects/my-project/locations/global/logScopes/my-log-scope"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log scope.
 *
 *  @param name Required. The resource name of the log scope to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]"
 *    For example:"projects/my-project/locations/global/logScopes/my-log-scope"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsLogScopesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log scope.
 *
 *  Method: logging.folders.locations.logScopes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsLogScopesGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the log scope:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]" For
 *  example:"projects/my-project/locations/global/logScopes/my-log-scope"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Gets a log scope.
 *
 *  @param name Required. The resource name of the log scope:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]"
 *    For example:"projects/my-project/locations/global/logScopes/my-log-scope"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsLogScopesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists log scopes.
 *
 *  Method: logging.folders.locations.logScopes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsLogScopesList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose log scopes are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLogScopesResponse.
 *
 *  Lists log scopes.
 *
 *  @param parent Required. The parent resource whose log scopes are to be
 *    listed: "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsLogScopesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log scope.
 *
 *  Method: logging.folders.locations.logScopes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsLogScopesPatch : GTLRLoggingQuery

/**
 *  Output only. The resource name of the log scope.For
 *  example:projects/my-project/locations/global/logScopes/my-log-scope
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in log_scope that need an
 *  update. A field will be overwritten if, and only if, it is in the update
 *  mask. name and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=description
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Updates a log scope.
 *
 *  @param object The @c GTLRLogging_LogScope to include in the query.
 *  @param name Output only. The resource name of the log scope.For
 *    example:projects/my-project/locations/global/logScopes/my-log-scope
 *
 *  @return GTLRLoggingQuery_FoldersLocationsLogScopesPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogScope *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  Method: logging.folders.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsOperationsCancel : GTLRLoggingQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  @param object The @c GTLRLogging_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRLogging_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: logging.folders.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsOperationsGet : GTLRLoggingQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  Method: logging.folders.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsOperationsList : GTLRLoggingQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  Method: logging.folders.locations.recentQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsRecentQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") of the recent
 *  queries to list. The only valid value for this field is one of the two
 *  allowable type function calls, which are the following: type("Logging")
 *  type("OpsAnalytics")
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *  example:projects/my-project/locations/us-central1Note: The location portion
 *  of the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all recent queries.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListRecentQueriesResponse.
 *
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *    example:projects/my-project/locations/us-central1Note: The location
 *    portion of the resource must be specified, but supplying the character -
 *    in place of LOCATION_ID will return all recent queries.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsRecentQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new SavedQuery for the user making the request.
 *
 *  Method: logging.folders.locations.savedQueries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsSavedQueriesCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the saved query:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/global"
 *  "organizations/123456789/locations/us-central1"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The ID to use for the saved query, which will become the final
 *  component of the saved query's resource name.If the saved_query_id is not
 *  provided, the system will generate an alphanumeric ID.The saved_query_id is
 *  limited to 100 characters and can include only the following characters:
 *  upper and lower-case alphanumeric characters, underscores, hyphens,
 *  periods.First character has to be alphanumeric.
 */
@property(nonatomic, copy, nullable) NSString *savedQueryId;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Creates a new SavedQuery for the user making the request.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param parent Required. The parent resource in which to create the saved
 *    query: "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/global"
 *    "organizations/123456789/locations/us-central1"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsSavedQueriesCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  Method: logging.folders.locations.savedQueries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsSavedQueriesDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the saved query to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  @param name Required. The full resource name of the saved query to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsSavedQueriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns all data associated with the requested query.
 *
 *  Method: logging.folders.locations.savedQueries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsSavedQueriesGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the saved query.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Returns all data associated with the requested query.
 *
 *  @param name Required. The resource name of the saved query.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsSavedQueriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  Method: logging.folders.locations.savedQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLocationsSavedQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") and the
 *  visibility (PRIVATE or SHARED) of the saved queries to list. If provided,
 *  the filter must contain either the type function or a visibility token, or
 *  both. If both are chosen, they can be placed in any order, but they must be
 *  joined by the AND operator or the empty character.The two supported type
 *  function calls are: type("Logging") type("OpsAnalytics")The two supported
 *  visibility tokens are: visibility = PRIVATE visibility = SHAREDFor
 *  example:type("Logging") AND visibility = PRIVATE visibility=SHARED
 *  type("OpsAnalytics") type("OpsAnalytics)" visibility = PRIVATE visibility =
 *  SHARED
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/us-central1" Note: The locations portion of
 *  the resource must be specified. To get a list of all saved queries, a
 *  wildcard character - can be used for LOCATION_ID, for example:
 *  "projects/my-project/locations/-"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSavedQueriesResponse.
 *
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/us-central1" Note: The locations portion of
 *    the resource must be specified. To get a list of all saved queries, a
 *    wildcard character - can be used for LOCATION_ID, for example:
 *    "projects/my-project/locations/-"
 *
 *  @return GTLRLoggingQuery_FoldersLocationsSavedQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing SavedQuery.
 *
 *  Method: logging.folders.locations.savedQueries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLocationsSavedQueriesPatch : GTLRLoggingQuery

/**
 *  Output only. Resource name of the saved query.In the format:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  a list of supported locations, see Supported Regions
 *  (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *  the saved query is created, the location cannot be changed.If the user
 *  doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing saved query.
 *  Fields are relative to the saved_query and new values for the fields are
 *  taken from the corresponding fields in the SavedQuery included in this
 *  request. Fields not mentioned in update_mask are not changed and are ignored
 *  in the request.To update all mutable fields, specify an update_mask of *.For
 *  example, to change the description and query filter text of a saved query,
 *  specify an update_mask of "description, query.filter".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Updates an existing SavedQuery.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param name Output only. Resource name of the saved query.In the format:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    For a list of supported locations, see Supported Regions
 *    (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *    the saved query is created, the location cannot be changed.If the user
 *    doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 *
 *  @return GTLRLoggingQuery_FoldersLocationsSavedQueriesPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  Method: logging.folders.logs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersLogsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log to delete:
 *  projects/[PROJECT_ID]/logs/[LOG_ID]
 *  organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *  folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For example,
 *  "projects/my-project-id/logs/syslog",
 *  "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *  information about log names, see LogEntry.
 */
@property(nonatomic, copy, nullable) NSString *logName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  @param logName Required. The resource name of the log to delete:
 *    projects/[PROJECT_ID]/logs/[LOG_ID]
 *    organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *    folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For
 *    example, "projects/my-project-id/logs/syslog",
 *    "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *    information about log names, see LogEntry.
 *
 *  @return GTLRLoggingQuery_FoldersLogsDelete
 */
+ (instancetype)queryWithLogName:(NSString *)logName;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.folders.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_FoldersLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  Method: logging.folders.sinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersSinksCreate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The resource in which to create the sink: "projects/[PROJECT_ID]"
 *  "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]"
 *  "folders/[FOLDER_ID]" For examples:"projects/my-project"
 *  "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Determines the kind of IAM identity returned as writer_identity in
 *  the new sink. If this value is omitted or set to false, and if the sink's
 *  parent is a project, then the value returned as writer_identity is the same
 *  group or service account used by Cloud Logging before the addition of writer
 *  identities to this API. The sink's destination must be in the same project
 *  as the sink itself.If this field is set to true, or if the sink is owned by
 *  a non-project resource such as an organization, then the value of
 *  writer_identity will be a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  used by the sinks with the same parent. For more information, see
 *  writer_identity in LogSink.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param parent Required. The resource in which to create the sink:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_FoldersSinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  Method: logging.folders.sinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersSinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the sink to delete, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  @param sinkName Required. The full resource name of the sink to delete,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_FoldersSinksDelete
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Gets a sink.
 *
 *  Method: logging.folders.sinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersSinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the sink:
 *  "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Gets a sink.
 *
 *  @param sinkName Required. The resource name of the sink:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_FoldersSinksGet
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Lists sinks.
 *
 *  Method: logging.folders.sinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_FoldersSinksList : GTLRLoggingQuery

/**
 *  Optional. A filter expression to constrain the sinks returned. Today, this
 *  only supports the following strings: '' 'in_scope("ALL")',
 *  'in_scope("ANCESTOR")', 'in_scope("DEFAULT")'.Description of scopes below.
 *  ALL: Includes all of the sinks which can be returned in any other scope.
 *  ANCESTOR: Includes intercepting sinks owned by ancestor resources. DEFAULT:
 *  Includes sinks owned by parent.When the empty string is provided, then the
 *  filter 'in_scope("DEFAULT")' is applied.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose sinks are to be listed:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSinksResponse.
 *
 *  Lists sinks.
 *
 *  @param parent Required. The parent resource whose sinks are to be listed:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_FoldersSinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.folders.sinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersSinksPatch : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_FoldersSinksPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.folders.sinks.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersSinksUpdate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_FoldersSinksUpdate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Updates the settings for the given resource. This method applies to all
 *  feature configurations for organization and folders.UpdateSettings fails
 *  when any of the following are true: The value of storage_location either
 *  isn't supported by Logging or violates the location OrgPolicy. The
 *  default_sink_config field is set, but it has an unspecified filter write
 *  mode. The value of kms_key_name is invalid. The associated service account
 *  doesn't have the required roles/cloudkms.cryptoKeyEncrypterDecrypter role
 *  assigned for the key. Access to the key is disabled.See Configure default
 *  settings for organizations and folders
 *  (https://cloud.google.com/logging/docs/default-settings) for more
 *  information.
 *
 *  Method: logging.folders.updateSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_FoldersUpdateSettings : GTLRLoggingQuery

/**
 *  Required. The resource name for the settings to update.
 *  "organizations/[ORGANIZATION_ID]/settings" "folders/[FOLDER_ID]/settings"
 *  For example:"organizations/12345/settings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask identifying which fields from settings should be
 *  updated. A field will be overwritten if and only if it is in the update
 *  mask. Output only fields cannot be updated.See FieldMask for more
 *  information.For example: "updateMask=kmsKeyName"
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Updates the settings for the given resource. This method applies to all
 *  feature configurations for organization and folders.UpdateSettings fails
 *  when any of the following are true: The value of storage_location either
 *  isn't supported by Logging or violates the location OrgPolicy. The
 *  default_sink_config field is set, but it has an unspecified filter write
 *  mode. The value of kms_key_name is invalid. The associated service account
 *  doesn't have the required roles/cloudkms.cryptoKeyEncrypterDecrypter role
 *  assigned for the key. Access to the key is disabled.See Configure default
 *  settings for organizations and folders
 *  (https://cloud.google.com/logging/docs/default-settings) for more
 *  information.
 *
 *  @param object The @c GTLRLogging_Settings to include in the query.
 *  @param name Required. The resource name for the settings to update.
 *    "organizations/[ORGANIZATION_ID]/settings" "folders/[FOLDER_ID]/settings"
 *    For example:"organizations/12345/settings"
 *
 *  @return GTLRLoggingQuery_FoldersUpdateSettings
 */
+ (instancetype)queryWithObject:(GTLRLogging_Settings *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.locations.buckets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  Method: logging.locations.buckets.createAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsCreateAsync : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsCreateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  Method: logging.locations.buckets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  @param name Required. The full resource name of the bucket to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log bucket.
 *
 *  Method: logging.locations.buckets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Gets a log bucket.
 *
 *  @param name Required. The resource name of the bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  Method: logging.locations.buckets.links.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsLinksCreate : GTLRLoggingQuery

/**
 *  Required. The ID to use for the link. The link_id can have up to 100
 *  characters. A valid link_id must only have alphanumeric characters and
 *  underscores within it.
 */
@property(nonatomic, copy, nullable) NSString *linkId;

/**
 *  Required. The full resource name of the bucket to create a link for.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  @param object The @c GTLRLogging_Link to include in the query.
 *  @param parent Required. The full resource name of the bucket to create a
 *    link for.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_Link *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  Method: logging.locations.buckets.links.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsLinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the link to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  @param name Required. The full resource name of the link to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a link.
 *
 *  Method: logging.locations.buckets.links.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsLinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the link:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Link.
 *
 *  Gets a link.
 *
 *  @param name Required. The resource name of the link:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists links.
 *
 *  Method: logging.locations.buckets.links.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsLinksList : GTLRLoggingQuery

/** Optional. The maximum number of results to return from this request. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose links are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLinksResponse.
 *
 *  Lists links.
 *
 *  @param parent Required. The parent resource whose links are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists log buckets.
 *
 *  Method: logging.locations.buckets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose buckets are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion of
 *  the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all buckets.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListBucketsResponse.
 *
 *  Lists log buckets.
 *
 *  @param parent Required. The parent resource whose buckets are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion
 *    of the resource must be specified, but supplying the character - in place
 *    of LOCATION_ID will return all buckets.
 *
 *  @return GTLRLoggingQuery_LocationsBucketsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.locations.buckets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  Method: logging.locations.buckets.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsUndelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to undelete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  @param object The @c GTLRLogging_UndeleteBucketRequest to include in the
 *    query.
 *  @param name Required. The full resource name of the bucket to undelete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsUndelete
 */
+ (instancetype)queryWithObject:(GTLRLogging_UndeleteBucketRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.locations.buckets.updateAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsUpdateAsync : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsUpdateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  Method: logging.locations.buckets.views.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsCreate : GTLRLoggingQuery

/**
 *  Required. The bucket in which to create the view
 *  `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. A client-assigned identifier such as "my-view". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods.
 */
@property(nonatomic, copy, nullable) NSString *viewId;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param parent Required. The bucket in which to create the view
 *    `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  Method: logging.locations.buckets.views.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  @param name Required. The full resource name of the view to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a view on a log bucket.
 *
 *  Method: logging.locations.buckets.views.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the policy:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Gets a view on a log bucket.
 *
 *  @param name Required. The resource name of the policy:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: logging.locations.buckets.views.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsGetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param object The @c GTLRLogging_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists views on a log bucket.
 *
 *  Method: logging.locations.buckets.views.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The bucket whose views are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListViewsResponse.
 *
 *  Lists views on a log bucket.
 *
 *  @param parent Required. The bucket whose views are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  Method: logging.locations.buckets.views.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to update
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in view that need an update.
 *  A field will be overwritten if, and only if, it is in the update mask. name
 *  and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param name Required. The full resource name of the view to update
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  Method: logging.locations.buckets.views.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsSetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  @param object The @c GTLRLogging_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: logging.locations.buckets.views.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsBucketsViewsTestIamPermissions : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  Resource names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRLogging_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_LocationsBucketsViewsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRLogging_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: logging.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsGet : GTLRLoggingQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRLoggingQuery_LocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: logging.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsList : GTLRLoggingQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like "displayName=tokyo", and is documented in more
 *  detail in AIP-160 (https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the next_page_token field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRLoggingQuery_LocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  Method: logging.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LocationsOperationsCancel : GTLRLoggingQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  @param object The @c GTLRLogging_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRLoggingQuery_LocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRLogging_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: logging.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsOperationsGet : GTLRLoggingQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRLoggingQuery_LocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  Method: logging.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LocationsOperationsList : GTLRLoggingQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRLoggingQuery_LocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  Method: logging.logs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_LogsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log to delete:
 *  projects/[PROJECT_ID]/logs/[LOG_ID]
 *  organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *  folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For example,
 *  "projects/my-project-id/logs/syslog",
 *  "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *  information about log names, see LogEntry.
 */
@property(nonatomic, copy, nullable) NSString *logName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  @param logName Required. The resource name of the log to delete:
 *    projects/[PROJECT_ID]/logs/[LOG_ID]
 *    organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *    folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For
 *    example, "projects/my-project-id/logs/syslog",
 *    "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *    information about log names, see LogEntry.
 *
 *  @return GTLRLoggingQuery_LogsDelete
 */
+ (instancetype)queryWithLogName:(NSString *)logName;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_LogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_LogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the descriptors for monitored resource types used by Logging.
 *
 *  Method: logging.monitoredResourceDescriptors.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_MonitoredResourceDescriptorsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListMonitoredResourceDescriptorsResponse.
 *
 *  Lists the descriptors for monitored resource types used by Logging.
 *
 *  @return GTLRLoggingQuery_MonitoredResourceDescriptorsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  Method: logging.organizations.exclusions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsExclusionsCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the exclusion:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *  examples:"projects/my-logging-project" "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param parent Required. The parent resource in which to create the
 *    exclusion: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-logging-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_OrganizationsExclusionsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an exclusion in the _Default sink.
 *
 *  Method: logging.organizations.exclusions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsExclusionsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion to delete:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion to delete:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_OrganizationsExclusionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  Method: logging.organizations.exclusions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsExclusionsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_OrganizationsExclusionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  Method: logging.organizations.exclusions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsExclusionsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose exclusions are to be listed.
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListExclusionsResponse.
 *
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  @param parent Required. The parent resource whose exclusions are to be
 *    listed. "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsExclusionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  Method: logging.organizations.exclusions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsExclusionsPatch : GTLRLoggingQuery

/**
 *  Required. The resource name of the exclusion to update:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing exclusion.
 *  New values for the fields are taken from the corresponding fields in the
 *  LogExclusion included in this request. Fields not mentioned in update_mask
 *  are not changed and are ignored in the request.For example, to change the
 *  filter and description of an exclusion, specify an update_mask of
 *  "filter,description".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param name Required. The resource name of the exclusion to update:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_OrganizationsExclusionsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  Method: logging.organizations.getCmekSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsGetCmekSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve CMEK settings.
 *  "projects/[PROJECT_ID]/cmekSettings"
 *  "organizations/[ORGANIZATION_ID]/cmekSettings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *  "folders/[FOLDER_ID]/cmekSettings" For
 *  example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router can
 *  be configured for Google Cloud projects, folders, organizations, and billing
 *  accounts. Once configured for an organization, it applies to all projects
 *  and folders in the Google Cloud organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_CmekSettings.
 *
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  @param name Required. The resource for which to retrieve CMEK settings.
 *    "projects/[PROJECT_ID]/cmekSettings"
 *    "organizations/[ORGANIZATION_ID]/cmekSettings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *    "folders/[FOLDER_ID]/cmekSettings" For
 *    example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router
 *    can be configured for Google Cloud projects, folders, organizations, and
 *    billing accounts. Once configured for an organization, it applies to all
 *    projects and folders in the Google Cloud organization.
 *
 *  @return GTLRLoggingQuery_OrganizationsGetCmekSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  Method: logging.organizations.getSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsGetSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve settings.
 *  "projects/[PROJECT_ID]/settings" "organizations/[ORGANIZATION_ID]/settings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *  "folders/[FOLDER_ID]/settings" For
 *  example:"organizations/12345/settings"Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  @param name Required. The resource for which to retrieve settings.
 *    "projects/[PROJECT_ID]/settings"
 *    "organizations/[ORGANIZATION_ID]/settings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *    "folders/[FOLDER_ID]/settings" For
 *    example:"organizations/12345/settings"Note: Settings can be retrieved for
 *    Google Cloud projects, folders, organizations, and billing accounts.
 *
 *  @return GTLRLoggingQuery_OrganizationsGetSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.organizations.locations.buckets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  Method: logging.organizations.locations.buckets.createAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsCreateAsync : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsCreateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  Method: logging.organizations.locations.buckets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  @param name Required. The full resource name of the bucket to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log bucket.
 *
 *  Method: logging.organizations.locations.buckets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Gets a log bucket.
 *
 *  @param name Required. The resource name of the bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  Method: logging.organizations.locations.buckets.links.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsLinksCreate : GTLRLoggingQuery

/**
 *  Required. The ID to use for the link. The link_id can have up to 100
 *  characters. A valid link_id must only have alphanumeric characters and
 *  underscores within it.
 */
@property(nonatomic, copy, nullable) NSString *linkId;

/**
 *  Required. The full resource name of the bucket to create a link for.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  @param object The @c GTLRLogging_Link to include in the query.
 *  @param parent Required. The full resource name of the bucket to create a
 *    link for.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_Link *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  Method: logging.organizations.locations.buckets.links.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsLinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the link to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  @param name Required. The full resource name of the link to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a link.
 *
 *  Method: logging.organizations.locations.buckets.links.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsLinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the link:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Link.
 *
 *  Gets a link.
 *
 *  @param name Required. The resource name of the link:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists links.
 *
 *  Method: logging.organizations.locations.buckets.links.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsLinksList : GTLRLoggingQuery

/** Optional. The maximum number of results to return from this request. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose links are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLinksResponse.
 *
 *  Lists links.
 *
 *  @param parent Required. The parent resource whose links are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists log buckets.
 *
 *  Method: logging.organizations.locations.buckets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose buckets are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion of
 *  the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all buckets.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListBucketsResponse.
 *
 *  Lists log buckets.
 *
 *  @param parent Required. The parent resource whose buckets are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion
 *    of the resource must be specified, but supplying the character - in place
 *    of LOCATION_ID will return all buckets.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.organizations.locations.buckets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  Method: logging.organizations.locations.buckets.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsUndelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to undelete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  @param object The @c GTLRLogging_UndeleteBucketRequest to include in the
 *    query.
 *  @param name Required. The full resource name of the bucket to undelete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsUndelete
 */
+ (instancetype)queryWithObject:(GTLRLogging_UndeleteBucketRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.organizations.locations.buckets.updateAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsUpdateAsync : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsUpdateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  Method: logging.organizations.locations.buckets.views.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsCreate : GTLRLoggingQuery

/**
 *  Required. The bucket in which to create the view
 *  `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. A client-assigned identifier such as "my-view". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods.
 */
@property(nonatomic, copy, nullable) NSString *viewId;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param parent Required. The bucket in which to create the view
 *    `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  Method: logging.organizations.locations.buckets.views.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  @param name Required. The full resource name of the view to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a view on a log bucket.
 *
 *  Method: logging.organizations.locations.buckets.views.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the policy:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Gets a view on a log bucket.
 *
 *  @param name Required. The resource name of the policy:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: logging.organizations.locations.buckets.views.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsGetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param object The @c GTLRLogging_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists views on a log bucket.
 *
 *  Method: logging.organizations.locations.buckets.views.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The bucket whose views are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListViewsResponse.
 *
 *  Lists views on a log bucket.
 *
 *  @param parent Required. The bucket whose views are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.organizations.locations.buckets.views.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  Method: logging.organizations.locations.buckets.views.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to update
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in view that need an update.
 *  A field will be overwritten if, and only if, it is in the update mask. name
 *  and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param name Required. The full resource name of the view to update
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  Method: logging.organizations.locations.buckets.views.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsSetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  @param object The @c GTLRLogging_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: logging.organizations.locations.buckets.views.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsBucketsViewsTestIamPermissions : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  Resource names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRLogging_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsBucketsViewsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRLogging_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: logging.organizations.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsGet : GTLRLoggingQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: logging.organizations.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsList : GTLRLoggingQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like "displayName=tokyo", and is documented in more
 *  detail in AIP-160 (https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the next_page_token field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a log scope.
 *
 *  Method: logging.organizations.locations.logScopes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsLogScopesCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "log-scope". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. First character has to be alphanumeric.
 */
@property(nonatomic, copy, nullable) NSString *logScopeId;

/**
 *  Required. The parent project in which to create the log scope
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Creates a log scope.
 *
 *  @param object The @c GTLRLogging_LogScope to include in the query.
 *  @param parent Required. The parent project in which to create the log scope
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsLogScopesCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogScope *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log scope.
 *
 *  Method: logging.organizations.locations.logScopes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsLogScopesDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log scope to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]" For
 *  example:"projects/my-project/locations/global/logScopes/my-log-scope"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log scope.
 *
 *  @param name Required. The resource name of the log scope to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]"
 *    For example:"projects/my-project/locations/global/logScopes/my-log-scope"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsLogScopesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log scope.
 *
 *  Method: logging.organizations.locations.logScopes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsLogScopesGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the log scope:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]" For
 *  example:"projects/my-project/locations/global/logScopes/my-log-scope"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Gets a log scope.
 *
 *  @param name Required. The resource name of the log scope:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]"
 *    For example:"projects/my-project/locations/global/logScopes/my-log-scope"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsLogScopesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists log scopes.
 *
 *  Method: logging.organizations.locations.logScopes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsLogScopesList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose log scopes are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLogScopesResponse.
 *
 *  Lists log scopes.
 *
 *  @param parent Required. The parent resource whose log scopes are to be
 *    listed: "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsLogScopesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log scope.
 *
 *  Method: logging.organizations.locations.logScopes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsLogScopesPatch : GTLRLoggingQuery

/**
 *  Output only. The resource name of the log scope.For
 *  example:projects/my-project/locations/global/logScopes/my-log-scope
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in log_scope that need an
 *  update. A field will be overwritten if, and only if, it is in the update
 *  mask. name and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=description
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Updates a log scope.
 *
 *  @param object The @c GTLRLogging_LogScope to include in the query.
 *  @param name Output only. The resource name of the log scope.For
 *    example:projects/my-project/locations/global/logScopes/my-log-scope
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsLogScopesPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogScope *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  Method: logging.organizations.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsOperationsCancel : GTLRLoggingQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  @param object The @c GTLRLogging_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRLogging_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: logging.organizations.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsOperationsGet : GTLRLoggingQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  Method: logging.organizations.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsOperationsList : GTLRLoggingQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  Method: logging.organizations.locations.recentQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsRecentQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") of the recent
 *  queries to list. The only valid value for this field is one of the two
 *  allowable type function calls, which are the following: type("Logging")
 *  type("OpsAnalytics")
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *  example:projects/my-project/locations/us-central1Note: The location portion
 *  of the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all recent queries.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListRecentQueriesResponse.
 *
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *    example:projects/my-project/locations/us-central1Note: The location
 *    portion of the resource must be specified, but supplying the character -
 *    in place of LOCATION_ID will return all recent queries.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsRecentQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new SavedQuery for the user making the request.
 *
 *  Method: logging.organizations.locations.savedQueries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsSavedQueriesCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the saved query:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/global"
 *  "organizations/123456789/locations/us-central1"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The ID to use for the saved query, which will become the final
 *  component of the saved query's resource name.If the saved_query_id is not
 *  provided, the system will generate an alphanumeric ID.The saved_query_id is
 *  limited to 100 characters and can include only the following characters:
 *  upper and lower-case alphanumeric characters, underscores, hyphens,
 *  periods.First character has to be alphanumeric.
 */
@property(nonatomic, copy, nullable) NSString *savedQueryId;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Creates a new SavedQuery for the user making the request.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param parent Required. The parent resource in which to create the saved
 *    query: "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/global"
 *    "organizations/123456789/locations/us-central1"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsSavedQueriesCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  Method: logging.organizations.locations.savedQueries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsSavedQueriesDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the saved query to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  @param name Required. The full resource name of the saved query to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsSavedQueriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns all data associated with the requested query.
 *
 *  Method: logging.organizations.locations.savedQueries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsSavedQueriesGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the saved query.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Returns all data associated with the requested query.
 *
 *  @param name Required. The resource name of the saved query.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsSavedQueriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  Method: logging.organizations.locations.savedQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLocationsSavedQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") and the
 *  visibility (PRIVATE or SHARED) of the saved queries to list. If provided,
 *  the filter must contain either the type function or a visibility token, or
 *  both. If both are chosen, they can be placed in any order, but they must be
 *  joined by the AND operator or the empty character.The two supported type
 *  function calls are: type("Logging") type("OpsAnalytics")The two supported
 *  visibility tokens are: visibility = PRIVATE visibility = SHAREDFor
 *  example:type("Logging") AND visibility = PRIVATE visibility=SHARED
 *  type("OpsAnalytics") type("OpsAnalytics)" visibility = PRIVATE visibility =
 *  SHARED
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/us-central1" Note: The locations portion of
 *  the resource must be specified. To get a list of all saved queries, a
 *  wildcard character - can be used for LOCATION_ID, for example:
 *  "projects/my-project/locations/-"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSavedQueriesResponse.
 *
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/us-central1" Note: The locations portion of
 *    the resource must be specified. To get a list of all saved queries, a
 *    wildcard character - can be used for LOCATION_ID, for example:
 *    "projects/my-project/locations/-"
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsSavedQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing SavedQuery.
 *
 *  Method: logging.organizations.locations.savedQueries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLocationsSavedQueriesPatch : GTLRLoggingQuery

/**
 *  Output only. Resource name of the saved query.In the format:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  a list of supported locations, see Supported Regions
 *  (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *  the saved query is created, the location cannot be changed.If the user
 *  doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing saved query.
 *  Fields are relative to the saved_query and new values for the fields are
 *  taken from the corresponding fields in the SavedQuery included in this
 *  request. Fields not mentioned in update_mask are not changed and are ignored
 *  in the request.To update all mutable fields, specify an update_mask of *.For
 *  example, to change the description and query filter text of a saved query,
 *  specify an update_mask of "description, query.filter".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Updates an existing SavedQuery.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param name Output only. Resource name of the saved query.In the format:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    For a list of supported locations, see Supported Regions
 *    (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *    the saved query is created, the location cannot be changed.If the user
 *    doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 *
 *  @return GTLRLoggingQuery_OrganizationsLocationsSavedQueriesPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  Method: logging.organizations.logs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsLogsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log to delete:
 *  projects/[PROJECT_ID]/logs/[LOG_ID]
 *  organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *  folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For example,
 *  "projects/my-project-id/logs/syslog",
 *  "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *  information about log names, see LogEntry.
 */
@property(nonatomic, copy, nullable) NSString *logName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  @param logName Required. The resource name of the log to delete:
 *    projects/[PROJECT_ID]/logs/[LOG_ID]
 *    organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *    folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For
 *    example, "projects/my-project-id/logs/syslog",
 *    "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *    information about log names, see LogEntry.
 *
 *  @return GTLRLoggingQuery_OrganizationsLogsDelete
 */
+ (instancetype)queryWithLogName:(NSString *)logName;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.organizations.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_OrganizationsLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  Method: logging.organizations.sinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsSinksCreate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The resource in which to create the sink: "projects/[PROJECT_ID]"
 *  "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]"
 *  "folders/[FOLDER_ID]" For examples:"projects/my-project"
 *  "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Determines the kind of IAM identity returned as writer_identity in
 *  the new sink. If this value is omitted or set to false, and if the sink's
 *  parent is a project, then the value returned as writer_identity is the same
 *  group or service account used by Cloud Logging before the addition of writer
 *  identities to this API. The sink's destination must be in the same project
 *  as the sink itself.If this field is set to true, or if the sink is owned by
 *  a non-project resource such as an organization, then the value of
 *  writer_identity will be a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  used by the sinks with the same parent. For more information, see
 *  writer_identity in LogSink.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param parent Required. The resource in which to create the sink:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_OrganizationsSinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  Method: logging.organizations.sinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsSinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the sink to delete, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  @param sinkName Required. The full resource name of the sink to delete,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_OrganizationsSinksDelete
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Gets a sink.
 *
 *  Method: logging.organizations.sinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsSinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the sink:
 *  "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Gets a sink.
 *
 *  @param sinkName Required. The resource name of the sink:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_OrganizationsSinksGet
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Lists sinks.
 *
 *  Method: logging.organizations.sinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_OrganizationsSinksList : GTLRLoggingQuery

/**
 *  Optional. A filter expression to constrain the sinks returned. Today, this
 *  only supports the following strings: '' 'in_scope("ALL")',
 *  'in_scope("ANCESTOR")', 'in_scope("DEFAULT")'.Description of scopes below.
 *  ALL: Includes all of the sinks which can be returned in any other scope.
 *  ANCESTOR: Includes intercepting sinks owned by ancestor resources. DEFAULT:
 *  Includes sinks owned by parent.When the empty string is provided, then the
 *  filter 'in_scope("DEFAULT")' is applied.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose sinks are to be listed:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSinksResponse.
 *
 *  Lists sinks.
 *
 *  @param parent Required. The parent resource whose sinks are to be listed:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_OrganizationsSinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.organizations.sinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsSinksPatch : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_OrganizationsSinksPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.organizations.sinks.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsSinksUpdate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_OrganizationsSinksUpdate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Updates the Log Router CMEK settings for the given resource.Note: CMEK for
 *  the Log Router can currently only be configured for Google Cloud
 *  organizations. Once configured, it applies to all projects and folders in
 *  the Google Cloud organization.UpdateCmekSettings fails when any of the
 *  following are true: The value of kms_key_name is invalid. The associated
 *  service account doesn't have the required
 *  roles/cloudkms.cryptoKeyEncrypterDecrypter role assigned for the key. Access
 *  to the key is disabled.See Enabling CMEK for Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  Method: logging.organizations.updateCmekSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsUpdateCmekSettings : GTLRLoggingQuery

/**
 *  Required. The resource name for the CMEK settings to update.
 *  "projects/[PROJECT_ID]/cmekSettings"
 *  "organizations/[ORGANIZATION_ID]/cmekSettings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *  "folders/[FOLDER_ID]/cmekSettings" For
 *  example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router can
 *  currently only be configured for Google Cloud organizations. Once
 *  configured, it applies to all projects and folders in the Google Cloud
 *  organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask identifying which fields from cmek_settings should be
 *  updated. A field will be overwritten if and only if it is in the update
 *  mask. Output only fields cannot be updated.See FieldMask for more
 *  information.For example: "updateMask=kmsKeyName"
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_CmekSettings.
 *
 *  Updates the Log Router CMEK settings for the given resource.Note: CMEK for
 *  the Log Router can currently only be configured for Google Cloud
 *  organizations. Once configured, it applies to all projects and folders in
 *  the Google Cloud organization.UpdateCmekSettings fails when any of the
 *  following are true: The value of kms_key_name is invalid. The associated
 *  service account doesn't have the required
 *  roles/cloudkms.cryptoKeyEncrypterDecrypter role assigned for the key. Access
 *  to the key is disabled.See Enabling CMEK for Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  @param object The @c GTLRLogging_CmekSettings to include in the query.
 *  @param name Required. The resource name for the CMEK settings to update.
 *    "projects/[PROJECT_ID]/cmekSettings"
 *    "organizations/[ORGANIZATION_ID]/cmekSettings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *    "folders/[FOLDER_ID]/cmekSettings" For
 *    example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router
 *    can currently only be configured for Google Cloud organizations. Once
 *    configured, it applies to all projects and folders in the Google Cloud
 *    organization.
 *
 *  @return GTLRLoggingQuery_OrganizationsUpdateCmekSettings
 */
+ (instancetype)queryWithObject:(GTLRLogging_CmekSettings *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the settings for the given resource. This method applies to all
 *  feature configurations for organization and folders.UpdateSettings fails
 *  when any of the following are true: The value of storage_location either
 *  isn't supported by Logging or violates the location OrgPolicy. The
 *  default_sink_config field is set, but it has an unspecified filter write
 *  mode. The value of kms_key_name is invalid. The associated service account
 *  doesn't have the required roles/cloudkms.cryptoKeyEncrypterDecrypter role
 *  assigned for the key. Access to the key is disabled.See Configure default
 *  settings for organizations and folders
 *  (https://cloud.google.com/logging/docs/default-settings) for more
 *  information.
 *
 *  Method: logging.organizations.updateSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_OrganizationsUpdateSettings : GTLRLoggingQuery

/**
 *  Required. The resource name for the settings to update.
 *  "organizations/[ORGANIZATION_ID]/settings" "folders/[FOLDER_ID]/settings"
 *  For example:"organizations/12345/settings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask identifying which fields from settings should be
 *  updated. A field will be overwritten if and only if it is in the update
 *  mask. Output only fields cannot be updated.See FieldMask for more
 *  information.For example: "updateMask=kmsKeyName"
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Updates the settings for the given resource. This method applies to all
 *  feature configurations for organization and folders.UpdateSettings fails
 *  when any of the following are true: The value of storage_location either
 *  isn't supported by Logging or violates the location OrgPolicy. The
 *  default_sink_config field is set, but it has an unspecified filter write
 *  mode. The value of kms_key_name is invalid. The associated service account
 *  doesn't have the required roles/cloudkms.cryptoKeyEncrypterDecrypter role
 *  assigned for the key. Access to the key is disabled.See Configure default
 *  settings for organizations and folders
 *  (https://cloud.google.com/logging/docs/default-settings) for more
 *  information.
 *
 *  @param object The @c GTLRLogging_Settings to include in the query.
 *  @param name Required. The resource name for the settings to update.
 *    "organizations/[ORGANIZATION_ID]/settings" "folders/[FOLDER_ID]/settings"
 *    For example:"organizations/12345/settings"
 *
 *  @return GTLRLoggingQuery_OrganizationsUpdateSettings
 */
+ (instancetype)queryWithObject:(GTLRLogging_Settings *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  Method: logging.projects.exclusions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsExclusionsCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the exclusion:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *  examples:"projects/my-logging-project" "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Creates a new exclusion in the _Default sink in a specified parent resource.
 *  Only log entries belonging to that resource can be excluded. You can have up
 *  to 10 exclusions in a resource.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param parent Required. The parent resource in which to create the
 *    exclusion: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-logging-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_ProjectsExclusionsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an exclusion in the _Default sink.
 *
 *  Method: logging.projects.exclusions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsExclusionsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion to delete:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion to delete:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_ProjectsExclusionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  Method: logging.projects.exclusions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsExclusionsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of an existing exclusion:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Gets the description of an exclusion in the _Default sink.
 *
 *  @param name Required. The resource name of an existing exclusion:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_ProjectsExclusionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  Method: logging.projects.exclusions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsExclusionsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose exclusions are to be listed.
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListExclusionsResponse.
 *
 *  Lists all the exclusions on the _Default sink in a parent resource.
 *
 *  @param parent Required. The parent resource whose exclusions are to be
 *    listed. "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsExclusionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  Method: logging.projects.exclusions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsExclusionsPatch : GTLRLoggingQuery

/**
 *  Required. The resource name of the exclusion to update:
 *  "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *  "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *  "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *  example:"projects/my-project/exclusions/my-exclusion"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing exclusion.
 *  New values for the fields are taken from the corresponding fields in the
 *  LogExclusion included in this request. Fields not mentioned in update_mask
 *  are not changed and are ignored in the request.For example, to change the
 *  filter and description of an exclusion, specify an update_mask of
 *  "filter,description".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogExclusion.
 *
 *  Changes one or more properties of an existing exclusion in the _Default
 *  sink.
 *
 *  @param object The @c GTLRLogging_LogExclusion to include in the query.
 *  @param name Required. The resource name of the exclusion to update:
 *    "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
 *    "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
 *    "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]" For
 *    example:"projects/my-project/exclusions/my-exclusion"
 *
 *  @return GTLRLoggingQuery_ProjectsExclusionsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogExclusion *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  Method: logging.projects.getCmekSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsGetCmekSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve CMEK settings.
 *  "projects/[PROJECT_ID]/cmekSettings"
 *  "organizations/[ORGANIZATION_ID]/cmekSettings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *  "folders/[FOLDER_ID]/cmekSettings" For
 *  example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router can
 *  be configured for Google Cloud projects, folders, organizations, and billing
 *  accounts. Once configured for an organization, it applies to all projects
 *  and folders in the Google Cloud organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_CmekSettings.
 *
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  @param name Required. The resource for which to retrieve CMEK settings.
 *    "projects/[PROJECT_ID]/cmekSettings"
 *    "organizations/[ORGANIZATION_ID]/cmekSettings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *    "folders/[FOLDER_ID]/cmekSettings" For
 *    example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router
 *    can be configured for Google Cloud projects, folders, organizations, and
 *    billing accounts. Once configured for an organization, it applies to all
 *    projects and folders in the Google Cloud organization.
 *
 *  @return GTLRLoggingQuery_ProjectsGetCmekSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  Method: logging.projects.getSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsGetSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve settings.
 *  "projects/[PROJECT_ID]/settings" "organizations/[ORGANIZATION_ID]/settings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *  "folders/[FOLDER_ID]/settings" For
 *  example:"organizations/12345/settings"Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  @param name Required. The resource for which to retrieve settings.
 *    "projects/[PROJECT_ID]/settings"
 *    "organizations/[ORGANIZATION_ID]/settings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *    "folders/[FOLDER_ID]/settings" For
 *    example:"organizations/12345/settings"Note: Settings can be retrieved for
 *    Google Cloud projects, folders, organizations, and billing accounts.
 *
 *  @return GTLRLoggingQuery_ProjectsGetSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.projects.locations.buckets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Creates a log bucket that can be used to store log entries. After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  Method: logging.projects.locations.buckets.createAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsCreateAsync : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "my-bucket". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. Bucket identifiers must start with an alphanumeric
 *  character.
 */
@property(nonatomic, copy, nullable) NSString *bucketId;

/**
 *  Required. The resource in which to create the log bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Creates a log bucket asynchronously that can be used to store log
 *  entries.After a bucket has been created, the bucket's location cannot be
 *  changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param parent Required. The resource in which to create the log bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsCreateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  Method: logging.projects.locations.buckets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log bucket.Changes the bucket's lifecycle_state to the
 *  DELETE_REQUESTED state. After 7 days, the bucket will be purged and all log
 *  entries in the bucket will be permanently deleted.
 *
 *  @param name Required. The full resource name of the bucket to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log bucket.
 *
 *  Method: logging.projects.locations.buckets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the bucket:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Gets a log bucket.
 *
 *  @param name Required. The resource name of the bucket:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  Method: logging.projects.locations.buckets.links.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsLinksCreate : GTLRLoggingQuery

/**
 *  Required. The ID to use for the link. The link_id can have up to 100
 *  characters. A valid link_id must only have alphanumeric characters and
 *  underscores within it.
 */
@property(nonatomic, copy, nullable) NSString *linkId;

/**
 *  Required. The full resource name of the bucket to create a link for.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Asynchronously creates a linked dataset in BigQuery which makes it possible
 *  to use BigQuery to read the logs stored in the log bucket. A log bucket may
 *  currently only contain one link.
 *
 *  @param object The @c GTLRLogging_Link to include in the query.
 *  @param parent Required. The full resource name of the bucket to create a
 *    link for.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_Link *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  Method: logging.projects.locations.buckets.links.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsLinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the link to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Deletes a link. This will also delete the corresponding BigQuery linked
 *  dataset.
 *
 *  @param name Required. The full resource name of the link to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a link.
 *
 *  Method: logging.projects.locations.buckets.links.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsLinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the link:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Link.
 *
 *  Gets a link.
 *
 *  @param name Required. The resource name of the link:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/links/[LINK_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists links.
 *
 *  Method: logging.projects.locations.buckets.links.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsLinksList : GTLRLoggingQuery

/** Optional. The maximum number of results to return from this request. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose links are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLinksResponse.
 *
 *  Lists links.
 *
 *  @param parent Required. The parent resource whose links are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists log buckets.
 *
 *  Method: logging.projects.locations.buckets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose buckets are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion of
 *  the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all buckets.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListBucketsResponse.
 *
 *  Lists log buckets.
 *
 *  @param parent Required. The parent resource whose buckets are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" Note: The locations portion
 *    of the resource must be specified, but supplying the character - in place
 *    of LOCATION_ID will return all buckets.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.projects.locations.buckets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogBucket.
 *
 *  Updates a log bucket.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  Method: logging.projects.locations.buckets.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsUndelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to undelete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Undeletes a log bucket. A bucket that has been deleted can be undeleted
 *  within the grace period of 7 days.
 *
 *  @param object The @c GTLRLogging_UndeleteBucketRequest to include in the
 *    query.
 *  @param name Required. The full resource name of the bucket to undelete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsUndelete
 */
+ (instancetype)queryWithObject:(GTLRLogging_UndeleteBucketRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  Method: logging.projects.locations.buckets.updateAsync
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsUpdateAsync : GTLRLoggingQuery

/**
 *  Required. The full resource name of the bucket to update.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask that specifies the fields in bucket that need an
 *  update. A bucket field will be overwritten if, and only if, it is in the
 *  update mask. name and output only fields cannot be updated.For a detailed
 *  FieldMask definition, see:
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=retention_days
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Updates a log bucket asynchronously.If the bucket has a lifecycle_state of
 *  DELETE_REQUESTED, then FAILED_PRECONDITION will be returned.After a bucket
 *  has been created, the bucket's location cannot be changed.
 *
 *  @param object The @c GTLRLogging_LogBucket to include in the query.
 *  @param name Required. The full resource name of the bucket to update.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]" For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsUpdateAsync
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogBucket *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  Method: logging.projects.locations.buckets.views.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsCreate : GTLRLoggingQuery

/**
 *  Required. The bucket in which to create the view
 *  `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *  example:"projects/my-project/locations/global/buckets/my-bucket"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. A client-assigned identifier such as "my-view". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods.
 */
@property(nonatomic, copy, nullable) NSString *viewId;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Creates a view over log entries in a log bucket. A bucket may contain a
 *  maximum of 30 views.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param parent Required. The bucket in which to create the view
 *    `"projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"` For
 *    example:"projects/my-project/locations/global/buckets/my-bucket"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  Method: logging.projects.locations.buckets.views.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a view on a log bucket. If an UNAVAILABLE error is returned, this
 *  indicates that system is not in a state where it can delete the view. If
 *  this occurs, please try again in a few minutes.
 *
 *  @param name Required. The full resource name of the view to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a view on a log bucket.
 *
 *  Method: logging.projects.locations.buckets.views.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the policy:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Gets a view on a log bucket.
 *
 *  @param name Required. The resource name of the policy:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: logging.projects.locations.buckets.views.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsGetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param object The @c GTLRLogging_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists views on a log bucket.
 *
 *  Method: logging.projects.locations.buckets.views.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The bucket whose views are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListViewsResponse.
 *
 *  Lists views on a log bucket.
 *
 *  @param parent Required. The bucket whose views are to be listed:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.projects.locations.buckets.views.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  Method: logging.projects.locations.buckets.views.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsPatch : GTLRLoggingQuery

/**
 *  Required. The full resource name of the view to update
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *  For
 *  example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in view that need an update.
 *  A field will be overwritten if, and only if, it is in the update mask. name
 *  and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogView.
 *
 *  Updates a view on a log bucket. This method replaces the value of the filter
 *  field from the existing view with the corresponding value from the new view.
 *  If an UNAVAILABLE error is returned, this indicates that system is not in a
 *  state where it can update the view. If this occurs, please try again in a
 *  few minutes.
 *
 *  @param object The @c GTLRLogging_LogView to include in the query.
 *  @param name Required. The full resource name of the view to update
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"
 *    For
 *    example:"projects/my-project/locations/global/buckets/my-bucket/views/my-view"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogView *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  Method: logging.projects.locations.buckets.views.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsSetIamPolicy : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See Resource
 *  names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
 *  PERMISSION_DENIED errors.
 *
 *  @param object The @c GTLRLogging_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRLogging_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: logging.projects.locations.buckets.views.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsBucketsViewsTestIamPermissions : GTLRLoggingQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  Resource names (https://cloud.google.com/apis/design/resource_names) for the
 *  appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRLogging_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  NOT_FOUND error.Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRLogging_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See Resource names
 *    (https://cloud.google.com/apis/design/resource_names) for the appropriate
 *    value for this field.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsBucketsViewsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRLogging_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: logging.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsGet : GTLRLoggingQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: logging.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsList : GTLRLoggingQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like "displayName=tokyo", and is documented in more
 *  detail in AIP-160 (https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the next_page_token field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a log scope.
 *
 *  Method: logging.projects.locations.logScopes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsLogScopesCreate : GTLRLoggingQuery

/**
 *  Required. A client-assigned identifier such as "log-scope". Identifiers are
 *  limited to 100 characters and can include only letters, digits, underscores,
 *  hyphens, and periods. First character has to be alphanumeric.
 */
@property(nonatomic, copy, nullable) NSString *logScopeId;

/**
 *  Required. The parent project in which to create the log scope
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *  example:"projects/my-project/locations/global"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Creates a log scope.
 *
 *  @param object The @c GTLRLogging_LogScope to include in the query.
 *  @param parent Required. The parent project in which to create the log scope
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]" For
 *    example:"projects/my-project/locations/global"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsLogScopesCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogScope *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a log scope.
 *
 *  Method: logging.projects.locations.logScopes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsLogScopesDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log scope to delete:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]" For
 *  example:"projects/my-project/locations/global/logScopes/my-log-scope"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a log scope.
 *
 *  @param name Required. The resource name of the log scope to delete:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]"
 *    For example:"projects/my-project/locations/global/logScopes/my-log-scope"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsLogScopesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a log scope.
 *
 *  Method: logging.projects.locations.logScopes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsLogScopesGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the log scope:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]" For
 *  example:"projects/my-project/locations/global/logScopes/my-log-scope"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Gets a log scope.
 *
 *  @param name Required. The resource name of the log scope:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/logScopes/[LOG_SCOPE_ID]"
 *    For example:"projects/my-project/locations/global/logScopes/my-log-scope"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsLogScopesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists log scopes.
 *
 *  Method: logging.projects.locations.logScopes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsLogScopesList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose log scopes are to be listed:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLogScopesResponse.
 *
 *  Lists log scopes.
 *
 *  @param parent Required. The parent resource whose log scopes are to be
 *    listed: "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsLogScopesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a log scope.
 *
 *  Method: logging.projects.locations.logScopes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsLogScopesPatch : GTLRLoggingQuery

/**
 *  Output only. The resource name of the log scope.For
 *  example:projects/my-project/locations/global/logScopes/my-log-scope
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask that specifies the fields in log_scope that need an
 *  update. A field will be overwritten if, and only if, it is in the update
 *  mask. name and output only fields cannot be updated.For a detailed FieldMask
 *  definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=description
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogScope.
 *
 *  Updates a log scope.
 *
 *  @param object The @c GTLRLogging_LogScope to include in the query.
 *  @param name Output only. The resource name of the log scope.For
 *    example:projects/my-project/locations/global/logScopes/my-log-scope
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsLogScopesPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogScope *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  Method: logging.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsOperationsCancel : GTLRLoggingQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  Code.CANCELLED.
 *
 *  @param object The @c GTLRLogging_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRLogging_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: logging.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsOperationsGet : GTLRLoggingQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  Method: logging.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsOperationsList : GTLRLoggingQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRLogging_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns UNIMPLEMENTED.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  Method: logging.projects.locations.recentQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsRecentQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") of the recent
 *  queries to list. The only valid value for this field is one of the two
 *  allowable type function calls, which are the following: type("Logging")
 *  type("OpsAnalytics")
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *  example:projects/my-project/locations/us-central1Note: The location portion
 *  of the resource must be specified, but supplying the character - in place of
 *  LOCATION_ID will return all recent queries.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListRecentQueriesResponse.
 *
 *  Lists the RecentQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For
 *    example:projects/my-project/locations/us-central1Note: The location
 *    portion of the resource must be specified, but supplying the character -
 *    in place of LOCATION_ID will return all recent queries.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsRecentQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new SavedQuery for the user making the request.
 *
 *  Method: logging.projects.locations.savedQueries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsSavedQueriesCreate : GTLRLoggingQuery

/**
 *  Required. The parent resource in which to create the saved query:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/global"
 *  "organizations/123456789/locations/us-central1"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The ID to use for the saved query, which will become the final
 *  component of the saved query's resource name.If the saved_query_id is not
 *  provided, the system will generate an alphanumeric ID.The saved_query_id is
 *  limited to 100 characters and can include only the following characters:
 *  upper and lower-case alphanumeric characters, underscores, hyphens,
 *  periods.First character has to be alphanumeric.
 */
@property(nonatomic, copy, nullable) NSString *savedQueryId;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Creates a new SavedQuery for the user making the request.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param parent Required. The parent resource in which to create the saved
 *    query: "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/global"
 *    "organizations/123456789/locations/us-central1"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsSavedQueriesCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  Method: logging.projects.locations.savedQueries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsSavedQueriesDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the saved query to delete.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes an existing SavedQuery that was created by the user making the
 *  request.
 *
 *  @param name Required. The full resource name of the saved query to delete.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsSavedQueriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns all data associated with the requested query.
 *
 *  Method: logging.projects.locations.savedQueries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsSavedQueriesGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the saved query.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  example: "projects/my-project/locations/global/savedQueries/my-saved-query"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Returns all data associated with the requested query.
 *
 *  @param name Required. The resource name of the saved query.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *    example:
 *    "projects/my-project/locations/global/savedQueries/my-saved-query"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsSavedQueriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  Method: logging.projects.locations.savedQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLocationsSavedQueriesList : GTLRLoggingQuery

/**
 *  Optional. Specifies the type ("Logging" or "OpsAnalytics") and the
 *  visibility (PRIVATE or SHARED) of the saved queries to list. If provided,
 *  the filter must contain either the type function or a visibility token, or
 *  both. If both are chosen, they can be placed in any order, but they must be
 *  joined by the AND operator or the empty character.The two supported type
 *  function calls are: type("Logging") type("OpsAnalytics")The two supported
 *  visibility tokens are: visibility = PRIVATE visibility = SHAREDFor
 *  example:type("Logging") AND visibility = PRIVATE visibility=SHARED
 *  type("OpsAnalytics") type("OpsAnalytics)" visibility = PRIVATE visibility =
 *  SHARED
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this
 *  request.Non-positive values are ignored. The presence of nextPageToken in
 *  the response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource to which the listed queries belong.
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *  "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *  "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *  "projects/my-project/locations/us-central1" Note: The locations portion of
 *  the resource must be specified. To get a list of all saved queries, a
 *  wildcard character - can be used for LOCATION_ID, for example:
 *  "projects/my-project/locations/-"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSavedQueriesResponse.
 *
 *  Lists the SavedQueries that were created by the user making the request.
 *
 *  @param parent Required. The resource to which the listed queries belong.
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
 *    "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
 *    "folders/[FOLDER_ID]/locations/[LOCATION_ID]" For example:
 *    "projects/my-project/locations/us-central1" Note: The locations portion of
 *    the resource must be specified. To get a list of all saved queries, a
 *    wildcard character - can be used for LOCATION_ID, for example:
 *    "projects/my-project/locations/-"
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsSavedQueriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing SavedQuery.
 *
 *  Method: logging.projects.locations.savedQueries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLocationsSavedQueriesPatch : GTLRLoggingQuery

/**
 *  Output only. Resource name of the saved query.In the format:
 *  "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]" For
 *  a list of supported locations, see Supported Regions
 *  (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *  the saved query is created, the location cannot be changed.If the user
 *  doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. A non-empty list of fields to change in the existing saved query.
 *  Fields are relative to the saved_query and new values for the fields are
 *  taken from the corresponding fields in the SavedQuery included in this
 *  request. Fields not mentioned in update_mask are not changed and are ignored
 *  in the request.To update all mutable fields, specify an update_mask of *.For
 *  example, to change the description and query filter text of a saved query,
 *  specify an update_mask of "description, query.filter".
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_SavedQuery.
 *
 *  Updates an existing SavedQuery.
 *
 *  @param object The @c GTLRLogging_SavedQuery to include in the query.
 *  @param name Output only. Resource name of the saved query.In the format:
 *    "projects/[PROJECT_ID]/locations/[LOCATION_ID]/savedQueries/[QUERY_ID]"
 *    For a list of supported locations, see Supported Regions
 *    (https://cloud.google.com/logging/docs/region-support#bucket-regions)After
 *    the saved query is created, the location cannot be changed.If the user
 *    doesn't provide a QUERY_ID, the system will generate an alphanumeric ID.
 *
 *  @return GTLRLoggingQuery_ProjectsLocationsSavedQueriesPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_SavedQuery *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  Method: logging.projects.logs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsLogsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the log to delete:
 *  projects/[PROJECT_ID]/logs/[LOG_ID]
 *  organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *  folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For example,
 *  "projects/my-project-id/logs/syslog",
 *  "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *  information about log names, see LogEntry.
 */
@property(nonatomic, copy, nullable) NSString *logName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes all the log entries in a log for the _Default Log Bucket. The log
 *  reappears if it receives new entries. Log entries written shortly before the
 *  delete operation might not be deleted. Entries received after the delete
 *  operation with a timestamp before the operation will be deleted.
 *
 *  @param logName Required. The resource name of the log to delete:
 *    projects/[PROJECT_ID]/logs/[LOG_ID]
 *    organizations/[ORGANIZATION_ID]/logs/[LOG_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]
 *    folders/[FOLDER_ID]/logs/[LOG_ID][LOG_ID] must be URL-encoded. For
 *    example, "projects/my-project-id/logs/syslog",
 *    "organizations/123/logs/cloudaudit.googleapis.com%2Factivity".For more
 *    information about log names, see LogEntry.
 *
 *  @return GTLRLoggingQuery_ProjectsLogsDelete
 */
+ (instancetype)queryWithLogName:(NSString *)logName;

@end

/**
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  Method: logging.projects.logs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsLogsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name to list logs for: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. List of resource names to list logs for:
 *  projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]
 *  folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]To
 *  support legacy queries, it could also be: projects/[PROJECT_ID]
 *  organizations/[ORGANIZATION_ID] billingAccounts/[BILLING_ACCOUNT_ID]
 *  folders/[FOLDER_ID]The resource name in the parent field is added to this
 *  list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceNames;

/**
 *  Fetches a @c GTLRLogging_ListLogsResponse.
 *
 *  Lists the logs in projects, organizations, folders, or billing accounts.
 *  Only logs that have entries are listed.
 *
 *  @param parent Required. The resource name to list logs for:
 *    projects/[PROJECT_ID] organizations/[ORGANIZATION_ID]
 *    billingAccounts/[BILLING_ACCOUNT_ID] folders/[FOLDER_ID]
 *
 *  @return GTLRLoggingQuery_ProjectsLogsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a logs-based metric.
 *
 *  Method: logging.projects.metrics.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingWrite
 */
@interface GTLRLoggingQuery_ProjectsMetricsCreate : GTLRLoggingQuery

/**
 *  Required. The resource name of the project in which to create the metric:
 *  "projects/[PROJECT_ID]" The new metric must be provided in the request.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_LogMetric.
 *
 *  Creates a logs-based metric.
 *
 *  @param object The @c GTLRLogging_LogMetric to include in the query.
 *  @param parent Required. The resource name of the project in which to create
 *    the metric: "projects/[PROJECT_ID]" The new metric must be provided in the
 *    request.
 *
 *  @return GTLRLoggingQuery_ProjectsMetricsCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogMetric *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a logs-based metric.
 *
 *  Method: logging.projects.metrics.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingWrite
 */
@interface GTLRLoggingQuery_ProjectsMetricsDelete : GTLRLoggingQuery

/**
 *  Required. The resource name of the metric to delete:
 *  "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
 */
@property(nonatomic, copy, nullable) NSString *metricName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a logs-based metric.
 *
 *  @param metricName Required. The resource name of the metric to delete:
 *    "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsMetricsDelete
 */
+ (instancetype)queryWithMetricName:(NSString *)metricName;

@end

/**
 *  Gets a logs-based metric.
 *
 *  Method: logging.projects.metrics.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsMetricsGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the desired metric:
 *  "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
 */
@property(nonatomic, copy, nullable) NSString *metricName;

/**
 *  Fetches a @c GTLRLogging_LogMetric.
 *
 *  Gets a logs-based metric.
 *
 *  @param metricName Required. The resource name of the desired metric:
 *    "projects/[PROJECT_ID]/metrics/[METRIC_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsMetricsGet
 */
+ (instancetype)queryWithMetricName:(NSString *)metricName;

@end

/**
 *  Lists logs-based metrics.
 *
 *  Method: logging.projects.metrics.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsMetricsList : GTLRLoggingQuery

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the project containing the metrics:
 *  "projects/[PROJECT_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListLogMetricsResponse.
 *
 *  Lists logs-based metrics.
 *
 *  @param parent Required. The name of the project containing the metrics:
 *    "projects/[PROJECT_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsMetricsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates or updates a logs-based metric.
 *
 *  Method: logging.projects.metrics.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingWrite
 */
@interface GTLRLoggingQuery_ProjectsMetricsUpdate : GTLRLoggingQuery

/**
 *  Required. The resource name of the metric to update:
 *  "projects/[PROJECT_ID]/metrics/[METRIC_ID]" The updated metric must be
 *  provided in the request and it's name field must be the same as [METRIC_ID]
 *  If the metric does not exist in [PROJECT_ID], then a new metric is created.
 */
@property(nonatomic, copy, nullable) NSString *metricName;

/**
 *  Fetches a @c GTLRLogging_LogMetric.
 *
 *  Creates or updates a logs-based metric.
 *
 *  @param object The @c GTLRLogging_LogMetric to include in the query.
 *  @param metricName Required. The resource name of the metric to update:
 *    "projects/[PROJECT_ID]/metrics/[METRIC_ID]" The updated metric must be
 *    provided in the request and it's name field must be the same as
 *    [METRIC_ID] If the metric does not exist in [PROJECT_ID], then a new
 *    metric is created.
 *
 *  @return GTLRLoggingQuery_ProjectsMetricsUpdate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogMetric *)object
                     metricName:(NSString *)metricName;

@end

/**
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  Method: logging.projects.sinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsSinksCreate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The resource in which to create the sink: "projects/[PROJECT_ID]"
 *  "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]"
 *  "folders/[FOLDER_ID]" For examples:"projects/my-project"
 *  "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Determines the kind of IAM identity returned as writer_identity in
 *  the new sink. If this value is omitted or set to false, and if the sink's
 *  parent is a project, then the value returned as writer_identity is the same
 *  group or service account used by Cloud Logging before the addition of writer
 *  identities to this API. The sink's destination must be in the same project
 *  as the sink itself.If this field is set to true, or if the sink is owned by
 *  a non-project resource such as an organization, then the value of
 *  writer_identity will be a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  used by the sinks with the same parent. For more information, see
 *  writer_identity in LogSink.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param parent Required. The resource in which to create the sink:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_ProjectsSinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  Method: logging.projects.sinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsSinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the sink to delete, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  @param sinkName Required. The full resource name of the sink to delete,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_ProjectsSinksDelete
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Gets a sink.
 *
 *  Method: logging.projects.sinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsSinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the sink:
 *  "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Gets a sink.
 *
 *  @param sinkName Required. The resource name of the sink:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_ProjectsSinksGet
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Lists sinks.
 *
 *  Method: logging.projects.sinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_ProjectsSinksList : GTLRLoggingQuery

/**
 *  Optional. A filter expression to constrain the sinks returned. Today, this
 *  only supports the following strings: '' 'in_scope("ALL")',
 *  'in_scope("ANCESTOR")', 'in_scope("DEFAULT")'.Description of scopes below.
 *  ALL: Includes all of the sinks which can be returned in any other scope.
 *  ANCESTOR: Includes intercepting sinks owned by ancestor resources. DEFAULT:
 *  Includes sinks owned by parent.When the empty string is provided, then the
 *  filter 'in_scope("DEFAULT")' is applied.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose sinks are to be listed:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSinksResponse.
 *
 *  Lists sinks.
 *
 *  @param parent Required. The parent resource whose sinks are to be listed:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_ProjectsSinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.projects.sinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsSinksPatch : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_ProjectsSinksPatch
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.projects.sinks.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_ProjectsSinksUpdate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_ProjectsSinksUpdate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  Method: logging.sinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_SinksCreate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The resource in which to create the sink: "projects/[PROJECT_ID]"
 *  "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]"
 *  "folders/[FOLDER_ID]" For examples:"projects/my-project"
 *  "organizations/123456789"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Determines the kind of IAM identity returned as writer_identity in
 *  the new sink. If this value is omitted or set to false, and if the sink's
 *  parent is a project, then the value returned as writer_identity is the same
 *  group or service account used by Cloud Logging before the addition of writer
 *  identities to this API. The sink's destination must be in the same project
 *  as the sink itself.If this field is set to true, or if the sink is owned by
 *  a non-project resource such as an organization, then the value of
 *  writer_identity will be a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  used by the sinks with the same parent. For more information, see
 *  writer_identity in LogSink.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Creates a sink that exports specified log entries to a destination. The
 *  export begins upon ingress, unless the sink's writer_identity is not
 *  permitted to write to the destination. A sink can export log entries only
 *  from the resource owning the sink.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param parent Required. The resource in which to create the sink:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For
 *    examples:"projects/my-project" "organizations/123456789"
 *
 *  @return GTLRLoggingQuery_SinksCreate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  Method: logging.sinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_SinksDelete : GTLRLoggingQuery

/**
 *  Required. The full resource name of the sink to delete, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_Empty.
 *
 *  Deletes a sink. If the sink has a unique writer_identity, then that service
 *  account is also deleted.
 *
 *  @param sinkName Required. The full resource name of the sink to delete,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_SinksDelete
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Gets a sink.
 *
 *  Method: logging.sinks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_SinksGet : GTLRLoggingQuery

/**
 *  Required. The resource name of the sink:
 *  "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Gets a sink.
 *
 *  @param sinkName Required. The resource name of the sink:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_SinksGet
 */
+ (instancetype)queryWithSinkName:(NSString *)sinkName;

@end

/**
 *  Lists sinks.
 *
 *  Method: logging.sinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_SinksList : GTLRLoggingQuery

/**
 *  Optional. A filter expression to constrain the sinks returned. Today, this
 *  only supports the following strings: '' 'in_scope("ALL")',
 *  'in_scope("ANCESTOR")', 'in_scope("DEFAULT")'.Description of scopes below.
 *  ALL: Includes all of the sinks which can be returned in any other scope.
 *  ANCESTOR: Includes intercepting sinks owned by ancestor resources. DEFAULT:
 *  Includes sinks owned by parent.When the empty string is provided, then the
 *  filter 'in_scope("DEFAULT")' is applied.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The maximum number of results to return from this request.
 *  Non-positive values are ignored. The presence of nextPageToken in the
 *  response indicates that more results might be available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If present, then retrieve the next batch of results from the
 *  preceding call to this method. pageToken must be the value of nextPageToken
 *  from the previous response. The values of other method parameters should be
 *  identical to those in the previous call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource whose sinks are to be listed:
 *  "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRLogging_ListSinksResponse.
 *
 *  Lists sinks.
 *
 *  @param parent Required. The parent resource whose sinks are to be listed:
 *    "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]"
 *
 *  @return GTLRLoggingQuery_SinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  Method: logging.sinks.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_SinksUpdate : GTLRLoggingQuery

/**
 *  Optional. The service account provided by the caller that will be used to
 *  write the log entries. The format must be serviceAccount:some\@email. This
 *  field can only be specified when you are routing logs to a log bucket that
 *  is in a different project than the sink. When not specified, a Logging
 *  service account will automatically be generated.
 */
@property(nonatomic, copy, nullable) NSString *customWriterIdentity;

/**
 *  Required. The full resource name of the sink to update, including the parent
 *  resource and the sink identifier: "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *  "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *  "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *  example:"projects/my-project/sinks/my-sink"
 */
@property(nonatomic, copy, nullable) NSString *sinkName;

/**
 *  Optional. See sinks.create for a description of this field. When updating a
 *  sink, the effect of this field on the value of writer_identity in the
 *  updated sink depends on both the old and new values of this field: If the
 *  old and new values of this field are both false or both true, then there is
 *  no change to the sink's writer_identity. If the old value is false and the
 *  new value is true, then writer_identity is changed to a service agent
 *  (https://cloud.google.com/iam/docs/service-account-types#service-agents)
 *  owned by Cloud Logging. It is an error if the old value is true and the new
 *  value is set to false or defaulted to false.
 */
@property(nonatomic, assign) BOOL uniqueWriterIdentity;

/**
 *  Optional. Field mask that specifies the fields in sink that need an update.
 *  A sink field will be overwritten if, and only if, it is in the update mask.
 *  name and output only fields cannot be updated.An empty updateMask is
 *  temporarily treated as using the following mask for backwards compatibility
 *  purposes:destination,filter,includeChildrenAt some point in the future,
 *  behavior will be removed and specifying an empty updateMask will be an
 *  error.For a detailed FieldMask definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMaskFor
 *  example: updateMask=filter
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_LogSink.
 *
 *  Updates a sink. This method replaces the values of the destination and
 *  filter fields of the existing sink with the corresponding values from the
 *  new sink.The updated sink might also have a new writer_identity; see the
 *  unique_writer_identity field.
 *
 *  @param object The @c GTLRLogging_LogSink to include in the query.
 *  @param sinkName Required. The full resource name of the sink to update,
 *    including the parent resource and the sink identifier:
 *    "projects/[PROJECT_ID]/sinks/[SINK_ID]"
 *    "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
 *    "folders/[FOLDER_ID]/sinks/[SINK_ID]" For
 *    example:"projects/my-project/sinks/my-sink"
 *
 *  @return GTLRLoggingQuery_SinksUpdate
 */
+ (instancetype)queryWithObject:(GTLRLogging_LogSink *)object
                       sinkName:(NSString *)sinkName;

@end

/**
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  Method: logging.getCmekSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_V2GetCmekSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve CMEK settings.
 *  "projects/[PROJECT_ID]/cmekSettings"
 *  "organizations/[ORGANIZATION_ID]/cmekSettings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *  "folders/[FOLDER_ID]/cmekSettings" For
 *  example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router can
 *  be configured for Google Cloud projects, folders, organizations, and billing
 *  accounts. Once configured for an organization, it applies to all projects
 *  and folders in the Google Cloud organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_CmekSettings.
 *
 *  Gets the Logging CMEK settings for the given resource.Note: CMEK for the Log
 *  Router can be configured for Google Cloud projects, folders, organizations,
 *  and billing accounts. Once configured for an organization, it applies to all
 *  projects and folders in the Google Cloud organization.See Enabling CMEK for
 *  Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  @param name Required. The resource for which to retrieve CMEK settings.
 *    "projects/[PROJECT_ID]/cmekSettings"
 *    "organizations/[ORGANIZATION_ID]/cmekSettings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *    "folders/[FOLDER_ID]/cmekSettings" For
 *    example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router
 *    can be configured for Google Cloud projects, folders, organizations, and
 *    billing accounts. Once configured for an organization, it applies to all
 *    projects and folders in the Google Cloud organization.
 *
 *  @return GTLRLoggingQuery_V2GetCmekSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  Method: logging.getSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 *    @c kGTLRAuthScopeLoggingCloudPlatformReadOnly
 *    @c kGTLRAuthScopeLoggingRead
 */
@interface GTLRLoggingQuery_V2GetSettings : GTLRLoggingQuery

/**
 *  Required. The resource for which to retrieve settings.
 *  "projects/[PROJECT_ID]/settings" "organizations/[ORGANIZATION_ID]/settings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *  "folders/[FOLDER_ID]/settings" For
 *  example:"organizations/12345/settings"Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Gets the settings for the given resource.Note: Settings can be retrieved for
 *  Google Cloud projects, folders, organizations, and billing accounts.See View
 *  default resource settings for Logging
 *  (https://cloud.google.com/logging/docs/default-settings#view-org-settings)
 *  for more information.
 *
 *  @param name Required. The resource for which to retrieve settings.
 *    "projects/[PROJECT_ID]/settings"
 *    "organizations/[ORGANIZATION_ID]/settings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/settings"
 *    "folders/[FOLDER_ID]/settings" For
 *    example:"organizations/12345/settings"Note: Settings can be retrieved for
 *    Google Cloud projects, folders, organizations, and billing accounts.
 *
 *  @return GTLRLoggingQuery_V2GetSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the Log Router CMEK settings for the given resource.Note: CMEK for
 *  the Log Router can currently only be configured for Google Cloud
 *  organizations. Once configured, it applies to all projects and folders in
 *  the Google Cloud organization.UpdateCmekSettings fails when any of the
 *  following are true: The value of kms_key_name is invalid. The associated
 *  service account doesn't have the required
 *  roles/cloudkms.cryptoKeyEncrypterDecrypter role assigned for the key. Access
 *  to the key is disabled.See Enabling CMEK for Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  Method: logging.updateCmekSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_V2UpdateCmekSettings : GTLRLoggingQuery

/**
 *  Required. The resource name for the CMEK settings to update.
 *  "projects/[PROJECT_ID]/cmekSettings"
 *  "organizations/[ORGANIZATION_ID]/cmekSettings"
 *  "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *  "folders/[FOLDER_ID]/cmekSettings" For
 *  example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router can
 *  currently only be configured for Google Cloud organizations. Once
 *  configured, it applies to all projects and folders in the Google Cloud
 *  organization.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask identifying which fields from cmek_settings should be
 *  updated. A field will be overwritten if and only if it is in the update
 *  mask. Output only fields cannot be updated.See FieldMask for more
 *  information.For example: "updateMask=kmsKeyName"
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_CmekSettings.
 *
 *  Updates the Log Router CMEK settings for the given resource.Note: CMEK for
 *  the Log Router can currently only be configured for Google Cloud
 *  organizations. Once configured, it applies to all projects and folders in
 *  the Google Cloud organization.UpdateCmekSettings fails when any of the
 *  following are true: The value of kms_key_name is invalid. The associated
 *  service account doesn't have the required
 *  roles/cloudkms.cryptoKeyEncrypterDecrypter role assigned for the key. Access
 *  to the key is disabled.See Enabling CMEK for Log Router
 *  (https://cloud.google.com/logging/docs/routing/managed-encryption) for more
 *  information.
 *
 *  @param object The @c GTLRLogging_CmekSettings to include in the query.
 *  @param name Required. The resource name for the CMEK settings to update.
 *    "projects/[PROJECT_ID]/cmekSettings"
 *    "organizations/[ORGANIZATION_ID]/cmekSettings"
 *    "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
 *    "folders/[FOLDER_ID]/cmekSettings" For
 *    example:"organizations/12345/cmekSettings"Note: CMEK for the Log Router
 *    can currently only be configured for Google Cloud organizations. Once
 *    configured, it applies to all projects and folders in the Google Cloud
 *    organization.
 *
 *  @return GTLRLoggingQuery_V2UpdateCmekSettings
 */
+ (instancetype)queryWithObject:(GTLRLogging_CmekSettings *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the settings for the given resource. This method applies to all
 *  feature configurations for organization and folders.UpdateSettings fails
 *  when any of the following are true: The value of storage_location either
 *  isn't supported by Logging or violates the location OrgPolicy. The
 *  default_sink_config field is set, but it has an unspecified filter write
 *  mode. The value of kms_key_name is invalid. The associated service account
 *  doesn't have the required roles/cloudkms.cryptoKeyEncrypterDecrypter role
 *  assigned for the key. Access to the key is disabled.See Configure default
 *  settings for organizations and folders
 *  (https://cloud.google.com/logging/docs/default-settings) for more
 *  information.
 *
 *  Method: logging.updateSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeLoggingAdmin
 *    @c kGTLRAuthScopeLoggingCloudPlatform
 */
@interface GTLRLoggingQuery_V2UpdateSettings : GTLRLoggingQuery

/**
 *  Required. The resource name for the settings to update.
 *  "organizations/[ORGANIZATION_ID]/settings" "folders/[FOLDER_ID]/settings"
 *  For example:"organizations/12345/settings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask identifying which fields from settings should be
 *  updated. A field will be overwritten if and only if it is in the update
 *  mask. Output only fields cannot be updated.See FieldMask for more
 *  information.For example: "updateMask=kmsKeyName"
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRLogging_Settings.
 *
 *  Updates the settings for the given resource. This method applies to all
 *  feature configurations for organization and folders.UpdateSettings fails
 *  when any of the following are true: The value of storage_location either
 *  isn't supported by Logging or violates the location OrgPolicy. The
 *  default_sink_config field is set, but it has an unspecified filter write
 *  mode. The value of kms_key_name is invalid. The associated service account
 *  doesn't have the required roles/cloudkms.cryptoKeyEncrypterDecrypter role
 *  assigned for the key. Access to the key is disabled.See Configure default
 *  settings for organizations and folders
 *  (https://cloud.google.com/logging/docs/default-settings) for more
 *  information.
 *
 *  @param object The @c GTLRLogging_Settings to include in the query.
 *  @param name Required. The resource name for the settings to update.
 *    "organizations/[ORGANIZATION_ID]/settings" "folders/[FOLDER_ID]/settings"
 *    For example:"organizations/12345/settings"
 *
 *  @return GTLRLoggingQuery_V2UpdateSettings
 */
+ (instancetype)queryWithObject:(GTLRLogging_Settings *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
