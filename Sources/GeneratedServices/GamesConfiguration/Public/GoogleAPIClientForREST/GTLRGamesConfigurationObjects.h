// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Play Game Services Publishing API (gamesConfiguration/v1configuration)
// Description:
//   The Google Play Game Services Publishing API allows developers to configure
//   their games in Game Services.
// Documentation:
//   https://developers.google.com/games/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRGamesConfiguration_AchievementConfiguration;
@class GTLRGamesConfiguration_AchievementConfigurationDetail;
@class GTLRGamesConfiguration_GamesNumberAffixConfiguration;
@class GTLRGamesConfiguration_GamesNumberFormatConfiguration;
@class GTLRGamesConfiguration_LeaderboardConfiguration;
@class GTLRGamesConfiguration_LeaderboardConfigurationDetail;
@class GTLRGamesConfiguration_LocalizedString;
@class GTLRGamesConfiguration_LocalizedStringBundle;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRGamesConfiguration_AchievementConfiguration.achievementType

/**
 *  Default value. This value is unused.
 *
 *  Value: "ACHIEVEMENT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_AchievementConfiguration_AchievementType_AchievementTypeUnspecified;
/**
 *  Achievement is incremental.
 *
 *  Value: "INCREMENTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_AchievementConfiguration_AchievementType_Incremental;
/**
 *  Achievement is either locked or unlocked.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_AchievementConfiguration_AchievementType_Standard;

// ----------------------------------------------------------------------------
// GTLRGamesConfiguration_AchievementConfiguration.initialState

/**
 *  Achievement is hidden.
 *
 *  Value: "HIDDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_AchievementConfiguration_InitialState_Hidden;
/**
 *  Default value. This value is unused.
 *
 *  Value: "INITIAL_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_AchievementConfiguration_InitialState_InitialStateUnspecified;
/**
 *  Achievement is revealed.
 *
 *  Value: "REVEALED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_AchievementConfiguration_InitialState_Revealed;

// ----------------------------------------------------------------------------
// GTLRGamesConfiguration_GamesNumberFormatConfiguration.numberFormatType

/**
 *  Numbers are formatted to currency according to locale.
 *
 *  Value: "CURRENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_Currency;
/**
 *  Default value. This value is unused.
 *
 *  Value: "NUMBER_FORMAT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_NumberFormatTypeUnspecified;
/**
 *  Numbers are formatted to have no digits or fixed number of digits after the
 *  decimal point according to locale. An optional custom unit can be added.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_Numeric;
/**
 *  Numbers are formatted to hours, minutes and seconds.
 *
 *  Value: "TIME_DURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_TimeDuration;

// ----------------------------------------------------------------------------
// GTLRGamesConfiguration_ImageConfiguration.imageType

/**
 *  The icon image for an achievement resource.
 *
 *  Value: "ACHIEVEMENT_ICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_ImageConfiguration_ImageType_AchievementIcon;
/**
 *  Default value. This value is unused.
 *
 *  Value: "IMAGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_ImageConfiguration_ImageType_ImageTypeUnspecified;
/**
 *  The icon image for a leaderboard resource.
 *
 *  Value: "LEADERBOARD_ICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_ImageConfiguration_ImageType_LeaderboardIcon;

// ----------------------------------------------------------------------------
// GTLRGamesConfiguration_LeaderboardConfiguration.scoreOrder

/**
 *  Larger scores posted are ranked higher.
 *
 *  Value: "LARGER_IS_BETTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_LeaderboardConfiguration_ScoreOrder_LargerIsBetter;
/**
 *  Default value. This value is unused.
 *
 *  Value: "SCORE_ORDER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_LeaderboardConfiguration_ScoreOrder_ScoreOrderUnspecified;
/**
 *  Smaller scores posted are ranked higher.
 *
 *  Value: "SMALLER_IS_BETTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRGamesConfiguration_LeaderboardConfiguration_ScoreOrder_SmallerIsBetter;

/**
 *  An achievement configuration resource.
 */
@interface GTLRGamesConfiguration_AchievementConfiguration : GTLRObject

/**
 *  The type of the achievement.
 *
 *  Likely values:
 *    @arg @c kGTLRGamesConfiguration_AchievementConfiguration_AchievementType_AchievementTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "ACHIEVEMENT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRGamesConfiguration_AchievementConfiguration_AchievementType_Incremental
 *        Achievement is incremental. (Value: "INCREMENTAL")
 *    @arg @c kGTLRGamesConfiguration_AchievementConfiguration_AchievementType_Standard
 *        Achievement is either locked or unlocked. (Value: "STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *achievementType;

/** The draft data of the achievement. */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_AchievementConfigurationDetail *draft;

/**
 *  The ID of the achievement.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The initial state of the achievement.
 *
 *  Likely values:
 *    @arg @c kGTLRGamesConfiguration_AchievementConfiguration_InitialState_Hidden
 *        Achievement is hidden. (Value: "HIDDEN")
 *    @arg @c kGTLRGamesConfiguration_AchievementConfiguration_InitialState_InitialStateUnspecified
 *        Default value. This value is unused. (Value:
 *        "INITIAL_STATE_UNSPECIFIED")
 *    @arg @c kGTLRGamesConfiguration_AchievementConfiguration_InitialState_Revealed
 *        Achievement is revealed. (Value: "REVEALED")
 */
@property(nonatomic, copy, nullable) NSString *initialState;

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#achievementConfiguration`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The read-only published data of the achievement. */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_AchievementConfigurationDetail *published;

/**
 *  Steps to unlock. Only applicable to incremental achievements.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stepsToUnlock;

/** The token for this resource. */
@property(nonatomic, copy, nullable) NSString *token;

@end


/**
 *  An achievement configuration detail.
 */
@interface GTLRGamesConfiguration_AchievementConfigurationDetail : GTLRObject

/**
 *  Localized strings for the achievement description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *descriptionProperty;

/** The icon url of this achievement. Writes to this field are ignored. */
@property(nonatomic, copy, nullable) NSString *iconUrl;

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#achievementConfigurationDetail`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Localized strings for the achievement name. */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *name;

/**
 *  Point value for the achievement.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pointValue;

/**
 *  The sort rank of this achievement. Writes to this field are ignored.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sortRank;

@end


/**
 *  A ListConfigurations response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRGamesConfiguration_AchievementConfigurationListResponse : GTLRCollectionObject

/**
 *  The achievement configurations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRGamesConfiguration_AchievementConfiguration *> *items;

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#achievementConfigurationListResponse`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The pagination token for the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A number affix resource.
 */
@interface GTLRGamesConfiguration_GamesNumberAffixConfiguration : GTLRObject

/**
 *  When the language requires special treatment of "small" numbers (as with 2,
 *  3, and 4 in Czech; or numbers ending 2, 3, or 4 but not 12, 13, or 14 in
 *  Polish).
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *few;

/**
 *  When the language requires special treatment of "large" numbers (as with
 *  numbers ending 11-99 in Maltese).
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *many;

/**
 *  When the language requires special treatment of numbers like one (as with
 *  the number 1 in English and most other languages; in Russian, any number
 *  ending in 1 but not ending in 11 is in this class).
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *one;

/**
 *  When the language does not require special treatment of the given quantity
 *  (as with all numbers in Chinese, or 42 in English).
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *other;

/**
 *  When the language requires special treatment of numbers like two (as with 2
 *  in Welsh, or 102 in Slovenian).
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *two;

/**
 *  When the language requires special treatment of the number 0 (as in Arabic).
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *zero;

@end


/**
 *  A number format resource.
 */
@interface GTLRGamesConfiguration_GamesNumberFormatConfiguration : GTLRObject

/** The curreny code string. Only used for CURRENCY format type. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  The formatting for the number.
 *
 *  Likely values:
 *    @arg @c kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_Currency
 *        Numbers are formatted to currency according to locale. (Value:
 *        "CURRENCY")
 *    @arg @c kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_NumberFormatTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "NUMBER_FORMAT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_Numeric
 *        Numbers are formatted to have no digits or fixed number of digits
 *        after the decimal point according to locale. An optional custom unit
 *        can be added. (Value: "NUMERIC")
 *    @arg @c kGTLRGamesConfiguration_GamesNumberFormatConfiguration_NumberFormatType_TimeDuration
 *        Numbers are formatted to hours, minutes and seconds. (Value:
 *        "TIME_DURATION")
 */
@property(nonatomic, copy, nullable) NSString *numberFormatType;

/**
 *  The number of decimal places for number. Only used for NUMERIC format type.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numDecimalPlaces;

/**
 *  An optional suffix for the NUMERIC format type. These strings follow the
 *  same plural rules as all Android string resources.
 */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_GamesNumberAffixConfiguration *suffix;

@end


/**
 *  An image configuration resource.
 */
@interface GTLRGamesConfiguration_ImageConfiguration : GTLRObject

/**
 *  The image type for the image.
 *
 *  Likely values:
 *    @arg @c kGTLRGamesConfiguration_ImageConfiguration_ImageType_AchievementIcon
 *        The icon image for an achievement resource. (Value:
 *        "ACHIEVEMENT_ICON")
 *    @arg @c kGTLRGamesConfiguration_ImageConfiguration_ImageType_ImageTypeUnspecified
 *        Default value. This value is unused. (Value: "IMAGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRGamesConfiguration_ImageConfiguration_ImageType_LeaderboardIcon
 *        The icon image for a leaderboard resource. (Value: "LEADERBOARD_ICON")
 */
@property(nonatomic, copy, nullable) NSString *imageType;

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#imageConfiguration`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The resource ID of resource which the image belongs to. */
@property(nonatomic, copy, nullable) NSString *resourceId;

/** The url for this image. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  An leaderboard configuration resource.
 */
@interface GTLRGamesConfiguration_LeaderboardConfiguration : GTLRObject

/** The draft data of the leaderboard. */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LeaderboardConfigurationDetail *draft;

/**
 *  The ID of the leaderboard.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#leaderboardConfiguration`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The read-only published data of the leaderboard. */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LeaderboardConfigurationDetail *published;

/**
 *  Maximum score that can be posted to this leaderboard.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scoreMax;

/**
 *  Minimum score that can be posted to this leaderboard.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scoreMin;

/**
 *  scoreOrder
 *
 *  Likely values:
 *    @arg @c kGTLRGamesConfiguration_LeaderboardConfiguration_ScoreOrder_LargerIsBetter
 *        Larger scores posted are ranked higher. (Value: "LARGER_IS_BETTER")
 *    @arg @c kGTLRGamesConfiguration_LeaderboardConfiguration_ScoreOrder_ScoreOrderUnspecified
 *        Default value. This value is unused. (Value:
 *        "SCORE_ORDER_UNSPECIFIED")
 *    @arg @c kGTLRGamesConfiguration_LeaderboardConfiguration_ScoreOrder_SmallerIsBetter
 *        Smaller scores posted are ranked higher. (Value: "SMALLER_IS_BETTER")
 */
@property(nonatomic, copy, nullable) NSString *scoreOrder;

/** The token for this resource. */
@property(nonatomic, copy, nullable) NSString *token;

@end


/**
 *  A leaderboard configuration detail.
 */
@interface GTLRGamesConfiguration_LeaderboardConfigurationDetail : GTLRObject

/** The icon url of this leaderboard. Writes to this field are ignored. */
@property(nonatomic, copy, nullable) NSString *iconUrl;

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#leaderboardConfigurationDetail`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Localized strings for the leaderboard name. */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_LocalizedStringBundle *name;

/** The score formatting for the leaderboard. */
@property(nonatomic, strong, nullable) GTLRGamesConfiguration_GamesNumberFormatConfiguration *scoreFormat;

/**
 *  The sort rank of this leaderboard. Writes to this field are ignored.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sortRank;

@end


/**
 *  A ListConfigurations response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRGamesConfiguration_LeaderboardConfigurationListResponse : GTLRCollectionObject

/**
 *  The leaderboard configurations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRGamesConfiguration_LeaderboardConfiguration *> *items;

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#leaderboardConfigurationListResponse`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The pagination token for the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A localized string resource.
 */
@interface GTLRGamesConfiguration_LocalizedString : GTLRObject

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#localizedString`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The locale string. */
@property(nonatomic, copy, nullable) NSString *locale;

/** The string value. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A localized string bundle resource.
 */
@interface GTLRGamesConfiguration_LocalizedStringBundle : GTLRObject

/**
 *  Uniquely identifies the type of this resource. Value is always the fixed
 *  string `gamesConfiguration#localizedStringBundle`.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The locale strings. */
@property(nonatomic, strong, nullable) NSArray<GTLRGamesConfiguration_LocalizedString *> *translations;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
