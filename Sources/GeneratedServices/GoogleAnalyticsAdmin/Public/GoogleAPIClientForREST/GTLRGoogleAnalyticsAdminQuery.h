// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Analytics Admin API (analyticsadmin/v1beta)
// Description:
//   Manage properties in Google Analytics. Warning: Creating multiple Customer
//   Applications, Accounts, or Projects to simulate or act as a single Customer
//   Application, Account, or Project (respectively) or to circumvent
//   Service-specific usage limits or quotas is a direct violation of Google
//   Cloud Platform Terms of Service as well as Google APIs Terms of Service.
//   These actions can result in immediate termination of your GCP project(s)
//   without any warning.
// Documentation:
//   http://code.google.com/apis/analytics/docs/mgmt/home.html

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRGoogleAnalyticsAdminObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Google Analytics Admin query classes.
 */
@interface GTLRGoogleAnalyticsAdminQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Marks target Account as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted accounts. However, they
 *  can be restored using the Trash Can UI. If the accounts are not restored
 *  before the expiration time, the account and all child resources (eg:
 *  Properties, GoogleAdsLinks, Streams, AccessBindings) will be permanently
 *  purged. https://support.google.com/analytics/answer/6154772 Returns an error
 *  if the target is not found.
 *
 *  Method: analyticsadmin.accounts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the Account to soft-delete. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Marks target Account as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted accounts. However, they
 *  can be restored using the Trash Can UI. If the accounts are not restored
 *  before the expiration time, the account and all child resources (eg:
 *  Properties, GoogleAdsLinks, Streams, AccessBindings) will be permanently
 *  purged. https://support.google.com/analytics/answer/6154772 Returns an error
 *  if the target is not found.
 *
 *  @param name Required. The name of the Account to soft-delete. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single Account.
 *
 *  Method: analyticsadmin.accounts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the account to lookup. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaAccount.
 *
 *  Lookup for a single Account.
 *
 *  @param name Required. The name of the account to lookup. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get data sharing settings on an account. Data sharing settings are
 *  singletons.
 *
 *  Method: analyticsadmin.accounts.getDataSharingSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsGetDataSharingSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the settings to lookup. Format:
 *  accounts/{account}/dataSharingSettings Example:
 *  `accounts/1000/dataSharingSettings`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaDataSharingSettings.
 *
 *  Get data sharing settings on an account. Data sharing settings are
 *  singletons.
 *
 *  @param name Required. The name of the settings to lookup. Format:
 *    accounts/{account}/dataSharingSettings Example:
 *    `accounts/1000/dataSharingSettings`
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsGetDataSharingSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns all accounts accessible by the caller. Note that these accounts
 *  might not currently have GA properties. Soft-deleted (ie: "trashed")
 *  accounts are excluded by default. Returns an empty list if no relevant
 *  accounts are found.
 *
 *  Method: analyticsadmin.accounts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccounts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListAccounts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Whether to include soft-deleted (ie: "trashed") Accounts in the results.
 *  Accounts can be inspected to determine whether they are deleted or not.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListAccountsResponse.
 *
 *  Returns all accounts accessible by the caller. Note that these accounts
 *  might not currently have GA properties. Soft-deleted (ie: "trashed")
 *  accounts are excluded by default. Returns an empty list if no relevant
 *  accounts are found.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates an account.
 *
 *  Method: analyticsadmin.accounts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this account. Format: accounts/{account}
 *  Example: "accounts/100"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (for example, "field_to_update"). Omitted fields will not be updated.
 *  To replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaAccount.
 *
 *  Updates an account.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaAccount to include in
 *    the query.
 *  @param name Output only. Resource name of this account. Format:
 *    accounts/{account} Example: "accounts/100"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaAccount *)object
                           name:(NSString *)name;

@end

/**
 *  Requests a ticket for creating an account.
 *
 *  Method: analyticsadmin.accounts.provisionAccountTicket
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsProvisionAccountTicket : GTLRGoogleAnalyticsAdminQuery

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaProvisionAccountTicketResponse.
 *
 *  Requests a ticket for creating an account.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1betaProvisionAccountTicketRequest to include in
 *    the query.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsProvisionAccountTicket
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaProvisionAccountTicketRequest *)object;

@end

/**
 *  Returns a customized report of data access records. The report provides
 *  records of each time a user reads Google Analytics reporting data. Access
 *  records are retained for up to 2 years. Data Access Reports can be requested
 *  for a property. Reports may be requested for any property, but dimensions
 *  that aren't related to quota can only be requested on Google Analytics 360
 *  properties. This method is only available to Administrators. These data
 *  access records include GA UI Reporting, GA UI Explorations, GA Data API, and
 *  other products like Firebase & Admob that can retrieve data from Google
 *  Analytics through a linkage. These records don't include property
 *  configuration changes like adding a stream or changing a property's time
 *  zone. For configuration change history, see
 *  [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
 *  To give your feedback on this API, complete the [Google Analytics Access
 *  Reports
 *  feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
 *  form.
 *
 *  Method: analyticsadmin.accounts.runAccessReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsRunAccessReport : GTLRGoogleAnalyticsAdminQuery

/**
 *  The Data Access Report supports requesting at the property level or account
 *  level. If requested at the account level, Data Access Reports include all
 *  access for all properties under that account. To request at the property
 *  level, entity should be for example 'properties/123' if "123" is your Google
 *  Analytics property ID. To request at the account level, entity should be for
 *  example 'accounts/1234' if "1234" is your Google Analytics Account ID.
 */
@property(nonatomic, copy, nullable) NSString *entity;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaRunAccessReportResponse.
 *
 *  Returns a customized report of data access records. The report provides
 *  records of each time a user reads Google Analytics reporting data. Access
 *  records are retained for up to 2 years. Data Access Reports can be requested
 *  for a property. Reports may be requested for any property, but dimensions
 *  that aren't related to quota can only be requested on Google Analytics 360
 *  properties. This method is only available to Administrators. These data
 *  access records include GA UI Reporting, GA UI Explorations, GA Data API, and
 *  other products like Firebase & Admob that can retrieve data from Google
 *  Analytics through a linkage. These records don't include property
 *  configuration changes like adding a stream or changing a property's time
 *  zone. For configuration change history, see
 *  [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
 *  To give your feedback on this API, complete the [Google Analytics Access
 *  Reports
 *  feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
 *  form.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaRunAccessReportRequest
 *    to include in the query.
 *  @param entity The Data Access Report supports requesting at the property
 *    level or account level. If requested at the account level, Data Access
 *    Reports include all access for all properties under that account. To
 *    request at the property level, entity should be for example
 *    'properties/123' if "123" is your Google Analytics property ID. To request
 *    at the account level, entity should be for example 'accounts/1234' if
 *    "1234" is your Google Analytics Account ID.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsRunAccessReport
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaRunAccessReportRequest *)object
                         entity:(NSString *)entity;

@end

/**
 *  Searches through all changes to an account or its children given the
 *  specified set of filters.
 *
 *  Method: analyticsadmin.accounts.searchChangeHistoryEvents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountsSearchChangeHistoryEvents : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The account resource for which to return change history resources.
 *  Format: accounts/{account} Example: `accounts/100`
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1betaSearchChangeHistoryEventsResponse.
 *
 *  Searches through all changes to an account or its children given the
 *  specified set of filters.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1betaSearchChangeHistoryEventsRequest to include
 *    in the query.
 *  @param account Required. The account resource for which to return change
 *    history resources. Format: accounts/{account} Example: `accounts/100`
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountsSearchChangeHistoryEvents
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaSearchChangeHistoryEventsRequest *)object
                        account:(NSString *)account;

@end

/**
 *  Returns summaries of all accounts accessible by the caller.
 *
 *  Method: analyticsadmin.accountSummaries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_AccountSummariesList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of AccountSummary resources to return. The service may
 *  return fewer than this value, even if there are additional pages. If
 *  unspecified, at most 50 resources will be returned. The maximum value is
 *  200; (higher values will be coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccountSummaries` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListAccountSummaries` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListAccountSummariesResponse.
 *
 *  Returns summaries of all accounts accessible by the caller.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_AccountSummariesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Acknowledges the terms of user data collection for the specified property.
 *  This acknowledgement must be completed (either in the Google Analytics UI or
 *  through this API) before MeasurementProtocolSecret resources may be created.
 *
 *  Method: analyticsadmin.properties.acknowledgeUserDataCollection
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesAcknowledgeUserDataCollection : GTLRGoogleAnalyticsAdminQuery

/** Required. The property for which to acknowledge user data collection. */
@property(nonatomic, copy, nullable) NSString *property;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1betaAcknowledgeUserDataCollectionResponse.
 *
 *  Acknowledges the terms of user data collection for the specified property.
 *  This acknowledgement must be completed (either in the Google Analytics UI or
 *  through this API) before MeasurementProtocolSecret resources may be created.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1betaAcknowledgeUserDataCollectionRequest to
 *    include in the query.
 *  @param property Required. The property for which to acknowledge user data
 *    collection.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesAcknowledgeUserDataCollection
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaAcknowledgeUserDataCollectionRequest *)object
                       property:(NSString *)property;

@end

/**
 *  Deprecated: Use `CreateKeyEvent` instead. Creates a conversion event with
 *  the specified attributes.
 *
 *  Method: analyticsadmin.properties.conversionEvents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
GTLR_DEPRECATED
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the parent property where this conversion
 *  event will be created. Format: properties/123
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaConversionEvent.
 *
 *  Deprecated: Use `CreateKeyEvent` instead. Creates a conversion event with
 *  the specified attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaConversionEvent to
 *    include in the query.
 *  @param parent Required. The resource name of the parent property where this
 *    conversion event will be created. Format: properties/123
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaConversionEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deprecated: Use `DeleteKeyEvent` instead. Deletes a conversion event in a
 *  property.
 *
 *  Method: analyticsadmin.properties.conversionEvents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
GTLR_DEPRECATED
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the conversion event to delete. Format:
 *  properties/{property}/conversionEvents/{conversion_event} Example:
 *  "properties/123/conversionEvents/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deprecated: Use `DeleteKeyEvent` instead. Deletes a conversion event in a
 *  property.
 *
 *  @param name Required. The resource name of the conversion event to delete.
 *    Format: properties/{property}/conversionEvents/{conversion_event} Example:
 *    "properties/123/conversionEvents/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deprecated: Use `GetKeyEvent` instead. Retrieve a single conversion event.
 *
 *  Method: analyticsadmin.properties.conversionEvents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
GTLR_DEPRECATED
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the conversion event to retrieve. Format:
 *  properties/{property}/conversionEvents/{conversion_event} Example:
 *  "properties/123/conversionEvents/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaConversionEvent.
 *
 *  Deprecated: Use `GetKeyEvent` instead. Retrieve a single conversion event.
 *
 *  @param name Required. The resource name of the conversion event to retrieve.
 *    Format: properties/{property}/conversionEvents/{conversion_event} Example:
 *    "properties/123/conversionEvents/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deprecated: Use `ListKeyEvents` instead. Returns a list of conversion events
 *  in the specified parent property. Returns an empty list if no conversion
 *  events are found.
 *
 *  Method: analyticsadmin.properties.conversionEvents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
GTLR_DEPRECATED
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListConversionEvents` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListConversionEvents` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent property. Example:
 *  'properties/123'
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListConversionEventsResponse.
 *
 *  Deprecated: Use `ListKeyEvents` instead. Returns a list of conversion events
 *  in the specified parent property. Returns an empty list if no conversion
 *  events are found.
 *
 *  @param parent Required. The resource name of the parent property. Example:
 *    'properties/123'
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deprecated: Use `UpdateKeyEvent` instead. Updates a conversion event with
 *  the specified attributes.
 *
 *  Method: analyticsadmin.properties.conversionEvents.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
GTLR_DEPRECATED
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this conversion event. Format:
 *  properties/{property}/conversionEvents/{conversion_event}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaConversionEvent.
 *
 *  Deprecated: Use `UpdateKeyEvent` instead. Updates a conversion event with
 *  the specified attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaConversionEvent to
 *    include in the query.
 *  @param name Output only. Resource name of this conversion event. Format:
 *    properties/{property}/conversionEvents/{conversion_event}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesConversionEventsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaConversionEvent *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Google Analytics property with the specified location and
 *  attributes.
 *
 *  Method: analyticsadmin.properties.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaProperty.
 *
 *  Creates a Google Analytics property with the specified location and
 *  attributes.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaProperty to include in
 *    the query.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaProperty *)object;

@end

/**
 *  Archives a CustomDimension on a property.
 *
 *  Method: analyticsadmin.properties.customDimensions.archive
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsArchive : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomDimension to archive. Example format:
 *  properties/1234/customDimensions/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Archives a CustomDimension on a property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1betaArchiveCustomDimensionRequest to include in
 *    the query.
 *  @param name Required. The name of the CustomDimension to archive. Example
 *    format: properties/1234/customDimensions/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsArchive
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaArchiveCustomDimensionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a CustomDimension.
 *
 *  Method: analyticsadmin.properties.customDimensions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaCustomDimension.
 *
 *  Creates a CustomDimension.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaCustomDimension to
 *    include in the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaCustomDimension *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lookup for a single CustomDimension.
 *
 *  Method: analyticsadmin.properties.customDimensions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomDimension to get. Example format:
 *  properties/1234/customDimensions/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaCustomDimension.
 *
 *  Lookup for a single CustomDimension.
 *
 *  @param name Required. The name of the CustomDimension to get. Example
 *    format: properties/1234/customDimensions/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CustomDimensions on a property.
 *
 *  Method: analyticsadmin.properties.customDimensions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListCustomDimensions` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListCustomDimensions` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListCustomDimensionsResponse.
 *
 *  Lists CustomDimensions on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a CustomDimension on a property.
 *
 *  Method: analyticsadmin.properties.customDimensions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name for this CustomDimension resource. Format:
 *  properties/{property}/customDimensions/{customDimension}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaCustomDimension.
 *
 *  Updates a CustomDimension on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaCustomDimension to
 *    include in the query.
 *  @param name Output only. Resource name for this CustomDimension resource.
 *    Format: properties/{property}/customDimensions/{customDimension}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomDimensionsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaCustomDimension *)object
                           name:(NSString *)name;

@end

/**
 *  Archives a CustomMetric on a property.
 *
 *  Method: analyticsadmin.properties.customMetrics.archive
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsArchive : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomMetric to archive. Example format:
 *  properties/1234/customMetrics/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Archives a CustomMetric on a property.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1betaArchiveCustomMetricRequest to include in
 *    the query.
 *  @param name Required. The name of the CustomMetric to archive. Example
 *    format: properties/1234/customMetrics/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsArchive
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaArchiveCustomMetricRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a CustomMetric.
 *
 *  Method: analyticsadmin.properties.customMetrics.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaCustomMetric.
 *
 *  Creates a CustomMetric.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaCustomMetric to include
 *    in the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaCustomMetric *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lookup for a single CustomMetric.
 *
 *  Method: analyticsadmin.properties.customMetrics.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the CustomMetric to get. Example format:
 *  properties/1234/customMetrics/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaCustomMetric.
 *
 *  Lookup for a single CustomMetric.
 *
 *  @param name Required. The name of the CustomMetric to get. Example format:
 *    properties/1234/customMetrics/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CustomMetrics on a property.
 *
 *  Method: analyticsadmin.properties.customMetrics.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListCustomMetrics` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListCustomMetrics` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListCustomMetricsResponse.
 *
 *  Lists CustomMetrics on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a CustomMetric on a property.
 *
 *  Method: analyticsadmin.properties.customMetrics.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name for this CustomMetric resource. Format:
 *  properties/{property}/customMetrics/{customMetric}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaCustomMetric.
 *
 *  Updates a CustomMetric on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaCustomMetric to include
 *    in the query.
 *  @param name Output only. Resource name for this CustomMetric resource.
 *    Format: properties/{property}/customMetrics/{customMetric}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesCustomMetricsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaCustomMetric *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a DataStream.
 *
 *  Method: analyticsadmin.properties.dataStreams.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaDataStream.
 *
 *  Creates a DataStream.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaDataStream to include in
 *    the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaDataStream *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a DataStream on a property.
 *
 *  Method: analyticsadmin.properties.dataStreams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the DataStream to delete. Example format:
 *  properties/1234/dataStreams/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a DataStream on a property.
 *
 *  @param name Required. The name of the DataStream to delete. Example format:
 *    properties/1234/dataStreams/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single DataStream.
 *
 *  Method: analyticsadmin.properties.dataStreams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the DataStream to get. Example format:
 *  properties/1234/dataStreams/5678
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaDataStream.
 *
 *  Lookup for a single DataStream.
 *
 *  @param name Required. The name of the DataStream to get. Example format:
 *    properties/1234/dataStreams/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists DataStreams on a property.
 *
 *  Method: analyticsadmin.properties.dataStreams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListDataStreams` call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListDataStreams` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListDataStreamsResponse.
 *
 *  Lists DataStreams on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.dataStreams.measurementProtocolSecrets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The parent resource where this secret will be created. Format:
 *  properties/{property}/dataStreams/{dataStream}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaMeasurementProtocolSecret.
 *
 *  Creates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1betaMeasurementProtocolSecret to include in the
 *    query.
 *  @param parent Required. The parent resource where this secret will be
 *    created. Format: properties/{property}/dataStreams/{dataStream}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaMeasurementProtocolSecret *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes target MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.dataStreams.measurementProtocolSecrets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the MeasurementProtocolSecret to delete. Format:
 *  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes target MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the MeasurementProtocolSecret to delete.
 *    Format:
 *    properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lookup for a single MeasurementProtocolSecret.
 *
 *  Method: analyticsadmin.properties.dataStreams.measurementProtocolSecrets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the measurement protocol secret to lookup. Format:
 *  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaMeasurementProtocolSecret.
 *
 *  Lookup for a single MeasurementProtocolSecret.
 *
 *  @param name Required. The name of the measurement protocol secret to lookup.
 *    Format:
 *    properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  Method: analyticsadmin.properties.dataStreams.measurementProtocolSecrets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 10
 *  resources will be returned. The maximum value is 10. Higher values will be
 *  coerced to the maximum.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListMeasurementProtocolSecrets`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListMeasurementProtocolSecrets` must match the
 *  call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent stream. Format:
 *  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRGoogleAnalyticsAdmin_V1betaListMeasurementProtocolSecretsResponse.
 *
 *  Returns child MeasurementProtocolSecrets under the specified parent
 *  Property.
 *
 *  @param parent Required. The resource name of the parent stream. Format:
 *    properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a measurement protocol secret.
 *
 *  Method: analyticsadmin.properties.dataStreams.measurementProtocolSecrets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this secret. This secret may be a child of any
 *  type of stream. Format:
 *  properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaMeasurementProtocolSecret.
 *
 *  Updates a measurement protocol secret.
 *
 *  @param object The @c
 *    GTLRGoogleAnalyticsAdmin_V1betaMeasurementProtocolSecret to include in the
 *    query.
 *  @param name Output only. Resource name of this secret. This secret may be a
 *    child of any type of stream. Format:
 *    properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsMeasurementProtocolSecretsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaMeasurementProtocolSecret *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a DataStream on a property.
 *
 *  Method: analyticsadmin.properties.dataStreams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this Data Stream. Format:
 *  properties/{property_id}/dataStreams/{stream_id} Example:
 *  "properties/1000/dataStreams/2000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Omitted fields will not be
 *  updated. To replace the entire entity, use one path with the string "*" to
 *  match all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaDataStream.
 *
 *  Updates a DataStream on a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaDataStream to include in
 *    the query.
 *  @param name Output only. Resource name of this Data Stream. Format:
 *    properties/{property_id}/dataStreams/{stream_id} Example:
 *    "properties/1000/dataStreams/2000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDataStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaDataStream *)object
                           name:(NSString *)name;

@end

/**
 *  Marks target Property as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted properties. However, they
 *  can be restored using the Trash Can UI. If the properties are not restored
 *  before the expiration time, the Property and all child resources (eg:
 *  GoogleAdsLinks, Streams, AccessBindings) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found.
 *
 *  Method: analyticsadmin.properties.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the Property to soft-delete. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaProperty.
 *
 *  Marks target Property as soft-deleted (ie: "trashed") and returns it. This
 *  API does not have a method to restore soft-deleted properties. However, they
 *  can be restored using the Trash Can UI. If the properties are not restored
 *  before the expiration time, the Property and all child resources (eg:
 *  GoogleAdsLinks, Streams, AccessBindings) will be permanently purged.
 *  https://support.google.com/analytics/answer/6154772 Returns an error if the
 *  target is not found.
 *
 *  @param name Required. The name of the Property to soft-delete. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a FirebaseLink. Properties can have at most one FirebaseLink.
 *
 *  Method: analyticsadmin.properties.firebaseLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Format: properties/{property_id} Example: `properties/1234` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaFirebaseLink.
 *
 *  Creates a FirebaseLink. Properties can have at most one FirebaseLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaFirebaseLink to include
 *    in the query.
 *  @param parent Required. Format: properties/{property_id} Example:
 *    `properties/1234`
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaFirebaseLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a FirebaseLink on a property
 *
 *  Method: analyticsadmin.properties.firebaseLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id}
 *  Example: `properties/1234/firebaseLinks/5678`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a FirebaseLink on a property
 *
 *  @param name Required. Format:
 *    properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
 *    `properties/1234/firebaseLinks/5678`
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists FirebaseLinks on a property. Properties can have at most one
 *  FirebaseLink.
 *
 *  Method: analyticsadmin.properties.firebaseLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListFirebaseLinks` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListFirebaseLinks` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Format: properties/{property_id} Example: `properties/1234` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListFirebaseLinksResponse.
 *
 *  Lists FirebaseLinks on a property. Properties can have at most one
 *  FirebaseLink.
 *
 *  @param parent Required. Format: properties/{property_id} Example:
 *    `properties/1234`
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesFirebaseLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lookup for a single GA Property.
 *
 *  Method: analyticsadmin.properties.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the property to lookup. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaProperty.
 *
 *  Lookup for a single GA Property.
 *
 *  @param name Required. The name of the property to lookup. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the singleton data retention settings for this property.
 *
 *  Method: analyticsadmin.properties.getDataRetentionSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGetDataRetentionSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The name of the settings to lookup. Format:
 *  properties/{property}/dataRetentionSettings Example:
 *  "properties/1000/dataRetentionSettings"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaDataRetentionSettings.
 *
 *  Returns the singleton data retention settings for this property.
 *
 *  @param name Required. The name of the settings to lookup. Format:
 *    properties/{property}/dataRetentionSettings Example:
 *    "properties/1000/dataRetentionSettings"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGetDataRetentionSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a GoogleAdsLink.
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksCreate : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaGoogleAdsLink.
 *
 *  Creates a GoogleAdsLink.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaGoogleAdsLink to include
 *    in the query.
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaGoogleAdsLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a GoogleAdsLink on a property
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksDelete : GTLRGoogleAnalyticsAdminQuery

/** Required. Example format: properties/1234/googleAdsLinks/5678 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a GoogleAdsLink on a property
 *
 *  @param name Required. Example format: properties/1234/googleAdsLinks/5678
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists GoogleAdsLinks on a property.
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200 (higher values will be
 *  coerced to the maximum).
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListGoogleAdsLinks` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListGoogleAdsLinks` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example format: properties/1234 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListGoogleAdsLinksResponse.
 *
 *  Lists GoogleAdsLinks on a property.
 *
 *  @param parent Required. Example format: properties/1234
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a GoogleAdsLink on a property
 *
 *  Method: analyticsadmin.properties.googleAdsLinks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Format:
 *  properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
 *  googleAdsLinkId is not the Google Ads customer ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaGoogleAdsLink.
 *
 *  Updates a GoogleAdsLink on a property
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaGoogleAdsLink to include
 *    in the query.
 *  @param name Output only. Format:
 *    properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
 *    googleAdsLinkId is not the Google Ads customer ID.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesGoogleAdsLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaGoogleAdsLink *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Key Event.
 *
 *  Method: analyticsadmin.properties.keyEvents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsCreate : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the parent property where this Key Event will
 *  be created. Format: properties/123
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaKeyEvent.
 *
 *  Creates a Key Event.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaKeyEvent to include in
 *    the query.
 *  @param parent Required. The resource name of the parent property where this
 *    Key Event will be created. Format: properties/123
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsCreate
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaKeyEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Key Event.
 *
 *  Method: analyticsadmin.properties.keyEvents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsDelete : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the Key Event to delete. Format:
 *  properties/{property}/keyEvents/{key_event} Example:
 *  "properties/123/keyEvents/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_GoogleProtobufEmpty.
 *
 *  Deletes a Key Event.
 *
 *  @param name Required. The resource name of the Key Event to delete. Format:
 *    properties/{property}/keyEvents/{key_event} Example:
 *    "properties/123/keyEvents/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single Key Event.
 *
 *  Method: analyticsadmin.properties.keyEvents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsGet : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. The resource name of the Key Event to retrieve. Format:
 *  properties/{property}/keyEvents/{key_event} Example:
 *  "properties/123/keyEvents/456"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaKeyEvent.
 *
 *  Retrieve a single Key Event.
 *
 *  @param name Required. The resource name of the Key Event to retrieve.
 *    Format: properties/{property}/keyEvents/{key_event} Example:
 *    "properties/123/keyEvents/456"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a list of Key Events in the specified parent property. Returns an
 *  empty list if no Key Events are found.
 *
 *  Method: analyticsadmin.properties.keyEvents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsList : GTLRGoogleAnalyticsAdminQuery

/**
 *  The maximum number of resources to return. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListKeyEvents` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListKeyEvents` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the parent property. Example:
 *  'properties/123'
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListKeyEventsResponse.
 *
 *  Returns a list of Key Events in the specified parent property. Returns an
 *  empty list if no Key Events are found.
 *
 *  @param parent Required. The resource name of the parent property. Example:
 *    'properties/123'
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Key Event.
 *
 *  Method: analyticsadmin.properties.keyEvents.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this key event. Format:
 *  properties/{property}/keyEvents/{key_event}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaKeyEvent.
 *
 *  Updates a Key Event.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaKeyEvent to include in
 *    the query.
 *  @param name Output only. Resource name of this key event. Format:
 *    properties/{property}/keyEvents/{key_event}
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesKeyEventsPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaKeyEvent *)object
                           name:(NSString *)name;

@end

/**
 *  Returns child Properties under the specified parent Account. Properties will
 *  be excluded if the caller does not have access. Soft-deleted (ie: "trashed")
 *  properties are excluded by default. Returns an empty list if no relevant
 *  properties are found.
 *
 *  Method: analyticsadmin.properties.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesList : GTLRGoogleAnalyticsAdminQuery

/**
 *  Required. An expression for filtering the results of the request. Fields
 *  eligible for filtering are: `parent:`(The resource name of the parent
 *  account/property) or `ancestor:`(The resource name of the parent account) or
 *  `firebase_project:`(The id or number of the linked firebase project). Some
 *  examples of filters: ``` | Filter | Description |
 *  |-----------------------------|-------------------------------------------|
 *  | parent:accounts/123 | The account with account id: 123. | |
 *  parent:properties/123 | The property with property id: 123. | |
 *  ancestor:accounts/123 | The account with account id: 123. | |
 *  firebase_project:project-id | The firebase project with id: project-id. | |
 *  firebase_project:123 | The firebase project with number: 123. | ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of resources to return. The service may return fewer than
 *  this value, even if there are additional pages. If unspecified, at most 50
 *  resources will be returned. The maximum value is 200; (higher values will be
 *  coerced to the maximum)
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListProperties` call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListProperties` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Whether to include soft-deleted (ie: "trashed") Properties in the results.
 *  Properties can be inspected to determine whether they are deleted or not.
 */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaListPropertiesResponse.
 *
 *  Returns child Properties under the specified parent Account. Properties will
 *  be excluded if the caller does not have access. Soft-deleted (ie: "trashed")
 *  properties are excluded by default. Returns an empty list if no relevant
 *  properties are found.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Updates a property.
 *
 *  Method: analyticsadmin.properties.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesPatch : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name of this property. Format:
 *  properties/{property_id} Example: "properties/1000"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaProperty.
 *
 *  Updates a property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaProperty to include in
 *    the query.
 *  @param name Output only. Resource name of this property. Format:
 *    properties/{property_id} Example: "properties/1000"
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesPatch
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaProperty *)object
                           name:(NSString *)name;

@end

/**
 *  Returns a customized report of data access records. The report provides
 *  records of each time a user reads Google Analytics reporting data. Access
 *  records are retained for up to 2 years. Data Access Reports can be requested
 *  for a property. Reports may be requested for any property, but dimensions
 *  that aren't related to quota can only be requested on Google Analytics 360
 *  properties. This method is only available to Administrators. These data
 *  access records include GA UI Reporting, GA UI Explorations, GA Data API, and
 *  other products like Firebase & Admob that can retrieve data from Google
 *  Analytics through a linkage. These records don't include property
 *  configuration changes like adding a stream or changing a property's time
 *  zone. For configuration change history, see
 *  [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
 *  To give your feedback on this API, complete the [Google Analytics Access
 *  Reports
 *  feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
 *  form.
 *
 *  Method: analyticsadmin.properties.runAccessReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsReadonly
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesRunAccessReport : GTLRGoogleAnalyticsAdminQuery

/**
 *  The Data Access Report supports requesting at the property level or account
 *  level. If requested at the account level, Data Access Reports include all
 *  access for all properties under that account. To request at the property
 *  level, entity should be for example 'properties/123' if "123" is your Google
 *  Analytics property ID. To request at the account level, entity should be for
 *  example 'accounts/1234' if "1234" is your Google Analytics Account ID.
 */
@property(nonatomic, copy, nullable) NSString *entity;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaRunAccessReportResponse.
 *
 *  Returns a customized report of data access records. The report provides
 *  records of each time a user reads Google Analytics reporting data. Access
 *  records are retained for up to 2 years. Data Access Reports can be requested
 *  for a property. Reports may be requested for any property, but dimensions
 *  that aren't related to quota can only be requested on Google Analytics 360
 *  properties. This method is only available to Administrators. These data
 *  access records include GA UI Reporting, GA UI Explorations, GA Data API, and
 *  other products like Firebase & Admob that can retrieve data from Google
 *  Analytics through a linkage. These records don't include property
 *  configuration changes like adding a stream or changing a property's time
 *  zone. For configuration change history, see
 *  [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
 *  To give your feedback on this API, complete the [Google Analytics Access
 *  Reports
 *  feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
 *  form.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaRunAccessReportRequest
 *    to include in the query.
 *  @param entity The Data Access Report supports requesting at the property
 *    level or account level. If requested at the account level, Data Access
 *    Reports include all access for all properties under that account. To
 *    request at the property level, entity should be for example
 *    'properties/123' if "123" is your Google Analytics property ID. To request
 *    at the account level, entity should be for example 'accounts/1234' if
 *    "1234" is your Google Analytics Account ID.
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesRunAccessReport
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaRunAccessReportRequest *)object
                         entity:(NSString *)entity;

@end

/**
 *  Updates the singleton data retention settings for this property.
 *
 *  Method: analyticsadmin.properties.updateDataRetentionSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGoogleAnalyticsAdminAnalyticsEdit
 */
@interface GTLRGoogleAnalyticsAdminQuery_PropertiesUpdateDataRetentionSettings : GTLRGoogleAnalyticsAdminQuery

/**
 *  Output only. Resource name for this DataRetentionSetting resource. Format:
 *  properties/{property}/dataRetentionSettings
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated. Field names must be in snake
 *  case (e.g., "field_to_update"). Omitted fields will not be updated. To
 *  replace the entire entity, use one path with the string "*" to match all
 *  fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGoogleAnalyticsAdmin_V1betaDataRetentionSettings.
 *
 *  Updates the singleton data retention settings for this property.
 *
 *  @param object The @c GTLRGoogleAnalyticsAdmin_V1betaDataRetentionSettings to
 *    include in the query.
 *  @param name Output only. Resource name for this DataRetentionSetting
 *    resource. Format: properties/{property}/dataRetentionSettings
 *
 *  @return GTLRGoogleAnalyticsAdminQuery_PropertiesUpdateDataRetentionSettings
 */
+ (instancetype)queryWithObject:(GTLRGoogleAnalyticsAdmin_V1betaDataRetentionSettings *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
