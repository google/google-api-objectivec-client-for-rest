// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   My Business Place Actions API (mybusinessplaceactions/v1)
// Description:
//   The My Business Place Actions API provides an interface for managing place
//   action links of a location on Google.
// Documentation:
//   https://developers.google.com/my-business/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRMyBusinessPlaceActionsObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other My Business Place Actions query classes.
 */
@interface GTLRMyBusinessPlaceActionsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a place action link associated with the specified location, and
 *  returns it. The request is considered duplicate if the `parent`,
 *  `place_action_link.uri` and `place_action_link.place_action_type` are the
 *  same as a previous request.
 *
 *  Method: mybusinessplaceactions.locations.placeActionLinks.create
 */
@interface GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksCreate : GTLRMyBusinessPlaceActionsQuery

/**
 *  Required. The resource name of the location where to create this place
 *  action link. `locations/{location_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMyBusinessPlaceActions_PlaceActionLink.
 *
 *  Creates a place action link associated with the specified location, and
 *  returns it. The request is considered duplicate if the `parent`,
 *  `place_action_link.uri` and `place_action_link.place_action_type` are the
 *  same as a previous request.
 *
 *  @param object The @c GTLRMyBusinessPlaceActions_PlaceActionLink to include
 *    in the query.
 *  @param parent Required. The resource name of the location where to create
 *    this place action link. `locations/{location_id}`.
 *
 *  @return GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksCreate
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessPlaceActions_PlaceActionLink *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a place action link from the specified location.
 *
 *  Method: mybusinessplaceactions.locations.placeActionLinks.delete
 */
@interface GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksDelete : GTLRMyBusinessPlaceActionsQuery

/**
 *  Required. The resource name of the place action link to remove from the
 *  location.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessPlaceActions_Empty.
 *
 *  Deletes a place action link from the specified location.
 *
 *  @param name Required. The resource name of the place action link to remove
 *    from the location.
 *
 *  @return GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the specified place action link.
 *
 *  Method: mybusinessplaceactions.locations.placeActionLinks.get
 */
@interface GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksGet : GTLRMyBusinessPlaceActionsQuery

/** Required. The name of the place action link to fetch. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessPlaceActions_PlaceActionLink.
 *
 *  Gets the specified place action link.
 *
 *  @param name Required. The name of the place action link to fetch.
 *
 *  @return GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the place action links for the specified location.
 *
 *  Method: mybusinessplaceactions.locations.placeActionLinks.list
 */
@interface GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksList : GTLRMyBusinessPlaceActionsQuery

/**
 *  Optional. A filter constraining the place action links to return. The
 *  response includes entries that match the filter. We support only the
 *  following filter: 1. place_action_type=XYZ where XYZ is a valid
 *  PlaceActionType.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. How many place action links to return per page. Default of 10. The
 *  minimum is 1.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. If specified, returns the next page of place action links. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the location whose place action links will be listed.
 *  `locations/{location_id}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMyBusinessPlaceActions_ListPlaceActionLinksResponse.
 *
 *  Lists the place action links for the specified location.
 *
 *  @param parent Required. The name of the location whose place action links
 *    will be listed. `locations/{location_id}`.
 *
 *  @return GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the specified place action link and returns it.
 *
 *  Method: mybusinessplaceactions.locations.placeActionLinks.patch
 */
@interface GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksPatch : GTLRMyBusinessPlaceActionsQuery

/**
 *  Optional. The resource name, in the format
 *  `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name
 *  field will only be considered in UpdatePlaceActionLink and
 *  DeletePlaceActionLink requests for updating and deleting links respectively.
 *  However, it will be ignored in CreatePlaceActionLink request, where
 *  `place_action_link_id` will be assigned by the server on successful creation
 *  of a new link and returned as part of the response.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The specific fields to update. The only editable fields are `uri`,
 *  `place_action_type` and `is_preferred`. If the updated link already exists
 *  at the same location with the same `place_action_type` and `uri`, fails with
 *  an `ALREADY_EXISTS` error.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRMyBusinessPlaceActions_PlaceActionLink.
 *
 *  Updates the specified place action link and returns it.
 *
 *  @param object The @c GTLRMyBusinessPlaceActions_PlaceActionLink to include
 *    in the query.
 *  @param name Optional. The resource name, in the format
 *    `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The
 *    name field will only be considered in UpdatePlaceActionLink and
 *    DeletePlaceActionLink requests for updating and deleting links
 *    respectively. However, it will be ignored in CreatePlaceActionLink
 *    request, where `place_action_link_id` will be assigned by the server on
 *    successful creation of a new link and returned as part of the response.
 *
 *  @return GTLRMyBusinessPlaceActionsQuery_LocationsPlaceActionLinksPatch
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessPlaceActions_PlaceActionLink *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the list of available place action types for a location or country.
 *
 *  Method: mybusinessplaceactions.placeActionTypeMetadata.list
 */
@interface GTLRMyBusinessPlaceActionsQuery_PlaceActionTypeMetadataList : GTLRMyBusinessPlaceActionsQuery

/**
 *  Optional. A filter constraining the place action types to return metadata
 *  for. The response includes entries that match the filter. We support only
 *  the following filters: 1. location=XYZ where XYZ is a string indicating the
 *  resource name of a location, in the format `locations/{location_id}`. 2.
 *  region_code=XYZ where XYZ is a Unicode CLDR region code to find available
 *  action types. If no filter is provided, all place action types are returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The IETF BCP-47 code of language to get display names in. If this
 *  language is not available, they will be provided in English.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. How many action types to include per page. Default is 10, minimum
 *  is 1.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If specified, the next page of place action type metadata is
 *  retrieved. The `pageToken` is returned when a call to
 *  `placeActionTypeMetadata.list` returns more results than can fit into the
 *  requested page size.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRMyBusinessPlaceActions_ListPlaceActionTypeMetadataResponse.
 *
 *  Returns the list of available place action types for a location or country.
 *
 *  @return GTLRMyBusinessPlaceActionsQuery_PlaceActionTypeMetadataList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
