// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Data Loss Prevention (DLP) API (dlp/v2)
// Description:
//   Provides methods for detection, risk analysis, and de-identification of
//   privacy-sensitive fragments in text, images, and Google Cloud Platform
//   storage repositories.
// Documentation:
//   https://cloud.google.com/dlp/docs/

#import <GoogleAPIClientForREST/GTLRDLPQuery.h>

// ----------------------------------------------------------------------------
// Constants

// type
NSString * const kGTLRDLPTypeDlpJobTypeUnspecified = @"DLP_JOB_TYPE_UNSPECIFIED";
NSString * const kGTLRDLPTypeInspectJob            = @"INSPECT_JOB";
NSString * const kGTLRDLPTypeRiskAnalysisJob       = @"RISK_ANALYSIS_JOB";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRDLPQuery

@dynamic fields;

@end

@implementation GTLRDLPQuery_InfoTypesList

@dynamic filter, languageCode, locationId, parent;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2/infoTypes";
  GTLRDLPQuery_InfoTypesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListInfoTypesResponse class];
  query.loggingName = @"dlp.infoTypes.list";
  return query;
}

@end

@implementation GTLRDLPQuery_LocationsInfoTypesList

@dynamic filter, languageCode, locationId, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/infoTypes";
  GTLRDLPQuery_LocationsInfoTypesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListInfoTypesResponse class];
  query.loggingName = @"dlp.locations.infoTypes.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsDeidentifyTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateDeidentifyTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_OrganizationsDeidentifyTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.organizations.deidentifyTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsDeidentifyTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsDeidentifyTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.organizations.deidentifyTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsDeidentifyTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsDeidentifyTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.organizations.deidentifyTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsDeidentifyTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_OrganizationsDeidentifyTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListDeidentifyTemplatesResponse class];
  query.loggingName = @"dlp.organizations.deidentifyTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsDeidentifyTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsDeidentifyTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.organizations.deidentifyTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsInspectTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateInspectTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_OrganizationsInspectTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.organizations.inspectTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsInspectTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsInspectTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.organizations.inspectTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsInspectTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsInspectTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.organizations.inspectTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsInspectTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_OrganizationsInspectTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListInspectTemplatesResponse class];
  query.loggingName = @"dlp.organizations.inspectTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsInspectTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateInspectTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsInspectTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.organizations.inspectTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateDeidentifyTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.organizations.locations.deidentifyTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.organizations.locations.deidentifyTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.organizations.locations.deidentifyTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListDeidentifyTemplatesResponse class];
  query.loggingName = @"dlp.organizations.locations.deidentifyTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsDeidentifyTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.organizations.locations.deidentifyTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsDlpJobsList

@dynamic filter, locationId, orderBy, pageSize, pageToken, parent, type;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/dlpJobs";
  GTLRDLPQuery_OrganizationsLocationsDlpJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListDlpJobsResponse class];
  query.loggingName = @"dlp.organizations.locations.dlpJobs.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsInspectTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateInspectTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_OrganizationsLocationsInspectTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.organizations.locations.inspectTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsInspectTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsInspectTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.organizations.locations.inspectTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsInspectTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsInspectTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.organizations.locations.inspectTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsInspectTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_OrganizationsLocationsInspectTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListInspectTemplatesResponse class];
  query.loggingName = @"dlp.organizations.locations.inspectTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsInspectTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateInspectTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsInspectTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.organizations.locations.inspectTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsJobTriggersCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateJobTriggerRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/jobTriggers";
  GTLRDLPQuery_OrganizationsLocationsJobTriggersCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.organizations.locations.jobTriggers.create";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsJobTriggersDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsJobTriggersDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.organizations.locations.jobTriggers.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsJobTriggersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsJobTriggersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.organizations.locations.jobTriggers.get";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsJobTriggersList

@dynamic filter, locationId, orderBy, pageSize, pageToken, parent, type;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/jobTriggers";
  GTLRDLPQuery_OrganizationsLocationsJobTriggersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListJobTriggersResponse class];
  query.loggingName = @"dlp.organizations.locations.jobTriggers.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsJobTriggersPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateJobTriggerRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsJobTriggersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.organizations.locations.jobTriggers.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateStoredInfoTypeRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.organizations.locations.storedInfoTypes.create";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.organizations.locations.storedInfoTypes.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.organizations.locations.storedInfoTypes.get";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListStoredInfoTypesResponse class];
  query.loggingName = @"dlp.organizations.locations.storedInfoTypes.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateStoredInfoTypeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsLocationsStoredInfoTypesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.organizations.locations.storedInfoTypes.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsStoredInfoTypesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateStoredInfoTypeRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_OrganizationsStoredInfoTypesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.organizations.storedInfoTypes.create";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsStoredInfoTypesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsStoredInfoTypesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.organizations.storedInfoTypes.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsStoredInfoTypesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsStoredInfoTypesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.organizations.storedInfoTypes.get";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsStoredInfoTypesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_OrganizationsStoredInfoTypesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListStoredInfoTypesResponse class];
  query.loggingName = @"dlp.organizations.storedInfoTypes.list";
  return query;
}

@end

@implementation GTLRDLPQuery_OrganizationsStoredInfoTypesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateStoredInfoTypeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_OrganizationsStoredInfoTypesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.organizations.storedInfoTypes.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsContentDeidentify

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2DeidentifyContentRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/content:deidentify";
  GTLRDLPQuery_ProjectsContentDeidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyContentResponse class];
  query.loggingName = @"dlp.projects.content.deidentify";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsContentInspect

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2InspectContentRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/content:inspect";
  GTLRDLPQuery_ProjectsContentInspect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectContentResponse class];
  query.loggingName = @"dlp.projects.content.inspect";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsContentReidentify

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2ReidentifyContentRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/content:reidentify";
  GTLRDLPQuery_ProjectsContentReidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ReidentifyContentResponse class];
  query.loggingName = @"dlp.projects.content.reidentify";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDeidentifyTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateDeidentifyTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_ProjectsDeidentifyTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.projects.deidentifyTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDeidentifyTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsDeidentifyTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.deidentifyTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDeidentifyTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsDeidentifyTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.projects.deidentifyTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDeidentifyTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_ProjectsDeidentifyTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListDeidentifyTemplatesResponse class];
  query.loggingName = @"dlp.projects.deidentifyTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDeidentifyTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsDeidentifyTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.projects.deidentifyTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDlpJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CancelDlpJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:cancel";
  GTLRDLPQuery_ProjectsDlpJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.dlpJobs.cancel";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDlpJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateDlpJobRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/dlpJobs";
  GTLRDLPQuery_ProjectsDlpJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DlpJob class];
  query.loggingName = @"dlp.projects.dlpJobs.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDlpJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsDlpJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.dlpJobs.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDlpJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsDlpJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DlpJob class];
  query.loggingName = @"dlp.projects.dlpJobs.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsDlpJobsList

@dynamic filter, locationId, orderBy, pageSize, pageToken, parent, type;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/dlpJobs";
  GTLRDLPQuery_ProjectsDlpJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListDlpJobsResponse class];
  query.loggingName = @"dlp.projects.dlpJobs.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsImageRedact

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2RedactImageRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/image:redact";
  GTLRDLPQuery_ProjectsImageRedact *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2RedactImageResponse class];
  query.loggingName = @"dlp.projects.image.redact";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsInspectTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateInspectTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_ProjectsInspectTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.projects.inspectTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsInspectTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsInspectTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.inspectTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsInspectTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsInspectTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.projects.inspectTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsInspectTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_ProjectsInspectTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListInspectTemplatesResponse class];
  query.loggingName = @"dlp.projects.inspectTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsInspectTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateInspectTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsInspectTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.projects.inspectTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsJobTriggersActivate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2ActivateJobTriggerRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:activate";
  GTLRDLPQuery_ProjectsJobTriggersActivate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DlpJob class];
  query.loggingName = @"dlp.projects.jobTriggers.activate";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsJobTriggersCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateJobTriggerRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/jobTriggers";
  GTLRDLPQuery_ProjectsJobTriggersCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.projects.jobTriggers.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsJobTriggersDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsJobTriggersDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.jobTriggers.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsJobTriggersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsJobTriggersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.projects.jobTriggers.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsJobTriggersList

@dynamic filter, locationId, orderBy, pageSize, pageToken, parent, type;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/jobTriggers";
  GTLRDLPQuery_ProjectsJobTriggersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListJobTriggersResponse class];
  query.loggingName = @"dlp.projects.jobTriggers.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsJobTriggersPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateJobTriggerRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsJobTriggersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.projects.jobTriggers.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsContentDeidentify

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2DeidentifyContentRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/content:deidentify";
  GTLRDLPQuery_ProjectsLocationsContentDeidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyContentResponse class];
  query.loggingName = @"dlp.projects.locations.content.deidentify";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsContentInspect

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2InspectContentRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/content:inspect";
  GTLRDLPQuery_ProjectsLocationsContentInspect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectContentResponse class];
  query.loggingName = @"dlp.projects.locations.content.inspect";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsContentReidentify

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2ReidentifyContentRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/content:reidentify";
  GTLRDLPQuery_ProjectsLocationsContentReidentify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ReidentifyContentResponse class];
  query.loggingName = @"dlp.projects.locations.content.reidentify";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateDeidentifyTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.projects.locations.deidentifyTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.locations.deidentifyTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.projects.locations.deidentifyTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/deidentifyTemplates";
  GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListDeidentifyTemplatesResponse class];
  query.loggingName = @"dlp.projects.locations.deidentifyTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsDeidentifyTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DeidentifyTemplate class];
  query.loggingName = @"dlp.projects.locations.deidentifyTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDlpJobsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CancelDlpJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:cancel";
  GTLRDLPQuery_ProjectsLocationsDlpJobsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.locations.dlpJobs.cancel";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDlpJobsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateDlpJobRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/dlpJobs";
  GTLRDLPQuery_ProjectsLocationsDlpJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DlpJob class];
  query.loggingName = @"dlp.projects.locations.dlpJobs.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDlpJobsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsDlpJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.locations.dlpJobs.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDlpJobsFinish

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2FinishDlpJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:finish";
  GTLRDLPQuery_ProjectsLocationsDlpJobsFinish *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.locations.dlpJobs.finish";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDlpJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsDlpJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DlpJob class];
  query.loggingName = @"dlp.projects.locations.dlpJobs.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDlpJobsHybridInspect

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2HybridInspectDlpJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:hybridInspect";
  GTLRDLPQuery_ProjectsLocationsDlpJobsHybridInspect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2HybridInspectResponse class];
  query.loggingName = @"dlp.projects.locations.dlpJobs.hybridInspect";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsDlpJobsList

@dynamic filter, locationId, orderBy, pageSize, pageToken, parent, type;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/dlpJobs";
  GTLRDLPQuery_ProjectsLocationsDlpJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListDlpJobsResponse class];
  query.loggingName = @"dlp.projects.locations.dlpJobs.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsImageRedact

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2RedactImageRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/image:redact";
  GTLRDLPQuery_ProjectsLocationsImageRedact *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2RedactImageResponse class];
  query.loggingName = @"dlp.projects.locations.image.redact";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsInspectTemplatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateInspectTemplateRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_ProjectsLocationsInspectTemplatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.projects.locations.inspectTemplates.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsInspectTemplatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsInspectTemplatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.locations.inspectTemplates.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsInspectTemplatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsInspectTemplatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.projects.locations.inspectTemplates.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsInspectTemplatesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/inspectTemplates";
  GTLRDLPQuery_ProjectsLocationsInspectTemplatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListInspectTemplatesResponse class];
  query.loggingName = @"dlp.projects.locations.inspectTemplates.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsInspectTemplatesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateInspectTemplateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsInspectTemplatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2InspectTemplate class];
  query.loggingName = @"dlp.projects.locations.inspectTemplates.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsJobTriggersActivate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2ActivateJobTriggerRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:activate";
  GTLRDLPQuery_ProjectsLocationsJobTriggersActivate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2DlpJob class];
  query.loggingName = @"dlp.projects.locations.jobTriggers.activate";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsJobTriggersCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateJobTriggerRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/jobTriggers";
  GTLRDLPQuery_ProjectsLocationsJobTriggersCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.projects.locations.jobTriggers.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsJobTriggersDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsJobTriggersDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.locations.jobTriggers.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsJobTriggersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsJobTriggersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.projects.locations.jobTriggers.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsJobTriggersHybridInspect

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2HybridInspectJobTriggerRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:hybridInspect";
  GTLRDLPQuery_ProjectsLocationsJobTriggersHybridInspect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2HybridInspectResponse class];
  query.loggingName = @"dlp.projects.locations.jobTriggers.hybridInspect";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsJobTriggersList

@dynamic filter, locationId, orderBy, pageSize, pageToken, parent, type;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/jobTriggers";
  GTLRDLPQuery_ProjectsLocationsJobTriggersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListJobTriggersResponse class];
  query.loggingName = @"dlp.projects.locations.jobTriggers.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsJobTriggersPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateJobTriggerRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsJobTriggersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2JobTrigger class];
  query.loggingName = @"dlp.projects.locations.jobTriggers.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsStoredInfoTypesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateStoredInfoTypeRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_ProjectsLocationsStoredInfoTypesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.projects.locations.storedInfoTypes.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsStoredInfoTypesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsStoredInfoTypesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.locations.storedInfoTypes.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsStoredInfoTypesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsStoredInfoTypesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.projects.locations.storedInfoTypes.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsStoredInfoTypesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_ProjectsLocationsStoredInfoTypesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListStoredInfoTypesResponse class];
  query.loggingName = @"dlp.projects.locations.storedInfoTypes.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsLocationsStoredInfoTypesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateStoredInfoTypeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsLocationsStoredInfoTypesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.projects.locations.storedInfoTypes.patch";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsStoredInfoTypesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2CreateStoredInfoTypeRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_ProjectsStoredInfoTypesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.projects.storedInfoTypes.create";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsStoredInfoTypesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsStoredInfoTypesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GoogleProtobufEmpty class];
  query.loggingName = @"dlp.projects.storedInfoTypes.delete";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsStoredInfoTypesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsStoredInfoTypesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.projects.storedInfoTypes.get";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsStoredInfoTypesList

@dynamic locationId, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/storedInfoTypes";
  GTLRDLPQuery_ProjectsStoredInfoTypesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2ListStoredInfoTypesResponse class];
  query.loggingName = @"dlp.projects.storedInfoTypes.list";
  return query;
}

@end

@implementation GTLRDLPQuery_ProjectsStoredInfoTypesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDLP_GooglePrivacyDlpV2UpdateStoredInfoTypeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDLPQuery_ProjectsStoredInfoTypesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDLP_GooglePrivacyDlpV2StoredInfoType class];
  query.loggingName = @"dlp.projects.storedInfoTypes.patch";
  return query;
}

@end
