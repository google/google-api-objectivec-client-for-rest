// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   My Business Business Calls API (mybusinessbusinesscalls/v1)
// Description:
//   The My Business Business Calls API manages business calls information of a
//   location on Google and collect insights like the number of missed calls to
//   their location. Additional information about Business calls can be found at
//   https://support.google.com/business/answer/9688285?p=call_history. If the
//   Google Business Profile links to a Google Ads account and call history is
//   turned on, calls that last longer than a specific time, and that can be
//   attributed to an ad interaction, will show in the linked Google Ads account
//   under the "Calls from Ads" conversion. If smart bidding and call
//   conversions are used in the optimization strategy, there could be a change
//   in ad spend. Learn more about smart bidding. To view and perform actions on
//   a location's calls, you need to be a `OWNER`, `CO_OWNER` or `MANAGER` of
//   the location.
// Documentation:
//   https://developers.google.com/my-business/

#import <GoogleAPIClientForREST/GTLRMyBusinessBusinessCallsQuery.h>

@implementation GTLRMyBusinessBusinessCallsQuery

@dynamic fields;

@end

@implementation GTLRMyBusinessBusinessCallsQuery_LocationsBusinesscallsinsightsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/businesscallsinsights";
  GTLRMyBusinessBusinessCallsQuery_LocationsBusinesscallsinsightsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMyBusinessBusinessCalls_ListBusinessCallsInsightsResponse class];
  query.loggingName = @"mybusinessbusinesscalls.locations.businesscallsinsights.list";
  return query;
}

@end

@implementation GTLRMyBusinessBusinessCallsQuery_LocationsGetBusinesscallssettings

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMyBusinessBusinessCallsQuery_LocationsGetBusinesscallssettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMyBusinessBusinessCalls_BusinessCallsSettings class];
  query.loggingName = @"mybusinessbusinesscalls.locations.getBusinesscallssettings";
  return query;
}

@end

@implementation GTLRMyBusinessBusinessCallsQuery_LocationsUpdateBusinesscallssettings

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRMyBusinessBusinessCalls_BusinessCallsSettings *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMyBusinessBusinessCallsQuery_LocationsUpdateBusinesscallssettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMyBusinessBusinessCalls_BusinessCallsSettings class];
  query.loggingName = @"mybusinessbusinesscalls.locations.updateBusinesscallssettings";
  return query;
}

@end
