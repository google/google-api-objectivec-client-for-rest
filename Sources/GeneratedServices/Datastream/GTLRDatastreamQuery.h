// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Datastream API (datastream/v1)
// Documentation:
//   https://cloud.google.com/datastream/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDatastreamObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Datastream query classes.
 */
@interface GTLRDatastreamQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Use this method to create a connection profile in a project and location.
 *
 *  Method: datastream.projects.locations.connectionProfiles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesCreate : GTLRDatastreamQuery

/** Required. The connection profile identifier. */
@property(nonatomic, copy, nullable) NSString *connectionProfileId;

/** Optional. Create the connection profile without validating it. */
@property(nonatomic, assign) BOOL force;

/** Required. The parent that owns the collection of ConnectionProfiles. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Only validate the connection profile, but don't create any
 *  resources. The default is false.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to create a connection profile in a project and location.
 *
 *  @param object The @c GTLRDatastream_ConnectionProfile to include in the
 *    query.
 *  @param parent Required. The parent that owns the collection of
 *    ConnectionProfiles.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesCreate
 */
+ (instancetype)queryWithObject:(GTLRDatastream_ConnectionProfile *)object
                         parent:(NSString *)parent;

@end

/**
 *  Use this method to delete a connection profile.
 *
 *  Method: datastream.projects.locations.connectionProfiles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesDelete : GTLRDatastreamQuery

/** Required. The name of the connection profile resource to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to delete a connection profile.
 *
 *  @param name Required. The name of the connection profile resource to delete.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to discover a connection profile. The discover API call
 *  exposes the data objects and metadata belonging to the profile. Typically, a
 *  request returns children data objects of a parent data object that's
 *  optionally supplied in the request.
 *
 *  Method: datastream.projects.locations.connectionProfiles.discover
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesDiscover : GTLRDatastreamQuery

/**
 *  Required. The parent resource of the connection profile type. Must be in the
 *  format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDatastream_DiscoverConnectionProfileResponse.
 *
 *  Use this method to discover a connection profile. The discover API call
 *  exposes the data objects and metadata belonging to the profile. Typically, a
 *  request returns children data objects of a parent data object that's
 *  optionally supplied in the request.
 *
 *  @param object The @c GTLRDatastream_DiscoverConnectionProfileRequest to
 *    include in the query.
 *  @param parent Required. The parent resource of the connection profile type.
 *    Must be in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesDiscover
 */
+ (instancetype)queryWithObject:(GTLRDatastream_DiscoverConnectionProfileRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Use this method to get details about a connection profile.
 *
 *  Method: datastream.projects.locations.connectionProfiles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesGet : GTLRDatastreamQuery

/** Required. The name of the connection profile resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_ConnectionProfile.
 *
 *  Use this method to get details about a connection profile.
 *
 *  @param name Required. The name of the connection profile resource to get.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to list connection profiles created in a project and
 *  location.
 *
 *  Method: datastream.projects.locations.connectionProfiles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesList : GTLRDatastreamQuery

/** Filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of connection profiles to return. If unspecified, at most 50
 *  connection profiles will be returned. The maximum value is 1000; values
 *  above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token received from a previous `ListConnectionProfiles` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListConnectionProfiles` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent that owns the collection of connection profiles. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDatastream_ListConnectionProfilesResponse.
 *
 *  Use this method to list connection profiles created in a project and
 *  location.
 *
 *  @param parent Required. The parent that owns the collection of connection
 *    profiles.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Use this method to update the parameters of a connection profile.
 *
 *  Method: datastream.projects.locations.connectionProfiles.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesPatch : GTLRDatastreamQuery

/** Optional. Update the connection profile without validating it. */
@property(nonatomic, assign) BOOL force;

/** Output only. The resource's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  ConnectionProfile resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. Only validate the connection profile, but don't update any
 *  resources. The default is false.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to update the parameters of a connection profile.
 *
 *  @param object The @c GTLRDatastream_ConnectionProfile to include in the
 *    query.
 *  @param name Output only. The resource's name.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsConnectionProfilesPatch
 */
+ (instancetype)queryWithObject:(GTLRDatastream_ConnectionProfile *)object
                           name:(NSString *)name;

@end

/**
 *  The FetchStaticIps API call exposes the static IP addresses used by
 *  Datastream.
 *
 *  Method: datastream.projects.locations.fetchStaticIps
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsFetchStaticIps : GTLRDatastreamQuery

/**
 *  Required. The resource name for the location for which static IPs should be
 *  returned. Must be in the format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Maximum number of Ips to return, will likely not be specified. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListStaticIps` call. will likely not
 *  be specified.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDatastream_FetchStaticIpsResponse.
 *
 *  The FetchStaticIps API call exposes the static IP addresses used by
 *  Datastream.
 *
 *  @param name Required. The resource name for the location for which static
 *    IPs should be returned. Must be in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsFetchStaticIps
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: datastream.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsGet : GTLRDatastreamQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: datastream.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsList : GTLRDatastreamQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDatastream_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: datastream.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsOperationsCancel : GTLRDatastreamQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRDatastream_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRDatastream_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: datastream.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsOperationsDelete : GTLRDatastreamQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: datastream.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsOperationsGet : GTLRDatastreamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: datastream.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsOperationsList : GTLRDatastreamQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDatastream_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to create a private connectivity configuration.
 *
 *  Method: datastream.projects.locations.privateConnections.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsCreate : GTLRDatastreamQuery

/** Required. The parent that owns the collection of PrivateConnections. */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The private connectivity identifier. */
@property(nonatomic, copy, nullable) NSString *privateConnectionId;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to create a private connectivity configuration.
 *
 *  @param object The @c GTLRDatastream_PrivateConnection to include in the
 *    query.
 *  @param parent Required. The parent that owns the collection of
 *    PrivateConnections.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsCreate
 */
+ (instancetype)queryWithObject:(GTLRDatastream_PrivateConnection *)object
                         parent:(NSString *)parent;

@end

/**
 *  Use this method to delete a private connectivity configuration.
 *
 *  Method: datastream.projects.locations.privateConnections.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsDelete : GTLRDatastreamQuery

/**
 *  Optional. If set to true, any child routes that belong to this
 *  PrivateConnection will also be deleted.
 */
@property(nonatomic, assign) BOOL force;

/** Required. The name of the private connectivity configuration to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to delete a private connectivity configuration.
 *
 *  @param name Required. The name of the private connectivity configuration to
 *    delete.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to get details about a private connectivity configuration.
 *
 *  Method: datastream.projects.locations.privateConnections.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsGet : GTLRDatastreamQuery

/** Required. The name of the private connectivity configuration to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_PrivateConnection.
 *
 *  Use this method to get details about a private connectivity configuration.
 *
 *  @param name Required. The name of the private connectivity configuration to
 *    get.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to list private connectivity configurations in a project and
 *  location.
 *
 *  Method: datastream.projects.locations.privateConnections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsList : GTLRDatastreamQuery

/** Filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of private connectivity configurations to return. If
 *  unspecified, at most 50 private connectivity configurations that will be
 *  returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token received from a previous `ListPrivateConnections` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListPrivateConnections` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent that owns the collection of private connectivity
 *  configurations.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDatastream_ListPrivateConnectionsResponse.
 *
 *  Use this method to list private connectivity configurations in a project and
 *  location.
 *
 *  @param parent Required. The parent that owns the collection of private
 *    connectivity configurations.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Use this method to create a route for a private connectivity configuration
 *  in a project and location.
 *
 *  Method: datastream.projects.locations.privateConnections.routes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesCreate : GTLRDatastreamQuery

/** Required. The parent that owns the collection of Routes. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The Route identifier. */
@property(nonatomic, copy, nullable) NSString *routeId;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to create a route for a private connectivity configuration
 *  in a project and location.
 *
 *  @param object The @c GTLRDatastream_Route to include in the query.
 *  @param parent Required. The parent that owns the collection of Routes.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesCreate
 */
+ (instancetype)queryWithObject:(GTLRDatastream_Route *)object
                         parent:(NSString *)parent;

@end

/**
 *  Use this method to delete a route.
 *
 *  Method: datastream.projects.locations.privateConnections.routes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesDelete : GTLRDatastreamQuery

/** Required. The name of the Route resource to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to delete a route.
 *
 *  @param name Required. The name of the Route resource to delete.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to get details about a route.
 *
 *  Method: datastream.projects.locations.privateConnections.routes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesGet : GTLRDatastreamQuery

/** Required. The name of the Route resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_Route.
 *
 *  Use this method to get details about a route.
 *
 *  @param name Required. The name of the Route resource to get.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to list routes created for a private connectivity
 *  configuration in a project and location.
 *
 *  Method: datastream.projects.locations.privateConnections.routes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesList : GTLRDatastreamQuery

/** Filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of Routes to return. The service may return fewer than this
 *  value. If unspecified, at most 50 Routes will be returned. The maximum value
 *  is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token received from a previous `ListRoutes` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListRoutes` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent that owns the collection of Routess. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDatastream_ListRoutesResponse.
 *
 *  Use this method to list routes created for a private connectivity
 *  configuration in a project and location.
 *
 *  @param parent Required. The parent that owns the collection of Routess.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsPrivateConnectionsRoutesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Use this method to create a stream.
 *
 *  Method: datastream.projects.locations.streams.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsCreate : GTLRDatastreamQuery

/** Optional. Create the stream without validating it. */
@property(nonatomic, assign) BOOL force;

/** Required. The parent that owns the collection of streams. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The stream identifier. */
@property(nonatomic, copy, nullable) NSString *streamId;

/**
 *  Optional. Only validate the stream, but don't create any resources. The
 *  default is false.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to create a stream.
 *
 *  @param object The @c GTLRDatastream_Stream to include in the query.
 *  @param parent Required. The parent that owns the collection of streams.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsCreate
 */
+ (instancetype)queryWithObject:(GTLRDatastream_Stream *)object
                         parent:(NSString *)parent;

@end

/**
 *  Use this method to delete a stream.
 *
 *  Method: datastream.projects.locations.streams.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsDelete : GTLRDatastreamQuery

/** Required. The name of the stream resource to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to delete a stream.
 *
 *  @param name Required. The name of the stream resource to delete.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to get details about a stream.
 *
 *  Method: datastream.projects.locations.streams.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsGet : GTLRDatastreamQuery

/** Required. The name of the stream resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_Stream.
 *
 *  Use this method to get details about a stream.
 *
 *  @param name Required. The name of the stream resource to get.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to list streams in a project and location.
 *
 *  Method: datastream.projects.locations.streams.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsList : GTLRDatastreamQuery

/** Filter request. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order by fields for the result. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of streams to return. If unspecified, at most 50 streams will
 *  be returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token received from a previous `ListStreams` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListStreams` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent that owns the collection of streams. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDatastream_ListStreamsResponse.
 *
 *  Use this method to list streams in a project and location.
 *
 *  @param parent Required. The parent that owns the collection of streams.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Use this method to get details about a stream object.
 *
 *  Method: datastream.projects.locations.streams.objects.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsGet : GTLRDatastreamQuery

/** Required. The name of the stream object resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatastream_StreamObject.
 *
 *  Use this method to get details about a stream object.
 *
 *  @param name Required. The name of the stream object resource to get.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Use this method to list the objects of a specific stream.
 *
 *  Method: datastream.projects.locations.streams.objects.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsList : GTLRDatastreamQuery

/**
 *  Maximum number of objects to return. Default is 50. The maximum value is
 *  1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token received from a previous `ListStreamObjectsRequest` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListStreamObjectsRequest` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent stream that owns the collection of objects. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDatastream_ListStreamObjectsResponse.
 *
 *  Use this method to list the objects of a specific stream.
 *
 *  @param parent Required. The parent stream that owns the collection of
 *    objects.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Use this method to look up a stream object by its source object identifier.
 *
 *  Method: datastream.projects.locations.streams.objects.lookup
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsLookup : GTLRDatastreamQuery

/** Required. The parent stream that owns the collection of objects. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDatastream_StreamObject.
 *
 *  Use this method to look up a stream object by its source object identifier.
 *
 *  @param object The @c GTLRDatastream_LookupStreamObjectRequest to include in
 *    the query.
 *  @param parent Required. The parent stream that owns the collection of
 *    objects.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsLookup
 */
+ (instancetype)queryWithObject:(GTLRDatastream_LookupStreamObjectRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Use this method to start a backfill job for the specified stream object.
 *
 *  Method: datastream.projects.locations.streams.objects.startBackfillJob
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsStartBackfillJob : GTLRDatastreamQuery

/**
 *  Required. The name of the stream object resource to start a backfill job
 *  for.
 */
@property(nonatomic, copy, nullable) NSString *object;

/**
 *  Fetches a @c GTLRDatastream_StartBackfillJobResponse.
 *
 *  Use this method to start a backfill job for the specified stream object.
 *
 *  @param object The @c GTLRDatastream_StartBackfillJobRequest to include in
 *    the query.
 *  @param object_param Required. The name of the stream object resource to
 *    start a backfill job for.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsStartBackfillJob
 */
+ (instancetype)queryWithObject:(GTLRDatastream_StartBackfillJobRequest *)object
                         object:(NSString *)object_param;

@end

/**
 *  Use this method to stop a backfill job for the specified stream object.
 *
 *  Method: datastream.projects.locations.streams.objects.stopBackfillJob
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsStopBackfillJob : GTLRDatastreamQuery

/**
 *  Required. The name of the stream object resource to stop the backfill job
 *  for.
 */
@property(nonatomic, copy, nullable) NSString *object;

/**
 *  Fetches a @c GTLRDatastream_StopBackfillJobResponse.
 *
 *  Use this method to stop a backfill job for the specified stream object.
 *
 *  @param object The @c GTLRDatastream_StopBackfillJobRequest to include in the
 *    query.
 *  @param object_param Required. The name of the stream object resource to stop
 *    the backfill job for.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsObjectsStopBackfillJob
 */
+ (instancetype)queryWithObject:(GTLRDatastream_StopBackfillJobRequest *)object
                         object:(NSString *)object_param;

@end

/**
 *  Use this method to update the configuration of a stream.
 *
 *  Method: datastream.projects.locations.streams.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatastreamCloudPlatform
 */
@interface GTLRDatastreamQuery_ProjectsLocationsStreamsPatch : GTLRDatastreamQuery

/** Optional. Update the stream without validating it. */
@property(nonatomic, assign) BOOL force;

/** Output only. The stream's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Field mask is used to specify the fields to be overwritten in the
 *  stream resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. Only validate the stream with the changes, without actually
 *  updating it. The default is false.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRDatastream_Operation.
 *
 *  Use this method to update the configuration of a stream.
 *
 *  @param object The @c GTLRDatastream_Stream to include in the query.
 *  @param name Output only. The stream's name.
 *
 *  @return GTLRDatastreamQuery_ProjectsLocationsStreamsPatch
 */
+ (instancetype)queryWithObject:(GTLRDatastream_Stream *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
