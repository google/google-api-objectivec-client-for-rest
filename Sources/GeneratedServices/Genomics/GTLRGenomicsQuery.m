// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Genomics API (genomics/v2alpha1)
// Description:
//   Uploads, processes, queries, and searches Genomics data in the cloud.
// Documentation:
//   https://cloud.google.com/genomics

#import <GoogleAPIClientForREST/GTLRGenomicsQuery.h>

@implementation GTLRGenomicsQuery

@dynamic fields;

@end

@implementation GTLRGenomicsQuery_PipelinesRun

+ (instancetype)queryWithObject:(GTLRGenomics_RunPipelineRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v2alpha1/pipelines:run";
  GTLRGenomicsQuery_PipelinesRun *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRGenomics_Operation class];
  query.loggingName = @"genomics.pipelines.run";
  return query;
}

@end

@implementation GTLRGenomicsQuery_ProjectsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRGenomics_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2alpha1/{+name}:cancel";
  GTLRGenomicsQuery_ProjectsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRGenomics_Empty class];
  query.loggingName = @"genomics.projects.operations.cancel";
  return query;
}

@end

@implementation GTLRGenomicsQuery_ProjectsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2alpha1/{+name}";
  GTLRGenomicsQuery_ProjectsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGenomics_Operation class];
  query.loggingName = @"genomics.projects.operations.get";
  return query;
}

@end

@implementation GTLRGenomicsQuery_ProjectsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2alpha1/{+name}";
  GTLRGenomicsQuery_ProjectsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGenomics_ListOperationsResponse class];
  query.loggingName = @"genomics.projects.operations.list";
  return query;
}

@end

@implementation GTLRGenomicsQuery_ProjectsWorkersCheckIn

@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"identifier" : @"id" };
}

+ (instancetype)queryWithObject:(GTLRGenomics_CheckInRequest *)object
                     identifier:(NSString *)identifier {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"id" ];
  NSString *pathURITemplate = @"v2alpha1/{+id}:checkIn";
  GTLRGenomicsQuery_ProjectsWorkersCheckIn *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRGenomics_CheckInResponse class];
  query.loggingName = @"genomics.projects.workers.checkIn";
  return query;
}

@end

@implementation GTLRGenomicsQuery_WorkersCheckIn

@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"identifier" : @"id" };
}

+ (instancetype)queryWithObject:(GTLRGenomics_CheckInRequest *)object
                     identifier:(NSString *)identifier {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"id" ];
  NSString *pathURITemplate = @"v2alpha1/workers/{id}:checkIn";
  GTLRGenomicsQuery_WorkersCheckIn *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRGenomics_CheckInResponse class];
  query.loggingName = @"genomics.workers.checkIn";
  return query;
}

@end
