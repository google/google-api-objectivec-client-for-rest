// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Genomics API (genomics/v2alpha1)
// Description:
//   Uploads, processes, queries, and searches Genomics data in the cloud.
// Documentation:
//   https://cloud.google.com/genomics

#import <GoogleAPIClientForREST/GTLRGenomicsObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRGenomics_Action.flags
NSString * const kGTLRGenomics_Action_Flags_AlwaysRun          = @"ALWAYS_RUN";
NSString * const kGTLRGenomics_Action_Flags_BlockExternalNetwork = @"BLOCK_EXTERNAL_NETWORK";
NSString * const kGTLRGenomics_Action_Flags_DisableImagePrefetch = @"DISABLE_IMAGE_PREFETCH";
NSString * const kGTLRGenomics_Action_Flags_DisableStandardErrorCapture = @"DISABLE_STANDARD_ERROR_CAPTURE";
NSString * const kGTLRGenomics_Action_Flags_EnableFuse         = @"ENABLE_FUSE";
NSString * const kGTLRGenomics_Action_Flags_FlagUnspecified    = @"FLAG_UNSPECIFIED";
NSString * const kGTLRGenomics_Action_Flags_IgnoreExitStatus   = @"IGNORE_EXIT_STATUS";
NSString * const kGTLRGenomics_Action_Flags_PublishExposedPorts = @"PUBLISH_EXPOSED_PORTS";
NSString * const kGTLRGenomics_Action_Flags_RunInBackground    = @"RUN_IN_BACKGROUND";

// GTLRGenomics_FailedEvent.code
NSString * const kGTLRGenomics_FailedEvent_Code_Aborted        = @"ABORTED";
NSString * const kGTLRGenomics_FailedEvent_Code_AlreadyExists  = @"ALREADY_EXISTS";
NSString * const kGTLRGenomics_FailedEvent_Code_Cancelled      = @"CANCELLED";
NSString * const kGTLRGenomics_FailedEvent_Code_DataLoss       = @"DATA_LOSS";
NSString * const kGTLRGenomics_FailedEvent_Code_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRGenomics_FailedEvent_Code_FailedPrecondition = @"FAILED_PRECONDITION";
NSString * const kGTLRGenomics_FailedEvent_Code_Internal       = @"INTERNAL";
NSString * const kGTLRGenomics_FailedEvent_Code_InvalidArgument = @"INVALID_ARGUMENT";
NSString * const kGTLRGenomics_FailedEvent_Code_NotFound       = @"NOT_FOUND";
NSString * const kGTLRGenomics_FailedEvent_Code_Ok             = @"OK";
NSString * const kGTLRGenomics_FailedEvent_Code_OutOfRange     = @"OUT_OF_RANGE";
NSString * const kGTLRGenomics_FailedEvent_Code_PermissionDenied = @"PERMISSION_DENIED";
NSString * const kGTLRGenomics_FailedEvent_Code_ResourceExhausted = @"RESOURCE_EXHAUSTED";
NSString * const kGTLRGenomics_FailedEvent_Code_Unauthenticated = @"UNAUTHENTICATED";
NSString * const kGTLRGenomics_FailedEvent_Code_Unavailable    = @"UNAVAILABLE";
NSString * const kGTLRGenomics_FailedEvent_Code_Unimplemented  = @"UNIMPLEMENTED";
NSString * const kGTLRGenomics_FailedEvent_Code_Unknown        = @"UNKNOWN";

// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Accelerator
//

@implementation GTLRGenomics_Accelerator
@dynamic count, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Action
//

@implementation GTLRGenomics_Action
@dynamic commands, credentials, encryptedEnvironment, entrypoint, environment,
         flags, imageUri, labels, mounts, name, pidNamespace, portMappings,
         timeout;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"commands" : [NSString class],
    @"flags" : [NSString class],
    @"mounts" : [GTLRGenomics_Mount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Action_Environment
//

@implementation GTLRGenomics_Action_Environment

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Action_Labels
//

@implementation GTLRGenomics_Action_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Action_PortMappings
//

@implementation GTLRGenomics_Action_PortMappings

+ (Class)classForAdditionalProperties {
  return [NSNumber class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CancelOperationRequest
//

@implementation GTLRGenomics_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CheckInRequest
//

@implementation GTLRGenomics_CheckInRequest
@dynamic deadlineExpired, event, events, result, sosReport, workerStatus;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"events" : [GTLRGenomics_TimestampedEvent class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CheckInRequest_Event
//

@implementation GTLRGenomics_CheckInRequest_Event

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CheckInResponse
//

@implementation GTLRGenomics_CheckInResponse
@dynamic deadline, features, metadata;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CheckInResponse_Features
//

@implementation GTLRGenomics_CheckInResponse_Features

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_CheckInResponse_Metadata
//

@implementation GTLRGenomics_CheckInResponse_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerKilledEvent
//

@implementation GTLRGenomics_ContainerKilledEvent
@dynamic actionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerStartedEvent
//

@implementation GTLRGenomics_ContainerStartedEvent
@dynamic actionId, ipAddress, portMappings;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerStartedEvent_PortMappings
//

@implementation GTLRGenomics_ContainerStartedEvent_PortMappings

+ (Class)classForAdditionalProperties {
  return [NSNumber class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ContainerStoppedEvent
//

@implementation GTLRGenomics_ContainerStoppedEvent
@dynamic actionId, exitStatus, stderr;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_DelayedEvent
//

@implementation GTLRGenomics_DelayedEvent
@dynamic cause, metrics;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"metrics" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Disk
//

@implementation GTLRGenomics_Disk
@dynamic name, sizeGb, sourceImage, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_DiskStatus
//

@implementation GTLRGenomics_DiskStatus
@dynamic freeSpaceBytes, totalSpaceBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Empty
//

@implementation GTLRGenomics_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Event
//

@implementation GTLRGenomics_Event
@dynamic descriptionProperty, details, timestamp;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Event_Details
//

@implementation GTLRGenomics_Event_Details

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ExistingDisk
//

@implementation GTLRGenomics_ExistingDisk
@dynamic disk;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_FailedEvent
//

@implementation GTLRGenomics_FailedEvent
@dynamic cause, code;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ListOperationsResponse
//

@implementation GTLRGenomics_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRGenomics_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Metadata
//

@implementation GTLRGenomics_Metadata
@dynamic createTime, endTime, events, labels, pipeline, startTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"events" : [GTLRGenomics_Event class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Metadata_Labels
//

@implementation GTLRGenomics_Metadata_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Mount
//

@implementation GTLRGenomics_Mount
@dynamic disk, path, readOnly;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Network
//

@implementation GTLRGenomics_Network
@dynamic name, subnetwork, usePrivateAddress;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_NFSMount
//

@implementation GTLRGenomics_NFSMount
@dynamic target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Operation
//

@implementation GTLRGenomics_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Operation_Metadata
//

@implementation GTLRGenomics_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Operation_Response
//

@implementation GTLRGenomics_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_PersistentDisk
//

@implementation GTLRGenomics_PersistentDisk
@dynamic sizeGb, sourceImage, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Pipeline
//

@implementation GTLRGenomics_Pipeline
@dynamic actions, encryptedEnvironment, environment, resources, timeout;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"actions" : [GTLRGenomics_Action class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Pipeline_Environment
//

@implementation GTLRGenomics_Pipeline_Environment

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_PullStartedEvent
//

@implementation GTLRGenomics_PullStartedEvent
@dynamic imageUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_PullStoppedEvent
//

@implementation GTLRGenomics_PullStoppedEvent
@dynamic imageUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Resources
//

@implementation GTLRGenomics_Resources
@dynamic projectId, regions, virtualMachine, zones;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"regions" : [NSString class],
    @"zones" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_RunPipelineRequest
//

@implementation GTLRGenomics_RunPipelineRequest
@dynamic labels, pipeline, pubSubTopic;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_RunPipelineRequest_Labels
//

@implementation GTLRGenomics_RunPipelineRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_RunPipelineResponse
//

@implementation GTLRGenomics_RunPipelineResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Secret
//

@implementation GTLRGenomics_Secret
@dynamic cipherText, keyName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_ServiceAccount
//

@implementation GTLRGenomics_ServiceAccount
@dynamic email, scopes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Status
//

@implementation GTLRGenomics_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRGenomics_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Status_Details_Item
//

@implementation GTLRGenomics_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_TimestampedEvent
//

@implementation GTLRGenomics_TimestampedEvent
@dynamic data, timestamp;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_TimestampedEvent_Data
//

@implementation GTLRGenomics_TimestampedEvent_Data

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_UnexpectedExitStatusEvent
//

@implementation GTLRGenomics_UnexpectedExitStatusEvent
@dynamic actionId, exitStatus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VirtualMachine
//

@implementation GTLRGenomics_VirtualMachine
@dynamic accelerators, bootDiskSizeGb, bootImage, cpuPlatform, disks,
         dockerCacheImages, enableStackdriverMonitoring, labels, machineType,
         network, nvidiaDriverVersion, preemptible, reservation, serviceAccount,
         volumes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accelerators" : [GTLRGenomics_Accelerator class],
    @"disks" : [GTLRGenomics_Disk class],
    @"dockerCacheImages" : [NSString class],
    @"volumes" : [GTLRGenomics_Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_VirtualMachine_Labels
//

@implementation GTLRGenomics_VirtualMachine_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_Volume
//

@implementation GTLRGenomics_Volume
@dynamic existingDisk, nfsMount, persistentDisk, volume;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_WorkerAssignedEvent
//

@implementation GTLRGenomics_WorkerAssignedEvent
@dynamic instance, machineType, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_WorkerReleasedEvent
//

@implementation GTLRGenomics_WorkerReleasedEvent
@dynamic instance, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_WorkerStatus
//

@implementation GTLRGenomics_WorkerStatus
@dynamic attachedDisks, bootDisk, freeRamBytes, totalRamBytes, uptimeSeconds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGenomics_WorkerStatus_AttachedDisks
//

@implementation GTLRGenomics_WorkerStatus_AttachedDisks

+ (Class)classForAdditionalProperties {
  return [GTLRGenomics_DiskStatus class];
}

@end
