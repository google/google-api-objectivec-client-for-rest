// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Meet API (meet/v2)
// Description:
//   Create and manage meetings in Google Meet.
// Documentation:
//   https://developers.google.com/meet/api

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRMeetObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Meet query classes.
 */
@interface GTLRMeetQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets a conference record by conference ID.
 *
 *  Method: meet.conferenceRecords.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsGet : GTLRMeetQuery

/** Required. Resource name of the conference. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_ConferenceRecord.
 *
 *  Gets a conference record by conference ID.
 *
 *  @param name Required. Resource name of the conference.
 *
 *  @return GTLRMeetQuery_ConferenceRecordsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the conference records. By default, ordered by start time and in
 *  descending order.
 *
 *  Method: meet.conferenceRecords.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsList : GTLRMeetQuery

/**
 *  Optional. User specified filtering condition in [EBNF
 *  format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
 *  The following are the filterable fields: * `space.meeting_code` *
 *  `space.name` * `start_time` * `end_time` For example, consider the following
 *  filters: * `space.name = "spaces/NAME"` * `space.meeting_code =
 *  "abc-mnop-xyz"` * `start_time>="2024-01-01T00:00:00.000Z" AND
 *  start_time<="2024-01-02T00:00:00.000Z"` * `end_time IS NULL`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Maximum number of conference records to return. The service might
 *  return fewer than this value. If unspecified, at most 25 conference records
 *  are returned. The maximum value is 100; values above 100 are coerced to 100.
 *  Maximum might change in the future.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. Page token returned from previous List Call. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRMeet_ListConferenceRecordsResponse.
 *
 *  Lists the conference records. By default, ordered by start time and in
 *  descending order.
 *
 *  @return GTLRMeetQuery_ConferenceRecordsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets a participant by participant ID.
 *
 *  Method: meet.conferenceRecords.participants.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsParticipantsGet : GTLRMeetQuery

/** Required. Resource name of the participant. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_Participant.
 *
 *  Gets a participant by participant ID.
 *
 *  @param name Required. Resource name of the participant.
 *
 *  @return GTLRMeetQuery_ConferenceRecordsParticipantsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the participants in a conference record. By default, ordered by join
 *  time and in descending order. This API supports `fields` as standard
 *  parameters like every other API. However, when the `fields` request
 *  parameter is omitted, this API defaults to `'participants/ *,
 *  next_page_token'`.
 *
 *  Method: meet.conferenceRecords.participants.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsParticipantsList : GTLRMeetQuery

/**
 *  Optional. User specified filtering condition in [EBNF
 *  format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
 *  The following are the filterable fields: * `earliest_start_time` *
 *  `latest_end_time` For example, `latest_end_time IS NULL` returns active
 *  participants in the conference.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of participants to return. The service might return fewer
 *  than this value. If unspecified, at most 100 participants are returned. The
 *  maximum value is 250; values above 250 are coerced to 250. Maximum might
 *  change in the future.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Page token returned from previous List Call. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Format: `conferenceRecords/{conference_record}` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMeet_ListParticipantsResponse.
 *
 *  Lists the participants in a conference record. By default, ordered by join
 *  time and in descending order. This API supports `fields` as standard
 *  parameters like every other API. However, when the `fields` request
 *  parameter is omitted, this API defaults to `'participants/ *,
 *  next_page_token'`.
 *
 *  @param parent Required. Format: `conferenceRecords/{conference_record}`
 *
 *  @return GTLRMeetQuery_ConferenceRecordsParticipantsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a participant session by participant session ID.
 *
 *  Method: meet.conferenceRecords.participants.participantSessions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsParticipantsParticipantSessionsGet : GTLRMeetQuery

/** Required. Resource name of the participant. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_ParticipantSession.
 *
 *  Gets a participant session by participant session ID.
 *
 *  @param name Required. Resource name of the participant.
 *
 *  @return GTLRMeetQuery_ConferenceRecordsParticipantsParticipantSessionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the participant sessions of a participant in a conference record. By
 *  default, ordered by join time and in descending order. This API supports
 *  `fields` as standard parameters like every other API. However, when the
 *  `fields` request parameter is omitted this API defaults to
 *  `'participantsessions/ *, next_page_token'`.
 *
 *  Method: meet.conferenceRecords.participants.participantSessions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsParticipantsParticipantSessionsList : GTLRMeetQuery

/**
 *  Optional. User specified filtering condition in [EBNF
 *  format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
 *  The following are the filterable fields: * `start_time` * `end_time` For
 *  example, `end_time IS NULL` returns active participant sessions in the
 *  conference record.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Maximum number of participant sessions to return. The service
 *  might return fewer than this value. If unspecified, at most 100 participants
 *  are returned. The maximum value is 250; values above 250 are coerced to 250.
 *  Maximum might change in the future.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. Page token returned from previous List Call. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Format:
 *  `conferenceRecords/{conference_record}/participants/{participant}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMeet_ListParticipantSessionsResponse.
 *
 *  Lists the participant sessions of a participant in a conference record. By
 *  default, ordered by join time and in descending order. This API supports
 *  `fields` as standard parameters like every other API. However, when the
 *  `fields` request parameter is omitted this API defaults to
 *  `'participantsessions/ *, next_page_token'`.
 *
 *  @param parent Required. Format:
 *    `conferenceRecords/{conference_record}/participants/{participant}`
 *
 *  @return GTLRMeetQuery_ConferenceRecordsParticipantsParticipantSessionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a recording by recording ID.
 *
 *  Method: meet.conferenceRecords.recordings.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsRecordingsGet : GTLRMeetQuery

/** Required. Resource name of the recording. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_Recording.
 *
 *  Gets a recording by recording ID.
 *
 *  @param name Required. Resource name of the recording.
 *
 *  @return GTLRMeetQuery_ConferenceRecordsRecordingsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the recording resources from the conference record. By default,
 *  ordered by start time and in ascending order.
 *
 *  Method: meet.conferenceRecords.recordings.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsRecordingsList : GTLRMeetQuery

/**
 *  Maximum number of recordings to return. The service might return fewer than
 *  this value. If unspecified, at most 10 recordings are returned. The maximum
 *  value is 100; values above 100 are coerced to 100. Maximum might change in
 *  the future.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Page token returned from previous List Call. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Format: `conferenceRecords/{conference_record}` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMeet_ListRecordingsResponse.
 *
 *  Lists the recording resources from the conference record. By default,
 *  ordered by start time and in ascending order.
 *
 *  @param parent Required. Format: `conferenceRecords/{conference_record}`
 *
 *  @return GTLRMeetQuery_ConferenceRecordsRecordingsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a `TranscriptEntry` resource by entry ID. Note: The transcript entries
 *  returned by the Google Meet API might not match the transcription found in
 *  the Google Docs transcript file. This can occur when the Google Docs
 *  transcript file is modified after generation.
 *
 *  Method: meet.conferenceRecords.transcripts.entries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsTranscriptsEntriesGet : GTLRMeetQuery

/** Required. Resource name of the `TranscriptEntry`. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_TranscriptEntry.
 *
 *  Gets a `TranscriptEntry` resource by entry ID. Note: The transcript entries
 *  returned by the Google Meet API might not match the transcription found in
 *  the Google Docs transcript file. This can occur when the Google Docs
 *  transcript file is modified after generation.
 *
 *  @param name Required. Resource name of the `TranscriptEntry`.
 *
 *  @return GTLRMeetQuery_ConferenceRecordsTranscriptsEntriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the structured transcript entries per transcript. By default, ordered
 *  by start time and in ascending order. Note: The transcript entries returned
 *  by the Google Meet API might not match the transcription found in the Google
 *  Docs transcript file. This can occur when the Google Docs transcript file is
 *  modified after generation.
 *
 *  Method: meet.conferenceRecords.transcripts.entries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsTranscriptsEntriesList : GTLRMeetQuery

/**
 *  Maximum number of entries to return. The service might return fewer than
 *  this value. If unspecified, at most 10 entries are returned. The maximum
 *  value is 100; values above 100 are coerced to 100. Maximum might change in
 *  the future.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Page token returned from previous List Call. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Format:
 *  `conferenceRecords/{conference_record}/transcripts/{transcript}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMeet_ListTranscriptEntriesResponse.
 *
 *  Lists the structured transcript entries per transcript. By default, ordered
 *  by start time and in ascending order. Note: The transcript entries returned
 *  by the Google Meet API might not match the transcription found in the Google
 *  Docs transcript file. This can occur when the Google Docs transcript file is
 *  modified after generation.
 *
 *  @param parent Required. Format:
 *    `conferenceRecords/{conference_record}/transcripts/{transcript}`
 *
 *  @return GTLRMeetQuery_ConferenceRecordsTranscriptsEntriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a transcript by transcript ID.
 *
 *  Method: meet.conferenceRecords.transcripts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsTranscriptsGet : GTLRMeetQuery

/** Required. Resource name of the transcript. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_Transcript.
 *
 *  Gets a transcript by transcript ID.
 *
 *  @param name Required. Resource name of the transcript.
 *
 *  @return GTLRMeetQuery_ConferenceRecordsTranscriptsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the set of transcripts from the conference record. By default, ordered
 *  by start time and in ascending order.
 *
 *  Method: meet.conferenceRecords.transcripts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 */
@interface GTLRMeetQuery_ConferenceRecordsTranscriptsList : GTLRMeetQuery

/**
 *  Maximum number of transcripts to return. The service might return fewer than
 *  this value. If unspecified, at most 10 transcripts are returned. The maximum
 *  value is 100; values above 100 are coerced to 100. Maximum might change in
 *  the future.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Page token returned from previous List Call. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Format: `conferenceRecords/{conference_record}` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRMeet_ListTranscriptsResponse.
 *
 *  Lists the set of transcripts from the conference record. By default, ordered
 *  by start time and in ascending order.
 *
 *  @param parent Required. Format: `conferenceRecords/{conference_record}`
 *
 *  @return GTLRMeetQuery_ConferenceRecordsTranscriptsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a space.
 *
 *  Method: meet.spaces.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 */
@interface GTLRMeetQuery_SpacesCreate : GTLRMeetQuery

/**
 *  Fetches a @c GTLRMeet_Space.
 *
 *  Creates a space.
 *
 *  @param object The @c GTLRMeet_Space to include in the query.
 *
 *  @return GTLRMeetQuery_SpacesCreate
 */
+ (instancetype)queryWithObject:(GTLRMeet_Space *)object;

@end

/**
 *  Ends an active conference (if there's one). For an example, see [End active
 *  conference](https://developers.google.com/meet/api/guides/meeting-spaces#end-active-conference).
 *
 *  Method: meet.spaces.endActiveConference
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 */
@interface GTLRMeetQuery_SpacesEndActiveConference : GTLRMeetQuery

/**
 *  Required. Resource name of the space. Format: `spaces/{space}`. `{space}` is
 *  the resource identifier for the space. It's a unique, server-generated ID
 *  and is case sensitive. For example, `jQCFfuBOdN5z`. For more information,
 *  see [How Meet identifies a meeting
 *  space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_Empty.
 *
 *  Ends an active conference (if there's one). For an example, see [End active
 *  conference](https://developers.google.com/meet/api/guides/meeting-spaces#end-active-conference).
 *
 *  @param object The @c GTLRMeet_EndActiveConferenceRequest to include in the
 *    query.
 *  @param name Required. Resource name of the space. Format: `spaces/{space}`.
 *    `{space}` is the resource identifier for the space. It's a unique,
 *    server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`.
 *    For more information, see [How Meet identifies a meeting
 *    space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
 *
 *  @return GTLRMeetQuery_SpacesEndActiveConference
 */
+ (instancetype)queryWithObject:(GTLRMeet_EndActiveConferenceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details about a meeting space. For an example, see [Get a meeting
 *  space](https://developers.google.com/meet/api/guides/meeting-spaces#get-meeting-space).
 *
 *  Method: meet.spaces.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceReadonly
 *    @c kGTLRAuthScopeMeetMeetingsSpaceSettings
 */
@interface GTLRMeetQuery_SpacesGet : GTLRMeetQuery

/**
 *  Required. Resource name of the space. Format: `spaces/{space}` or
 *  `spaces/{meetingCode}`. `{space}` is the resource identifier for the space.
 *  It's a unique, server-generated ID and is case sensitive. For example,
 *  `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space. It's a typeable,
 *  unique character string and is non-case sensitive. For example,
 *  `abc-mnop-xyz`. The maximum length is 128 characters. A `meetingCode`
 *  shouldn't be stored long term as it can become dissociated from a meeting
 *  space and can be reused for different meeting spaces in the future.
 *  Generally, a `meetingCode` expires 365 days after last use. For more
 *  information, see [Learn about meeting codes in Google
 *  Meet](https://support.google.com/meet/answer/10710509). For more
 *  information, see [How Meet identifies a meeting
 *  space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMeet_Space.
 *
 *  Gets details about a meeting space. For an example, see [Get a meeting
 *  space](https://developers.google.com/meet/api/guides/meeting-spaces#get-meeting-space).
 *
 *  @param name Required. Resource name of the space. Format: `spaces/{space}`
 *    or `spaces/{meetingCode}`. `{space}` is the resource identifier for the
 *    space. It's a unique, server-generated ID and is case sensitive. For
 *    example, `jQCFfuBOdN5z`. `{meetingCode}` is an alias for the space. It's a
 *    typeable, unique character string and is non-case sensitive. For example,
 *    `abc-mnop-xyz`. The maximum length is 128 characters. A `meetingCode`
 *    shouldn't be stored long term as it can become dissociated from a meeting
 *    space and can be reused for different meeting spaces in the future.
 *    Generally, a `meetingCode` expires 365 days after last use. For more
 *    information, see [Learn about meeting codes in Google
 *    Meet](https://support.google.com/meet/answer/10710509). For more
 *    information, see [How Meet identifies a meeting
 *    space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
 *
 *  @return GTLRMeetQuery_SpacesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates details about a meeting space. For an example, see [Update a meeting
 *  space](https://developers.google.com/meet/api/guides/meeting-spaces#update-meeting-space).
 *
 *  Method: meet.spaces.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeMeetMeetingsSpaceCreated
 *    @c kGTLRAuthScopeMeetMeetingsSpaceSettings
 */
@interface GTLRMeetQuery_SpacesPatch : GTLRMeetQuery

/**
 *  Immutable. Resource name of the space. Format: `spaces/{space}`. `{space}`
 *  is the resource identifier for the space. It's a unique, server-generated ID
 *  and is case sensitive. For example, `jQCFfuBOdN5z`. For more information,
 *  see [How Meet identifies a meeting
 *  space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Field mask used to specify the fields to be updated in the space.
 *  If update_mask isn't provided(not set, set with empty paths, or only has ""
 *  as paths), it defaults to update all fields provided with values in the
 *  request. Using "*" as update_mask will update all fields, including deleting
 *  fields not set in the request.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRMeet_Space.
 *
 *  Updates details about a meeting space. For an example, see [Update a meeting
 *  space](https://developers.google.com/meet/api/guides/meeting-spaces#update-meeting-space).
 *
 *  @param object The @c GTLRMeet_Space to include in the query.
 *  @param name Immutable. Resource name of the space. Format: `spaces/{space}`.
 *    `{space}` is the resource identifier for the space. It's a unique,
 *    server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`.
 *    For more information, see [How Meet identifies a meeting
 *    space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
 *
 *  @return GTLRMeetQuery_SpacesPatch
 */
+ (instancetype)queryWithObject:(GTLRMeet_Space *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
