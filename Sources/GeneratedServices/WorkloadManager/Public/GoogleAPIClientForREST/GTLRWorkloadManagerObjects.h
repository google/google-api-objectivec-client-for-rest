// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Workload Manager API (workloadmanager/v1)
// Description:
//   Workload Manager is a service that provides tooling for enterprise
//   workloads to automate the deployment and validation of your workloads
//   against best practices and recommendations.
// Documentation:
//   https://cloud.google.com/workload-manager/docs

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRWorkloadManager_AgentCommand;
@class GTLRWorkloadManager_AgentCommand_Parameters;
@class GTLRWorkloadManager_BigQueryDestination;
@class GTLRWorkloadManager_BlobstoreLocation;
@class GTLRWorkloadManager_CloudAsset;
@class GTLRWorkloadManager_CloudAssetComposition;
@class GTLRWorkloadManager_Command;
@class GTLRWorkloadManager_DirectLocationAssignment;
@class GTLRWorkloadManager_Evaluation;
@class GTLRWorkloadManager_Evaluation_Labels;
@class GTLRWorkloadManager_Execution;
@class GTLRWorkloadManager_Execution_Labels;
@class GTLRWorkloadManager_ExecutionResult;
@class GTLRWorkloadManager_ExternalDataSources;
@class GTLRWorkloadManager_ExtraParameter;
@class GTLRWorkloadManager_GceInstanceFilter;
@class GTLRWorkloadManager_Insight;
@class GTLRWorkloadManager_IsolationExpectations;
@class GTLRWorkloadManager_Location;
@class GTLRWorkloadManager_Location_Labels;
@class GTLRWorkloadManager_Location_Metadata;
@class GTLRWorkloadManager_LocationAssignment;
@class GTLRWorkloadManager_LocationData;
@class GTLRWorkloadManager_Operation;
@class GTLRWorkloadManager_Operation_Metadata;
@class GTLRWorkloadManager_Operation_Response;
@class GTLRWorkloadManager_PlacerLocation;
@class GTLRWorkloadManager_RegionalMigDistributionPolicy;
@class GTLRWorkloadManager_RequirementOverride;
@class GTLRWorkloadManager_Resource;
@class GTLRWorkloadManager_ResourceFilter;
@class GTLRWorkloadManager_ResourceFilter_InclusionLabels;
@class GTLRWorkloadManager_ResourceStatus;
@class GTLRWorkloadManager_Rule;
@class GTLRWorkloadManager_SapDiscovery;
@class GTLRWorkloadManager_SapDiscoveryComponent;
@class GTLRWorkloadManager_SapDiscoveryComponentApplicationProperties;
@class GTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties;
@class GTLRWorkloadManager_SapDiscoveryMetadata;
@class GTLRWorkloadManager_SapDiscoveryResource;
@class GTLRWorkloadManager_SapDiscoveryResourceInstanceProperties;
@class GTLRWorkloadManager_SapDiscoveryResourceInstancePropertiesAppInstance;
@class GTLRWorkloadManager_SapDiscoveryWorkloadProperties;
@class GTLRWorkloadManager_SapDiscoveryWorkloadPropertiesProductVersion;
@class GTLRWorkloadManager_SapDiscoveryWorkloadPropertiesSoftwareComponentProperties;
@class GTLRWorkloadManager_SapValidation;
@class GTLRWorkloadManager_SapValidationValidationDetail;
@class GTLRWorkloadManager_SapValidationValidationDetail_Details;
@class GTLRWorkloadManager_ScannedResource;
@class GTLRWorkloadManager_ShellCommand;
@class GTLRWorkloadManager_SpannerLocation;
@class GTLRWorkloadManager_SqlserverValidation;
@class GTLRWorkloadManager_SqlserverValidationDetails;
@class GTLRWorkloadManager_SqlserverValidationDetails_Fields;
@class GTLRWorkloadManager_SqlserverValidationValidationDetail;
@class GTLRWorkloadManager_Status;
@class GTLRWorkloadManager_Status_Details_Item;
@class GTLRWorkloadManager_TenantProjectProxy;
@class GTLRWorkloadManager_ViolationDetails;
@class GTLRWorkloadManager_ViolationDetails_Observed;
@class GTLRWorkloadManager_ZoneConfiguration;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_Execution.runType

/**
 *  type of execution is one time
 *
 *  Value: "ONE_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_Execution_RunType_OneTime;
/**
 *  type of execution is scheduled
 *
 *  Value: "SCHEDULED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_Execution_RunType_Scheduled;
/**
 *  type of execution is unspecified
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_Execution_RunType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_Execution.state

/**
 *  the execution run failed
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_Execution_State_Failed;
/**
 *  the execution is running in backend service
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_Execution_State_Running;
/**
 *  state of execution is unspecified
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_Execution_State_StateUnspecified;
/**
 *  the execution run success
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_Execution_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_ExternalDataSources.type

/**
 *  BigQuery table
 *
 *  Value: "BIG_QUERY_TABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_ExternalDataSources_Type_BigQueryTable;
/**
 *  Unknown type
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_ExternalDataSources_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_IsolationExpectations.ziOrgPolicy

/** Value: "ZI_NOT_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiNotRequired;
/** Value: "ZI_PREFERRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiPreferred;
/** Value: "ZI_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiRequired;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZI_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiUnknown;
/** Value: "ZI_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_IsolationExpectations.ziRegionPolicy

/** Value: "ZI_REGION_POLICY_FAIL_CLOSED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyFailClosed;
/** Value: "ZI_REGION_POLICY_FAIL_OPEN" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyFailOpen;
/** Value: "ZI_REGION_POLICY_NOT_SET" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyNotSet;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZI_REGION_POLICY_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyUnknown;
/** Value: "ZI_REGION_POLICY_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_IsolationExpectations.ziRegionState

/** Value: "ZI_REGION_ENABLED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionEnabled;
/** Value: "ZI_REGION_NOT_ENABLED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionNotEnabled;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZI_REGION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionUnknown;
/** Value: "ZI_REGION_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_IsolationExpectations.zoneIsolation

/** Value: "ZI_NOT_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiNotRequired;
/** Value: "ZI_PREFERRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiPreferred;
/** Value: "ZI_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiRequired;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZI_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiUnknown;
/** Value: "ZI_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_IsolationExpectations.zoneSeparation

/** Value: "ZS_NOT_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsNotRequired;
/** Value: "ZS_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsRequired;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZS_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsUnknown;
/** Value: "ZS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_IsolationExpectations.zsOrgPolicy

/** Value: "ZS_NOT_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsNotRequired;
/** Value: "ZS_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsRequired;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZS_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsUnknown;
/** Value: "ZS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_IsolationExpectations.zsRegionState

/** Value: "ZS_REGION_ENABLED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionEnabled;
/** Value: "ZS_REGION_NOT_ENABLED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionNotEnabled;
/**
 *  To be used if tracking of the asset ZS-bit is not available
 *
 *  Value: "ZS_REGION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionUnknown;
/** Value: "ZS_REGION_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_LocationAssignment.locationType

/** Value: "CLOUD_REGION" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_CloudRegion;
/**
 *  11-20: Logical failure domains.
 *
 *  Value: "CLOUD_ZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_CloudZone;
/**
 *  1-10: Physical failure domains.
 *
 *  Value: "CLUSTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_Cluster;
/** Value: "GLOBAL" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_Global;
/** Value: "MULTI_REGION_GEO" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_MultiRegionGeo;
/** Value: "MULTI_REGION_JURISDICTION" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_MultiRegionJurisdiction;
/** Value: "OTHER" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_Other;
/** Value: "POP" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_Pop;
/** Value: "UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_LocationAssignment_LocationType_Unspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_RequirementOverride.ziOverride

/** Value: "ZI_NOT_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiNotRequired;
/** Value: "ZI_PREFERRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiPreferred;
/** Value: "ZI_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiRequired;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZI_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiUnknown;
/** Value: "ZI_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_RequirementOverride.zsOverride

/** Value: "ZS_NOT_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsNotRequired;
/** Value: "ZS_REQUIRED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsRequired;
/**
 *  To be used if tracking is not available
 *
 *  Value: "ZS_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsUnknown;
/** Value: "ZS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_ResourceStatus.state

/**
 *  Resource has no outstanding operations on it or has active Update
 *  operations.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_ResourceStatus_State_Active;
/**
 *  Resource has an active Create operation.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_ResourceStatus_State_Creating;
/**
 *  Resource has an active Delete operation.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_ResourceStatus_State_Deleting;
/**
 *  The state has not been populated in this message.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_ResourceStatus_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SapDiscoveryComponent.topologyType

/**
 *  A scale-out multi-node system.
 *
 *  Value: "TOPOLOGY_SCALE_OUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponent_TopologyType_TopologyScaleOut;
/**
 *  A scale-up single node system.
 *
 *  Value: "TOPOLOGY_SCALE_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponent_TopologyType_TopologyScaleUp;
/**
 *  Unspecified topology.
 *
 *  Value: "TOPOLOGY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponent_TopologyType_TopologyTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SapDiscoveryComponentApplicationProperties.applicationType

/**
 *  Unspecified application type
 *
 *  Value: "APPLICATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_ApplicationTypeUnspecified;
/**
 *  SAP Netweaver
 *
 *  Value: "NETWEAVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_Netweaver;
/**
 *  SAP Netweaver ABAP
 *
 *  Value: "NETWEAVER_ABAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_NetweaverAbap;
/**
 *  SAP Netweaver Java
 *
 *  Value: "NETWEAVER_JAVA"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_NetweaverJava;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties.databaseType

/**
 *  Unspecified database type.
 *
 *  Value: "DATABASE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_DatabaseTypeUnspecified;
/**
 *  IBM DB2
 *
 *  Value: "DB2"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_Db2;
/**
 *  SAP HANA
 *
 *  Value: "HANA"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_Hana;
/**
 *  SAP MAX_DB
 *
 *  Value: "MAX_DB"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_MaxDb;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SapDiscoveryResource.resourceKind

/**
 *  This is a compute address.
 *
 *  Value: "RESOURCE_KIND_ADDRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindAddress;
/**
 *  This is a compute backend service.
 *
 *  Value: "RESOURCE_KIND_BACKEND_SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindBackendService;
/**
 *  This is a compute disk.
 *
 *  Value: "RESOURCE_KIND_DISK"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindDisk;
/**
 *  This is a filestore instance.
 *
 *  Value: "RESOURCE_KIND_FILESTORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindFilestore;
/**
 *  This is a compute forwarding rule.
 *
 *  Value: "RESOURCE_KIND_FORWARDING_RULE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindForwardingRule;
/**
 *  This is a compute health check.
 *
 *  Value: "RESOURCE_KIND_HEALTH_CHECK"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindHealthCheck;
/**
 *  This is a compute instance.
 *
 *  Value: "RESOURCE_KIND_INSTANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindInstance;
/**
 *  This is a compute instance group.
 *
 *  Value: "RESOURCE_KIND_INSTANCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindInstanceGroup;
/**
 *  This is a compute network.
 *
 *  Value: "RESOURCE_KIND_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindNetwork;
/**
 *  This is a public accessible IP Address.
 *
 *  Value: "RESOURCE_KIND_PUBLIC_ADDRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindPublicAddress;
/**
 *  This is a compute subnetwork.
 *
 *  Value: "RESOURCE_KIND_SUBNETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindSubnetwork;
/**
 *  Unspecified resource kind.
 *
 *  Value: "RESOURCE_KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SapDiscoveryResource.resourceType

/**
 *  This is a compute resource.
 *
 *  Value: "RESOURCE_TYPE_COMPUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeCompute;
/**
 *  This is a network resource.
 *
 *  Value: "RESOURCE_TYPE_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeNetwork;
/**
 *  This a storage resource.
 *
 *  Value: "RESOURCE_TYPE_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeStorage;
/**
 *  Undefined resource type.
 *
 *  Value: "RESOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SapDiscoveryResourceInstanceProperties.instanceRole

/**
 *  Application server.
 *
 *  Value: "INSTANCE_ROLE_APP_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAppServer;
/**
 *  Application server and database.
 *
 *  Value: "INSTANCE_ROLE_APP_SERVER_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAppServerDatabase;
/**
 *  Application central services.
 *
 *  Value: "INSTANCE_ROLE_ASCS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscs;
/**
 *  Application central services and application server.
 *
 *  Value: "INSTANCE_ROLE_ASCS_APP_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsAppServer;
/**
 *  Application central services, application server and database.
 *
 *  Value: "INSTANCE_ROLE_ASCS_APP_SERVER_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsAppServerDatabase;
/**
 *  Application central services and database.
 *
 *  Value: "INSTANCE_ROLE_ASCS_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsDatabase;
/**
 *  Combinations of roles. Application central services and enqueue replication
 *  server.
 *
 *  Value: "INSTANCE_ROLE_ASCS_ERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErs;
/**
 *  Application central services, enqueue replication server and application
 *  server.
 *
 *  Value: "INSTANCE_ROLE_ASCS_ERS_APP_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErsAppServer;
/**
 *  Application central services, enqueue replication server, application server
 *  and database.
 *
 *  Value: "INSTANCE_ROLE_ASCS_ERS_APP_SERVER_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErsAppServerDatabase;
/**
 *  Application central services, enqueue replication server and database.
 *
 *  Value: "INSTANCE_ROLE_ASCS_ERS_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErsDatabase;
/**
 *  Database node.
 *
 *  Value: "INSTANCE_ROLE_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleDatabase;
/**
 *  Enqueue replication server.
 *
 *  Value: "INSTANCE_ROLE_ERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErs;
/**
 *  Enqueue replication server and application server.
 *
 *  Value: "INSTANCE_ROLE_ERS_APP_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErsAppServer;
/**
 *  Enqueue replication server, application server and database.
 *
 *  Value: "INSTANCE_ROLE_ERS_APP_SERVER_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErsAppServerDatabase;
/**
 *  Enqueue replication server and database.
 *
 *  Value: "INSTANCE_ROLE_ERS_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErsDatabase;
/**
 *  Unspecified instance role.
 *
 *  Value: "INSTANCE_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SapValidationValidationDetail.sapValidationType

/**
 *  The COROSYNC validation type collects Corosync configuration and runtime
 *  data. Corosync enables servers to interact as a HA cluster.
 *
 *  Value: "COROSYNC"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Corosync;
/**
 *  The CUSTOM validation type collects any customer-defined data that does not
 *  fall into any of the other categories of validations.
 *
 *  Value: "CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Custom;
/**
 *  The HANA validation type collects HANA configuration data. SAP HANA is an
 *  in-memory, column-oriented, relational database management system.
 *
 *  Value: "HANA"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Hana;
/**
 *  The HANA_SECURITY validation type collects HANA configuration data as it
 *  relates to SAP security best practices.
 *
 *  Value: "HANA_SECURITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_HanaSecurity;
/**
 *  The NETWEAVER validation type collects NetWeaver configuration data. SAP
 *  NetWeaver is a software stack for many of SAP SE's applications.
 *
 *  Value: "NETWEAVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Netweaver;
/**
 *  The PACEMAKER validation type collects Pacemaker configuration data.
 *  Pacemaker is a high-availability cluster resource manager.
 *
 *  Value: "PACEMAKER"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Pacemaker;
/**
 *  Unspecified type.
 *
 *  Value: "SAP_VALIDATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_SapValidationTypeUnspecified;
/**
 *  The SYSTEM validation type collects underlying system data from the VM.
 *
 *  Value: "SYSTEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_System;

// ----------------------------------------------------------------------------
// GTLRWorkloadManager_SqlserverValidationValidationDetail.type

/**
 *  The DB_BACKUP_POLICY table.
 *
 *  Value: "DB_BACKUP_POLICY"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbBackupPolicy;
/**
 *  The BUFFER_POOL_EXTENSION table.
 *
 *  Value: "DB_BUFFER_POOL_EXTENSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbBufferPoolExtension;
/**
 *  The CXPACKET_WAITS table.
 *
 *  Value: "DB_CXPACKET_WAITS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbCxpacketWaits;
/**
 *  The DB_INDEX_FRAGMENTATION table.
 *
 *  Value: "DB_INDEX_FRAGMENTATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbIndexFragmentation;
/**
 *  The LOG_DISK_SEPARATION table.
 *
 *  Value: "DB_LOG_DISK_SEPARATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbLogDiskSeparation;
/**
 *  The MAX_PARALLELISM table.
 *
 *  Value: "DB_MAX_PARALLELISM"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbMaxParallelism;
/**
 *  The MAX_SERVER_MEMORY table.
 *
 *  Value: "DB_MAX_SERVER_MEMORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbMaxServerMemory;
/**
 *  The DB_TABLE_INDEX_COMPRESSION table.
 *
 *  Value: "DB_TABLE_INDEX_COMPRESSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbTableIndexCompression;
/**
 *  The TRANSACTION_LOG_HANDLING table.
 *
 *  Value: "DB_TRANSACTION_LOG_HANDLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbTransactionLogHandling;
/**
 *  The VIRTUAL_LOG_FILE_COUNT table.
 *
 *  Value: "DB_VIRTUAL_LOG_FILE_COUNT"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbVirtualLogFileCount;
/**
 *  The INSTANCE_METRICS table.
 *
 *  Value: "INSTANCE_METRICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_InstanceMetrics;
/**
 *  The Sqlserver system named OS.
 *
 *  Value: "OS"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_Os;
/**
 *  Unspecified type.
 *
 *  Value: "SQLSERVER_VALIDATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_SqlserverValidationTypeUnspecified;

/**
 *  * An AgentCommand specifies a one-time executable program for the agent to
 *  run.
 */
@interface GTLRWorkloadManager_AgentCommand : GTLRObject

/**
 *  command is the name of the agent one-time executable that will be invoked.
 */
@property(nonatomic, copy, nullable) NSString *command;

/**
 *  parameters is a map of key/value pairs that can be used to specify
 *  additional one-time executable settings.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_AgentCommand_Parameters *parameters;

@end


/**
 *  parameters is a map of key/value pairs that can be used to specify
 *  additional one-time executable settings.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_AgentCommand_Parameters : GTLRObject
@end


/**
 *  Provides the mapping of a cloud asset to a direct physical location or to a
 *  proxy that defines the location on its behalf.
 */
@interface GTLRWorkloadManager_AssetLocation : GTLRObject

/**
 *  Spanner path of the CCFE RMS database. It is only applicable for CCFE
 *  tenants that use CCFE RMS for storing resource metadata.
 */
@property(nonatomic, copy, nullable) NSString *ccfeRmsPath;

/**
 *  Defines the customer expectation around ZI/ZS for this asset and ZI/ZS state
 *  of the region at the time of asset creation.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_IsolationExpectations *expected;

/** Defines extra parameters required for specific asset types. */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_ExtraParameter *> *extraParameters;

/** Contains all kinds of physical location definitions for this asset. */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_LocationData *> *locationData;

/**
 *  Defines parents assets if any in order to allow later generation of
 *  child_asset_location data via child assets.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_CloudAsset *> *parentAsset;

@end


/**
 *  Message describing big query destination
 */
@interface GTLRWorkloadManager_BigQueryDestination : GTLRObject

/**
 *  Optional. determine if results will be saved in a new table
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *createNewResultsTable;

/** Optional. destination dataset to save evaluation results */
@property(nonatomic, copy, nullable) NSString *destinationDataset;

@end


/**
 *  Policy ID that identified data placement in Blobstore as per
 *  go/blobstore-user-guide#data-metadata-placement-and-failure-domains
 */
@interface GTLRWorkloadManager_BlobstoreLocation : GTLRObject

@property(nonatomic, strong, nullable) NSArray<NSString *> *policyId;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRWorkloadManager_CancelOperationRequest : GTLRObject
@end


/**
 *  GTLRWorkloadManager_CloudAsset
 */
@interface GTLRWorkloadManager_CloudAsset : GTLRObject

@property(nonatomic, copy, nullable) NSString *assetName;
@property(nonatomic, copy, nullable) NSString *assetType;

@end


/**
 *  GTLRWorkloadManager_CloudAssetComposition
 */
@interface GTLRWorkloadManager_CloudAssetComposition : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_CloudAsset *> *childAsset;

@end


/**
 *  * Command specifies the type of command to execute.
 */
@interface GTLRWorkloadManager_Command : GTLRObject

/**
 *  AgentCommand specifies a one-time executable program for the agent to run.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_AgentCommand *agentCommand;

/** ShellCommand is invoked via the agent's command line executor. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_ShellCommand *shellCommand;

@end


/**
 *  GTLRWorkloadManager_DirectLocationAssignment
 */
@interface GTLRWorkloadManager_DirectLocationAssignment : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_LocationAssignment *> *location;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRWorkloadManager_Empty : GTLRObject
@end


/**
 *  LINT.IfChange Message describing Evaluation object
 */
@interface GTLRWorkloadManager_Evaluation : GTLRObject

/** Optional. BigQuery destination */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_BigQueryDestination *bigQueryDestination;

/** Output only. [Output only] Create time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The Cloud Storage bucket name for custom rules. */
@property(nonatomic, copy, nullable) NSString *customRulesBucket;

/**
 *  Description of the Evaluation
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Labels as key value pairs */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Evaluation_Labels *labels;

/**
 *  name of resource names have the form
 *  'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
 */
@property(nonatomic, copy, nullable) NSString *name;

/** annotations as key value pairs */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_ResourceFilter *resourceFilter;

/** Output only. [Output only] The updated rule ids if exist. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_ResourceStatus *resourceStatus;

/** the name of the rule */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ruleNames;

/** Output only. [Output only] The updated rule ids if exist. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ruleVersions;

/**
 *  crontab format schedule for scheduled evaluation, currently only support the
 *  following schedule: "0 * /1 * * *", "0 * /6 * * *", "0 * /12 * * *", "0 0 *
 *  /1 * *", "0 0 * /7 * *",
 */
@property(nonatomic, copy, nullable) NSString *schedule;

/** Output only. [Output only] Update time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Labels as key value pairs
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_Evaluation_Labels : GTLRObject
@end


/**
 *  Message describing Execution object
 */
@interface GTLRWorkloadManager_Execution : GTLRObject

/** Output only. [Output only] End time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Output only. [Output only] Evaluation ID */
@property(nonatomic, copy, nullable) NSString *evaluationId;

/** Optional. External data sources */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_ExternalDataSources *> *externalDataSources;

/** Output only. [Output only] Inventory time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *inventoryTime;

/** Labels as key value pairs */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Execution_Labels *labels;

/**
 *  The name of execution resource. The format is
 *  projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  type represent whether the execution executed directly by user or scheduled
 *  according evaluation.schedule field.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_Execution_RunType_OneTime type of execution
 *        is one time (Value: "ONE_TIME")
 *    @arg @c kGTLRWorkloadManager_Execution_RunType_Scheduled type of execution
 *        is scheduled (Value: "SCHEDULED")
 *    @arg @c kGTLRWorkloadManager_Execution_RunType_TypeUnspecified type of
 *        execution is unspecified (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *runType;

/** Output only. [Output only] Start time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. [Output only] State
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_Execution_State_Failed the execution run
 *        failed (Value: "FAILED")
 *    @arg @c kGTLRWorkloadManager_Execution_State_Running the execution is
 *        running in backend service (Value: "RUNNING")
 *    @arg @c kGTLRWorkloadManager_Execution_State_StateUnspecified state of
 *        execution is unspecified (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRWorkloadManager_Execution_State_Succeeded the execution run
 *        success (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Labels as key value pairs
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_Execution_Labels : GTLRObject
@end


/**
 *  Message describing the result of an execution
 */
@interface GTLRWorkloadManager_ExecutionResult : GTLRObject

/** The commands to remediate the violation. */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_Command *> *commands;

/** The URL for the documentation of the rule. */
@property(nonatomic, copy, nullable) NSString *documentationUrl;

/** The resource that violates the rule. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Resource *resource;

/** The rule that is violated in an evaluation. */
@property(nonatomic, copy, nullable) NSString *rule;

/** The severity of violation. */
@property(nonatomic, copy, nullable) NSString *severity;

/** The details of violation in an evaluation result. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_ViolationDetails *violationDetails;

/** The violation message of an execution. */
@property(nonatomic, copy, nullable) NSString *violationMessage;

@end


/**
 *  Message for external data sources
 */
@interface GTLRWorkloadManager_ExternalDataSources : GTLRObject

/**
 *  Required. The asset type of the external data source this can be one of
 *  go/cai-asset-types to override the default asset type or it can be a custom
 *  type defined by the user custom type must match the asset type in the rule
 */
@property(nonatomic, copy, nullable) NSString *assetType;

/**
 *  Optional. Name of external data source. The name will be used inside the
 *  rego/sql to refer the external data
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Type of external data source
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_ExternalDataSources_Type_BigQueryTable
 *        BigQuery table (Value: "BIG_QUERY_TABLE")
 *    @arg @c kGTLRWorkloadManager_ExternalDataSources_Type_TypeUnspecified
 *        Unknown type (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Required. URI of external data source. example of bq table
 *  {project_ID}.{dataset_ID}.{table_ID}
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Defines parameters that should only be used for specific asset types.
 */
@interface GTLRWorkloadManager_ExtraParameter : GTLRObject

/**
 *  Details about zones used by regional
 *  compute.googleapis.com/InstanceGroupManager to create instances.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_RegionalMigDistributionPolicy *regionalMigDistributionPolicy;

@end


/**
 *  Message describing compute engine instance filter
 */
@interface GTLRWorkloadManager_GceInstanceFilter : GTLRObject

/** Service account of compute engine */
@property(nonatomic, strong, nullable) NSArray<NSString *> *serviceAccounts;

@end


/**
 *  A presentation of host resource usage where the workload runs.
 */
@interface GTLRWorkloadManager_Insight : GTLRObject

/** Required. The instance id where the insight is generated from */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  The insights data for SAP system discovery. This is a copy of SAP System
 *  proto and should get updated whenever that one changes.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscovery *sapDiscovery;

/** The insights data for the SAP workload validation. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapValidation *sapValidation;

/** Output only. [Output only] Create time stamp */
@property(nonatomic, strong, nullable) GTLRDateTime *sentTime;

/** The insights data for the sqlserver workload validation. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SqlserverValidation *sqlserverValidation;

@end


/**
 *  GTLRWorkloadManager_IsolationExpectations
 */
@interface GTLRWorkloadManager_IsolationExpectations : GTLRObject

/**
 *  Explicit overrides for ZI and ZS requirements to be used for resources that
 *  should be excluded from ZI/ZS verification logic.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_RequirementOverride *requirementOverride;

/**
 *  ziOrgPolicy
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiNotRequired
 *        Value "ZI_NOT_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiPreferred
 *        Value "ZI_PREFERRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiRequired
 *        Value "ZI_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiUnknown
 *        To be used if tracking is not available (Value: "ZI_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiOrgPolicy_ZiUnspecified
 *        Value "ZI_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *ziOrgPolicy;

/**
 *  ziRegionPolicy
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyFailClosed
 *        Value "ZI_REGION_POLICY_FAIL_CLOSED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyFailOpen
 *        Value "ZI_REGION_POLICY_FAIL_OPEN"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyNotSet
 *        Value "ZI_REGION_POLICY_NOT_SET"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyUnknown
 *        To be used if tracking is not available (Value:
 *        "ZI_REGION_POLICY_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyUnspecified
 *        Value "ZI_REGION_POLICY_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *ziRegionPolicy;

/**
 *  ziRegionState
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionEnabled
 *        Value "ZI_REGION_ENABLED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionNotEnabled
 *        Value "ZI_REGION_NOT_ENABLED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionUnknown
 *        To be used if tracking is not available (Value: "ZI_REGION_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZiRegionState_ZiRegionUnspecified
 *        Value "ZI_REGION_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *ziRegionState;

/**
 *  Deprecated: use zi_org_policy, zi_region_policy and zi_region_state instead
 *  for setting ZI expectations as per go/zicy-publish-physical-location.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiNotRequired
 *        Value "ZI_NOT_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiPreferred
 *        Value "ZI_PREFERRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiRequired
 *        Value "ZI_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiUnknown
 *        To be used if tracking is not available (Value: "ZI_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneIsolation_ZiUnspecified
 *        Value "ZI_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *zoneIsolation GTLR_DEPRECATED;

/**
 *  Deprecated: use zs_org_policy, and zs_region_stateinstead for setting Zs
 *  expectations as per go/zicy-publish-physical-location.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsNotRequired
 *        Value "ZS_NOT_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsRequired
 *        Value "ZS_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsUnknown
 *        To be used if tracking is not available (Value: "ZS_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZoneSeparation_ZsUnspecified
 *        Value "ZS_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *zoneSeparation GTLR_DEPRECATED;

/**
 *  zsOrgPolicy
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsNotRequired
 *        Value "ZS_NOT_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsRequired
 *        Value "ZS_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsUnknown
 *        To be used if tracking is not available (Value: "ZS_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsOrgPolicy_ZsUnspecified
 *        Value "ZS_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *zsOrgPolicy;

/**
 *  zsRegionState
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionEnabled
 *        Value "ZS_REGION_ENABLED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionNotEnabled
 *        Value "ZS_REGION_NOT_ENABLED"
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionUnknown
 *        To be used if tracking of the asset ZS-bit is not available (Value:
 *        "ZS_REGION_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_IsolationExpectations_ZsRegionState_ZsRegionUnspecified
 *        Value "ZS_REGION_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *zsRegionState;

@end


/**
 *  Message for response to listing Evaluations
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "evaluations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRWorkloadManager_ListEvaluationsResponse : GTLRCollectionObject

/**
 *  The list of Evaluation
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_Evaluation *> *evaluations;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Message for response of list execution results
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "executionResults" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRWorkloadManager_ListExecutionResultsResponse : GTLRCollectionObject

/**
 *  The versions from the specified publisher.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_ExecutionResult *> *executionResults;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Message for response to listing Executions
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "executions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRWorkloadManager_ListExecutionsResponse : GTLRCollectionObject

/**
 *  The list of Execution
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_Execution *> *executions;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRWorkloadManager_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRWorkloadManager_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_Operation *> *operations;

@end


/**
 *  Mesesage of response of list rules
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "rules" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRWorkloadManager_ListRulesResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  all rules in response
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_Rule *> *rules;

@end


/**
 *  Message for response to list scanned resources
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "scannedResources" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRWorkloadManager_ListScannedResourcesResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  All scanned resources in response
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_ScannedResource *> *scannedResources;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRWorkloadManager_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRWorkloadManager_Location_Metadata : GTLRObject
@end


/**
 *  GTLRWorkloadManager_LocationAssignment
 */
@interface GTLRWorkloadManager_LocationAssignment : GTLRObject

@property(nonatomic, copy, nullable) NSString *location;

/**
 *  locationType
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_CloudRegion
 *        Value "CLOUD_REGION"
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_CloudZone
 *        11-20: Logical failure domains. (Value: "CLOUD_ZONE")
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_Cluster 1-10:
 *        Physical failure domains. (Value: "CLUSTER")
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_Global Value
 *        "GLOBAL"
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_MultiRegionGeo
 *        Value "MULTI_REGION_GEO"
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_MultiRegionJurisdiction
 *        Value "MULTI_REGION_JURISDICTION"
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_Other Value
 *        "OTHER"
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_Pop Value
 *        "POP"
 *    @arg @c kGTLRWorkloadManager_LocationAssignment_LocationType_Unspecified
 *        Value "UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *locationType;

@end


/**
 *  GTLRWorkloadManager_LocationData
 */
@interface GTLRWorkloadManager_LocationData : GTLRObject

@property(nonatomic, strong, nullable) GTLRWorkloadManager_BlobstoreLocation *blobstoreLocation;
@property(nonatomic, strong, nullable) GTLRWorkloadManager_CloudAssetComposition *childAssetLocation;
@property(nonatomic, strong, nullable) GTLRWorkloadManager_DirectLocationAssignment *directLocation;
@property(nonatomic, strong, nullable) GTLRWorkloadManager_TenantProjectProxy *gcpProjectProxy;
@property(nonatomic, strong, nullable) GTLRWorkloadManager_PlacerLocation *placerLocation;
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SpannerLocation *spannerLocation;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRWorkloadManager_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRWorkloadManager_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRWorkloadManager_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRWorkloadManager_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have been cancelled successfully have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  Message describing that the location of the customer resource is tied to
 *  placer allocations
 */
@interface GTLRWorkloadManager_PlacerLocation : GTLRObject

/**
 *  Directory with a config related to it in placer (e.g.
 *  "/placer/prod/home/my-root/my-dir")
 */
@property(nonatomic, copy, nullable) NSString *placerConfig;

@end


/**
 *  To be used for specifying the intended distribution of regional
 *  compute.googleapis.com/InstanceGroupManager instances
 */
@interface GTLRWorkloadManager_RegionalMigDistributionPolicy : GTLRObject

/**
 *  The shape in which the group converges around distribution of resources.
 *  Instance of proto2 enum
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetShape;

/** Cloud zones used by regional MIG to create instances. */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_ZoneConfiguration *> *zones;

@end


/**
 *  GTLRWorkloadManager_RequirementOverride
 */
@interface GTLRWorkloadManager_RequirementOverride : GTLRObject

/**
 *  ziOverride
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiNotRequired
 *        Value "ZI_NOT_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiPreferred
 *        Value "ZI_PREFERRED"
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiRequired
 *        Value "ZI_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiUnknown To
 *        be used if tracking is not available (Value: "ZI_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZiOverride_ZiUnspecified
 *        Value "ZI_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *ziOverride;

/**
 *  zsOverride
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsNotRequired
 *        Value "ZS_NOT_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsRequired
 *        Value "ZS_REQUIRED"
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsUnknown To
 *        be used if tracking is not available (Value: "ZS_UNKNOWN")
 *    @arg @c kGTLRWorkloadManager_RequirementOverride_ZsOverride_ZsUnspecified
 *        Value "ZS_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *zsOverride;

@end


/**
 *  Message represent resource in execution result
 */
@interface GTLRWorkloadManager_Resource : GTLRObject

/** The name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The service account associated with the resource. */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/** The type of resource. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Message describing resource filters
 */
@interface GTLRWorkloadManager_ResourceFilter : GTLRObject

/** Filter compute engine resource */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_GceInstanceFilter *gceInstanceFilter;

/** The label used for filter resource */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_ResourceFilter_InclusionLabels *inclusionLabels;

/** The id pattern for filter resource */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceIdPatterns;

/** The scopes of evaluation resource */
@property(nonatomic, strong, nullable) NSArray<NSString *> *scopes;

@end


/**
 *  The label used for filter resource
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_ResourceFilter_InclusionLabels : GTLRObject
@end


/**
 *  Message describing resource status
 */
@interface GTLRWorkloadManager_ResourceStatus : GTLRObject

/** Historical: Used before 2023-05-22 the new version of rule id if exists */
@property(nonatomic, strong, nullable) NSArray<NSString *> *rulesNewerVersions GTLR_DEPRECATED;

/**
 *  State of the resource
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_ResourceStatus_State_Active Resource has no
 *        outstanding operations on it or has active Update operations. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRWorkloadManager_ResourceStatus_State_Creating Resource has an
 *        active Create operation. (Value: "CREATING")
 *    @arg @c kGTLRWorkloadManager_ResourceStatus_State_Deleting Resource has an
 *        active Delete operation. (Value: "DELETING")
 *    @arg @c kGTLRWorkloadManager_ResourceStatus_State_StateUnspecified The
 *        state has not been populated in this message. (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Message represent a rule
 */
@interface GTLRWorkloadManager_Rule : GTLRObject

/**
 *  descrite rule in plain language
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** the name display in UI */
@property(nonatomic, copy, nullable) NSString *displayName;

/** the message template for rule */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/** rule name */
@property(nonatomic, copy, nullable) NSString *name;

/** the primary category */
@property(nonatomic, copy, nullable) NSString *primaryCategory;

/** the remediation for the rule */
@property(nonatomic, copy, nullable) NSString *remediation;

/** Output only. the version of the rule */
@property(nonatomic, copy, nullable) NSString *revisionId;

/** the secondary category */
@property(nonatomic, copy, nullable) NSString *secondaryCategory;

/** the severity of the rule */
@property(nonatomic, copy, nullable) NSString *severity;

/** List of user-defined tags */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/** the docuement url for the rule */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Message for creating a Execution
 */
@interface GTLRWorkloadManager_RunEvaluationRequest : GTLRObject

/** Required. The resource being created */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Execution *execution;

/**
 *  Required. Id of the requesting object If auto-generating Id server-side,
 *  remove this field and execution_id from the method_signature of Create RPC
 */
@property(nonatomic, copy, nullable) NSString *executionId;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  The schema of SAP system discovery data.
 */
@interface GTLRWorkloadManager_SapDiscovery : GTLRObject

/** Optional. An SAP system may run without an application layer. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscoveryComponent *applicationLayer;

/** Required. An SAP System must have a database. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscoveryComponent *databaseLayer;

/** Optional. The metadata for SAP system discovery data. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscoveryMetadata *metadata;

/** Optional. The GCP project number that this SapSystem belongs to. */
@property(nonatomic, copy, nullable) NSString *projectNumber;

/**
 *  Output only. A combination of database SID, database instance URI and tenant
 *  DB name to make a unique identifier per-system.
 */
@property(nonatomic, copy, nullable) NSString *systemId;

/** Required. Unix timestamp this system has been updated last. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Optional. The properties of the workload. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscoveryWorkloadProperties *workloadProperties;

@end


/**
 *  Message describing the system component.
 */
@interface GTLRWorkloadManager_SapDiscoveryComponent : GTLRObject

/** Optional. The component is a SAP application. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscoveryComponentApplicationProperties *applicationProperties;

/** Optional. The component is a SAP database. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties *databaseProperties;

/**
 *  Optional. A list of host URIs that are part of the HA configuration if
 *  present. An empty list indicates the component is not configured for HA.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *haHosts;

/** Required. Pantheon Project in which the resources reside. */
@property(nonatomic, copy, nullable) NSString *hostProject;

/**
 *  Optional. A list of replication sites used in Disaster Recovery (DR)
 *  configurations.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SapDiscoveryComponent *> *replicationSites;

/** Optional. The resources in a component. */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SapDiscoveryResource *> *resources;

/**
 *  Optional. The SAP identifier, used by the SAP software and helps
 *  differentiate systems for customers.
 */
@property(nonatomic, copy, nullable) NSString *sid;

/**
 *  Optional. The detected topology of the component.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponent_TopologyType_TopologyScaleOut
 *        A scale-out multi-node system. (Value: "TOPOLOGY_SCALE_OUT")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponent_TopologyType_TopologyScaleUp
 *        A scale-up single node system. (Value: "TOPOLOGY_SCALE_UP")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponent_TopologyType_TopologyTypeUnspecified
 *        Unspecified topology. (Value: "TOPOLOGY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *topologyType;

@end


/**
 *  A set of properties describing an SAP Application layer.
 */
@interface GTLRWorkloadManager_SapDiscoveryComponentApplicationProperties : GTLRObject

/**
 *  Optional. Deprecated: ApplicationType now tells you whether this is ABAP or
 *  Java.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *abap GTLR_DEPRECATED;

/** Optional. Instance number of the SAP application instance. */
@property(nonatomic, copy, nullable) NSString *appInstanceNumber;

/**
 *  Required. Type of the application. Netweaver, etc.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_ApplicationTypeUnspecified
 *        Unspecified application type (Value: "APPLICATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_Netweaver
 *        SAP Netweaver (Value: "NETWEAVER")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_NetweaverAbap
 *        SAP Netweaver ABAP (Value: "NETWEAVER_ABAP")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentApplicationProperties_ApplicationType_NetweaverJava
 *        SAP Netweaver Java (Value: "NETWEAVER_JAVA")
 */
@property(nonatomic, copy, nullable) NSString *applicationType;

/** Optional. Instance number of the ASCS instance. */
@property(nonatomic, copy, nullable) NSString *ascsInstanceNumber;

/** Optional. Resource URI of the recognized ASCS host of the application. */
@property(nonatomic, copy, nullable) NSString *ascsUri;

/** Optional. Instance number of the ERS instance. */
@property(nonatomic, copy, nullable) NSString *ersInstanceNumber;

/** Optional. Kernel version for Netweaver running in the system. */
@property(nonatomic, copy, nullable) NSString *kernelVersion;

/**
 *  Optional. Resource URI of the recognized shared NFS of the application. May
 *  be empty if the application server has only a single node.
 */
@property(nonatomic, copy, nullable) NSString *nfsUri;

@end


/**
 *  A set of properties describing an SAP Database layer.
 */
@interface GTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties : GTLRObject

/** Optional. SID of the system database. */
@property(nonatomic, copy, nullable) NSString *databaseSid;

/**
 *  Required. Type of the database. HANA, DB2, etc.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_DatabaseTypeUnspecified
 *        Unspecified database type. (Value: "DATABASE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_Db2
 *        IBM DB2 (Value: "DB2")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_Hana
 *        SAP HANA (Value: "HANA")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryComponentDatabaseProperties_DatabaseType_MaxDb
 *        SAP MAX_DB (Value: "MAX_DB")
 */
@property(nonatomic, copy, nullable) NSString *databaseType;

/** Optional. The version of the database software running in the system. */
@property(nonatomic, copy, nullable) NSString *databaseVersion;

/** Optional. Instance number of the SAP instance. */
@property(nonatomic, copy, nullable) NSString *instanceNumber;

/** Required. URI of the recognized primary instance of the database. */
@property(nonatomic, copy, nullable) NSString *primaryInstanceUri;

/**
 *  Optional. URI of the recognized shared NFS of the database. May be empty if
 *  the database has only a single node.
 */
@property(nonatomic, copy, nullable) NSString *sharedNfsUri;

@end


/**
 *  Message describing SAP discovery system metadata
 */
@interface GTLRWorkloadManager_SapDiscoveryMetadata : GTLRObject

/**
 *  Optional. Customer region string for customer's use. Does not represent GCP
 *  region.
 */
@property(nonatomic, copy, nullable) NSString *customerRegion;

/** Optional. Customer defined, something like "E-commerce pre prod" */
@property(nonatomic, copy, nullable) NSString *definedSystem;

/** Optional. Should be "prod", "QA", "dev", "staging", etc. */
@property(nonatomic, copy, nullable) NSString *environmentType;

/** Optional. This SAP product name */
@property(nonatomic, copy, nullable) NSString *sapProduct;

@end


/**
 *  Message describing a resource.
 */
@interface GTLRWorkloadManager_SapDiscoveryResource : GTLRObject

/** Optional. A set of properties only applying to instance type resources. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapDiscoveryResourceInstanceProperties *instanceProperties;

/** Optional. A list of resource URIs related to this resource. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *relatedResources;

/**
 *  Required. ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindAddress
 *        This is a compute address. (Value: "RESOURCE_KIND_ADDRESS")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindBackendService
 *        This is a compute backend service. (Value:
 *        "RESOURCE_KIND_BACKEND_SERVICE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindDisk
 *        This is a compute disk. (Value: "RESOURCE_KIND_DISK")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindFilestore
 *        This is a filestore instance. (Value: "RESOURCE_KIND_FILESTORE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindForwardingRule
 *        This is a compute forwarding rule. (Value:
 *        "RESOURCE_KIND_FORWARDING_RULE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindHealthCheck
 *        This is a compute health check. (Value: "RESOURCE_KIND_HEALTH_CHECK")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindInstance
 *        This is a compute instance. (Value: "RESOURCE_KIND_INSTANCE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindInstanceGroup
 *        This is a compute instance group. (Value:
 *        "RESOURCE_KIND_INSTANCE_GROUP")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindNetwork
 *        This is a compute network. (Value: "RESOURCE_KIND_NETWORK")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindPublicAddress
 *        This is a public accessible IP Address. (Value:
 *        "RESOURCE_KIND_PUBLIC_ADDRESS")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindSubnetwork
 *        This is a compute subnetwork. (Value: "RESOURCE_KIND_SUBNETWORK")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceKind_ResourceKindUnspecified
 *        Unspecified resource kind. (Value: "RESOURCE_KIND_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *resourceKind;

/**
 *  Required. The type of this resource.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeCompute
 *        This is a compute resource. (Value: "RESOURCE_TYPE_COMPUTE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeNetwork
 *        This is a network resource. (Value: "RESOURCE_TYPE_NETWORK")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeStorage
 *        This a storage resource. (Value: "RESOURCE_TYPE_STORAGE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResource_ResourceType_ResourceTypeUnspecified
 *        Undefined resource type. (Value: "RESOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/** Required. URI of the resource, includes project, location, and name. */
@property(nonatomic, copy, nullable) NSString *resourceUri;

/**
 *  Required. Unix timestamp of when this resource last had its discovery data
 *  updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  A set of properties only present for an instance type resource
 */
@interface GTLRWorkloadManager_SapDiscoveryResourceInstanceProperties : GTLRObject

/** Optional. App server instances on the host */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SapDiscoveryResourceInstancePropertiesAppInstance *> *appInstances;

/**
 *  Optional. A list of instance URIs that are part of a cluster with this one.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *clusterInstances;

/**
 *  Optional. The VM's instance number.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *instanceNumber GTLR_DEPRECATED;

/**
 *  Optional. Bitmask of instance role, a resource may have multiple roles at
 *  once.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAppServer
 *        Application server. (Value: "INSTANCE_ROLE_APP_SERVER")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAppServerDatabase
 *        Application server and database. (Value:
 *        "INSTANCE_ROLE_APP_SERVER_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscs
 *        Application central services. (Value: "INSTANCE_ROLE_ASCS")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsAppServer
 *        Application central services and application server. (Value:
 *        "INSTANCE_ROLE_ASCS_APP_SERVER")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsAppServerDatabase
 *        Application central services, application server and database. (Value:
 *        "INSTANCE_ROLE_ASCS_APP_SERVER_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsDatabase
 *        Application central services and database. (Value:
 *        "INSTANCE_ROLE_ASCS_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErs
 *        Combinations of roles. Application central services and enqueue
 *        replication server. (Value: "INSTANCE_ROLE_ASCS_ERS")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErsAppServer
 *        Application central services, enqueue replication server and
 *        application server. (Value: "INSTANCE_ROLE_ASCS_ERS_APP_SERVER")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErsAppServerDatabase
 *        Application central services, enqueue replication server, application
 *        server and database. (Value:
 *        "INSTANCE_ROLE_ASCS_ERS_APP_SERVER_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleAscsErsDatabase
 *        Application central services, enqueue replication server and database.
 *        (Value: "INSTANCE_ROLE_ASCS_ERS_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleDatabase
 *        Database node. (Value: "INSTANCE_ROLE_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErs
 *        Enqueue replication server. (Value: "INSTANCE_ROLE_ERS")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErsAppServer
 *        Enqueue replication server and application server. (Value:
 *        "INSTANCE_ROLE_ERS_APP_SERVER")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErsAppServerDatabase
 *        Enqueue replication server, application server and database. (Value:
 *        "INSTANCE_ROLE_ERS_APP_SERVER_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleErsDatabase
 *        Enqueue replication server and database. (Value:
 *        "INSTANCE_ROLE_ERS_DATABASE")
 *    @arg @c kGTLRWorkloadManager_SapDiscoveryResourceInstanceProperties_InstanceRole_InstanceRoleUnspecified
 *        Unspecified instance role. (Value: "INSTANCE_ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *instanceRole;

/** Optional. A virtual hostname of the instance if it has one. */
@property(nonatomic, copy, nullable) NSString *virtualHostname;

@end


/**
 *  Fields to describe an SAP application server instance.
 */
@interface GTLRWorkloadManager_SapDiscoveryResourceInstancePropertiesAppInstance : GTLRObject

/** Optional. Instance name of the SAP application instance. */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Instance number of the SAP application instance. */
@property(nonatomic, copy, nullable) NSString *number;

@end


/**
 *  A set of properties describing an SAP workload.
 */
@interface GTLRWorkloadManager_SapDiscoveryWorkloadProperties : GTLRObject

/**
 *  Optional. List of SAP Products and their versions running on the system.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SapDiscoveryWorkloadPropertiesProductVersion *> *productVersions;

/**
 *  Optional. A list of SAP software components and their versions running on
 *  the system.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SapDiscoveryWorkloadPropertiesSoftwareComponentProperties *> *softwareComponentVersions;

@end


/**
 *  A product name and version.
 */
@interface GTLRWorkloadManager_SapDiscoveryWorkloadPropertiesProductVersion : GTLRObject

/** Optional. Name of the product. */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Version of the product. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  A SAP software component name, version, and type.
 */
@interface GTLRWorkloadManager_SapDiscoveryWorkloadPropertiesSoftwareComponentProperties : GTLRObject

/** Optional. The component's minor version. */
@property(nonatomic, copy, nullable) NSString *extVersion;

/** Optional. Name of the component. */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. The component's type. */
@property(nonatomic, copy, nullable) NSString *type;

/** Optional. The component's major version. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  A presentation of SAP workload insight. The schema of SAP workloads
 *  validation related data.
 */
@interface GTLRWorkloadManager_SapValidation : GTLRObject

/**
 *  Required. The project_id of the cloud project that the Insight data comes
 *  from.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Optional. A list of SAP validation metrics data. */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SapValidationValidationDetail *> *validationDetails;

/**
 *  Optional. The zone of the instance that the Insight data comes from.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  Message describing the SAP validation metrics.
 */
@interface GTLRWorkloadManager_SapValidationValidationDetail : GTLRObject

/** Optional. The pairs of metrics data: field name & field value. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SapValidationValidationDetail_Details *details;

/**
 *  Optional. Was there a SAP system detected for this validation type.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPresent;

/**
 *  Optional. The SAP system that the validation data is from.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Corosync
 *        The COROSYNC validation type collects Corosync configuration and
 *        runtime data. Corosync enables servers to interact as a HA cluster.
 *        (Value: "COROSYNC")
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Custom
 *        The CUSTOM validation type collects any customer-defined data that
 *        does not fall into any of the other categories of validations. (Value:
 *        "CUSTOM")
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Hana
 *        The HANA validation type collects HANA configuration data. SAP HANA is
 *        an in-memory, column-oriented, relational database management system.
 *        (Value: "HANA")
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_HanaSecurity
 *        The HANA_SECURITY validation type collects HANA configuration data as
 *        it relates to SAP security best practices. (Value: "HANA_SECURITY")
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Netweaver
 *        The NETWEAVER validation type collects NetWeaver configuration data.
 *        SAP NetWeaver is a software stack for many of SAP SE's applications.
 *        (Value: "NETWEAVER")
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_Pacemaker
 *        The PACEMAKER validation type collects Pacemaker configuration data.
 *        Pacemaker is a high-availability cluster resource manager. (Value:
 *        "PACEMAKER")
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_SapValidationTypeUnspecified
 *        Unspecified type. (Value: "SAP_VALIDATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRWorkloadManager_SapValidationValidationDetail_SapValidationType_System
 *        The SYSTEM validation type collects underlying system data from the
 *        VM. (Value: "SYSTEM")
 */
@property(nonatomic, copy, nullable) NSString *sapValidationType;

@end


/**
 *  Optional. The pairs of metrics data: field name & field value.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_SapValidationValidationDetail_Details : GTLRObject
@end


/**
 *  Message of scanned resource
 */
@interface GTLRWorkloadManager_ScannedResource : GTLRObject

/** resource name */
@property(nonatomic, copy, nullable) NSString *resource;

/** resource type */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  * A ShellCommand is invoked via the agent's command line executor
 */
@interface GTLRWorkloadManager_ShellCommand : GTLRObject

/** args is a string of arguments to be passed to the command. */
@property(nonatomic, copy, nullable) NSString *args;

/** command is the name of the command to be executed. */
@property(nonatomic, copy, nullable) NSString *command;

/**
 *  Optional. If not specified, the default timeout is 60 seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutSeconds;

@end


/**
 *  GTLRWorkloadManager_SpannerLocation
 */
@interface GTLRWorkloadManager_SpannerLocation : GTLRObject

/**
 *  Set of backups used by the resource with name in the same format as what is
 *  available at http://table/spanner_automon.backup_metadata
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *backupName;

/** Set of databases used by the resource in format /span// */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dbName;

@end


/**
 *  A presentation of SQLServer workload insight. The schema of SqlServer
 *  workloads validation related data.
 */
@interface GTLRWorkloadManager_SqlserverValidation : GTLRObject

/** Optional. The agent version collected this data point */
@property(nonatomic, copy, nullable) NSString *agentVersion;

/**
 *  Required. The instance_name of the instance that the Insight data comes
 *  from. According to https://linter.aip.dev/122/name-suffix: field names
 *  should not use the _name suffix unless the field would be ambiguous without
 *  it.
 */
@property(nonatomic, copy, nullable) NSString *instance;

/**
 *  Required. The project_id of the cloud project that the Insight data comes
 *  from.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Optional. A list of SqlServer validation metrics data. */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SqlserverValidationValidationDetail *> *validationDetails;

@end


/**
 *  Message containing collected data names and values.
 */
@interface GTLRWorkloadManager_SqlserverValidationDetails : GTLRObject

/** Required. Collected data is in format. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_SqlserverValidationDetails_Fields *fields;

@end


/**
 *  Required. Collected data is in format.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_SqlserverValidationDetails_Fields : GTLRObject
@end


/**
 *  Message describing the Sqlserver validation metrics.
 */
@interface GTLRWorkloadManager_SqlserverValidationValidationDetail : GTLRObject

/**
 *  Required. Details wraps map that represents collected data names and values.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_SqlserverValidationDetails *> *details;

/**
 *  Optional. The Sqlserver system that the validation data is from.
 *
 *  Likely values:
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbBackupPolicy
 *        The DB_BACKUP_POLICY table. (Value: "DB_BACKUP_POLICY")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbBufferPoolExtension
 *        The BUFFER_POOL_EXTENSION table. (Value: "DB_BUFFER_POOL_EXTENSION")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbCxpacketWaits
 *        The CXPACKET_WAITS table. (Value: "DB_CXPACKET_WAITS")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbIndexFragmentation
 *        The DB_INDEX_FRAGMENTATION table. (Value: "DB_INDEX_FRAGMENTATION")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbLogDiskSeparation
 *        The LOG_DISK_SEPARATION table. (Value: "DB_LOG_DISK_SEPARATION")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbMaxParallelism
 *        The MAX_PARALLELISM table. (Value: "DB_MAX_PARALLELISM")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbMaxServerMemory
 *        The MAX_SERVER_MEMORY table. (Value: "DB_MAX_SERVER_MEMORY")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbTableIndexCompression
 *        The DB_TABLE_INDEX_COMPRESSION table. (Value:
 *        "DB_TABLE_INDEX_COMPRESSION")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbTransactionLogHandling
 *        The TRANSACTION_LOG_HANDLING table. (Value:
 *        "DB_TRANSACTION_LOG_HANDLING")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_DbVirtualLogFileCount
 *        The VIRTUAL_LOG_FILE_COUNT table. (Value: "DB_VIRTUAL_LOG_FILE_COUNT")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_InstanceMetrics
 *        The INSTANCE_METRICS table. (Value: "INSTANCE_METRICS")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_Os
 *        The Sqlserver system named OS. (Value: "OS")
 *    @arg @c kGTLRWorkloadManager_SqlserverValidationValidationDetail_Type_SqlserverValidationTypeUnspecified
 *        Unspecified type. (Value: "SQLSERVER_VALIDATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRWorkloadManager_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRWorkloadManager_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRWorkloadManager_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRWorkloadManager_Status_Details_Item : GTLRObject
@end


/**
 *  GTLRWorkloadManager_TenantProjectProxy
 */
@interface GTLRWorkloadManager_TenantProjectProxy : GTLRObject

@property(nonatomic, strong, nullable) NSArray<NSString *> *projectNumbers;

@end


/**
 *  Message describing the violation in an evaluation result.
 */
@interface GTLRWorkloadManager_ViolationDetails : GTLRObject

/** The name of the asset. */
@property(nonatomic, copy, nullable) NSString *asset;

/** Details of the violation. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_ViolationDetails_Observed *observed;

/** The service account associated with the resource. */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

@end


/**
 *  Details of the violation.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRWorkloadManager_ViolationDetails_Observed : GTLRObject
@end


/**
 *  Request for sending the data insights.
 */
@interface GTLRWorkloadManager_WriteInsightRequest : GTLRObject

/** Optional. The agent version collected this data point. */
@property(nonatomic, copy, nullable) NSString *agentVersion;

/** Required. The metrics data details. */
@property(nonatomic, strong, nullable) GTLRWorkloadManager_Insight *insight;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  The response for write insights request.
 */
@interface GTLRWorkloadManager_WriteInsightResponse : GTLRObject
@end


/**
 *  GTLRWorkloadManager_ZoneConfiguration
 */
@interface GTLRWorkloadManager_ZoneConfiguration : GTLRObject

/**
 *  zoneProperty
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
