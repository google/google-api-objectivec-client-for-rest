// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Artifact Registry API (artifactregistry/v1)
// Description:
//   Store and manage build artifacts in a scalable and integrated service built
//   on Google infrastructure.
// Documentation:
//   https://cloud.google.com/artifacts/docs/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRArtifactRegistry_AptArtifact;
@class GTLRArtifactRegistry_AptRepository;
@class GTLRArtifactRegistry_Binding;
@class GTLRArtifactRegistry_CleanupPolicy;
@class GTLRArtifactRegistry_CleanupPolicyCondition;
@class GTLRArtifactRegistry_CleanupPolicyMostRecentVersions;
@class GTLRArtifactRegistry_CommonRemoteRepository;
@class GTLRArtifactRegistry_DockerImage;
@class GTLRArtifactRegistry_DockerRepository;
@class GTLRArtifactRegistry_DockerRepositoryConfig;
@class GTLRArtifactRegistry_Expr;
@class GTLRArtifactRegistry_GoogetArtifact;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1File;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository;
@class GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository;
@class GTLRArtifactRegistry_Hash;
@class GTLRArtifactRegistry_ImportAptArtifactsErrorInfo;
@class GTLRArtifactRegistry_ImportAptArtifactsGcsSource;
@class GTLRArtifactRegistry_ImportGoogetArtifactsErrorInfo;
@class GTLRArtifactRegistry_ImportGoogetArtifactsGcsSource;
@class GTLRArtifactRegistry_ImportYumArtifactsErrorInfo;
@class GTLRArtifactRegistry_ImportYumArtifactsGcsSource;
@class GTLRArtifactRegistry_Location;
@class GTLRArtifactRegistry_Location_Labels;
@class GTLRArtifactRegistry_Location_Metadata;
@class GTLRArtifactRegistry_MavenArtifact;
@class GTLRArtifactRegistry_MavenRepository;
@class GTLRArtifactRegistry_MavenRepositoryConfig;
@class GTLRArtifactRegistry_NpmPackage;
@class GTLRArtifactRegistry_NpmRepository;
@class GTLRArtifactRegistry_Operation;
@class GTLRArtifactRegistry_Operation_Metadata;
@class GTLRArtifactRegistry_Operation_Response;
@class GTLRArtifactRegistry_Package;
@class GTLRArtifactRegistry_Package_Annotations;
@class GTLRArtifactRegistry_Policy;
@class GTLRArtifactRegistry_PythonPackage;
@class GTLRArtifactRegistry_PythonRepository;
@class GTLRArtifactRegistry_RemoteRepositoryConfig;
@class GTLRArtifactRegistry_Repository;
@class GTLRArtifactRegistry_Repository_CleanupPolicies;
@class GTLRArtifactRegistry_Repository_Labels;
@class GTLRArtifactRegistry_Status;
@class GTLRArtifactRegistry_Status_Details_Item;
@class GTLRArtifactRegistry_Tag;
@class GTLRArtifactRegistry_UpstreamCredentials;
@class GTLRArtifactRegistry_UpstreamPolicy;
@class GTLRArtifactRegistry_UsernamePasswordCredentials;
@class GTLRArtifactRegistry_Version;
@class GTLRArtifactRegistry_Version_Metadata;
@class GTLRArtifactRegistry_VirtualRepositoryConfig;
@class GTLRArtifactRegistry_YumArtifact;
@class GTLRArtifactRegistry_YumRepository;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_AptArtifact.packageType

/**
 *  Binary package.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_AptArtifact_PackageType_Binary;
/**
 *  Package type is not specified.
 *
 *  Value: "PACKAGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_AptArtifact_PackageType_PackageTypeUnspecified;
/**
 *  Source package.
 *
 *  Value: "SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_AptArtifact_PackageType_Source;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_CleanupPolicy.action

/**
 *  Action not specified.
 *
 *  Value: "ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_CleanupPolicy_Action_ActionUnspecified;
/**
 *  Delete action.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_CleanupPolicy_Action_Delete;
/**
 *  Keep action.
 *
 *  Value: "KEEP"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_CleanupPolicy_Action_Keep;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_CleanupPolicyCondition.tagState

/**
 *  Applies to all versions.
 *
 *  Value: "ANY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_Any;
/**
 *  Applies to tagged versions only.
 *
 *  Value: "TAGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_Tagged;
/**
 *  Tag status not specified.
 *
 *  Value: "TAG_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_TagStateUnspecified;
/**
 *  Applies to untagged versions only.
 *
 *  Value: "UNTAGGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_Untagged;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_DockerRepository.publicRepository

/**
 *  Docker Hub.
 *
 *  Value: "DOCKER_HUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_DockerRepository_PublicRepository_DockerHub;
/**
 *  Unspecified repository.
 *
 *  Value: "PUBLIC_REPOSITORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_DockerRepository_PublicRepository_PublicRepositoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository.repositoryBase

/**
 *  Debian.
 *
 *  Value: "DEBIAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_Debian;
/**
 *  Archived Debian.
 *
 *  Value: "DEBIAN_SNAPSHOT"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_DebianSnapshot;
/**
 *  Unspecified repository base.
 *
 *  Value: "REPOSITORY_BASE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_RepositoryBaseUnspecified;
/**
 *  Ubuntu LTS/Pro.
 *
 *  Value: "UBUNTU"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_Ubuntu;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository.repositoryBase

/**
 *  CentOS.
 *
 *  Value: "CENTOS"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_Centos;
/**
 *  CentOS Debug.
 *
 *  Value: "CENTOS_DEBUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_CentosDebug;
/**
 *  CentOS Stream.
 *
 *  Value: "CENTOS_STREAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_CentosStream;
/**
 *  CentOS Vault.
 *
 *  Value: "CENTOS_VAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_CentosVault;
/**
 *  Fedora Extra Packages for Enterprise Linux (EPEL).
 *
 *  Value: "EPEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_Epel;
/**
 *  Unspecified repository base.
 *
 *  Value: "REPOSITORY_BASE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_RepositoryBaseUnspecified;
/**
 *  Rocky.
 *
 *  Value: "ROCKY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_Rocky;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_Hash.type

/**
 *  Unspecified.
 *
 *  Value: "HASH_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Hash_Type_HashTypeUnspecified;
/**
 *  MD5 hash.
 *
 *  Value: "MD5"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Hash_Type_Md5;
/**
 *  SHA256 hash.
 *
 *  Value: "SHA256"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Hash_Type_Sha256;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_MavenRepository.publicRepository

/**
 *  Maven Central.
 *
 *  Value: "MAVEN_CENTRAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_MavenRepository_PublicRepository_MavenCentral;
/**
 *  Unspecified repository.
 *
 *  Value: "PUBLIC_REPOSITORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_MavenRepository_PublicRepository_PublicRepositoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_MavenRepositoryConfig.versionPolicy

/**
 *  RELEASE - repository will accept only Release versions.
 *
 *  Value: "RELEASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_MavenRepositoryConfig_VersionPolicy_Release;
/**
 *  SNAPSHOT - repository will accept only Snapshot versions.
 *
 *  Value: "SNAPSHOT"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_MavenRepositoryConfig_VersionPolicy_Snapshot;
/**
 *  VERSION_POLICY_UNSPECIFIED - the version policy is not defined. When the
 *  version policy is not defined, no validation is performed for the versions.
 *
 *  Value: "VERSION_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_MavenRepositoryConfig_VersionPolicy_VersionPolicyUnspecified;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_NpmRepository.publicRepository

/**
 *  npmjs.
 *
 *  Value: "NPMJS"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_NpmRepository_PublicRepository_Npmjs;
/**
 *  Unspecified repository.
 *
 *  Value: "PUBLIC_REPOSITORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_NpmRepository_PublicRepository_PublicRepositoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_ProjectSettings.legacyRedirectionState

/**
 *  Redirection is disabled.
 *
 *  Value: "REDIRECTION_FROM_GCR_IO_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoDisabled;
/**
 *  Redirection is enabled.
 *
 *  Value: "REDIRECTION_FROM_GCR_IO_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoEnabled;
/**
 *  Redirection is enabled and missing images are copied from GCR
 *
 *  Value: "REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoEnabledAndCopying;
/**
 *  Redirection is enabled, and has been finalized so cannot be reverted.
 *
 *  Value: "REDIRECTION_FROM_GCR_IO_FINALIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoFinalized GTLR_DEPRECATED;
/**
 *  Redirection is partially enabled and missing images are copied from GCR
 *
 *  Value: "REDIRECTION_FROM_GCR_IO_PARTIAL_AND_COPYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoPartialAndCopying;
/**
 *  No redirection status has been set.
 *
 *  Value: "REDIRECTION_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_PythonRepository.publicRepository

/**
 *  Unspecified repository.
 *
 *  Value: "PUBLIC_REPOSITORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_PythonRepository_PublicRepository_PublicRepositoryUnspecified;
/**
 *  PyPI.
 *
 *  Value: "PYPI"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_PythonRepository_PublicRepository_Pypi;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_Repository.format

/**
 *  APT package format.
 *
 *  Value: "APT"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Apt;
/**
 *  Docker package format.
 *
 *  Value: "DOCKER"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Docker;
/**
 *  Unspecified package format.
 *
 *  Value: "FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_FormatUnspecified;
/**
 *  Generic package format.
 *
 *  Value: "GENERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Generic;
/**
 *  Go package format.
 *
 *  Value: "GO"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Go;
/**
 *  GooGet package format.
 *
 *  Value: "GOOGET"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Googet;
/**
 *  Kubeflow Pipelines package format.
 *
 *  Value: "KFP"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Kfp;
/**
 *  Maven package format.
 *
 *  Value: "MAVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Maven;
/**
 *  NPM package format.
 *
 *  Value: "NPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Npm;
/**
 *  Python package format.
 *
 *  Value: "PYTHON"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Python;
/**
 *  YUM package format.
 *
 *  Value: "YUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Format_Yum;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_Repository.mode

/**
 *  An AOSS repository provides artifacts from AOSS upstreams.
 *
 *  Value: "AOSS_REPOSITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Mode_AossRepository;
/**
 *  Replacement of AOSS_REPOSITORY.
 *
 *  Value: "ASSURED_OSS_REPOSITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Mode_AssuredOssRepository;
/**
 *  Unspecified mode.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Mode_ModeUnspecified;
/**
 *  A remote repository to serve artifacts from a remote source.
 *
 *  Value: "REMOTE_REPOSITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Mode_RemoteRepository;
/**
 *  A standard repository storing artifacts.
 *
 *  Value: "STANDARD_REPOSITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Mode_StandardRepository;
/**
 *  A virtual repository to serve artifacts from one or more sources.
 *
 *  Value: "VIRTUAL_REPOSITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_Repository_Mode_VirtualRepository;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_VPCSCConfig.vpcscPolicy

/**
 *  VPCSC_ALLOW - repository will allow the requests to the Upstreams for the
 *  Remote Repositories if the resource is in the perimeter.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_VPCSCConfig_VpcscPolicy_Allow;
/**
 *  VPCSC_DENY - repository will block the requests to the Upstreams for the
 *  Remote Repositories if the resource is in the perimeter.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_VPCSCConfig_VpcscPolicy_Deny;
/**
 *  VPCSC_POLICY_UNSPECIFIED - the VPS SC policy is not defined. When VPS SC
 *  policy is not defined - the Service will use the default behavior
 *  (VPCSC_DENY).
 *
 *  Value: "VPCSC_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_VPCSCConfig_VpcscPolicy_VpcscPolicyUnspecified;

// ----------------------------------------------------------------------------
// GTLRArtifactRegistry_YumArtifact.packageType

/**
 *  Binary package (.rpm).
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_YumArtifact_PackageType_Binary;
/**
 *  Package type is not specified.
 *
 *  Value: "PACKAGE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_YumArtifact_PackageType_PackageTypeUnspecified;
/**
 *  Source package (.srpm).
 *
 *  Value: "SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistry_YumArtifact_PackageType_Source;

/**
 *  A detailed representation of an Apt artifact. Information in the record is
 *  derived from the archive's control file. See
 *  https://www.debian.org/doc/debian-policy/ch-controlfields.html
 */
@interface GTLRArtifactRegistry_AptArtifact : GTLRObject

/** Output only. Operating system architecture of the artifact. */
@property(nonatomic, copy, nullable) NSString *architecture;

/** Output only. Repository component of the artifact. */
@property(nonatomic, copy, nullable) NSString *component;

/**
 *  Output only. Contents of the artifact's control metadata file.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *controlFile;

/** Output only. The Artifact Registry resource name of the artifact. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The Apt package name of the artifact. */
@property(nonatomic, copy, nullable) NSString *packageName;

/**
 *  Output only. An artifact is a binary or source package.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_AptArtifact_PackageType_Binary Binary
 *        package. (Value: "BINARY")
 *    @arg @c kGTLRArtifactRegistry_AptArtifact_PackageType_PackageTypeUnspecified
 *        Package type is not specified. (Value: "PACKAGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_AptArtifact_PackageType_Source Source
 *        package. (Value: "SOURCE")
 */
@property(nonatomic, copy, nullable) NSString *packageType;

@end


/**
 *  Configuration for an Apt remote repository.
 */
@interface GTLRArtifactRegistry_AptRepository : GTLRObject

/** Customer-specified remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository *customRepository;

/**
 *  One of the publicly available Apt repositories supported by Artifact
 *  Registry.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository *publicRepository;

@end


/**
 *  The metadata of an LRO from deleting multiple versions.
 */
@interface GTLRArtifactRegistry_BatchDeleteVersionsMetadata : GTLRObject

/** The versions the operation failed to delete. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *failedVersions;

@end


/**
 *  The request to delete multiple versions across a repository.
 */
@interface GTLRArtifactRegistry_BatchDeleteVersionsRequest : GTLRObject

/**
 *  Required. The names of the versions to delete. A maximum of 10000 versions
 *  can be deleted in a batch.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

/**
 *  If true, the request is performed without deleting data, following AIP-163.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRArtifactRegistry_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `domain:{domain}`: The G Suite domain
 *  (primary) that represents all the users of that domain. For example,
 *  `google.com` or `example.com`. *
 *  `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workforce identity pool. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
 *  All workforce identities in a group. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All workforce identities with a specific attribute value. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/
 *  *`: All identities in a workforce identity pool. *
 *  `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workload identity pool. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
 *  A workload identity pool group. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All identities in a workload identity pool with a certain attribute. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/
 *  *`: All identities in a workload identity pool. *
 *  `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. *
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  Deleted single identity in a workforce identity pool. For example,
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM
 *  roles and permissions, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/roles-overview). For a list
 *  of the available pre-defined roles, see
 *  [here](https://cloud.google.com/iam/docs/understanding-roles).
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Artifact policy configuration for repository cleanup policies.
 */
@interface GTLRArtifactRegistry_CleanupPolicy : GTLRObject

/**
 *  Policy action.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_CleanupPolicy_Action_ActionUnspecified
 *        Action not specified. (Value: "ACTION_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_CleanupPolicy_Action_Delete Delete action.
 *        (Value: "DELETE")
 *    @arg @c kGTLRArtifactRegistry_CleanupPolicy_Action_Keep Keep action.
 *        (Value: "KEEP")
 */
@property(nonatomic, copy, nullable) NSString *action;

/** Policy condition for matching versions. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_CleanupPolicyCondition *condition;

/**
 *  The user-provided ID of the cleanup policy.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Policy condition for retaining a minimum number of versions. May only be
 *  specified with a Keep action.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_CleanupPolicyMostRecentVersions *mostRecentVersions;

@end


/**
 *  CleanupPolicyCondition is a set of conditions attached to a CleanupPolicy.
 *  If multiple entries are set, all must be satisfied for the condition to be
 *  satisfied.
 */
@interface GTLRArtifactRegistry_CleanupPolicyCondition : GTLRObject

/** Match versions newer than a duration. */
@property(nonatomic, strong, nullable) GTLRDuration *newerThan;

/** Match versions older than a duration. */
@property(nonatomic, strong, nullable) GTLRDuration *olderThan;

/** Match versions by package prefix. Applied on any prefix match. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *packageNamePrefixes;

/** Match versions by tag prefix. Applied on any prefix match. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tagPrefixes;

/**
 *  Match versions by tag status.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_Any Applies
 *        to all versions. (Value: "ANY")
 *    @arg @c kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_Tagged
 *        Applies to tagged versions only. (Value: "TAGGED")
 *    @arg @c kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_TagStateUnspecified
 *        Tag status not specified. (Value: "TAG_STATE_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_CleanupPolicyCondition_TagState_Untagged
 *        Applies to untagged versions only. (Value: "UNTAGGED")
 */
@property(nonatomic, copy, nullable) NSString *tagState;

/** Match versions by version name prefix. Applied on any prefix match. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *versionNamePrefixes;

@end


/**
 *  CleanupPolicyMostRecentVersions is an alternate condition of a CleanupPolicy
 *  for retaining a minimum number of versions.
 */
@interface GTLRArtifactRegistry_CleanupPolicyMostRecentVersions : GTLRObject

/**
 *  Minimum number of versions to keep.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *keepCount;

/** List of package name prefixes that will apply this rule. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *packageNamePrefixes;

@end


/**
 *  Common remote repository settings type.
 */
@interface GTLRArtifactRegistry_CommonRemoteRepository : GTLRObject

/** Required. A common public repository base for Remote Repository. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  DockerImage represents a docker artifact. The following fields are returned
 *  as untyped metadata in the Version resource, using camelcase keys (i.e.
 *  metadata.imageSizeBytes): * imageSizeBytes * mediaType * buildTime
 */
@interface GTLRArtifactRegistry_DockerImage : GTLRObject

/**
 *  The time this image was built. This field is returned as the
 *  'metadata.buildTime' field in the Version resource. The build time is
 *  returned to the client as an RFC 3339 string, which can be easily used with
 *  the JavaScript Date constructor.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *buildTime;

/**
 *  Calculated size of the image. This field is returned as the
 *  'metadata.imageSizeBytes' field in the Version resource.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *imageSizeBytes;

/**
 *  Media type of this image, e.g.
 *  "application/vnd.docker.distribution.manifest.v2+json". This field is
 *  returned as the 'metadata.mediaType' field in the Version resource.
 */
@property(nonatomic, copy, nullable) NSString *mediaType;

/**
 *  Required. registry_location, project_id, repository_name and image id forms
 *  a unique image name:`projects//locations//repository//dockerImages/`. For
 *  example,
 *  "projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/
 *  nginx\@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf",
 *  where "us-west4" is the registry_location, "test-project" is the project_id,
 *  "test-repo" is the repository_name and
 *  "nginx\@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf"
 *  is the image's digest.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Tags attached to this image. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/** Output only. The time when the docker image was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Time the image was uploaded. */
@property(nonatomic, strong, nullable) GTLRDateTime *uploadTime;

/**
 *  Required. URL to access the image. Example:
 *  us-west4-docker.pkg.dev/test-project/test-repo/nginx\@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Configuration for a Docker remote repository.
 */
@interface GTLRArtifactRegistry_DockerRepository : GTLRObject

/** Customer-specified remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository *customRepository;

/**
 *  One of the publicly available Docker repositories supported by Artifact
 *  Registry.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_DockerRepository_PublicRepository_DockerHub
 *        Docker Hub. (Value: "DOCKER_HUB")
 *    @arg @c kGTLRArtifactRegistry_DockerRepository_PublicRepository_PublicRepositoryUnspecified
 *        Unspecified repository. (Value: "PUBLIC_REPOSITORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *publicRepository;

@end


/**
 *  DockerRepositoryConfig is docker related repository details. Provides
 *  additional configuration details for repositories of the docker format type.
 */
@interface GTLRArtifactRegistry_DockerRepositoryConfig : GTLRObject

/**
 *  The repository which enabled this flag prevents all tags from being
 *  modified, moved or deleted. This does not prevent tags from being created.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *immutableTags;

@end


/**
 *  The response to download a file.
 */
@interface GTLRArtifactRegistry_DownloadFileResponse : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRArtifactRegistry_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRArtifactRegistry_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GenericArtifact represents a generic artifact
 */
@interface GTLRArtifactRegistry_GenericArtifact : GTLRObject

/** Output only. The time when the Generic module is created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Resource name of the generic artifact. project, location, repository,
 *  package_id and version_id create a unique generic artifact. i.e.
 *  "projects/test-project/locations/us-west4/repositories/test-repo/
 *  genericArtifacts/package_id:version_id"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The time when the Generic module is updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** The version of the generic artifact. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  GoModule represents a Go module.
 */
@interface GTLRArtifactRegistry_GoModule : GTLRObject

/** Output only. The time when the Go module is created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The resource name of a Go module. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The time when the Go module is updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  The version of the Go module. Must be a valid canonical version as defined
 *  in https://go.dev/ref/mod#glos-canonical-version.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  A detailed representation of a GooGet artifact.
 */
@interface GTLRArtifactRegistry_GoogetArtifact : GTLRObject

/** Output only. Operating system architecture of the artifact. */
@property(nonatomic, copy, nullable) NSString *architecture;

/** Output only. The Artifact Registry resource name of the artifact. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The GooGet package name of the artifact. */
@property(nonatomic, copy, nullable) NSString *packageName;

@end


/**
 *  Files store content that is potentially associated with Packages or
 *  Versions.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1File : GTLRObject

/** Output only. The time when the File was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The time when the last attempt to refresh the file's data was
 *  made. Only set when the repository is remote.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *fetchTime;

/** The hashes of the file content. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Hash *> *hashes;

/**
 *  The name of the file, for example:
 *  `projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt`.
 *  If the file ID part contains slashes, they are escaped.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The name of the Package or Version that owns this file, if any. */
@property(nonatomic, copy, nullable) NSString *owner;

/**
 *  The size of the File in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeBytes;

/** Output only. The time when the File was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Customer-specified publicly available remote repository.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository : GTLRObject

/**
 *  An http/https uri reference to the upstream remote repository, for ex:
 *  "https://my.apt.registry/".
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Publicly available Apt repositories constructed from a common repository
 *  base and a custom repository path.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository : GTLRObject

/**
 *  A common public repository base for Apt.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_Debian
 *        Debian. (Value: "DEBIAN")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_DebianSnapshot
 *        Archived Debian. (Value: "DEBIAN_SNAPSHOT")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_RepositoryBaseUnspecified
 *        Unspecified repository base. (Value: "REPOSITORY_BASE_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository_RepositoryBase_Ubuntu
 *        Ubuntu LTS/Pro. (Value: "UBUNTU")
 */
@property(nonatomic, copy, nullable) NSString *repositoryBase;

/** A custom field to define a path to a specific repository from the base. */
@property(nonatomic, copy, nullable) NSString *repositoryPath;

@end


/**
 *  Customer-specified publicly available remote repository.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository : GTLRObject

/**
 *  An http/https uri reference to the custom remote repository, for ex:
 *  "https://registry-1.docker.io".
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Customer-specified publicly available remote repository.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository : GTLRObject

/**
 *  An http/https uri reference to the upstream remote repository, for ex:
 *  "https://my.maven.registry/".
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Customer-specified publicly available remote repository.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository : GTLRObject

/**
 *  An http/https uri reference to the upstream remote repository, for ex:
 *  "https://my.npm.registry/".
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Customer-specified publicly available remote repository.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository : GTLRObject

/**
 *  An http/https uri reference to the upstream remote repository, for ex:
 *  "https://my.python.registry/".
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Customer-specified publicly available remote repository.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository : GTLRObject

/**
 *  An http/https uri reference to the upstream remote repository, for ex:
 *  "https://my.yum.registry/".
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Publicly available Yum repositories constructed from a common repository
 *  base and a custom repository path.
 */
@interface GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository : GTLRObject

/**
 *  A common public repository base for Yum.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_Centos
 *        CentOS. (Value: "CENTOS")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_CentosDebug
 *        CentOS Debug. (Value: "CENTOS_DEBUG")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_CentosStream
 *        CentOS Stream. (Value: "CENTOS_STREAM")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_CentosVault
 *        CentOS Vault. (Value: "CENTOS_VAULT")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_Epel
 *        Fedora Extra Packages for Enterprise Linux (EPEL). (Value: "EPEL")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_RepositoryBaseUnspecified
 *        Unspecified repository base. (Value: "REPOSITORY_BASE_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_RepositoryBase_Rocky
 *        Rocky. (Value: "ROCKY")
 */
@property(nonatomic, copy, nullable) NSString *repositoryBase;

/** A custom field to define a path to a specific repository from the base. */
@property(nonatomic, copy, nullable) NSString *repositoryPath;

@end


/**
 *  A hash of file content.
 */
@interface GTLRArtifactRegistry_Hash : GTLRObject

/**
 *  The algorithm used to compute the hash value.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_Hash_Type_HashTypeUnspecified Unspecified.
 *        (Value: "HASH_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_Hash_Type_Md5 MD5 hash. (Value: "MD5")
 *    @arg @c kGTLRArtifactRegistry_Hash_Type_Sha256 SHA256 hash. (Value:
 *        "SHA256")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  The hash value.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Error information explaining why a package was not imported.
 */
@interface GTLRArtifactRegistry_ImportAptArtifactsErrorInfo : GTLRObject

/** The detailed error status. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Status *error;

/** Google Cloud Storage location requested. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_ImportAptArtifactsGcsSource *gcsSource;

@end


/**
 *  Google Cloud Storage location where the artifacts currently reside.
 */
@interface GTLRArtifactRegistry_ImportAptArtifactsGcsSource : GTLRObject

/** Cloud Storage paths URI (e.g., gs://my_bucket//my_object). */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uris;

/**
 *  Supports URI wildcards for matching multiple objects from a single URI.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useWildcards;

@end


/**
 *  The operation metadata for importing artifacts.
 */
@interface GTLRArtifactRegistry_ImportAptArtifactsMetadata : GTLRObject
@end


/**
 *  The request to import new apt artifacts.
 */
@interface GTLRArtifactRegistry_ImportAptArtifactsRequest : GTLRObject

/** Google Cloud Storage location where input content is located. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_ImportAptArtifactsGcsSource *gcsSource;

@end


/**
 *  The response message from importing APT artifacts.
 */
@interface GTLRArtifactRegistry_ImportAptArtifactsResponse : GTLRObject

/** The Apt artifacts imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_AptArtifact *> *aptArtifacts;

/** Detailed error info for packages that were not imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_ImportAptArtifactsErrorInfo *> *errors;

@end


/**
 *  Error information explaining why a package was not imported.
 */
@interface GTLRArtifactRegistry_ImportGoogetArtifactsErrorInfo : GTLRObject

/** The detailed error status. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Status *error;

/** Google Cloud Storage location requested. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_ImportGoogetArtifactsGcsSource *gcsSource;

@end


/**
 *  Google Cloud Storage location where the artifacts currently reside.
 */
@interface GTLRArtifactRegistry_ImportGoogetArtifactsGcsSource : GTLRObject

/** Cloud Storage paths URI (e.g., `gs://my_bucket/my_object`). */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uris;

/**
 *  Supports URI wildcards for matching multiple objects from a single URI.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useWildcards;

@end


/**
 *  The operation metadata for importing artifacts.
 */
@interface GTLRArtifactRegistry_ImportGoogetArtifactsMetadata : GTLRObject
@end


/**
 *  The request to import new googet artifacts.
 */
@interface GTLRArtifactRegistry_ImportGoogetArtifactsRequest : GTLRObject

/** Google Cloud Storage location where input content is located. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_ImportGoogetArtifactsGcsSource *gcsSource;

@end


/**
 *  The response message from importing artifacts.
 */
@interface GTLRArtifactRegistry_ImportGoogetArtifactsResponse : GTLRObject

/** Detailed error info for packages that were not imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_ImportGoogetArtifactsErrorInfo *> *errors;

/** The GooGet artifacts updated. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_GoogetArtifact *> *googetArtifacts;

@end


/**
 *  Error information explaining why a package was not imported.
 */
@interface GTLRArtifactRegistry_ImportYumArtifactsErrorInfo : GTLRObject

/** The detailed error status. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Status *error;

/** Google Cloud Storage location requested. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_ImportYumArtifactsGcsSource *gcsSource;

@end


/**
 *  Google Cloud Storage location where the artifacts currently reside.
 */
@interface GTLRArtifactRegistry_ImportYumArtifactsGcsSource : GTLRObject

/** Cloud Storage paths URI (e.g., gs://my_bucket//my_object). */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uris;

/**
 *  Supports URI wildcards for matching multiple objects from a single URI.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useWildcards;

@end


/**
 *  The operation metadata for importing artifacts.
 */
@interface GTLRArtifactRegistry_ImportYumArtifactsMetadata : GTLRObject
@end


/**
 *  The request to import new yum artifacts.
 */
@interface GTLRArtifactRegistry_ImportYumArtifactsRequest : GTLRObject

/** Google Cloud Storage location where input content is located. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_ImportYumArtifactsGcsSource *gcsSource;

@end


/**
 *  The response message from importing YUM artifacts.
 */
@interface GTLRArtifactRegistry_ImportYumArtifactsResponse : GTLRObject

/** Detailed error info for packages that were not imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_ImportYumArtifactsErrorInfo *> *errors;

/** The yum artifacts imported. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_YumArtifact *> *yumArtifacts;

@end


/**
 *  A detailed representation of a KFP artifact.
 */
@interface GTLRArtifactRegistry_KfpArtifact : GTLRObject

/**
 *  Output only. Resource name of the KFP artifact. Since users don't directly
 *  interact with this resource, the name will be derived from the associated
 *  version. For example, when version = ".../versions/sha256:abcdef...", the
 *  name will be ".../kfpArtifacts/sha256:abcdef...".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The version associated with the KFP artifact. Must follow the Semantic
 *  Versioning standard.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  The response from listing docker images.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dockerImages" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListDockerImagesResponse : GTLRCollectionObject

/**
 *  The docker images returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_DockerImage *> *dockerImages;

/**
 *  The token to retrieve the next page of artifacts, or empty if there are no
 *  more artifacts to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response from listing files.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "files" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListFilesResponse : GTLRCollectionObject

/**
 *  The files returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1File *> *files;

/**
 *  The token to retrieve the next page of files, or empty if there are no more
 *  files to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response from listing maven artifacts.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "mavenArtifacts" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRArtifactRegistry_ListMavenArtifactsResponse : GTLRCollectionObject

/**
 *  The maven artifacts returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_MavenArtifact *> *mavenArtifacts;

/**
 *  The token to retrieve the next page of artifacts, or empty if there are no
 *  more artifacts to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response from listing npm packages.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "npmPackages" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListNpmPackagesResponse : GTLRCollectionObject

/**
 *  The token to retrieve the next page of artifacts, or empty if there are no
 *  more artifacts to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The npm packages returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_NpmPackage *> *npmPackages;

@end


/**
 *  The response from listing packages.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "packages" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListPackagesResponse : GTLRCollectionObject

/**
 *  The token to retrieve the next page of packages, or empty if there are no
 *  more packages to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The packages returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Package *> *packages;

@end


/**
 *  The response from listing python packages.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "pythonPackages" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRArtifactRegistry_ListPythonPackagesResponse : GTLRCollectionObject

/**
 *  The token to retrieve the next page of artifacts, or empty if there are no
 *  more artifacts to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The python packages returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_PythonPackage *> *pythonPackages;

@end


/**
 *  The response from listing repositories.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "repositories" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListRepositoriesResponse : GTLRCollectionObject

/**
 *  The token to retrieve the next page of repositories, or empty if there are
 *  no more repositories to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The repositories returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Repository *> *repositories;

@end


/**
 *  The response from listing tags.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tags" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListTagsResponse : GTLRCollectionObject

/**
 *  The token to retrieve the next page of tags, or empty if there are no more
 *  tags to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The tags returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Tag *> *tags;

@end


/**
 *  The response from listing versions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "versions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRArtifactRegistry_ListVersionsResponse : GTLRCollectionObject

/**
 *  The token to retrieve the next page of versions, or empty if there are no
 *  more versions to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The versions returned.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Version *> *versions;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRArtifactRegistry_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRArtifactRegistry_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRArtifactRegistry_Location_Metadata : GTLRObject
@end


/**
 *  MavenArtifact represents a maven artifact.
 */
@interface GTLRArtifactRegistry_MavenArtifact : GTLRObject

/** Artifact ID for the artifact. */
@property(nonatomic, copy, nullable) NSString *artifactId;

/** Output only. Time the artifact was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Group ID for the artifact. Example: com.google.guava */
@property(nonatomic, copy, nullable) NSString *groupId;

/**
 *  Required. registry_location, project_id, repository_name and maven_artifact
 *  forms a unique artifact For example,
 *  "projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/
 *  com.google.guava:guava:31.0-jre", where "us-west4" is the registry_location,
 *  "test-project" is the project_id, "test-repo" is the repository_name and
 *  "com.google.guava:guava:31.0-jre" is the maven artifact.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. URL to access the pom file of the artifact. Example:
 *  us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom
 */
@property(nonatomic, copy, nullable) NSString *pomUri;

/** Output only. Time the artifact was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Version of this artifact. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for a Maven remote repository.
 */
@interface GTLRArtifactRegistry_MavenRepository : GTLRObject

/** Customer-specified remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository *customRepository;

/**
 *  One of the publicly available Maven repositories supported by Artifact
 *  Registry.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_MavenRepository_PublicRepository_MavenCentral
 *        Maven Central. (Value: "MAVEN_CENTRAL")
 *    @arg @c kGTLRArtifactRegistry_MavenRepository_PublicRepository_PublicRepositoryUnspecified
 *        Unspecified repository. (Value: "PUBLIC_REPOSITORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *publicRepository;

@end


/**
 *  MavenRepositoryConfig is maven related repository details. Provides
 *  additional configuration details for repositories of the maven format type.
 */
@interface GTLRArtifactRegistry_MavenRepositoryConfig : GTLRObject

/**
 *  The repository with this flag will allow publishing the same snapshot
 *  versions.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowSnapshotOverwrites;

/**
 *  Version policy defines the versions that the registry will accept.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_MavenRepositoryConfig_VersionPolicy_Release
 *        RELEASE - repository will accept only Release versions. (Value:
 *        "RELEASE")
 *    @arg @c kGTLRArtifactRegistry_MavenRepositoryConfig_VersionPolicy_Snapshot
 *        SNAPSHOT - repository will accept only Snapshot versions. (Value:
 *        "SNAPSHOT")
 *    @arg @c kGTLRArtifactRegistry_MavenRepositoryConfig_VersionPolicy_VersionPolicyUnspecified
 *        VERSION_POLICY_UNSPECIFIED - the version policy is not defined. When
 *        the version policy is not defined, no validation is performed for the
 *        versions. (Value: "VERSION_POLICY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *versionPolicy;

@end


/**
 *  NpmPackage represents an npm artifact.
 */
@interface GTLRArtifactRegistry_NpmPackage : GTLRObject

/** Output only. Time the package was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. registry_location, project_id, repository_name and npm_package
 *  forms a unique package For example,
 *  "projects/test-project/locations/us-west4/repositories/test-repo/npmPackages/
 *  npm_test:1.0.0", where "us-west4" is the registry_location, "test-project"
 *  is the project_id, "test-repo" is the repository_name and npm_test:1.0.0" is
 *  the npm package.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Package for the artifact. */
@property(nonatomic, copy, nullable) NSString *packageName;

/** Tags attached to this package. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/** Output only. Time the package was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Version of this package. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for a Npm remote repository.
 */
@interface GTLRArtifactRegistry_NpmRepository : GTLRObject

/** Customer-specified remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository *customRepository;

/**
 *  One of the publicly available Npm repositories supported by Artifact
 *  Registry.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_NpmRepository_PublicRepository_Npmjs npmjs.
 *        (Value: "NPMJS")
 *    @arg @c kGTLRArtifactRegistry_NpmRepository_PublicRepository_PublicRepositoryUnspecified
 *        Unspecified repository. (Value: "PUBLIC_REPOSITORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *publicRepository;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRArtifactRegistry_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRArtifactRegistry_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRArtifactRegistry_Operation_Response : GTLRObject
@end


/**
 *  Metadata type for longrunning-operations, currently empty.
 */
@interface GTLRArtifactRegistry_OperationMetadata : GTLRObject
@end


/**
 *  Packages are named collections of versions.
 */
@interface GTLRArtifactRegistry_Package : GTLRObject

/** Optional. Client specified annotations. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Package_Annotations *annotations;

/** The time when the package was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The display name of the package. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The name of the package, for example:
 *  `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`. If the
 *  package ID part contains slashes, the slashes are escaped.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The time when the package was last updated. This includes publishing a new
 *  version of the package.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Client specified annotations.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRArtifactRegistry_Package_Annotations : GTLRObject
@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** ``` { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
 *  members: - user:mike\@example.com - group:admins\@example.com -
 *  domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 ``` For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRArtifactRegistry_Policy : GTLRObject

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  The Artifact Registry settings that apply to a Project.
 */
@interface GTLRArtifactRegistry_ProjectSettings : GTLRObject

/**
 *  The redirection state of the legacy repositories in this project.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoDisabled
 *        Redirection is disabled. (Value: "REDIRECTION_FROM_GCR_IO_DISABLED")
 *    @arg @c kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoEnabled
 *        Redirection is enabled. (Value: "REDIRECTION_FROM_GCR_IO_ENABLED")
 *    @arg @c kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoEnabledAndCopying
 *        Redirection is enabled and missing images are copied from GCR (Value:
 *        "REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING")
 *    @arg @c kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoFinalized
 *        Redirection is enabled, and has been finalized so cannot be reverted.
 *        (Value: "REDIRECTION_FROM_GCR_IO_FINALIZED")
 *    @arg @c kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionFromGcrIoPartialAndCopying
 *        Redirection is partially enabled and missing images are copied from
 *        GCR (Value: "REDIRECTION_FROM_GCR_IO_PARTIAL_AND_COPYING")
 *    @arg @c kGTLRArtifactRegistry_ProjectSettings_LegacyRedirectionState_RedirectionStateUnspecified
 *        No redirection status has been set. (Value:
 *        "REDIRECTION_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *legacyRedirectionState;

/**
 *  The name of the project's settings. Always of the form:
 *  projects/{project-id}/projectSettings In update request: never set In
 *  response: always set
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The percentage of pull traffic to redirect from GCR to AR when using partial
 *  redirection.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pullPercent;

@end


/**
 *  The metadata for promote artifact long running operation.
 */
@interface GTLRArtifactRegistry_PromoteArtifactMetadata : GTLRObject
@end


/**
 *  PythonPackage represents a python artifact.
 */
@interface GTLRArtifactRegistry_PythonPackage : GTLRObject

/** Output only. Time the package was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. registry_location, project_id, repository_name and python_package
 *  forms a unique package
 *  name:`projects//locations//repository//pythonPackages/`. For example,
 *  "projects/test-project/locations/us-west4/repositories/test-repo/pythonPackages/
 *  python_package:1.0.0", where "us-west4" is the registry_location,
 *  "test-project" is the project_id, "test-repo" is the repository_name and
 *  python_package:1.0.0" is the python package.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Package for the artifact. */
@property(nonatomic, copy, nullable) NSString *packageName;

/** Output only. Time the package was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Required. URL to access the package. Example:
 *  us-west4-python.pkg.dev/test-project/test-repo/python_package/file-name-1.0.0.tar.gz
 */
@property(nonatomic, copy, nullable) NSString *uri;

/** Version of this package. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for a Python remote repository.
 */
@interface GTLRArtifactRegistry_PythonRepository : GTLRObject

/** Customer-specified remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository *customRepository;

/**
 *  One of the publicly available Python repositories supported by Artifact
 *  Registry.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_PythonRepository_PublicRepository_PublicRepositoryUnspecified
 *        Unspecified repository. (Value: "PUBLIC_REPOSITORY_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_PythonRepository_PublicRepository_Pypi PyPI.
 *        (Value: "PYPI")
 */
@property(nonatomic, copy, nullable) NSString *publicRepository;

@end


/**
 *  Remote repository configuration.
 */
@interface GTLRArtifactRegistry_RemoteRepositoryConfig : GTLRObject

/** Specific settings for an Apt remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_AptRepository *aptRepository;

/**
 *  Common remote repository settings. Used as the RR upstream URL instead of
 *  Predefined and Custom remote repositories. UI and Gcloud will map all the
 *  new remote repositories to this field.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_CommonRemoteRepository *commonRepository;

/**
 *  The description of the remote source.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Input only. A create/update remote repo option to avoid making a HEAD/GET
 *  request to validate a remote repo and any supplied upstream credentials.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableUpstreamValidation;

/** Specific settings for a Docker remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_DockerRepository *dockerRepository;

/** Specific settings for a Maven remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_MavenRepository *mavenRepository;

/** Specific settings for an Npm remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_NpmRepository *npmRepository;

/** Specific settings for a Python remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_PythonRepository *pythonRepository;

/** Optional. The credentials used to access the remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_UpstreamCredentials *upstreamCredentials;

/** Specific settings for a Yum remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_YumRepository *yumRepository;

@end


/**
 *  A Repository for storing artifacts with a specific format.
 */
@interface GTLRArtifactRegistry_Repository : GTLRObject

/**
 *  Optional. Cleanup policies for this repository. Cleanup policies indicate
 *  when certain package versions can be automatically deleted. Map keys are
 *  policy IDs supplied by users during policy creation. They must unique within
 *  a repository and be under 128 characters in length.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Repository_CleanupPolicies *cleanupPolicies;

/**
 *  Optional. If true, the cleanup pipeline is prevented from deleting versions
 *  in this repository.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cleanupPolicyDryRun;

/** Output only. The time when the repository was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The user-provided description of the repository.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. If this is true, an unspecified repo type will be treated as error
 *  rather than defaulting to standard.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disallowUnspecifiedMode;

/**
 *  Docker repository config contains repository level configuration for the
 *  repositories of docker type.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_DockerRepositoryConfig *dockerConfig;

/**
 *  Optional. The format of packages that are stored in the repository.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Apt APT package format.
 *        (Value: "APT")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Docker Docker package
 *        format. (Value: "DOCKER")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_FormatUnspecified
 *        Unspecified package format. (Value: "FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Generic Generic package
 *        format. (Value: "GENERIC")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Go Go package format.
 *        (Value: "GO")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Googet GooGet package
 *        format. (Value: "GOOGET")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Kfp Kubeflow Pipelines
 *        package format. (Value: "KFP")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Maven Maven package
 *        format. (Value: "MAVEN")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Npm NPM package format.
 *        (Value: "NPM")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Python Python package
 *        format. (Value: "PYTHON")
 *    @arg @c kGTLRArtifactRegistry_Repository_Format_Yum YUM package format.
 *        (Value: "YUM")
 */
@property(nonatomic, copy, nullable) NSString *format;

/**
 *  The Cloud KMS resource name of the customer managed encryption key that's
 *  used to encrypt the contents of the Repository. Has the form:
 *  `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
 *  This value may not be changed after the Repository has been created.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/**
 *  Labels with user-defined metadata. This field may contain up to 64 entries.
 *  Label keys and values may be no longer than 63 characters. Label keys must
 *  begin with a lowercase letter and may only contain lowercase letters,
 *  numeric characters, underscores, and dashes.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Repository_Labels *labels;

/**
 *  Maven repository config contains repository level configuration for the
 *  repositories of maven type.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_MavenRepositoryConfig *mavenConfig;

/**
 *  Optional. The mode of the repository.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_Repository_Mode_AossRepository An AOSS
 *        repository provides artifacts from AOSS upstreams. (Value:
 *        "AOSS_REPOSITORY")
 *    @arg @c kGTLRArtifactRegistry_Repository_Mode_AssuredOssRepository
 *        Replacement of AOSS_REPOSITORY. (Value: "ASSURED_OSS_REPOSITORY")
 *    @arg @c kGTLRArtifactRegistry_Repository_Mode_ModeUnspecified Unspecified
 *        mode. (Value: "MODE_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_Repository_Mode_RemoteRepository A remote
 *        repository to serve artifacts from a remote source. (Value:
 *        "REMOTE_REPOSITORY")
 *    @arg @c kGTLRArtifactRegistry_Repository_Mode_StandardRepository A
 *        standard repository storing artifacts. (Value: "STANDARD_REPOSITORY")
 *    @arg @c kGTLRArtifactRegistry_Repository_Mode_VirtualRepository A virtual
 *        repository to serve artifacts from one or more sources. (Value:
 *        "VIRTUAL_REPOSITORY")
 */
@property(nonatomic, copy, nullable) NSString *mode;

/**
 *  The name of the repository, for example:
 *  `projects/p1/locations/us-central1/repositories/repo1`. For each location in
 *  a project, repository names must be unique.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Configuration specific for a Remote Repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_RemoteRepositoryConfig *remoteRepositoryConfig;

/**
 *  Output only. If set, the repository satisfies physical zone isolation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzi;

/**
 *  Output only. If set, the repository satisfies physical zone separation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  Output only. The size, in bytes, of all artifact storage in this repository.
 *  Repositories that are generally available or in public preview use this to
 *  calculate storage costs.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeBytes;

/** Output only. The time when the repository was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Configuration specific for a Virtual Repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_VirtualRepositoryConfig *virtualRepositoryConfig;

@end


/**
 *  Optional. Cleanup policies for this repository. Cleanup policies indicate
 *  when certain package versions can be automatically deleted. Map keys are
 *  policy IDs supplied by users during policy creation. They must unique within
 *  a repository and be under 128 characters in length.
 *
 *  @note This class is documented as having more properties of
 *        GTLRArtifactRegistry_CleanupPolicy. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRArtifactRegistry_Repository_CleanupPolicies : GTLRObject
@end


/**
 *  Labels with user-defined metadata. This field may contain up to 64 entries.
 *  Label keys and values may be no longer than 63 characters. Label keys must
 *  begin with a lowercase letter and may only contain lowercase letters,
 *  numeric characters, underscores, and dashes.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRArtifactRegistry_Repository_Labels : GTLRObject
@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRArtifactRegistry_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Policy *policy;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRArtifactRegistry_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRArtifactRegistry_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRArtifactRegistry_Status_Details_Item : GTLRObject
@end


/**
 *  Tags point to a version and represent an alternative name that can be used
 *  to access the version.
 */
@interface GTLRArtifactRegistry_Tag : GTLRObject

/**
 *  The name of the tag, for example:
 *  "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1".
 *  If the package part contains slashes, the slashes are escaped. The tag part
 *  can only have characters in [a-zA-Z0-9\\-._~:\@], anything else must be URL
 *  encoded.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The name of the version the tag refers to, for example:
 *  "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811"
 *  If the package or version ID parts contain slashes, the slashes are escaped.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRArtifactRegistry_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRArtifactRegistry_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  The response to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadAptArtifactMediaResponse : GTLRObject

/** Operation to be returned to the user. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation *operation;

@end


/**
 *  The operation metadata for uploading artifacts.
 */
@interface GTLRArtifactRegistry_UploadAptArtifactMetadata : GTLRObject
@end


/**
 *  The request to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadAptArtifactRequest : GTLRObject
@end


/**
 *  The response of the completed artifact upload operation. This response is
 *  contained in the Operation and available to users.
 */
@interface GTLRArtifactRegistry_UploadAptArtifactResponse : GTLRObject

/** The Apt artifacts updated. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_AptArtifact *> *aptArtifacts;

@end


/**
 *  The response to upload a generic artifact.
 */
@interface GTLRArtifactRegistry_UploadGenericArtifactMediaResponse : GTLRObject

/** Operation that will be returned to the user. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation *operation;

@end


/**
 *  The operation metadata for uploading generic artifacts.
 */
@interface GTLRArtifactRegistry_UploadGenericArtifactMetadata : GTLRObject
@end


/**
 *  The request to upload a generic artifact. The created GenericArtifact will
 *  have the resource name {parent}/genericArtifacts/package_id:version_id. The
 *  created file will have the resource name
 *  {parent}/files/package_id:version_id:filename.
 */
@interface GTLRArtifactRegistry_UploadGenericArtifactRequest : GTLRObject

/**
 *  The name of the file of the generic artifact to be uploaded. E.g.
 *  `example-file.zip` The filename is limited to letters, numbers, and url safe
 *  characters, i.e. [a-zA-Z0-9-_.~\@].
 */
@property(nonatomic, copy, nullable) NSString *filename;

/**
 *  The ID of the package of the generic artifact. If the package does not
 *  exist, a new package will be created. The `package_id` should start and end
 *  with a letter or number, only contain letters, numbers, hyphens,
 *  underscores, and periods, and not exceed 256 characters.
 */
@property(nonatomic, copy, nullable) NSString *packageId;

/**
 *  The ID of the version of the generic artifact. If the version does not
 *  exist, a new version will be created. The version_id must start and end with
 *  a letter or number, can only contain lowercase letters, numbers, hyphens and
 *  periods, i.e. [a-z0-9-.] and cannot exceed a total of 128 characters.
 *  Creating a version called `latest` is not allowed.
 */
@property(nonatomic, copy, nullable) NSString *versionId;

@end


/**
 *  The response to upload a Go module.
 */
@interface GTLRArtifactRegistry_UploadGoModuleMediaResponse : GTLRObject

/** Operation to be returned to the user. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation *operation;

@end


/**
 *  The operation metadata for uploading go modules.
 */
@interface GTLRArtifactRegistry_UploadGoModuleMetadata : GTLRObject
@end


/**
 *  The request to upload a Go module.
 */
@interface GTLRArtifactRegistry_UploadGoModuleRequest : GTLRObject
@end


/**
 *  The response to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadGoogetArtifactMediaResponse : GTLRObject

/** Operation to be returned to the user. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation *operation;

@end


/**
 *  The operation metadata for uploading artifacts.
 */
@interface GTLRArtifactRegistry_UploadGoogetArtifactMetadata : GTLRObject
@end


/**
 *  The request to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadGoogetArtifactRequest : GTLRObject
@end


/**
 *  The response of the completed artifact upload operation. This response is
 *  contained in the Operation and available to users.
 */
@interface GTLRArtifactRegistry_UploadGoogetArtifactResponse : GTLRObject

/** The GooGet artifacts updated. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_GoogetArtifact *> *googetArtifacts;

@end


/**
 *  The response to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadKfpArtifactMediaResponse : GTLRObject

/** Operation that will be returned to the user. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation *operation;

@end


/**
 *  The operation metadata for uploading KFP artifacts.
 */
@interface GTLRArtifactRegistry_UploadKfpArtifactMetadata : GTLRObject
@end


/**
 *  The request to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadKfpArtifactRequest : GTLRObject

/**
 *  Description of the package version.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Tags to be created with the version. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

@end


/**
 *  The response to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadYumArtifactMediaResponse : GTLRObject

/** Operation to be returned to the user. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Operation *operation;

@end


/**
 *  The operation metadata for uploading artifacts.
 */
@interface GTLRArtifactRegistry_UploadYumArtifactMetadata : GTLRObject
@end


/**
 *  The request to upload an artifact.
 */
@interface GTLRArtifactRegistry_UploadYumArtifactRequest : GTLRObject
@end


/**
 *  The response of the completed artifact upload operation. This response is
 *  contained in the Operation and available to users.
 */
@interface GTLRArtifactRegistry_UploadYumArtifactResponse : GTLRObject

/** The Yum artifacts updated. */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_YumArtifact *> *yumArtifacts;

@end


/**
 *  The credentials to access the remote repository.
 */
@interface GTLRArtifactRegistry_UpstreamCredentials : GTLRObject

/** Use username and password to access the remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_UsernamePasswordCredentials *usernamePasswordCredentials;

@end


/**
 *  Artifact policy configuration for the repository contents.
 */
@interface GTLRArtifactRegistry_UpstreamPolicy : GTLRObject

/**
 *  The user-provided ID of the upstream policy.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Entries with a greater priority value take precedence in the pull order.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  A reference to the repository resource, for example:
 *  `projects/p1/locations/us-central1/repositories/repo1`.
 */
@property(nonatomic, copy, nullable) NSString *repository;

@end


/**
 *  Username and password credentials.
 */
@interface GTLRArtifactRegistry_UsernamePasswordCredentials : GTLRObject

/**
 *  The Secret Manager key version that holds the password to access the remote
 *  repository. Must be in the format of
 *  `projects/{project}/secrets/{secret}/versions/{version}`.
 */
@property(nonatomic, copy, nullable) NSString *passwordSecretVersion;

/** The username to access the remote repository. */
@property(nonatomic, copy, nullable) NSString *username;

@end


/**
 *  The body of a version resource. A version resource represents a collection
 *  of components, such as files and other data. This may correspond to a
 *  version in many package management schemes.
 */
@interface GTLRArtifactRegistry_Version : GTLRObject

/** The time when the version was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Description of the version, as specified in its metadata.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. Repository-specific Metadata stored against this version. The
 *  fields returned are defined by the underlying repository-specific resource.
 *  Currently, the resources could be: DockerImage MavenArtifact
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_Version_Metadata *metadata;

/**
 *  The name of the version, for example:
 *  "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1".
 *  If the package or version ID parts contain slashes, the slashes are escaped.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. A list of related tags. Will contain up to 100 tags that
 *  reference this version.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_Tag *> *relatedTags;

/** The time when the version was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Output only. Repository-specific Metadata stored against this version. The
 *  fields returned are defined by the underlying repository-specific resource.
 *  Currently, the resources could be: DockerImage MavenArtifact
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRArtifactRegistry_Version_Metadata : GTLRObject
@end


/**
 *  Virtual repository configuration.
 */
@interface GTLRArtifactRegistry_VirtualRepositoryConfig : GTLRObject

/**
 *  Policies that configure the upstream artifacts distributed by the Virtual
 *  Repository. Upstream policies cannot be set on a standard repository.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRArtifactRegistry_UpstreamPolicy *> *upstreamPolicies;

@end


/**
 *  The Artifact Registry VPC SC config that apply to a Project.
 */
@interface GTLRArtifactRegistry_VPCSCConfig : GTLRObject

/**
 *  The name of the project's VPC SC Config. Always of the form:
 *  projects/{projectID}/locations/{location}/vpcscConfig In update request:
 *  never set In response: always set
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The project per location VPC SC policy that defines the VPC SC behavior for
 *  the Remote Repository (Allow/Deny).
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_VPCSCConfig_VpcscPolicy_Allow VPCSC_ALLOW -
 *        repository will allow the requests to the Upstreams for the Remote
 *        Repositories if the resource is in the perimeter. (Value: "ALLOW")
 *    @arg @c kGTLRArtifactRegistry_VPCSCConfig_VpcscPolicy_Deny VPCSC_DENY -
 *        repository will block the requests to the Upstreams for the Remote
 *        Repositories if the resource is in the perimeter. (Value: "DENY")
 *    @arg @c kGTLRArtifactRegistry_VPCSCConfig_VpcscPolicy_VpcscPolicyUnspecified
 *        VPCSC_POLICY_UNSPECIFIED - the VPS SC policy is not defined. When VPS
 *        SC policy is not defined - the Service will use the default behavior
 *        (VPCSC_DENY). (Value: "VPCSC_POLICY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *vpcscPolicy;

@end


/**
 *  A detailed representation of a Yum artifact.
 */
@interface GTLRArtifactRegistry_YumArtifact : GTLRObject

/** Output only. Operating system architecture of the artifact. */
@property(nonatomic, copy, nullable) NSString *architecture;

/** Output only. The Artifact Registry resource name of the artifact. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The yum package name of the artifact. */
@property(nonatomic, copy, nullable) NSString *packageName;

/**
 *  Output only. An artifact is a binary or source package.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistry_YumArtifact_PackageType_Binary Binary
 *        package (.rpm). (Value: "BINARY")
 *    @arg @c kGTLRArtifactRegistry_YumArtifact_PackageType_PackageTypeUnspecified
 *        Package type is not specified. (Value: "PACKAGE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistry_YumArtifact_PackageType_Source Source
 *        package (.srpm). (Value: "SOURCE")
 */
@property(nonatomic, copy, nullable) NSString *packageType;

@end


/**
 *  Configuration for a Yum remote repository.
 */
@interface GTLRArtifactRegistry_YumRepository : GTLRObject

/** Customer-specified remote repository. */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository *customRepository;

/**
 *  One of the publicly available Yum repositories supported by Artifact
 *  Registry.
 */
@property(nonatomic, strong, nullable) GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository *publicRepository;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
