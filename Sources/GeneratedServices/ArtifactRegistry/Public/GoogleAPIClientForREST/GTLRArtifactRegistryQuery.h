// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Artifact Registry API (artifactregistry/v1)
// Description:
//   Store and manage build artifacts in a scalable and integrated service built
//   on Google infrastructure.
// Documentation:
//   https://cloud.google.com/artifacts/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRArtifactRegistryObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  Includes basic information about the version, but not any related tags.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistryViewBasic;
/**
 *  Include everything.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistryViewFull;
/**
 *  The default / unset value. The API will default to the BASIC view.
 *
 *  Value: "VERSION_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRArtifactRegistryViewVersionViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Artifact Registry query classes.
 */
@interface GTLRArtifactRegistryQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieves the Settings for the Project.
 *
 *  Method: artifactregistry.projects.getProjectSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsGetProjectSettings : GTLRArtifactRegistryQuery

/** Required. The name of the projectSettings resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_ProjectSettings.
 *
 *  Retrieves the Settings for the Project.
 *
 *  @param name Required. The name of the projectSettings resource.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsGetProjectSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: artifactregistry.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsGet : GTLRArtifactRegistryQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: artifactregistry.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsList : GTLRArtifactRegistryQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: artifactregistry.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsOperationsGet : GTLRArtifactRegistryQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports Apt artifacts. The returned Operation will complete once the
 *  resources are imported. Package, Version, and File resources are created
 *  based on the imported artifacts. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  Method: artifactregistry.projects.locations.repositories.aptArtifacts.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesAptArtifactsImport : GTLRArtifactRegistryQuery

/** The name of the parent resource where the artifacts will be imported. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_Operation.
 *
 *  Imports Apt artifacts. The returned Operation will complete once the
 *  resources are imported. Package, Version, and File resources are created
 *  based on the imported artifacts. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  @param object The @c GTLRArtifactRegistry_ImportAptArtifactsRequest to
 *    include in the query.
 *  @param parent The name of the parent resource where the artifacts will be
 *    imported.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesAptArtifactsImport
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_ImportAptArtifactsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Directly uploads an Apt artifact. The returned Operation will complete once
 *  the resources are uploaded. Package, Version, and File resources are created
 *  based on the imported artifact. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  Method: artifactregistry.projects.locations.repositories.aptArtifacts.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesAptArtifactsUpload : GTLRArtifactRegistryQuery

/** The name of the parent resource where the artifacts will be uploaded. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_UploadAptArtifactMediaResponse.
 *
 *  Directly uploads an Apt artifact. The returned Operation will complete once
 *  the resources are uploaded. Package, Version, and File resources are created
 *  based on the imported artifact. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  @param object The @c GTLRArtifactRegistry_UploadAptArtifactRequest to
 *    include in the query.
 *  @param parent The name of the parent resource where the artifacts will be
 *    uploaded.
 *  @param uploadParameters The media to include in this query. Accepted MIME
 *    type: * / *
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesAptArtifactsUpload
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_UploadAptArtifactRequest *)object
                         parent:(NSString *)parent
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

/**
 *  Creates a repository. The returned Operation will finish once the repository
 *  has been created. Its response will be the created Repository.
 *
 *  Method: artifactregistry.projects.locations.repositories.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesCreate : GTLRArtifactRegistryQuery

/**
 *  Required. The name of the parent resource where the repository will be
 *  created.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** The repository id to use for this repository. */
@property(nonatomic, copy, nullable) NSString *repositoryId;

/**
 *  Fetches a @c GTLRArtifactRegistry_Operation.
 *
 *  Creates a repository. The returned Operation will finish once the repository
 *  has been created. Its response will be the created Repository.
 *
 *  @param object The @c GTLRArtifactRegistry_Repository to include in the
 *    query.
 *  @param parent Required. The name of the parent resource where the repository
 *    will be created.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesCreate
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_Repository *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a repository and all of its contents. The returned Operation will
 *  finish once the repository has been deleted. It will not have any Operation
 *  metadata and will return a google.protobuf.Empty response.
 *
 *  Method: artifactregistry.projects.locations.repositories.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesDelete : GTLRArtifactRegistryQuery

/** Required. The name of the repository to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Operation.
 *
 *  Deletes a repository and all of its contents. The returned Operation will
 *  finish once the repository has been deleted. It will not have any Operation
 *  metadata and will return a google.protobuf.Empty response.
 *
 *  @param name Required. The name of the repository to delete.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a docker image.
 *
 *  Method: artifactregistry.projects.locations.repositories.dockerImages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesDockerImagesGet : GTLRArtifactRegistryQuery

/** Required. The name of the docker images. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_DockerImage.
 *
 *  Gets a docker image.
 *
 *  @param name Required. The name of the docker images.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesDockerImagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists docker images.
 *
 *  Method: artifactregistry.projects.locations.repositories.dockerImages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesDockerImagesList : GTLRArtifactRegistryQuery

/** The field to order the results by. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of artifacts to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource whose docker images will be
 *  listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListDockerImagesResponse.
 *
 *  Lists docker images.
 *
 *  @param parent Required. The name of the parent resource whose docker images
 *    will be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesDockerImagesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a file.
 *
 *  Method: artifactregistry.projects.locations.repositories.files.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesFilesGet : GTLRArtifactRegistryQuery

/** The name of the file to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_GoogleDevtoolsArtifactregistryV1File.
 *
 *  Gets a file.
 *
 *  @param name The name of the file to retrieve.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesFilesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists files.
 *
 *  Method: artifactregistry.projects.locations.repositories.files.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesFilesList : GTLRArtifactRegistryQuery

/**
 *  An expression for filtering the results of the request. Filter rules are
 *  case insensitive. The fields eligible for filtering are: * `name` * `owner`
 *  An example of using a filter: *
 *  `name="projects/p1/locations/us-central1/repositories/repo1/files/a/b/ *"`
 *  --> Files with an ID starting with "a/b/". *
 *  `owner="projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0"`
 *  --> Files owned by the version `1.0` in package `pkg1`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The field to order the results by. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of files to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The name of the repository whose files will be listed. For example:
 *  "projects/p1/locations/us-central1/repositories/repo1
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListFilesResponse.
 *
 *  Lists files.
 *
 *  @param parent The name of the repository whose files will be listed. For
 *    example: "projects/p1/locations/us-central1/repositories/repo1
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesFilesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a repository.
 *
 *  Method: artifactregistry.projects.locations.repositories.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesGet : GTLRArtifactRegistryQuery

/** Required. The name of the repository to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Repository.
 *
 *  Gets a repository.
 *
 *  @param name Required. The name of the repository to retrieve.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy for a given resource.
 *
 *  Method: artifactregistry.projects.locations.repositories.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesGetIamPolicy : GTLRArtifactRegistryQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRArtifactRegistry_Policy.
 *
 *  Gets the IAM policy for a given resource.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Directly uploads a KFP artifact. The returned Operation will complete once
 *  the resource is uploaded. Package, Version, and File resources will be
 *  created based on the uploaded artifact. Uploaded artifacts that conflict
 *  with existing resources will be overwritten.
 *
 *  Method: artifactregistry.projects.locations.repositories.kfpArtifacts.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesKfpArtifactsUpload : GTLRArtifactRegistryQuery

/**
 *  The resource name of the repository where the KFP artifact will be uploaded.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_UploadKfpArtifactMediaResponse.
 *
 *  Directly uploads a KFP artifact. The returned Operation will complete once
 *  the resource is uploaded. Package, Version, and File resources will be
 *  created based on the uploaded artifact. Uploaded artifacts that conflict
 *  with existing resources will be overwritten.
 *
 *  @param object The @c GTLRArtifactRegistry_UploadKfpArtifactRequest to
 *    include in the query.
 *  @param parent The resource name of the repository where the KFP artifact
 *    will be uploaded.
 *  @param uploadParameters The media to include in this query. Accepted MIME
 *    type: * / *
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesKfpArtifactsUpload
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_UploadKfpArtifactRequest *)object
                         parent:(NSString *)parent
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

/**
 *  Lists repositories.
 *
 *  Method: artifactregistry.projects.locations.repositories.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesList : GTLRArtifactRegistryQuery

/**
 *  The maximum number of repositories to return. Maximum page size is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource whose repositories will be listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListRepositoriesResponse.
 *
 *  Lists repositories.
 *
 *  @param parent Required. The name of the parent resource whose repositories
 *    will be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a maven artifact.
 *
 *  Method: artifactregistry.projects.locations.repositories.mavenArtifacts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesMavenArtifactsGet : GTLRArtifactRegistryQuery

/** Required. The name of the maven artifact. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_MavenArtifact.
 *
 *  Gets a maven artifact.
 *
 *  @param name Required. The name of the maven artifact.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesMavenArtifactsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists maven artifacts.
 *
 *  Method: artifactregistry.projects.locations.repositories.mavenArtifacts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesMavenArtifactsList : GTLRArtifactRegistryQuery

/** The maximum number of artifacts to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource whose maven artifacts will be
 *  listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListMavenArtifactsResponse.
 *
 *  Lists maven artifacts.
 *
 *  @param parent Required. The name of the parent resource whose maven
 *    artifacts will be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesMavenArtifactsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a npm package.
 *
 *  Method: artifactregistry.projects.locations.repositories.npmPackages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesNpmPackagesGet : GTLRArtifactRegistryQuery

/** Required. The name of the npm package. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_NpmPackage.
 *
 *  Gets a npm package.
 *
 *  @param name Required. The name of the npm package.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesNpmPackagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists npm packages.
 *
 *  Method: artifactregistry.projects.locations.repositories.npmPackages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesNpmPackagesList : GTLRArtifactRegistryQuery

/** The maximum number of artifacts to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource whose npm packages will be listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListNpmPackagesResponse.
 *
 *  Lists npm packages.
 *
 *  @param parent Required. The name of the parent resource whose npm packages
 *    will be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesNpmPackagesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a package and all of its versions and tags. The returned operation
 *  will complete once the package has been deleted.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesDelete : GTLRArtifactRegistryQuery

/** Required. The name of the package to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Operation.
 *
 *  Deletes a package and all of its versions and tags. The returned operation
 *  will complete once the package has been deleted.
 *
 *  @param name Required. The name of the package to delete.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a package.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesGet : GTLRArtifactRegistryQuery

/** Required. The name of the package to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Package.
 *
 *  Gets a package.
 *
 *  @param name Required. The name of the package to retrieve.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists packages.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesList : GTLRArtifactRegistryQuery

/** The maximum number of packages to return. Maximum page size is 1,000. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource whose packages will be listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListPackagesResponse.
 *
 *  Lists packages.
 *
 *  @param parent Required. The name of the parent resource whose packages will
 *    be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a tag.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.tags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsCreate : GTLRArtifactRegistryQuery

/** The name of the parent resource where the tag will be created. */
@property(nonatomic, copy, nullable) NSString *parent;

/** The tag id to use for this repository. */
@property(nonatomic, copy, nullable) NSString *tagId;

/**
 *  Fetches a @c GTLRArtifactRegistry_Tag.
 *
 *  Creates a tag.
 *
 *  @param object The @c GTLRArtifactRegistry_Tag to include in the query.
 *  @param parent The name of the parent resource where the tag will be created.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_Tag *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a tag.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.tags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsDelete : GTLRArtifactRegistryQuery

/** The name of the tag to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Empty.
 *
 *  Deletes a tag.
 *
 *  @param name The name of the tag to delete.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a tag.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.tags.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsGet : GTLRArtifactRegistryQuery

/** The name of the tag to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Tag.
 *
 *  Gets a tag.
 *
 *  @param name The name of the tag to retrieve.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists tags.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.tags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsList : GTLRArtifactRegistryQuery

/**
 *  An expression for filtering the results of the request. Filter rules are
 *  case insensitive. The fields eligible for filtering are: * `version` An
 *  example of using a filter: *
 *  `version="projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0"`
 *  --> Tags that are applied to the version `1.0` in package `pkg1`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The maximum number of tags to return. Maximum page size is 10,000. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The name of the parent resource whose tags will be listed. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListTagsResponse.
 *
 *  Lists tags.
 *
 *  @param parent The name of the parent resource whose tags will be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a tag.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.tags.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsPatch : GTLRArtifactRegistryQuery

/**
 *  The name of the tag, for example:
 *  "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1".
 *  If the package part contains slashes, the slashes are escaped. The tag part
 *  can only have characters in [a-zA-Z0-9\\-._~:\@], anything else must be URL
 *  encoded.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask applies to the resource. For the `FieldMask` definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRArtifactRegistry_Tag.
 *
 *  Updates a tag.
 *
 *  @param object The @c GTLRArtifactRegistry_Tag to include in the query.
 *  @param name The name of the tag, for example:
 *    "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1".
 *    If the package part contains slashes, the slashes are escaped. The tag
 *    part can only have characters in [a-zA-Z0-9\\-._~:\@], anything else must
 *    be URL encoded.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesTagsPatch
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_Tag *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a version and all of its content. The returned operation will
 *  complete once the version has been deleted.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.versions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesVersionsDelete : GTLRArtifactRegistryQuery

/**
 *  By default, a version that is tagged may not be deleted. If force=true, the
 *  version and any tags pointing to the version are deleted.
 */
@property(nonatomic, assign) BOOL force;

/** The name of the version to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_Operation.
 *
 *  Deletes a version and all of its content. The returned operation will
 *  complete once the version has been deleted.
 *
 *  @param name The name of the version to delete.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesVersionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a version
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesVersionsGet : GTLRArtifactRegistryQuery

/** The name of the version to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The view that should be returned in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistryViewVersionViewUnspecified The default /
 *        unset value. The API will default to the BASIC view. (Value:
 *        "VERSION_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistryViewBasic Includes basic information about
 *        the version, but not any related tags. (Value: "BASIC")
 *    @arg @c kGTLRArtifactRegistryViewFull Include everything. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRArtifactRegistry_Version.
 *
 *  Gets a version
 *
 *  @param name The name of the version to retrieve.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists versions.
 *
 *  Method: artifactregistry.projects.locations.repositories.packages.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesVersionsList : GTLRArtifactRegistryQuery

/** Optional. The field to order the results by. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of versions to return. Maximum page size is 1,000. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The name of the parent resource whose versions will be listed. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The view that should be returned in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRArtifactRegistryViewVersionViewUnspecified The default /
 *        unset value. The API will default to the BASIC view. (Value:
 *        "VERSION_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRArtifactRegistryViewBasic Includes basic information about
 *        the version, but not any related tags. (Value: "BASIC")
 *    @arg @c kGTLRArtifactRegistryViewFull Include everything. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListVersionsResponse.
 *
 *  Lists versions.
 *
 *  @param parent The name of the parent resource whose versions will be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPackagesVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a repository.
 *
 *  Method: artifactregistry.projects.locations.repositories.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPatch : GTLRArtifactRegistryQuery

/**
 *  The name of the repository, for example:
 *  "projects/p1/locations/us-central1/repositories/repo1".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask applies to the resource. For the `FieldMask` definition, see
 *  https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRArtifactRegistry_Repository.
 *
 *  Updates a repository.
 *
 *  @param object The @c GTLRArtifactRegistry_Repository to include in the
 *    query.
 *  @param name The name of the repository, for example:
 *    "projects/p1/locations/us-central1/repositories/repo1".
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPatch
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_Repository *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a python package.
 *
 *  Method: artifactregistry.projects.locations.repositories.pythonPackages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPythonPackagesGet : GTLRArtifactRegistryQuery

/** Required. The name of the python package. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRArtifactRegistry_PythonPackage.
 *
 *  Gets a python package.
 *
 *  @param name Required. The name of the python package.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPythonPackagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists python packages.
 *
 *  Method: artifactregistry.projects.locations.repositories.pythonPackages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPythonPackagesList : GTLRArtifactRegistryQuery

/** The maximum number of artifacts to return. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous list request, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the parent resource whose python packages will be
 *  listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_ListPythonPackagesResponse.
 *
 *  Lists python packages.
 *
 *  @param parent Required. The name of the parent resource whose python
 *    packages will be listed.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesPythonPackagesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the IAM policy for a given resource.
 *
 *  Method: artifactregistry.projects.locations.repositories.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesSetIamPolicy : GTLRArtifactRegistryQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRArtifactRegistry_Policy.
 *
 *  Updates the IAM policy for a given resource.
 *
 *  @param object The @c GTLRArtifactRegistry_SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Tests if the caller has a list of permissions on a resource.
 *
 *  Method: artifactregistry.projects.locations.repositories.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatformReadOnly
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesTestIamPermissions : GTLRArtifactRegistryQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRArtifactRegistry_TestIamPermissionsResponse.
 *
 *  Tests if the caller has a list of permissions on a resource.
 *
 *  @param object The @c GTLRArtifactRegistry_TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Imports Yum (RPM) artifacts. The returned Operation will complete once the
 *  resources are imported. Package, Version, and File resources are created
 *  based on the imported artifacts. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  Method: artifactregistry.projects.locations.repositories.yumArtifacts.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesYumArtifactsImport : GTLRArtifactRegistryQuery

/** The name of the parent resource where the artifacts will be imported. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_Operation.
 *
 *  Imports Yum (RPM) artifacts. The returned Operation will complete once the
 *  resources are imported. Package, Version, and File resources are created
 *  based on the imported artifacts. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  @param object The @c GTLRArtifactRegistry_ImportYumArtifactsRequest to
 *    include in the query.
 *  @param parent The name of the parent resource where the artifacts will be
 *    imported.
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesYumArtifactsImport
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_ImportYumArtifactsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Directly uploads a Yum artifact. The returned Operation will complete once
 *  the resources are uploaded. Package, Version, and File resources are created
 *  based on the imported artifact. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  Method: artifactregistry.projects.locations.repositories.yumArtifacts.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesYumArtifactsUpload : GTLRArtifactRegistryQuery

/** The name of the parent resource where the artifacts will be uploaded. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRArtifactRegistry_UploadYumArtifactMediaResponse.
 *
 *  Directly uploads a Yum artifact. The returned Operation will complete once
 *  the resources are uploaded. Package, Version, and File resources are created
 *  based on the imported artifact. Imported artifacts that conflict with
 *  existing resources are ignored.
 *
 *  @param object The @c GTLRArtifactRegistry_UploadYumArtifactRequest to
 *    include in the query.
 *  @param parent The name of the parent resource where the artifacts will be
 *    uploaded.
 *  @param uploadParameters The media to include in this query. Accepted MIME
 *    type: * / *
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsLocationsRepositoriesYumArtifactsUpload
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_UploadYumArtifactRequest *)object
                         parent:(NSString *)parent
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

/**
 *  Updates the Settings for the Project.
 *
 *  Method: artifactregistry.projects.updateProjectSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeArtifactRegistryCloudPlatform
 */
@interface GTLRArtifactRegistryQuery_ProjectsUpdateProjectSettings : GTLRArtifactRegistryQuery

/**
 *  The name of the project's settings. Always of the form:
 *  projects/{project-id}/projectSettings In update request: never set In
 *  response: always set
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask to support partial updates.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRArtifactRegistry_ProjectSettings.
 *
 *  Updates the Settings for the Project.
 *
 *  @param object The @c GTLRArtifactRegistry_ProjectSettings to include in the
 *    query.
 *  @param name The name of the project's settings. Always of the form:
 *    projects/{project-id}/projectSettings In update request: never set In
 *    response: always set
 *
 *  @return GTLRArtifactRegistryQuery_ProjectsUpdateProjectSettings
 */
+ (instancetype)queryWithObject:(GTLRArtifactRegistry_ProjectSettings *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
