// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Backup for GKE API (gkebackup/v1)
// Description:
//   Backup for GKE is a managed Kubernetes workload backup and restore service
//   for GKE clusters.
// Documentation:
//   https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRBackupforGKEObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Backup for GKE query classes.
 */
@interface GTLRBackupforGKEQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a Backup for the given BackupPlan.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsCreate : GTLRBackupforGKEQuery

/**
 *  The client-provided short name for the Backup resource. This name must: - be
 *  between 1 and 63 characters long (inclusive) - consist of only lower-case
 *  ASCII letters, numbers, and dashes - start with a lower-case letter - end
 *  with a lower-case letter or number - be unique within the set of Backups in
 *  this BackupPlan
 */
@property(nonatomic, copy, nullable) NSString *backupId;

/**
 *  Required. The BackupPlan within which to create the Backup. Format:
 *  `projects/ * /locations/ * /backupPlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Creates a Backup for the given BackupPlan.
 *
 *  @param object The @c GTLRBackupforGKE_Backup to include in the query.
 *  @param parent Required. The BackupPlan within which to create the Backup.
 *    Format: `projects/ * /locations/ * /backupPlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsCreate
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_Backup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing Backup.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsDelete : GTLRBackupforGKEQuery

/**
 *  If provided, this value must match the current value of the target Backup's
 *  etag field or the request is rejected.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set to true, any VolumeBackups below this Backup will also be deleted.
 *  Otherwise, the request will only succeed if the Backup has no VolumeBackups.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. Name of the Backup resource. Format: `projects/ * /locations/ *
 *  /backupPlans/ * /backups/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Deletes an existing Backup.
 *
 *  @param name Required. Name of the Backup resource. Format: `projects/ *
 *    /locations/ * /backupPlans/ * /backups/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve the details of a single Backup.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsGet : GTLRBackupforGKEQuery

/**
 *  Required. Full name of the Backup resource. Format: `projects/ * /locations/
 *  * /backupPlans/ * /backups/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_Backup.
 *
 *  Retrieve the details of a single Backup.
 *
 *  @param name Required. Full name of the Backup resource. Format: `projects/ *
 *    /locations/ * /backupPlans/ * /backups/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsGetIamPolicy : GTLRBackupforGKEQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists the Backups for a given BackupPlan.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsList : GTLRBackupforGKEQuery

/** Field match expression used to filter the results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field by which to sort the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The target number of results to return in a single response. If not
 *  specified, a default value will be chosen by the service. Note that the
 *  response may inclue a partial list and a caller should only rely on the
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value of next_page_token received from a previous `ListBackups` call.
 *  Provide this to retrieve the subsequent page in a multi-page list of
 *  results. When paginating, all other parameters provided to `ListBackups`
 *  must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The BackupPlan that contains the Backups to list. Format:
 *  `projects/ * /locations/ * /backupPlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_ListBackupsResponse.
 *
 *  Lists the Backups for a given BackupPlan.
 *
 *  @param parent Required. The BackupPlan that contains the Backups to list.
 *    Format: `projects/ * /locations/ * /backupPlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a Backup.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsPatch : GTLRBackupforGKEQuery

/**
 *  Output only. The fully qualified name of the Backup. `projects/ *
 *  /locations/ * /backupPlans/ * /backups/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This is used to specify the fields to be overwritten in the Backup targeted
 *  for update. The values for each of these updated fields will be taken from
 *  the `backup_plan` provided with this request. Field names are relative to
 *  the root of the resource. If no `update_mask` is provided, all fields in
 *  `backup` will be written to the target Backup resource. Note that
 *  OUTPUT_ONLY and IMMUTABLE fields in `backup` are ignored and are not used to
 *  update the target Backup.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Update a Backup.
 *
 *  @param object The @c GTLRBackupforGKE_Backup to include in the query.
 *  @param name Output only. The fully qualified name of the Backup. `projects/
 *    * /locations/ * /backupPlans/ * /backups/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsPatch
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_Backup *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsSetIamPolicy : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBackupforGKE_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsTestIamPermissions : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupforGKE_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Retrieve the details of a single VolumeBackup.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.volumeBackups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsGet : GTLRBackupforGKEQuery

/**
 *  Required. Full name of the VolumeBackup resource. Format: `projects/ *
 *  /locations/ * /backupPlans/ * /backups/ * /volumeBackups/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_VolumeBackup.
 *
 *  Retrieve the details of a single VolumeBackup.
 *
 *  @param name Required. Full name of the VolumeBackup resource. Format:
 *    `projects/ * /locations/ * /backupPlans/ * /backups/ * /volumeBackups/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.volumeBackups.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsGetIamPolicy : GTLRBackupforGKEQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists the VolumeBackups for a given Backup.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.volumeBackups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsList : GTLRBackupforGKEQuery

/** Field match expression used to filter the results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field by which to sort the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The target number of results to return in a single response. If not
 *  specified, a default value will be chosen by the service. Note that the
 *  response may inclue a partial list and a caller should only rely on the
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value of next_page_token received from a previous `ListVolumeBackups`
 *  call. Provide this to retrieve the subsequent page in a multi-page list of
 *  results. When paginating, all other parameters provided to
 *  `ListVolumeBackups` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The Backup that contains the VolumeBackups to list. Format:
 *  `projects/ * /locations/ * /backupPlans/ * /backups/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_ListVolumeBackupsResponse.
 *
 *  Lists the VolumeBackups for a given Backup.
 *
 *  @param parent Required. The Backup that contains the VolumeBackups to list.
 *    Format: `projects/ * /locations/ * /backupPlans/ * /backups/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.volumeBackups.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsSetIamPolicy : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBackupforGKE_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkebackup.projects.locations.backupPlans.backups.volumeBackups.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsTestIamPermissions : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupforGKE_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansBackupsVolumeBackupsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new BackupPlan in a given location.
 *
 *  Method: gkebackup.projects.locations.backupPlans.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansCreate : GTLRBackupforGKEQuery

/**
 *  Required. The client-provided short name for the BackupPlan resource. This
 *  name must: - be between 1 and 63 characters long (inclusive) - consist of
 *  only lower-case ASCII letters, numbers, and dashes - start with a lower-case
 *  letter - end with a lower-case letter or number - be unique within the set
 *  of BackupPlans in this location
 */
@property(nonatomic, copy, nullable) NSString *backupPlanId;

/**
 *  Required. The location within which to create the BackupPlan. Format:
 *  `projects/ * /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Creates a new BackupPlan in a given location.
 *
 *  @param object The @c GTLRBackupforGKE_BackupPlan to include in the query.
 *  @param parent Required. The location within which to create the BackupPlan.
 *    Format: `projects/ * /locations/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansCreate
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_BackupPlan *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing BackupPlan.
 *
 *  Method: gkebackup.projects.locations.backupPlans.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansDelete : GTLRBackupforGKEQuery

/**
 *  If provided, this value must match the current value of the target
 *  BackupPlan's etag field or the request is rejected.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. Fully qualified BackupPlan name. Format: `projects/ * /locations/
 *  * /backupPlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Deletes an existing BackupPlan.
 *
 *  @param name Required. Fully qualified BackupPlan name. Format: `projects/ *
 *    /locations/ * /backupPlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve the details of a single BackupPlan.
 *
 *  Method: gkebackup.projects.locations.backupPlans.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansGet : GTLRBackupforGKEQuery

/**
 *  Required. Fully qualified BackupPlan name. Format: `projects/ * /locations/
 *  * /backupPlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_BackupPlan.
 *
 *  Retrieve the details of a single BackupPlan.
 *
 *  @param name Required. Fully qualified BackupPlan name. Format: `projects/ *
 *    /locations/ * /backupPlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkebackup.projects.locations.backupPlans.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansGetIamPolicy : GTLRBackupforGKEQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists BackupPlans in a given location.
 *
 *  Method: gkebackup.projects.locations.backupPlans.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansList : GTLRBackupforGKEQuery

/** Field match expression used to filter the results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field by which to sort the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The target number of results to return in a single response. If not
 *  specified, a default value will be chosen by the service. Note that the
 *  response may inclue a partial list and a caller should only rely on the
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value of next_page_token received from a previous `ListBackupPlans`
 *  call. Provide this to retrieve the subsequent page in a multi-page list of
 *  results. When paginating, all other parameters provided to `ListBackupPlans`
 *  must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The location that contains the BackupPlans to list. Format:
 *  `projects/ * /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_ListBackupPlansResponse.
 *
 *  Lists BackupPlans in a given location.
 *
 *  @param parent Required. The location that contains the BackupPlans to list.
 *    Format: `projects/ * /locations/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a BackupPlan.
 *
 *  Method: gkebackup.projects.locations.backupPlans.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansPatch : GTLRBackupforGKEQuery

/**
 *  Output only. The full name of the BackupPlan resource. Format: `projects/ *
 *  /locations/ * /backupPlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This is used to specify the fields to be overwritten in the BackupPlan
 *  targeted for update. The values for each of these updated fields will be
 *  taken from the `backup_plan` provided with this request. Field names are
 *  relative to the root of the resource (e.g., `description`,
 *  `backup_config.include_volume_data`, etc.) If no `update_mask` is provided,
 *  all fields in `backup_plan` will be written to the target BackupPlan
 *  resource. Note that OUTPUT_ONLY and IMMUTABLE fields in `backup_plan` are
 *  ignored and are not used to update the target BackupPlan.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Update a BackupPlan.
 *
 *  @param object The @c GTLRBackupforGKE_BackupPlan to include in the query.
 *  @param name Output only. The full name of the BackupPlan resource. Format:
 *    `projects/ * /locations/ * /backupPlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansPatch
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_BackupPlan *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkebackup.projects.locations.backupPlans.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansSetIamPolicy : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBackupforGKE_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkebackup.projects.locations.backupPlans.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansTestIamPermissions : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupforGKE_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsBackupPlansTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: gkebackup.projects.locations.deleteOperations
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsDeleteOperations : GTLRBackupforGKEQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsDeleteOperations
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: gkebackup.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsGet : GTLRBackupforGKEQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: gkebackup.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsList : GTLRBackupforGKEQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBackupforGKE_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: gkebackup.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsOperationsCancel : GTLRBackupforGKEQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c
 *    GTLRBackupforGKE_GoogleLongrunningCancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkebackup.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsOperationsGet : GTLRBackupforGKEQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: gkebackup.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsOperationsList : GTLRBackupforGKEQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new RestorePlan in a given location.
 *
 *  Method: gkebackup.projects.locations.restorePlans.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansCreate : GTLRBackupforGKEQuery

/**
 *  Required. The location within which to create the RestorePlan. Format:
 *  `projects/ * /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The client-provided short name for the RestorePlan resource. This
 *  name must: - be between 1 and 63 characters long (inclusive) - consist of
 *  only lower-case ASCII letters, numbers, and dashes - start with a lower-case
 *  letter - end with a lower-case letter or number - be unique within the set
 *  of RestorePlans in this location
 */
@property(nonatomic, copy, nullable) NSString *restorePlanId;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Creates a new RestorePlan in a given location.
 *
 *  @param object The @c GTLRBackupforGKE_RestorePlan to include in the query.
 *  @param parent Required. The location within which to create the RestorePlan.
 *    Format: `projects/ * /locations/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansCreate
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_RestorePlan *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing RestorePlan.
 *
 *  Method: gkebackup.projects.locations.restorePlans.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansDelete : GTLRBackupforGKEQuery

/**
 *  If provided, this value must match the current value of the target
 *  RestorePlan's etag field or the request is rejected.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set to true, any Restores below this RestorePlan will also be deleted.
 *  Otherwise, the request will only succeed if the RestorePlan has no Restores.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. Fully qualified RestorePlan name. Format: `projects/ * /locations/
 *  * /restorePlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Deletes an existing RestorePlan.
 *
 *  @param name Required. Fully qualified RestorePlan name. Format: `projects/ *
 *    /locations/ * /restorePlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve the details of a single RestorePlan.
 *
 *  Method: gkebackup.projects.locations.restorePlans.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansGet : GTLRBackupforGKEQuery

/**
 *  Required. Fully qualified RestorePlan name. Format: `projects/ * /locations/
 *  * /restorePlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_RestorePlan.
 *
 *  Retrieve the details of a single RestorePlan.
 *
 *  @param name Required. Fully qualified RestorePlan name. Format: `projects/ *
 *    /locations/ * /restorePlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkebackup.projects.locations.restorePlans.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansGetIamPolicy : GTLRBackupforGKEQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists RestorePlans in a given location.
 *
 *  Method: gkebackup.projects.locations.restorePlans.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansList : GTLRBackupforGKEQuery

/** Field match expression used to filter the results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field by which to sort the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The target number of results to return in a single response. If not
 *  specified, a default value will be chosen by the service. Note that the
 *  response may inclue a partial list and a caller should only rely on the
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value of next_page_token received from a previous `ListRestorePlans`
 *  call. Provide this to retrieve the subsequent page in a multi-page list of
 *  results. When paginating, all other parameters provided to
 *  `ListRestorePlans` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The location that contains the RestorePlans to list. Format:
 *  `projects/ * /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_ListRestorePlansResponse.
 *
 *  Lists RestorePlans in a given location.
 *
 *  @param parent Required. The location that contains the RestorePlans to list.
 *    Format: `projects/ * /locations/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a RestorePlan.
 *
 *  Method: gkebackup.projects.locations.restorePlans.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansPatch : GTLRBackupforGKEQuery

/**
 *  Output only. The full name of the RestorePlan resource. Format: `projects/ *
 *  /locations/ * /restorePlans/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This is used to specify the fields to be overwritten in the RestorePlan
 *  targeted for update. The values for each of these updated fields will be
 *  taken from the `restore_plan` provided with this request. Field names are
 *  relative to the root of the resource. If no `update_mask` is provided, all
 *  fields in `restore_plan` will be written to the target RestorePlan resource.
 *  Note that OUTPUT_ONLY and IMMUTABLE fields in `restore_plan` are ignored and
 *  are not used to update the target RestorePlan.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Update a RestorePlan.
 *
 *  @param object The @c GTLRBackupforGKE_RestorePlan to include in the query.
 *  @param name Output only. The full name of the RestorePlan resource. Format:
 *    `projects/ * /locations/ * /restorePlans/ *`.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansPatch
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_RestorePlan *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Restore for the given RestorePlan.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresCreate : GTLRBackupforGKEQuery

/**
 *  Required. The RestorePlan within which to create the Restore. Format:
 *  `projects/ * /locations/ * /restorePlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The client-provided short name for the Restore resource. This name
 *  must: - be between 1 and 63 characters long (inclusive) - consist of only
 *  lower-case ASCII letters, numbers, and dashes - start with a lower-case
 *  letter - end with a lower-case letter or number - be unique within the set
 *  of Restores in this RestorePlan.
 */
@property(nonatomic, copy, nullable) NSString *restoreId;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Creates a new Restore for the given RestorePlan.
 *
 *  @param object The @c GTLRBackupforGKE_Restore to include in the query.
 *  @param parent Required. The RestorePlan within which to create the Restore.
 *    Format: `projects/ * /locations/ * /restorePlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresCreate
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_Restore *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing Restore.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresDelete : GTLRBackupforGKEQuery

/**
 *  If provided, this value must match the current value of the target Restore's
 *  etag field or the request is rejected.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set to true, any VolumeRestores below this restore will also be deleted.
 *  Otherwise, the request will only succeed if the restore has no
 *  VolumeRestores.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. Full name of the Restore Format: `projects/ * /locations/ *
 *  /restorePlans/ * /restores/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Deletes an existing Restore.
 *
 *  @param name Required. Full name of the Restore Format: `projects/ *
 *    /locations/ * /restorePlans/ * /restores/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the details of a single Restore.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresGet : GTLRBackupforGKEQuery

/**
 *  Required. Name of the restore resource. Format: `projects/ * /locations/ *
 *  /restorePlans/ * /restores/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_Restore.
 *
 *  Retrieves the details of a single Restore.
 *
 *  @param name Required. Name of the restore resource. Format: `projects/ *
 *    /locations/ * /restorePlans/ * /restores/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresGetIamPolicy : GTLRBackupforGKEQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists the Restores for a given RestorePlan.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresList : GTLRBackupforGKEQuery

/** Field match expression used to filter the results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field by which to sort the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The target number of results to return in a single response. If not
 *  specified, a default value will be chosen by the service. Note that the
 *  response may inclue a partial list and a caller should only rely on the
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value of next_page_token received from a previous `ListRestores` call.
 *  Provide this to retrieve the subsequent page in a multi-page list of
 *  results. When paginating, all other parameters provided to `ListRestores`
 *  must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The RestorePlan that contains the Restores to list. Format:
 *  `projects/ * /locations/ * /restorePlans/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_ListRestoresResponse.
 *
 *  Lists the Restores for a given RestorePlan.
 *
 *  @param parent Required. The RestorePlan that contains the Restores to list.
 *    Format: `projects/ * /locations/ * /restorePlans/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a Restore.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresPatch : GTLRBackupforGKEQuery

/**
 *  Output only. The full name of the Restore resource. Format: `projects/ *
 *  /locations/ * /restorePlans/ * /restores/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This is used to specify the fields to be overwritten in the Restore targeted
 *  for update. The values for each of these updated fields will be taken from
 *  the `restore` provided with this request. Field names are relative to the
 *  root of the resource. If no `update_mask` is provided, all fields in
 *  `restore` will be written to the target Restore resource. Note that
 *  OUTPUT_ONLY and IMMUTABLE fields in `restore` are ignored and are not used
 *  to update the target Restore.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRBackupforGKE_GoogleLongrunningOperation.
 *
 *  Update a Restore.
 *
 *  @param object The @c GTLRBackupforGKE_Restore to include in the query.
 *  @param name Output only. The full name of the Restore resource. Format:
 *    `projects/ * /locations/ * /restorePlans/ * /restores/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresPatch
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_Restore *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresSetIamPolicy : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBackupforGKE_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresTestIamPermissions : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupforGKE_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Retrieve the details of a single VolumeRestore.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.volumeRestores.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresGet : GTLRBackupforGKEQuery

/**
 *  Required. Full name of the VolumeRestore resource. Format: `projects/ *
 *  /locations/ * /restorePlans/ * /restores/ * /volumeRestores/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupforGKE_VolumeRestore.
 *
 *  Retrieve the details of a single VolumeRestore.
 *
 *  @param name Required. Full name of the VolumeRestore resource. Format:
 *    `projects/ * /locations/ * /restorePlans/ * /restores/ * /volumeRestores/
 *    *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.volumeRestores.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresGetIamPolicy : GTLRBackupforGKEQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists the VolumeRestores for a given Restore.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.volumeRestores.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresList : GTLRBackupforGKEQuery

/** Field match expression used to filter the results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field by which to sort the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The target number of results to return in a single response. If not
 *  specified, a default value will be chosen by the service. Note that the
 *  response may inclue a partial list and a caller should only rely on the
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value of next_page_token received from a previous `ListVolumeRestores`
 *  call. Provide this to retrieve the subsequent page in a multi-page list of
 *  results. When paginating, all other parameters provided to
 *  `ListVolumeRestores` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The Restore that contains the VolumeRestores to list. Format:
 *  `projects/ * /locations/ * /restorePlans/ * /restores/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupforGKE_ListVolumeRestoresResponse.
 *
 *  Lists the VolumeRestores for a given Restore.
 *
 *  @param parent Required. The Restore that contains the VolumeRestores to
 *    list. Format: `projects/ * /locations/ * /restorePlans/ * /restores/ *`
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.volumeRestores.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresSetIamPolicy : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBackupforGKE_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkebackup.projects.locations.restorePlans.restores.volumeRestores.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresTestIamPermissions : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupforGKE_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansRestoresVolumeRestoresTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: gkebackup.projects.locations.restorePlans.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansSetIamPolicy : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBackupforGKE_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: gkebackup.projects.locations.restorePlans.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupforGKECloudPlatform
 */
@interface GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansTestIamPermissions : GTLRBackupforGKEQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupforGKE_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupforGKE_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupforGKEQuery_ProjectsLocationsRestorePlansTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupforGKE_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
