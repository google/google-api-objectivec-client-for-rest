// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Analytics Hub API (analyticshub/v1)
// Description:
//   Exchange data and analytics assets securely and efficiently.
// Documentation:
//   https://cloud.google.com/bigquery/docs/analytics-hub-introduction

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAnalyticsHub_AuditConfig;
@class GTLRAnalyticsHub_AuditLogConfig;
@class GTLRAnalyticsHub_AvroConfig;
@class GTLRAnalyticsHub_BigQueryConfig;
@class GTLRAnalyticsHub_BigQueryDatasetSource;
@class GTLRAnalyticsHub_Binding;
@class GTLRAnalyticsHub_CloudStorageConfig;
@class GTLRAnalyticsHub_DataExchange;
@class GTLRAnalyticsHub_DataProvider;
@class GTLRAnalyticsHub_DcrExchangeConfig;
@class GTLRAnalyticsHub_DeadLetterPolicy;
@class GTLRAnalyticsHub_DefaultExchangeConfig;
@class GTLRAnalyticsHub_DestinationDataset;
@class GTLRAnalyticsHub_DestinationDataset_Labels;
@class GTLRAnalyticsHub_DestinationDatasetReference;
@class GTLRAnalyticsHub_DestinationPubSubSubscription;
@class GTLRAnalyticsHub_ExpirationPolicy;
@class GTLRAnalyticsHub_Expr;
@class GTLRAnalyticsHub_GetPolicyOptions;
@class GTLRAnalyticsHub_GooglePubsubV1Subscription;
@class GTLRAnalyticsHub_GooglePubsubV1Subscription_Labels;
@class GTLRAnalyticsHub_LinkedResource;
@class GTLRAnalyticsHub_Listing;
@class GTLRAnalyticsHub_NoWrapper;
@class GTLRAnalyticsHub_OidcToken;
@class GTLRAnalyticsHub_Operation_Metadata;
@class GTLRAnalyticsHub_Operation_Response;
@class GTLRAnalyticsHub_Policy;
@class GTLRAnalyticsHub_Publisher;
@class GTLRAnalyticsHub_PubSubTopicSource;
@class GTLRAnalyticsHub_PubsubWrapper;
@class GTLRAnalyticsHub_PushConfig;
@class GTLRAnalyticsHub_PushConfig_Attributes;
@class GTLRAnalyticsHub_RestrictedExportConfig;
@class GTLRAnalyticsHub_RestrictedExportPolicy;
@class GTLRAnalyticsHub_RetryPolicy;
@class GTLRAnalyticsHub_SelectedResource;
@class GTLRAnalyticsHub_SharingEnvironmentConfig;
@class GTLRAnalyticsHub_Status;
@class GTLRAnalyticsHub_Status_Details_Item;
@class GTLRAnalyticsHub_Subscription;
@class GTLRAnalyticsHub_Subscription_LinkedDatasetMap;
@class GTLRAnalyticsHub_SubscriptionInfo;
@class GTLRAnalyticsHub_TextConfig;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_BigQueryConfig.state

/**
 *  The subscription can actively send messages to BigQuery
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_BigQueryConfig_State_Active;
/**
 *  Cannot write to the destination because enforce_in_transit is set to true
 *  and the destination locations are not in the allowed regions.
 *
 *  Value: "IN_TRANSIT_LOCATION_RESTRICTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_BigQueryConfig_State_InTransitLocationRestriction;
/**
 *  Cannot write to the BigQuery table because it does not exist.
 *
 *  Value: "NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_BigQueryConfig_State_NotFound;
/**
 *  Cannot write to the BigQuery table because of permission denied errors. This
 *  can happen if - Pub/Sub SA has not been granted the [appropriate BigQuery
 *  IAM
 *  permissions](https://cloud.google.com/pubsub/docs/create-subscription#assign_bigquery_service_account)
 *  - bigquery.googleapis.com API is not enabled for the project
 *  ([instructions](https://cloud.google.com/service-usage/docs/enable-disable))
 *
 *  Value: "PERMISSION_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_BigQueryConfig_State_PermissionDenied;
/**
 *  Cannot write to the BigQuery table due to a schema mismatch.
 *
 *  Value: "SCHEMA_MISMATCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_BigQueryConfig_State_SchemaMismatch;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_BigQueryConfig_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_CloudStorageConfig.state

/**
 *  The subscription can actively send messages to Cloud Storage.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_CloudStorageConfig_State_Active;
/**
 *  Cannot write to the destination because enforce_in_transit is set to true
 *  and the destination locations are not in the allowed regions.
 *
 *  Value: "IN_TRANSIT_LOCATION_RESTRICTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_CloudStorageConfig_State_InTransitLocationRestriction;
/**
 *  Cannot write to the Cloud Storage bucket because it does not exist.
 *
 *  Value: "NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_CloudStorageConfig_State_NotFound;
/**
 *  Cannot write to the Cloud Storage bucket because of permission denied
 *  errors.
 *
 *  Value: "PERMISSION_DENIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_CloudStorageConfig_State_PermissionDenied;
/**
 *  Cannot write to the Cloud Storage bucket due to an incompatibility between
 *  the topic schema and subscription settings.
 *
 *  Value: "SCHEMA_MISMATCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_CloudStorageConfig_State_SchemaMismatch;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_CloudStorageConfig_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_DataExchange.discoveryType

/**
 *  The Data exchange/listing can be discovered in the 'Private' results list.
 *
 *  Value: "DISCOVERY_TYPE_PRIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_DataExchange_DiscoveryType_DiscoveryTypePrivate;
/**
 *  The Data exchange/listing can be discovered in the 'Public' results list.
 *
 *  Value: "DISCOVERY_TYPE_PUBLIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_DataExchange_DiscoveryType_DiscoveryTypePublic;
/**
 *  Unspecified. Defaults to DISCOVERY_TYPE_PRIVATE.
 *
 *  Value: "DISCOVERY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_DataExchange_DiscoveryType_DiscoveryTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_GooglePubsubV1Subscription.state

/**
 *  The subscription can actively receive messages
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_GooglePubsubV1Subscription_State_Active;
/**
 *  The subscription cannot receive messages because of an error with the
 *  resource to which it pushes messages. See the more detailed error state in
 *  the corresponding configuration.
 *
 *  Value: "RESOURCE_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_GooglePubsubV1Subscription_State_ResourceError;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_GooglePubsubV1Subscription_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_Listing.categories

/** Value: "CATEGORY_ADVERTISING_AND_MARKETING" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryAdvertisingAndMarketing;
/** Value: "CATEGORY_CLIMATE_AND_ENVIRONMENT" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryClimateAndEnvironment;
/** Value: "CATEGORY_COMMERCE" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryCommerce;
/** Value: "CATEGORY_DEMOGRAPHICS" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryDemographics;
/** Value: "CATEGORY_ECONOMICS" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryEconomics;
/** Value: "CATEGORY_EDUCATION" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryEducation;
/** Value: "CATEGORY_ENERGY" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryEnergy;
/** Value: "CATEGORY_FINANCIAL" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryFinancial;
/** Value: "CATEGORY_GAMING" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryGaming;
/** Value: "CATEGORY_GEOSPATIAL" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryGeospatial;
/** Value: "CATEGORY_HEALTHCARE_AND_LIFE_SCIENCE" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryHealthcareAndLifeScience;
/** Value: "CATEGORY_MEDIA" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryMedia;
/** Value: "CATEGORY_OTHERS" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryOthers;
/** Value: "CATEGORY_PUBLIC_SECTOR" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryPublicSector;
/** Value: "CATEGORY_RETAIL" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryRetail;
/** Value: "CATEGORY_SCIENCE_AND_RESEARCH" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryScienceAndResearch;
/** Value: "CATEGORY_SPORTS" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategorySports;
/** Value: "CATEGORY_TRANSPORTATION_AND_LOGISTICS" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryTransportationAndLogistics;
/** Value: "CATEGORY_TRAVEL_AND_TOURISM" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryTravelAndTourism;
/** Value: "CATEGORY_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_Categories_CategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_Listing.discoveryType

/**
 *  The Data exchange/listing can be discovered in the 'Private' results list.
 *
 *  Value: "DISCOVERY_TYPE_PRIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_DiscoveryType_DiscoveryTypePrivate;
/**
 *  The Data exchange/listing can be discovered in the 'Public' results list.
 *
 *  Value: "DISCOVERY_TYPE_PUBLIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_DiscoveryType_DiscoveryTypePublic;
/**
 *  Unspecified. Defaults to DISCOVERY_TYPE_PRIVATE.
 *
 *  Value: "DISCOVERY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_DiscoveryType_DiscoveryTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_Listing.resourceType

/**
 *  BigQuery Dataset Asset.
 *
 *  Value: "BIGQUERY_DATASET"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_ResourceType_BigqueryDataset;
/**
 *  Pub/Sub Topic Asset.
 *
 *  Value: "PUBSUB_TOPIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_ResourceType_PubsubTopic;
/**
 *  Not specified.
 *
 *  Value: "SHARED_RESOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_ResourceType_SharedResourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_Listing.state

/**
 *  Subscribable state. Users with dataexchange.listings.subscribe permission
 *  can subscribe to this listing.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_State_Active;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Listing_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_Subscription.resourceType

/**
 *  BigQuery Dataset Asset.
 *
 *  Value: "BIGQUERY_DATASET"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Subscription_ResourceType_BigqueryDataset;
/**
 *  Pub/Sub Topic Asset.
 *
 *  Value: "PUBSUB_TOPIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Subscription_ResourceType_PubsubTopic;
/**
 *  Not specified.
 *
 *  Value: "SHARED_RESOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Subscription_ResourceType_SharedResourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAnalyticsHub_Subscription.state

/**
 *  This subscription is active and the data is accessible.
 *
 *  Value: "STATE_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Subscription_State_StateActive;
/**
 *  This subscription has been cancelled or revoked and the data is no longer
 *  accessible.
 *
 *  Value: "STATE_INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Subscription_State_StateInactive;
/**
 *  The data referenced by this subscription is out of date and should be
 *  refreshed. This can happen when a data provider adds or removes datasets.
 *
 *  Value: "STATE_STALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Subscription_State_StateStale;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAnalyticsHub_Subscription_State_StateUnspecified;

/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRAnalyticsHub_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRAnalyticsHub_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_AuditLogConfig_LogType_AdminRead Admin reads.
 *        Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRAnalyticsHub_AuditLogConfig_LogType_DataRead Data reads.
 *        Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRAnalyticsHub_AuditLogConfig_LogType_DataWrite Data writes.
 *        Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRAnalyticsHub_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Configuration for writing message data in Avro format. Message payloads and
 *  metadata will be written to files as an Avro binary.
 */
@interface GTLRAnalyticsHub_AvroConfig : GTLRObject

/**
 *  Optional. When true, the output Cloud Storage file will be serialized using
 *  the topic schema, if it exists.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useTopicSchema;

/**
 *  Optional. When true, write the subscription name, message_id, publish_time,
 *  attributes, and ordering_key as additional fields in the output. The
 *  subscription name, message_id, and publish_time fields are put in their own
 *  fields while all other message properties other than data (for example, an
 *  ordering_key, if present) are added as entries in the attributes map.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *writeMetadata;

@end


/**
 *  Configuration for a BigQuery subscription.
 */
@interface GTLRAnalyticsHub_BigQueryConfig : GTLRObject

/**
 *  Optional. When true and use_topic_schema is true, any fields that are a part
 *  of the topic schema that are not part of the BigQuery table schema are
 *  dropped when writing to BigQuery. Otherwise, the schemas must be kept in
 *  sync and any messages with extra fields are not written and remain in the
 *  subscription's backlog.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dropUnknownFields;

/**
 *  Optional. The service account to use to write to BigQuery. The subscription
 *  creator or updater that specifies this field must have
 *  `iam.serviceAccounts.actAs` permission on the service account. If not
 *  specified, the Pub/Sub [service
 *  agent](https://cloud.google.com/iam/docs/service-agents),
 *  service-{project_number}\@gcp-sa-pubsub.iam.gserviceaccount.com, is used.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountEmail;

/**
 *  Output only. An output-only field that indicates whether or not the
 *  subscription can receive messages.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_BigQueryConfig_State_Active The subscription can
 *        actively send messages to BigQuery (Value: "ACTIVE")
 *    @arg @c kGTLRAnalyticsHub_BigQueryConfig_State_InTransitLocationRestriction
 *        Cannot write to the destination because enforce_in_transit is set to
 *        true and the destination locations are not in the allowed regions.
 *        (Value: "IN_TRANSIT_LOCATION_RESTRICTION")
 *    @arg @c kGTLRAnalyticsHub_BigQueryConfig_State_NotFound Cannot write to
 *        the BigQuery table because it does not exist. (Value: "NOT_FOUND")
 *    @arg @c kGTLRAnalyticsHub_BigQueryConfig_State_PermissionDenied Cannot
 *        write to the BigQuery table because of permission denied errors. This
 *        can happen if - Pub/Sub SA has not been granted the [appropriate
 *        BigQuery IAM
 *        permissions](https://cloud.google.com/pubsub/docs/create-subscription#assign_bigquery_service_account)
 *        - bigquery.googleapis.com API is not enabled for the project
 *        ([instructions](https://cloud.google.com/service-usage/docs/enable-disable))
 *        (Value: "PERMISSION_DENIED")
 *    @arg @c kGTLRAnalyticsHub_BigQueryConfig_State_SchemaMismatch Cannot write
 *        to the BigQuery table due to a schema mismatch. (Value:
 *        "SCHEMA_MISMATCH")
 *    @arg @c kGTLRAnalyticsHub_BigQueryConfig_State_StateUnspecified Default
 *        value. This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Optional. The name of the table to which to write data, of the form
 *  {projectId}.{datasetId}.{tableId}
 */
@property(nonatomic, copy, nullable) NSString *table;

/**
 *  Optional. When true, use the BigQuery table's schema as the columns to write
 *  to in BigQuery. `use_table_schema` and `use_topic_schema` cannot be enabled
 *  at the same time.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useTableSchema;

/**
 *  Optional. When true, use the topic's schema as the columns to write to in
 *  BigQuery, if it exists. `use_topic_schema` and `use_table_schema` cannot be
 *  enabled at the same time.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useTopicSchema;

/**
 *  Optional. When true, write the subscription name, message_id, publish_time,
 *  attributes, and ordering_key to additional columns in the table. The
 *  subscription name, message_id, and publish_time fields are put in their own
 *  columns while all other message properties (other than data) are written to
 *  a JSON object in the attributes column.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *writeMetadata;

@end


/**
 *  A reference to a shared dataset. It is an existing BigQuery dataset with a
 *  collection of objects such as tables and views that you want to share with
 *  subscribers. When subscriber's subscribe to a listing, Analytics Hub creates
 *  a linked dataset in the subscriber's project. A Linked dataset is an opaque,
 *  read-only BigQuery dataset that serves as a _symbolic link_ to a shared
 *  dataset.
 */
@interface GTLRAnalyticsHub_BigQueryDatasetSource : GTLRObject

/**
 *  Resource name of the dataset source for this listing. e.g.
 *  `projects/myproject/datasets/123`
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Optional. If set, restricted export policy will be propagated and enforced
 *  on the linked dataset.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_RestrictedExportPolicy *restrictedExportPolicy;

/**
 *  Optional. Resource in this dataset that is selectively shared. This field is
 *  required for data clean room exchanges.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_SelectedResource *> *selectedResources;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRAnalyticsHub_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `domain:{domain}`: The G Suite domain
 *  (primary) that represents all the users of that domain. For example,
 *  `google.com` or `example.com`. *
 *  `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workforce identity pool. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
 *  All workforce identities in a group. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All workforce identities with a specific attribute value. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/
 *  *`: All identities in a workforce identity pool. *
 *  `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workload identity pool. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
 *  A workload identity pool group. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All identities in a workload identity pool with a certain attribute. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/
 *  *`: All identities in a workload identity pool. *
 *  `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. *
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  Deleted single identity in a workforce identity pool. For example,
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM
 *  roles and permissions, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/roles-overview). For a list
 *  of the available pre-defined roles, see
 *  [here](https://cloud.google.com/iam/docs/understanding-roles).
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Configuration for a Cloud Storage subscription.
 */
@interface GTLRAnalyticsHub_CloudStorageConfig : GTLRObject

/**
 *  Optional. If set, message data will be written to Cloud Storage in Avro
 *  format.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_AvroConfig *avroConfig;

/**
 *  Required. User-provided name for the Cloud Storage bucket. The bucket must
 *  be created by the user. The bucket name must be without any prefix like
 *  "gs://". See the [bucket naming requirements]
 *  (https://cloud.google.com/storage/docs/buckets#naming).
 */
@property(nonatomic, copy, nullable) NSString *bucket;

/**
 *  Optional. User-provided format string specifying how to represent datetimes
 *  in Cloud Storage filenames. See the [datetime format
 *  guidance](https://cloud.google.com/pubsub/docs/create-cloudstorage-subscription#file_names).
 */
@property(nonatomic, copy, nullable) NSString *filenameDatetimeFormat;

/**
 *  Optional. User-provided prefix for Cloud Storage filename. See the [object
 *  naming requirements](https://cloud.google.com/storage/docs/objects#naming).
 */
@property(nonatomic, copy, nullable) NSString *filenamePrefix;

/**
 *  Optional. User-provided suffix for Cloud Storage filename. See the [object
 *  naming requirements](https://cloud.google.com/storage/docs/objects#naming).
 *  Must not end in "/".
 */
@property(nonatomic, copy, nullable) NSString *filenameSuffix;

/**
 *  Optional. The maximum bytes that can be written to a Cloud Storage file
 *  before a new file is created. Min 1 KB, max 10 GiB. The max_bytes limit may
 *  be exceeded in cases where messages are larger than the limit.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxBytes;

/**
 *  Optional. The maximum duration that can elapse before a new Cloud Storage
 *  file is created. Min 1 minute, max 10 minutes, default 5 minutes. May not
 *  exceed the subscription's acknowledgement deadline.
 */
@property(nonatomic, strong, nullable) GTLRDuration *maxDuration;

/**
 *  Optional. The maximum number of messages that can be written to a Cloud
 *  Storage file before a new file is created. Min 1000 messages.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxMessages;

/**
 *  Optional. The service account to use to write to Cloud Storage. The
 *  subscription creator or updater that specifies this field must have
 *  `iam.serviceAccounts.actAs` permission on the service account. If not
 *  specified, the Pub/Sub [service
 *  agent](https://cloud.google.com/iam/docs/service-agents),
 *  service-{project_number}\@gcp-sa-pubsub.iam.gserviceaccount.com, is used.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountEmail;

/**
 *  Output only. An output-only field that indicates whether or not the
 *  subscription can receive messages.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_CloudStorageConfig_State_Active The subscription
 *        can actively send messages to Cloud Storage. (Value: "ACTIVE")
 *    @arg @c kGTLRAnalyticsHub_CloudStorageConfig_State_InTransitLocationRestriction
 *        Cannot write to the destination because enforce_in_transit is set to
 *        true and the destination locations are not in the allowed regions.
 *        (Value: "IN_TRANSIT_LOCATION_RESTRICTION")
 *    @arg @c kGTLRAnalyticsHub_CloudStorageConfig_State_NotFound Cannot write
 *        to the Cloud Storage bucket because it does not exist. (Value:
 *        "NOT_FOUND")
 *    @arg @c kGTLRAnalyticsHub_CloudStorageConfig_State_PermissionDenied Cannot
 *        write to the Cloud Storage bucket because of permission denied errors.
 *        (Value: "PERMISSION_DENIED")
 *    @arg @c kGTLRAnalyticsHub_CloudStorageConfig_State_SchemaMismatch Cannot
 *        write to the Cloud Storage bucket due to an incompatibility between
 *        the topic schema and subscription settings. (Value: "SCHEMA_MISMATCH")
 *    @arg @c kGTLRAnalyticsHub_CloudStorageConfig_State_StateUnspecified
 *        Default value. This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Optional. If set, message data will be written to Cloud Storage in text
 *  format.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_TextConfig *textConfig;

@end


/**
 *  A data exchange is a container that lets you share data. Along with the
 *  descriptive information about the data exchange, it contains listings that
 *  reference shared datasets.
 */
@interface GTLRAnalyticsHub_DataExchange : GTLRObject

/**
 *  Optional. Description of the data exchange. The description must not contain
 *  Unicode non-characters as well as C0 and C1 control codes except tabs (HT),
 *  new lines (LF), carriage returns (CR), and page breaks (FF). Default value
 *  is an empty string. Max length: 2000 bytes.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Type of discovery on the discovery page for all the listings under
 *  this exchange. Updating this field also updates (overwrites) the
 *  discovery_type field for all the listings under this exchange.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_DataExchange_DiscoveryType_DiscoveryTypePrivate
 *        The Data exchange/listing can be discovered in the 'Private' results
 *        list. (Value: "DISCOVERY_TYPE_PRIVATE")
 *    @arg @c kGTLRAnalyticsHub_DataExchange_DiscoveryType_DiscoveryTypePublic
 *        The Data exchange/listing can be discovered in the 'Public' results
 *        list. (Value: "DISCOVERY_TYPE_PUBLIC")
 *    @arg @c kGTLRAnalyticsHub_DataExchange_DiscoveryType_DiscoveryTypeUnspecified
 *        Unspecified. Defaults to DISCOVERY_TYPE_PRIVATE. (Value:
 *        "DISCOVERY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *discoveryType;

/**
 *  Required. Human-readable display name of the data exchange. The display name
 *  must contain only Unicode letters, numbers (0-9), underscores (_), dashes
 *  (-), spaces ( ), ampersands (&) and must not start or end with spaces.
 *  Default value is an empty string. Max length: 63 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Optional. Documentation describing the data exchange. */
@property(nonatomic, copy, nullable) NSString *documentation;

/**
 *  Optional. Base64 encoded image representing the data exchange. Max Size:
 *  3.0MiB Expected image dimensions are 512x512 pixels, however the API only
 *  performs validation on size of the encoded data. Note: For byte fields, the
 *  content of the fields are base64-encoded (which increases the size of the
 *  data by 33-36%) when using JSON on the wire.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *icon;

/**
 *  Output only. Number of listings contained in the data exchange.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *listingCount;

/**
 *  Output only. The resource name of the data exchange. e.g.
 *  `projects/myproject/locations/US/dataExchanges/123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Email or URL of the primary point of contact of the data exchange.
 *  Max Length: 1000 bytes.
 */
@property(nonatomic, copy, nullable) NSString *primaryContact;

/**
 *  Optional. Configurable data sharing environment option for a data exchange.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_SharingEnvironmentConfig *sharingEnvironmentConfig;

@end


/**
 *  Contains details of the data provider.
 */
@interface GTLRAnalyticsHub_DataProvider : GTLRObject

/** Optional. Name of the data provider. */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Email or URL of the data provider. Max Length: 1000 bytes. */
@property(nonatomic, copy, nullable) NSString *primaryContact;

@end


/**
 *  Data Clean Room (DCR), used for privacy-safe and secured data sharing.
 */
@interface GTLRAnalyticsHub_DcrExchangeConfig : GTLRObject

/**
 *  Output only. If True, when subscribing to this DCR, it will create only one
 *  linked dataset containing all resources shared within the cleanroom. If
 *  False, when subscribing to this DCR, it will create 1 linked dataset per
 *  listing. This is not configurable, and by default, all new DCRs will have
 *  the restriction set to True.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *singleLinkedDatasetPerCleanroom;

/**
 *  Output only. If True, this DCR restricts the contributors to sharing only a
 *  single resource in a Listing. And no two resources should have the same IDs.
 *  So if a contributor adds a view with a conflicting name, the CreateListing
 *  API will reject the request. if False, the data contributor can publish an
 *  entire dataset (as before). This is not configurable, and by default, all
 *  new DCRs will have the restriction set to True.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *singleSelectedResourceSharingRestriction;

@end


/**
 *  Dead lettering is done on a best effort basis. The same message might be
 *  dead lettered multiple times. If validation on any of the fields fails at
 *  subscription creation/updation, the create/update subscription request will
 *  fail.
 */
@interface GTLRAnalyticsHub_DeadLetterPolicy : GTLRObject

/**
 *  Optional. The name of the topic to which dead letter messages should be
 *  published. Format is `projects/{project}/topics/{topic}`.The Pub/Sub service
 *  account associated with the enclosing subscription's parent project (i.e.,
 *  service-{project_number}\@gcp-sa-pubsub.iam.gserviceaccount.com) must have
 *  permission to Publish() to this topic. The operation will fail if the topic
 *  does not exist. Users should ensure that there is a subscription attached to
 *  this topic since messages published to a topic with no subscriptions are
 *  lost.
 */
@property(nonatomic, copy, nullable) NSString *deadLetterTopic;

/**
 *  Optional. The maximum number of delivery attempts for any message. The value
 *  must be between 5 and 100. The number of delivery attempts is defined as 1 +
 *  (the sum of number of NACKs and number of times the acknowledgement deadline
 *  has been exceeded for the message). A NACK is any call to ModifyAckDeadline
 *  with a 0 deadline. Note that client libraries may automatically extend
 *  ack_deadlines. This field will be honored on a best effort basis. If this
 *  parameter is 0, a default value of 5 is used.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDeliveryAttempts;

@end


/**
 *  Default Analytics Hub data exchange, used for secured data sharing.
 */
@interface GTLRAnalyticsHub_DefaultExchangeConfig : GTLRObject
@end


/**
 *  Defines the destination bigquery dataset.
 */
@interface GTLRAnalyticsHub_DestinationDataset : GTLRObject

/** Required. A reference that identifies the destination dataset. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DestinationDatasetReference *datasetReference;

/**
 *  Optional. A user-friendly description of the dataset.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. A descriptive name for the dataset. */
@property(nonatomic, copy, nullable) NSString *friendlyName;

/**
 *  Optional. The labels associated with this dataset. You can use these to
 *  organize and group your datasets. You can set this property when inserting
 *  or updating a dataset. See
 *  https://cloud.google.com/resource-manager/docs/creating-managing-labels for
 *  more information.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DestinationDataset_Labels *labels;

/**
 *  Required. The geographic location where the dataset should reside. See
 *  https://cloud.google.com/bigquery/docs/locations for supported locations.
 */
@property(nonatomic, copy, nullable) NSString *location;

@end


/**
 *  Optional. The labels associated with this dataset. You can use these to
 *  organize and group your datasets. You can set this property when inserting
 *  or updating a dataset. See
 *  https://cloud.google.com/resource-manager/docs/creating-managing-labels for
 *  more information.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAnalyticsHub_DestinationDataset_Labels : GTLRObject
@end


/**
 *  Contains the reference that identifies a destination bigquery dataset.
 */
@interface GTLRAnalyticsHub_DestinationDatasetReference : GTLRObject

/**
 *  Required. A unique ID for this dataset, without the project name. The ID
 *  must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The
 *  maximum length is 1,024 characters.
 */
@property(nonatomic, copy, nullable) NSString *datasetId;

/** Required. The ID of the project containing this dataset. */
@property(nonatomic, copy, nullable) NSString *projectId;

@end


/**
 *  Defines the destination Pub/Sub subscription.
 */
@interface GTLRAnalyticsHub_DestinationPubSubSubscription : GTLRObject

/** Required. Destination Pub/Sub subscription resource. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_GooglePubsubV1Subscription *pubsubSubscription;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRAnalyticsHub_Empty : GTLRObject
@end


/**
 *  A policy that specifies the conditions for resource expiration (i.e.,
 *  automatic resource deletion).
 */
@interface GTLRAnalyticsHub_ExpirationPolicy : GTLRObject

/**
 *  Optional. Specifies the "time-to-live" duration for an associated resource.
 *  The resource expires if it is not active for a period of `ttl`. The
 *  definition of "activity" depends on the type of the associated resource. The
 *  minimum and maximum allowed values for `ttl` depend on the type of the
 *  associated resource, as well. If `ttl` is not set, the associated resource
 *  never expires.
 */
@property(nonatomic, strong, nullable) GTLRDuration *ttl;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRAnalyticsHub_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Request message for `GetIamPolicy` method.
 */
@interface GTLRAnalyticsHub_GetIamPolicyRequest : GTLRObject

/**
 *  OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *  `GetIamPolicy`.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_GetPolicyOptions *options;

@end


/**
 *  Encapsulates settings provided to GetIamPolicy.
 */
@interface GTLRAnalyticsHub_GetPolicyOptions : GTLRObject

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedPolicyVersion;

@end


/**
 *  A subscription resource. If none of `push_config`, `bigquery_config`, or
 *  `cloud_storage_config` is set, then the subscriber will pull and ack
 *  messages using API methods. At most one of these fields may be set.
 */
@interface GTLRAnalyticsHub_GooglePubsubV1Subscription : GTLRObject

/**
 *  Optional. The approximate amount of time (on a best-effort basis) Pub/Sub
 *  waits for the subscriber to acknowledge receipt before resending the
 *  message. In the interval after the message is delivered and before it is
 *  acknowledged, it is considered to be _outstanding_. During that time period,
 *  the message will not be redelivered (on a best-effort basis). For pull
 *  subscriptions, this value is used as the initial value for the ack deadline.
 *  To override this value for a given message, call `ModifyAckDeadline` with
 *  the corresponding `ack_id` if using non-streaming pull or send the `ack_id`
 *  in a `StreamingModifyAckDeadlineRequest` if using streaming pull. The
 *  minimum custom deadline you can specify is 10 seconds. The maximum custom
 *  deadline you can specify is 600 seconds (10 minutes). If this parameter is
 *  0, a default value of 10 seconds is used. For push delivery, this value is
 *  also used to set the request timeout for the call to the push endpoint. If
 *  the subscriber never acknowledges the message, the Pub/Sub system will
 *  eventually redeliver the message.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ackDeadlineSeconds;

/**
 *  Output only. Information about the associated Analytics Hub subscription.
 *  Only set if the subscritpion is created by Analytics Hub.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_SubscriptionInfo *analyticsHubSubscriptionInfo;

/**
 *  Optional. If delivery to BigQuery is used with this subscription, this field
 *  is used to configure it.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_BigQueryConfig *bigqueryConfig;

/**
 *  Optional. If delivery to Google Cloud Storage is used with this
 *  subscription, this field is used to configure it.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_CloudStorageConfig *cloudStorageConfig;

/**
 *  Optional. A policy that specifies the conditions for dead lettering messages
 *  in this subscription. If dead_letter_policy is not set, dead lettering is
 *  disabled. The Pub/Sub service account associated with this subscriptions's
 *  parent project (i.e.,
 *  service-{project_number}\@gcp-sa-pubsub.iam.gserviceaccount.com) must have
 *  permission to Acknowledge() messages on this subscription.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DeadLetterPolicy *deadLetterPolicy;

/**
 *  Optional. Indicates whether the subscription is detached from its topic.
 *  Detached subscriptions don't receive messages from their topic and don't
 *  retain any backlog. `Pull` and `StreamingPull` requests will return
 *  FAILED_PRECONDITION. If the subscription is a push subscription, pushes to
 *  the endpoint will not be made.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *detached;

/**
 *  Optional. If true, Pub/Sub provides the following guarantees for the
 *  delivery of a message with a given value of `message_id` on this
 *  subscription: * The message sent to a subscriber is guaranteed not to be
 *  resent before the message's acknowledgement deadline expires. * An
 *  acknowledged message will not be resent to a subscriber. Note that
 *  subscribers may still receive multiple copies of a message when
 *  `enable_exactly_once_delivery` is true if the message was published multiple
 *  times by a publisher client. These copies are considered distinct by Pub/Sub
 *  and have distinct `message_id` values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableExactlyOnceDelivery;

/**
 *  Optional. If true, messages published with the same `ordering_key` in
 *  `PubsubMessage` will be delivered to the subscribers in the order in which
 *  they are received by the Pub/Sub system. Otherwise, they may be delivered in
 *  any order.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableMessageOrdering;

/**
 *  Optional. A policy that specifies the conditions for this subscription's
 *  expiration. A subscription is considered active as long as any connected
 *  subscriber is successfully consuming messages from the subscription or is
 *  issuing operations on the subscription. If `expiration_policy` is not set, a
 *  *default policy* with `ttl` of 31 days will be used. The minimum allowed
 *  value for `expiration_policy.ttl` is 1 day. If `expiration_policy` is set,
 *  but `expiration_policy.ttl` is not set, the subscription never expires.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_ExpirationPolicy *expirationPolicy;

/**
 *  Optional. An expression written in the Pub/Sub [filter
 *  language](https://cloud.google.com/pubsub/docs/filtering). If non-empty,
 *  then only `PubsubMessage`s whose `attributes` field matches the filter are
 *  delivered on this subscription. If empty, then no messages are filtered out.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. See [Creating and managing
 *  labels](https://cloud.google.com/pubsub/docs/labels).
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_GooglePubsubV1Subscription_Labels *labels;

/**
 *  Optional. How long to retain unacknowledged messages in the subscription's
 *  backlog, from the moment a message is published. If `retain_acked_messages`
 *  is true, then this also configures the retention of acknowledged messages,
 *  and thus configures how far back in time a `Seek` can be done. Defaults to 7
 *  days. Cannot be more than 31 days or less than 10 minutes.
 */
@property(nonatomic, strong, nullable) GTLRDuration *messageRetentionDuration;

/**
 *  Required. Name of the subscription. Format is
 *  `projects/{project}/subscriptions/{sub}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. If push delivery is used with this subscription, this field is
 *  used to configure it.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_PushConfig *pushConfig;

/**
 *  Optional. Indicates whether to retain acknowledged messages. If true, then
 *  messages are not expunged from the subscription's backlog, even if they are
 *  acknowledged, until they fall out of the `message_retention_duration`
 *  window. This must be true if you would like to [`Seek` to a timestamp]
 *  (https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) in the
 *  past to replay previously-acknowledged messages.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *retainAckedMessages;

/**
 *  Optional. A policy that specifies how Pub/Sub retries message delivery for
 *  this subscription. If not set, the default retry policy is applied. This
 *  generally implies that messages will be retried as soon as possible for
 *  healthy subscribers. RetryPolicy will be triggered on NACKs or
 *  acknowledgement deadline exceeded events for a given message.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_RetryPolicy *retryPolicy;

/**
 *  Output only. An output-only field indicating whether or not the subscription
 *  can receive messages.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_GooglePubsubV1Subscription_State_Active The
 *        subscription can actively receive messages (Value: "ACTIVE")
 *    @arg @c kGTLRAnalyticsHub_GooglePubsubV1Subscription_State_ResourceError
 *        The subscription cannot receive messages because of an error with the
 *        resource to which it pushes messages. See the more detailed error
 *        state in the corresponding configuration. (Value: "RESOURCE_ERROR")
 *    @arg @c kGTLRAnalyticsHub_GooglePubsubV1Subscription_State_StateUnspecified
 *        Default value. This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. Indicates the minimum duration for which a message is retained
 *  after it is published to the subscription's topic. If this field is set,
 *  messages published to the subscription's topic in the last
 *  `topic_message_retention_duration` are always available to subscribers. See
 *  the `message_retention_duration` field in `Topic`. This field is set only in
 *  responses from the server; it is ignored if it is set in any requests.
 */
@property(nonatomic, strong, nullable) GTLRDuration *topicMessageRetentionDuration;

@end


/**
 *  Optional. See [Creating and managing
 *  labels](https://cloud.google.com/pubsub/docs/labels).
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAnalyticsHub_GooglePubsubV1Subscription_Labels : GTLRObject
@end


/**
 *  Reference to a linked resource tracked by this Subscription.
 */
@interface GTLRAnalyticsHub_LinkedResource : GTLRObject

/**
 *  Output only. Name of the linked dataset, e.g.
 *  projects/subscriberproject/datasets/linked_dataset
 */
@property(nonatomic, copy, nullable) NSString *linkedDataset;

/**
 *  Output only. Name of the Pub/Sub subscription, e.g.
 *  projects/subscriberproject/subscriptions/subscriptions/sub_id
 */
@property(nonatomic, copy, nullable) NSString *linkedPubsubSubscription;

/** Output only. Listing for which linked resource is created. */
@property(nonatomic, copy, nullable) NSString *listing;

@end


/**
 *  Message for response to the list of data exchanges.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dataExchanges" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAnalyticsHub_ListDataExchangesResponse : GTLRCollectionObject

/**
 *  The list of data exchanges.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_DataExchange *> *dataExchanges;

/** A token to request the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A listing is what gets published into a data exchange that a subscriber can
 *  subscribe to. It contains a reference to the data source along with
 *  descriptive information that will help subscribers find and subscribe the
 *  data.
 */
@interface GTLRAnalyticsHub_Listing : GTLRObject

/** Required. Shared dataset i.e. BigQuery dataset source. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_BigQueryDatasetSource *bigqueryDataset;

/** Optional. Categories of the listing. Up to two categories are allowed. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

/** Optional. Details of the data provider who owns the source data. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DataProvider *dataProvider;

/**
 *  Optional. Short description of the listing. The description must not contain
 *  Unicode non-characters and C0 and C1 control codes except tabs (HT), new
 *  lines (LF), carriage returns (CR), and page breaks (FF). Default value is an
 *  empty string. Max length: 2000 bytes.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Type of discovery of the listing on the discovery page.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_Listing_DiscoveryType_DiscoveryTypePrivate The
 *        Data exchange/listing can be discovered in the 'Private' results list.
 *        (Value: "DISCOVERY_TYPE_PRIVATE")
 *    @arg @c kGTLRAnalyticsHub_Listing_DiscoveryType_DiscoveryTypePublic The
 *        Data exchange/listing can be discovered in the 'Public' results list.
 *        (Value: "DISCOVERY_TYPE_PUBLIC")
 *    @arg @c kGTLRAnalyticsHub_Listing_DiscoveryType_DiscoveryTypeUnspecified
 *        Unspecified. Defaults to DISCOVERY_TYPE_PRIVATE. (Value:
 *        "DISCOVERY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *discoveryType;

/**
 *  Required. Human-readable display name of the listing. The display name must
 *  contain only Unicode letters, numbers (0-9), underscores (_), dashes (-),
 *  spaces ( ), ampersands (&) and can't start or end with spaces. Default value
 *  is an empty string. Max length: 63 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Optional. Documentation describing the listing. */
@property(nonatomic, copy, nullable) NSString *documentation;

/**
 *  Optional. Base64 encoded image representing the listing. Max Size: 3.0MiB
 *  Expected image dimensions are 512x512 pixels, however the API only performs
 *  validation on size of the encoded data. Note: For byte fields, the contents
 *  of the field are base64-encoded (which increases the size of the data by
 *  33-36%) when using JSON on the wire.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *icon;

/**
 *  Output only. The resource name of the listing. e.g.
 *  `projects/myproject/locations/US/dataExchanges/123/listings/456`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Email or URL of the primary point of contact of the listing. Max
 *  Length: 1000 bytes.
 */
@property(nonatomic, copy, nullable) NSString *primaryContact;

/**
 *  Optional. Details of the publisher who owns the listing and who can share
 *  the source data.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Publisher *publisher;

/** Required. Pub/Sub topic source. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_PubSubTopicSource *pubsubTopic;

/**
 *  Optional. Email or URL of the request access of the listing. Subscribers can
 *  use this reference to request access. Max Length: 1000 bytes.
 */
@property(nonatomic, copy, nullable) NSString *requestAccess;

/**
 *  Output only. Listing shared asset type.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_Listing_ResourceType_BigqueryDataset BigQuery
 *        Dataset Asset. (Value: "BIGQUERY_DATASET")
 *    @arg @c kGTLRAnalyticsHub_Listing_ResourceType_PubsubTopic Pub/Sub Topic
 *        Asset. (Value: "PUBSUB_TOPIC")
 *    @arg @c kGTLRAnalyticsHub_Listing_ResourceType_SharedResourceTypeUnspecified
 *        Not specified. (Value: "SHARED_RESOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  Optional. If set, restricted export configuration will be propagated and
 *  enforced on the linked dataset.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_RestrictedExportConfig *restrictedExportConfig;

/**
 *  Output only. Current state of the listing.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_Listing_State_Active Subscribable state. Users
 *        with dataexchange.listings.subscribe permission can subscribe to this
 *        listing. (Value: "ACTIVE")
 *    @arg @c kGTLRAnalyticsHub_Listing_State_StateUnspecified Default value.
 *        This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Message for response to the list of Listings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "listings" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAnalyticsHub_ListListingsResponse : GTLRCollectionObject

/**
 *  The list of Listing.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_Listing *> *listings;

/** A token to request the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Message for response to listing data exchanges in an organization and
 *  location.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dataExchanges" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAnalyticsHub_ListOrgDataExchangesResponse : GTLRCollectionObject

/**
 *  The list of data exchanges.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_DataExchange *> *dataExchanges;

/** A token to request the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Message for response to the listing of shared resource subscriptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sharedResourceSubscriptions" property. If returned as the result
 *        of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAnalyticsHub_ListSharedResourceSubscriptionsResponse : GTLRCollectionObject

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of subscriptions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_Subscription *> *sharedResourceSubscriptions;

@end


/**
 *  Message for response to the listing of subscriptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "subscriptions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAnalyticsHub_ListSubscriptionsResponse : GTLRCollectionObject

/** Next page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of subscriptions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_Subscription *> *subscriptions;

@end


/**
 *  Sets the `data` field as the HTTP body for delivery.
 */
@interface GTLRAnalyticsHub_NoWrapper : GTLRObject

/**
 *  Optional. When true, writes the Pub/Sub message metadata to
 *  `x-goog-pubsub-:` headers of the HTTP request. Writes the Pub/Sub message
 *  attributes to `:` headers of the HTTP request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *writeMetadata;

@end


/**
 *  Contains information needed for generating an [OpenID Connect
 *  token](https://developers.google.com/identity/protocols/OpenIDConnect).
 */
@interface GTLRAnalyticsHub_OidcToken : GTLRObject

/**
 *  Optional. Audience to be used when generating OIDC token. The audience claim
 *  identifies the recipients that the JWT is intended for. The audience value
 *  is a single case-sensitive string. Having multiple values (array) for the
 *  audience field is not supported. More info about the OIDC JWT token audience
 *  here: https://tools.ietf.org/html/rfc7519#section-4.1.3 Note: if not
 *  specified, the Push endpoint URL will be used.
 */
@property(nonatomic, copy, nullable) NSString *audience;

/**
 *  Optional. [Service account
 *  email](https://cloud.google.com/iam/docs/service-accounts) used for
 *  generating the OIDC token. For more information on setting up
 *  authentication, see [Push
 *  subscriptions](https://cloud.google.com/pubsub/docs/push).
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountEmail;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRAnalyticsHub_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAnalyticsHub_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAnalyticsHub_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of a long-running operation in Analytics Hub.
 */
@interface GTLRAnalyticsHub_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have successfully been cancelled have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** ``` { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
 *  members: - user:mike\@example.com - group:admins\@example.com -
 *  domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 ``` For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRAnalyticsHub_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Contains details of the listing publisher.
 */
@interface GTLRAnalyticsHub_Publisher : GTLRObject

/** Optional. Name of the listing publisher. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Email or URL of the listing publisher. Max Length: 1000 bytes.
 */
@property(nonatomic, copy, nullable) NSString *primaryContact;

@end


/**
 *  Pub/Sub topic source.
 */
@interface GTLRAnalyticsHub_PubSubTopicSource : GTLRObject

/**
 *  Optional. Region hint on where the data might be published. Data affinity
 *  regions are modifiable. See go/regions for full listing of possible Cloud
 *  regions.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dataAffinityRegions;

/**
 *  Required. Resource name of the Pub/Sub topic source for this listing. e.g.
 *  projects/myproject/topics/topicId
 */
@property(nonatomic, copy, nullable) NSString *topic;

@end


/**
 *  The payload to the push endpoint is in the form of the JSON representation
 *  of a PubsubMessage
 *  (https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pubsubmessage).
 */
@interface GTLRAnalyticsHub_PubsubWrapper : GTLRObject
@end


/**
 *  Configuration for a push delivery endpoint.
 */
@interface GTLRAnalyticsHub_PushConfig : GTLRObject

/**
 *  Optional. Endpoint configuration attributes that can be used to control
 *  different aspects of the message delivery. The only currently supported
 *  attribute is `x-goog-version`, which you can use to change the format of the
 *  pushed message. This attribute indicates the version of the data expected by
 *  the endpoint. This controls the shape of the pushed message (i.e., its
 *  fields and metadata). If not present during the `CreateSubscription` call,
 *  it will default to the version of the Pub/Sub API used to make such call. If
 *  not present in a `ModifyPushConfig` call, its value will not be changed.
 *  `GetSubscription` calls will always return a valid version, even if the
 *  subscription was created without this attribute. The only supported values
 *  for the `x-goog-version` attribute are: * `v1beta1`: uses the push format
 *  defined in the v1beta1 Pub/Sub API. * `v1` or `v1beta2`: uses the push
 *  format defined in the v1 Pub/Sub API. For example: `attributes {
 *  "x-goog-version": "v1" }`
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_PushConfig_Attributes *attributes;

/** Optional. When set, the payload to the push endpoint is not wrapped. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_NoWrapper *noWrapper;

/**
 *  Optional. If specified, Pub/Sub will generate and attach an OIDC JWT token
 *  as an `Authorization` header in the HTTP request for every pushed message.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_OidcToken *oidcToken;

/**
 *  Optional. When set, the payload to the push endpoint is in the form of the
 *  JSON representation of a PubsubMessage
 *  (https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pubsubmessage).
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_PubsubWrapper *pubsubWrapper;

/**
 *  Optional. A URL locating the endpoint to which messages should be pushed.
 *  For example, a Webhook endpoint might use `https://example.com/push`.
 */
@property(nonatomic, copy, nullable) NSString *pushEndpoint;

@end


/**
 *  Optional. Endpoint configuration attributes that can be used to control
 *  different aspects of the message delivery. The only currently supported
 *  attribute is `x-goog-version`, which you can use to change the format of the
 *  pushed message. This attribute indicates the version of the data expected by
 *  the endpoint. This controls the shape of the pushed message (i.e., its
 *  fields and metadata). If not present during the `CreateSubscription` call,
 *  it will default to the version of the Pub/Sub API used to make such call. If
 *  not present in a `ModifyPushConfig` call, its value will not be changed.
 *  `GetSubscription` calls will always return a valid version, even if the
 *  subscription was created without this attribute. The only supported values
 *  for the `x-goog-version` attribute are: * `v1beta1`: uses the push format
 *  defined in the v1beta1 Pub/Sub API. * `v1` or `v1beta2`: uses the push
 *  format defined in the v1 Pub/Sub API. For example: `attributes {
 *  "x-goog-version": "v1" }`
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRAnalyticsHub_PushConfig_Attributes : GTLRObject
@end


/**
 *  Message for refreshing a subscription.
 */
@interface GTLRAnalyticsHub_RefreshSubscriptionRequest : GTLRObject
@end


/**
 *  Message for response when you refresh a subscription.
 */
@interface GTLRAnalyticsHub_RefreshSubscriptionResponse : GTLRObject

/** The refreshed subscription resource. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Subscription *subscription;

@end


/**
 *  Restricted export config, used to configure restricted export on linked
 *  dataset.
 */
@interface GTLRAnalyticsHub_RestrictedExportConfig : GTLRObject

/**
 *  Optional. If true, enable restricted export.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/**
 *  Output only. If true, restrict direct table access(read api/tabledata.list)
 *  on linked table.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restrictDirectTableAccess;

/**
 *  Optional. If true, restrict export of query result derived from restricted
 *  linked dataset table.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restrictQueryResult;

@end


/**
 *  Restricted export policy used to configure restricted export on linked
 *  dataset.
 */
@interface GTLRAnalyticsHub_RestrictedExportPolicy : GTLRObject

/**
 *  Optional. If true, enable restricted export.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/**
 *  Optional. If true, restrict direct table access (read api/tabledata.list) on
 *  linked table.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restrictDirectTableAccess;

/**
 *  Optional. If true, restrict export of query result derived from restricted
 *  linked dataset table.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restrictQueryResult;

@end


/**
 *  A policy that specifies how Pub/Sub retries message delivery. Retry delay
 *  will be exponential based on provided minimum and maximum backoffs.
 *  https://en.wikipedia.org/wiki/Exponential_backoff. RetryPolicy will be
 *  triggered on NACKs or acknowledgement deadline exceeded events for a given
 *  message. Retry Policy is implemented on a best effort basis. At times, the
 *  delay between consecutive deliveries may not match the configuration. That
 *  is, delay can be more or less than configured backoff.
 */
@interface GTLRAnalyticsHub_RetryPolicy : GTLRObject

/**
 *  Optional. The maximum delay between consecutive deliveries of a given
 *  message. Value should be between 0 and 600 seconds. Defaults to 600 seconds.
 */
@property(nonatomic, strong, nullable) GTLRDuration *maximumBackoff;

/**
 *  Optional. The minimum delay between consecutive deliveries of a given
 *  message. Value should be between 0 and 600 seconds. Defaults to 10 seconds.
 */
@property(nonatomic, strong, nullable) GTLRDuration *minimumBackoff;

@end


/**
 *  Message for revoking a subscription.
 */
@interface GTLRAnalyticsHub_RevokeSubscriptionRequest : GTLRObject
@end


/**
 *  Message for response when you revoke a subscription. Empty for now.
 */
@interface GTLRAnalyticsHub_RevokeSubscriptionResponse : GTLRObject
@end


/**
 *  Resource in this dataset that is selectively shared.
 */
@interface GTLRAnalyticsHub_SelectedResource : GTLRObject

/**
 *  Optional. Format: For table:
 *  `projects/{projectId}/datasets/{datasetId}/tables/{tableId}`
 *  Example:"projects/test_project/datasets/test_dataset/tables/test_table"
 */
@property(nonatomic, copy, nullable) NSString *table;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRAnalyticsHub_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Sharing environment is a behavior model for sharing data within a data
 *  exchange. This option is configurable for a data exchange.
 */
@interface GTLRAnalyticsHub_SharingEnvironmentConfig : GTLRObject

/** Data Clean Room (DCR), used for privacy-safe and secured data sharing. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DcrExchangeConfig *dcrExchangeConfig;

/** Default Analytics Hub data exchange, used for secured data sharing. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DefaultExchangeConfig *defaultExchangeConfig;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRAnalyticsHub_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRAnalyticsHub_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAnalyticsHub_Status_Details_Item : GTLRObject
@end


/**
 *  Message for subscribing to a Data Exchange.
 */
@interface GTLRAnalyticsHub_SubscribeDataExchangeRequest : GTLRObject

/**
 *  Required. The parent resource path of the Subscription. e.g.
 *  `projects/subscriberproject/locations/US`
 */
@property(nonatomic, copy, nullable) NSString *destination;

/** Optional. BigQuery destination dataset to create for the subscriber. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DestinationDataset *destinationDataset;

/** Email of the subscriber. */
@property(nonatomic, copy, nullable) NSString *subscriberContact;

/** Required. Name of the subscription to create. e.g. `subscription1` */
@property(nonatomic, copy, nullable) NSString *subscription;

@end


/**
 *  Message for response when you subscribe to a Data Exchange.
 */
@interface GTLRAnalyticsHub_SubscribeDataExchangeResponse : GTLRObject

/** Subscription object created from this subscribe action. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Subscription *subscription;

@end


/**
 *  Message for subscribing to a listing.
 */
@interface GTLRAnalyticsHub_SubscribeListingRequest : GTLRObject

/** Input only. BigQuery destination dataset to create for the subscriber. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DestinationDataset *destinationDataset;

/**
 *  Required. Input only. Destination Pub/Sub subscription to create for the
 *  subscriber.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_DestinationPubSubSubscription *destinationPubsubSubscription;

@end


/**
 *  Message for response when you subscribe to a listing.
 */
@interface GTLRAnalyticsHub_SubscribeListingResponse : GTLRObject

/** Subscription object created from this subscribe action. */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Subscription *subscription;

@end


/**
 *  A subscription represents a subscribers' access to a particular set of
 *  published data. It contains references to associated listings, data
 *  exchanges, and linked datasets.
 */
@interface GTLRAnalyticsHub_Subscription : GTLRObject

/** Output only. Timestamp when the subscription was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Output only. Resource name of the source Data Exchange. e.g.
 *  projects/123/locations/US/dataExchanges/456
 */
@property(nonatomic, copy, nullable) NSString *dataExchange;

/** Output only. Timestamp when the subscription was last modified. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastModifyTime;

/**
 *  Output only. Map of listing resource names to associated linked resource,
 *  e.g. projects/123/locations/US/dataExchanges/456/listings/789 ->
 *  projects/123/datasets/my_dataset For listing-level subscriptions, this is a
 *  map of size 1. Only contains values if state == STATE_ACTIVE.
 */
@property(nonatomic, strong, nullable) GTLRAnalyticsHub_Subscription_LinkedDatasetMap *linkedDatasetMap;

/**
 *  Output only. Linked resources created in the subscription. Only contains
 *  values if state = STATE_ACTIVE.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAnalyticsHub_LinkedResource *> *linkedResources;

/**
 *  Output only. Resource name of the source Listing. e.g.
 *  projects/123/locations/US/dataExchanges/456/listings/789
 */
@property(nonatomic, copy, nullable) NSString *listing;

/**
 *  Output only. The resource name of the subscription. e.g.
 *  `projects/myproject/locations/US/subscriptions/123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Display name of the project of this subscription. */
@property(nonatomic, copy, nullable) NSString *organizationDisplayName;

/** Output only. Organization of the project this subscription belongs to. */
@property(nonatomic, copy, nullable) NSString *organizationId;

/**
 *  Output only. Listing shared asset type.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_Subscription_ResourceType_BigqueryDataset
 *        BigQuery Dataset Asset. (Value: "BIGQUERY_DATASET")
 *    @arg @c kGTLRAnalyticsHub_Subscription_ResourceType_PubsubTopic Pub/Sub
 *        Topic Asset. (Value: "PUBSUB_TOPIC")
 *    @arg @c kGTLRAnalyticsHub_Subscription_ResourceType_SharedResourceTypeUnspecified
 *        Not specified. (Value: "SHARED_RESOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  Output only. Current state of the subscription.
 *
 *  Likely values:
 *    @arg @c kGTLRAnalyticsHub_Subscription_State_StateActive This subscription
 *        is active and the data is accessible. (Value: "STATE_ACTIVE")
 *    @arg @c kGTLRAnalyticsHub_Subscription_State_StateInactive This
 *        subscription has been cancelled or revoked and the data is no longer
 *        accessible. (Value: "STATE_INACTIVE")
 *    @arg @c kGTLRAnalyticsHub_Subscription_State_StateStale The data
 *        referenced by this subscription is out of date and should be
 *        refreshed. This can happen when a data provider adds or removes
 *        datasets. (Value: "STATE_STALE")
 *    @arg @c kGTLRAnalyticsHub_Subscription_State_StateUnspecified Default
 *        value. This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Email of the subscriber. */
@property(nonatomic, copy, nullable) NSString *subscriberContact;

@end


/**
 *  Output only. Map of listing resource names to associated linked resource,
 *  e.g. projects/123/locations/US/dataExchanges/456/listings/789 ->
 *  projects/123/datasets/my_dataset For listing-level subscriptions, this is a
 *  map of size 1. Only contains values if state == STATE_ACTIVE.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAnalyticsHub_LinkedResource. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRAnalyticsHub_Subscription_LinkedDatasetMap : GTLRObject
@end


/**
 *  Information about an associated Analytics Hub subscription
 *  (https://cloud.google.com/bigquery/docs/analytics-hub-manage-subscriptions).
 */
@interface GTLRAnalyticsHub_SubscriptionInfo : GTLRObject

/**
 *  Optional. The name of the associated Analytics Hub listing resource.
 *  Pattern:
 *  "projects/{project}/locations/{location}/dataExchanges/{data_exchange}/listings/{listing}"
 */
@property(nonatomic, copy, nullable) NSString *listing;

/**
 *  Optional. The name of the associated Analytics Hub subscription resource.
 *  Pattern:
 *  "projects/{project}/locations/{location}/subscriptions/{subscription}"
 */
@property(nonatomic, copy, nullable) NSString *subscription;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRAnalyticsHub_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRAnalyticsHub_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Configuration for writing message data in text format. Message payloads will
 *  be written to files as raw text, separated by a newline.
 */
@interface GTLRAnalyticsHub_TextConfig : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
