// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Discovery Engine API (discoveryengine/v1beta)
// Description:
//   Discovery Engine API.
// Documentation:
//   https://cloud.google.com/discovery-engine/docs

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBigQuerySource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCompletionInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCustomAttribute;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaGcsSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaMediaInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPageInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPanelInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult_Metadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTransactionInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent_Attributes;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserInfo;
@class GTLRDiscoveryEngine_GoogleLongrunningOperation;
@class GTLRDiscoveryEngine_GoogleLongrunningOperation_Metadata;
@class GTLRDiscoveryEngine_GoogleLongrunningOperation_Response;
@class GTLRDiscoveryEngine_GoogleRpcStatus;
@class GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item;
@class GTLRDiscoveryEngine_GoogleTypeDate;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest.reconciliationMode

/**
 *  Calculates diff and replaces the entire document dataset. Existing documents
 *  may be deleted if they are not present in the source location.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest_ReconciliationMode_Full;
/**
 *  Inserts new documents or updates existing documents.
 *
 *  Value: "INCREMENTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest_ReconciliationMode_Incremental;
/**
 *  Defaults to INCREMENTAL.
 *
 *  Value: "RECONCILIATION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest_ReconciliationMode_ReconciliationModeUnspecified;

/**
 *  Message that represents an arbitrary HTTP body. It should only be used for
 *  payload formats that can't be represented as JSON, such as raw binary or an
 *  HTML page. This message can be used both in streaming and non-streaming API
 *  methods in the request as well as the response. It can be used as a
 *  top-level request field, which is convenient if one wants to extract
 *  parameters from either the URL or HTTP template into the request fields and
 *  also want access to the raw HTTP body. Example: message GetResourceRequest {
 *  // A unique request id. string request_id = 1; // The raw HTTP body is bound
 *  to this field. google.api.HttpBody http_body = 2; } service ResourceService
 *  { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
 *  UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
 *  Example with streaming methods: service CaldavService { rpc
 *  GetCalendar(stream google.api.HttpBody) returns (stream
 *  google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns
 *  (stream google.api.HttpBody); } Use of this type only changes how the
 *  request and response bodies are handled, all other features will continue to
 *  work unchanged.
 */
@interface GTLRDiscoveryEngine_GoogleApiHttpBody : GTLRObject

/**
 *  The HTTP Content-Type header value specifying the content type of the body.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 *  The HTTP request/response body as raw binary.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Application specific response metadata. Must be set in the first response
 *  for streaming APIs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item *> *extensions;

@end


/**
 *  GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item : GTLRObject
@end


/**
 *  Metadata related to the progress of the ImportDocuments operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportDocumentsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig : GTLRObject

/**
 *  Google Cloud Storage prefix for import errors. This must be an empty,
 *  existing Cloud Storage directory. Import errors will be written to sharded
 *  files in this directory, one per line, as a JSON-encoded `google.rpc.Status`
 *  message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Import operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse : GTLRObject

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of user events imported with complete existing Documents.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with Document information not found in
 *  the existing Branch.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  BigQuery source import data from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBigQuerySource : GTLRObject

/**
 *  The schema to use when parsing the data from the source. Supported values
 *  for imports: * `user_event` (default): One JSON UserEvent per line. *
 *  `document` (default): One JSON Document per line. Each document must have a
 *  valid document.id.
 */
@property(nonatomic, copy, nullable) NSString *dataSchema;

/**
 *  Required. The BigQuery data set to copy the data from with a length limit of
 *  1,024 characters.
 */
@property(nonatomic, copy, nullable) NSString *datasetId;

/**
 *  Intermediate Cloud Storage directory used for the import with a length limit
 *  of 2,000 characters. Can be specified if one wants to have the BigQuery
 *  export to a specific Cloud Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/** BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleTypeDate *partitionDate;

/**
 *  The project ID (can be project # or ID) that the BigQuery source is in with
 *  a length limit of 128 characters. If not specified, inherits the project ID
 *  from the parent request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Required. The BigQuery table to copy the data from with a length limit of
 *  1,024 characters.
 */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Detailed completion information including completion attribution token and
 *  clicked completion info.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCompletionInfo : GTLRObject

/**
 *  End user selected CompleteQueryResponse.CompletionResult.suggestion
 *  position, starting from 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *selectedPosition;

/** End user selected CompleteQueryResponse.CompletionResult.suggestion. */
@property(nonatomic, copy, nullable) NSString *selectedSuggestion;

@end


/**
 *  A custom attribute that is not explicitly modeled in a resource, e.g.
 *  UserEvent.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCustomAttribute : GTLRObject

/**
 *  The numerical values of this custom attribute. For example, `[2.3, 15.4]`
 *  when the key is "lengths_cm". Exactly one of text or numbers should be set.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *numbers;

/**
 *  The textual values of this custom attribute. For example, `["yellow",
 *  "green"]` when the key is "color". Empty string is not allowed. Otherwise,
 *  an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should
 *  be set. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *text;

@end


/**
 *  Document captures all raw metadata information of items to be recommended or
 *  searched.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument : GTLRObject

/**
 *  Immutable. The identifier of the document. Id should conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 63 characters.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The JSON string representation of the document. It should conform to the
 *  registered schema or an INVALID_ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *jsonData;

/**
 *  Immutable. The full resource name of the document. Format:
 *  `projects/{project}/locations/{location}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The identifier of the parent document. Currently supports at most two level
 *  document hierarchy. Id should conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 63 characters.
 */
@property(nonatomic, copy, nullable) NSString *parentDocumentId;

/** Required. The identifier of the schema located in the same data store. */
@property(nonatomic, copy, nullable) NSString *schemaId;

/**
 *  The structured JSON data for the document. It should conform to the
 *  registered schema or an INVALID_ARGUMENT error is thrown.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument_StructData *structData;

@end


/**
 *  The structured JSON data for the document. It should conform to the
 *  registered schema or an INVALID_ARGUMENT error is thrown.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument_StructData : GTLRObject
@end


/**
 *  Detailed document information associated with a user event.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentInfo : GTLRObject

/**
 *  Required. The Document resource ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Required. The Document resource full name, of the form:
 *  projects//locations//dataStores//branches//documents/
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The promotion IDs associated with this Document. Currently, this field is
 *  restricted to at most one ID.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *promotionIds;

/**
 *  Quantity of the Document associated with the user event. Defaults to 1. For
 *  example, this field will be 2 if two quantities of the same Document are
 *  involved in a `add-to-cart` event. Required for events of the following
 *  event types: * `add-to-cart` * `purchase`
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

@end


/**
 *  Google Cloud Storage location for input content. format.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaGcsSource : GTLRObject

/**
 *  The schema to use when parsing the data from the source. Supported values
 *  for imports: * `user_event` (default): One JSON UserEvent per line. *
 *  `document` (default): One JSON Document per line. Each document must have a
 *  valid Document.id.
 */
@property(nonatomic, copy, nullable) NSString *dataSchema;

/**
 *  Required. Google Cloud Storage URIs to input files. URI can be up to 2000
 *  characters long. URIs can match the full object path (for example,
 *  `gs://bucket/directory/object.json`) or a pattern matching one or more
 *  files, such as `gs://bucket/directory/ *.json`. A request can contain at
 *  most 100 files, and each file can be up to 2 GB.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inputUris;

@end


/**
 *  Metadata related to the progress of the ImportDocuments operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for Import methods.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest : GTLRObject

/** BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBigQuerySource *bigquerySource;

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** Google Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaGcsSource *gcsSource;

/** The Inline source for the input content for documents. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource *inlineSource;

/**
 *  The mode of reconciliation between existing documents and the documents to
 *  be imported. Defaults to ReconciliationMode.INCREMENTAL.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest_ReconciliationMode_Full
 *        Calculates diff and replaces the entire document dataset. Existing
 *        documents may be deleted if they are not present in the source
 *        location. (Value: "FULL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest_ReconciliationMode_Incremental
 *        Inserts new documents or updates existing documents. (Value:
 *        "INCREMENTAL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest_ReconciliationMode_ReconciliationModeUnspecified
 *        Defaults to INCREMENTAL. (Value: "RECONCILIATION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reconciliationMode;

@end


/**
 *  The inline source for the input config for ImportDocuments method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource : GTLRObject

/**
 *  Required. A list of documents to update/create. Each document must have a
 *  valid Document.id. Recommended max of 100 items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *> *documents;

@end


/**
 *  Response of the ImportDocumentsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig : GTLRObject

/**
 *  Google Cloud Storage prefix for import errors. This must be an empty,
 *  existing Cloud Storage directory. Import errors will be written to sharded
 *  files in this directory, one per line, as a JSON-encoded `google.rpc.Status`
 *  message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Import operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for the ImportUserEvents request.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequest : GTLRObject

/** Required. BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBigQuerySource *bigquerySource;

/**
 *  The desired location of errors incurred during the Import. Cannot be set for
 *  inline user event imports.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** Required. Google Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaGcsSource *gcsSource;

/** Required. The Inline source for the input content for UserEvents. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource *inlineSource;

@end


/**
 *  The inline source for the input config for ImportUserEvents method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource : GTLRObject

/**
 *  Required. A list of user events to import. Recommended max of 10k items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent *> *userEvents;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsResponse : GTLRObject

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of user events imported with complete existing Documents.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with Document information not found in
 *  the existing Branch.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  Response message for DocumentService.ListDocuments method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "documents" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListDocumentsResponse : GTLRCollectionObject

/**
 *  The Documents.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *> *documents;

/**
 *  A token that can be sent as ListDocumentsRequest.page_token to retrieve the
 *  next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Media-specific user event information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaMediaInfo : GTLRObject

/**
 *  The media progress time in seconds, if applicable. For example, if the end
 *  user has finished 90 seconds of a playback video, then
 *  MediaInfo.media_progress_duration.seconds should be set to 90.
 */
@property(nonatomic, strong, nullable) GTLRDuration *mediaProgressDuration;

/**
 *  Media progress should be computed using only the media_progress_duration
 *  relative to the media total length. This value must be between [0, 1.0]
 *  inclusive. If this is not a playback or the progress cannot be computed
 *  (e.g. ongoing livestream), this field should be unset.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mediaProgressPercentage;

@end


/**
 *  Detailed page information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPageInfo : GTLRObject

/**
 *  The most specific category associated with a category page. To represent
 *  full path of category, use '>' sign to separate different hierarchies. If
 *  '>' is part of the category name, please replace it with other character(s).
 *  Category pages include special pages such as sales or promotions. For
 *  instance, a special sale page may have the category hierarchy:
 *  "pageCategory" : "Sales > 2017 Black Friday Deals". Required for
 *  `view-category-page` events. Other event types should not set this field.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageCategory;

/**
 *  A unique ID of a web page view. This should be kept the same for all user
 *  events triggered from the same pageview. For example, an item detail page
 *  view could trigger multiple events as the user is browsing the page. The
 *  `pageViewId` property should be kept the same for all these events so that
 *  they can be grouped together properly. When using the client side event
 *  reporting with JavaScript pixel and Google Tag Manager, this value is filled
 *  in automatically.
 */
@property(nonatomic, copy, nullable) NSString *pageviewId;

/**
 *  The referrer URL of the current page. When using the client side event
 *  reporting with JavaScript pixel and Google Tag Manager, this value is filled
 *  in automatically. However, some browser privacy restrictions may cause this
 *  field to be empty.
 */
@property(nonatomic, copy, nullable) NSString *referrerUri;

/**
 *  Complete URL (window.location.href) of the user's current page. When using
 *  the client side event reporting with JavaScript pixel and Google Tag
 *  Manager, this value is filled in automatically. Maximum length 5,000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Detailed panel information associated with a user event.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPanelInfo : GTLRObject

/** The display name of the panel. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Required. The panel ID. */
@property(nonatomic, copy, nullable) NSString *panelId;

/**
 *  The ordered position of the panel, if shown to the user with other panels.
 *  If set, then total_panels must also be set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *panelPosition;

/**
 *  The total number of panels, including this one, shown to the user. Must be
 *  set if panel_position is set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalPanels;

@end


/**
 *  Request message for Recommend method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest : GTLRObject

/**
 *  Filter for restricting recommendation results with a length limit of 5,000
 *  characters. Currently, only filter expressions on the `filter_tags`
 *  attribute is supported. Examples: * (filter_tags: ANY("Red", "Blue") OR
 *  filter_tags: ANY("Hot", "Cold")) * (filter_tags: ANY("Red", "Blue")) AND NOT
 *  (filter_tags: ANY("Green")) If your filter blocks all results, the API will
 *  return generic (unfiltered) popular Documents. If you only want results
 *  strictly matching the filters, set `strictFiltering` to True in
 *  RecommendRequest.params to receive empty results instead. Note that the API
 *  will never return Documents with storageStatus of "EXPIRED" or "DELETED"
 *  regardless of filter choices.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of results to return. Set this property to the number of
 *  recommendation results needed. If zero, the service will choose a reasonable
 *  default. The maximum allowed value is 100. Values above 100 will be coerced
 *  to 100.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Additional domain specific parameters for the recommendations. Allowed
 *  values: * `returnDocument`: Boolean. If set to true, the associated Document
 *  object will be returned in RecommendResponse.results.document. *
 *  `returnScore`: Boolean. If set to true, the recommendation 'score'
 *  corresponding to each returned Document will be set in
 *  RecommendResponse.results.metadata. The given 'score' indicates the
 *  probability of a Document conversion given the user's context and history. *
 *  `strictFiltering`: Boolean. True by default. If set to false, the service
 *  will return generic (unfiltered) popular Documents instead of empty if your
 *  filter blocks all recommendation results. * `diversityLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of: *
 *  'no-diversity' * 'low-diversity' * 'medium-diversity' * 'high-diversity' *
 *  'auto-diversity' This gives request-level control and adjusts recommendation
 *  results based on Document category.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest_Params *params;

/**
 *  Required. Context about the user, what they are looking at and what action
 *  they took to trigger the Recommend request. Note that this user event detail
 *  won't be ingested to userEvent logs. Thus, a separate userEvent write
 *  request is required for event logging. Don't set UserEvent.user_pseudo_id or
 *  UserEvent.user_info.user_id to the same fixed ID for different users. If you
 *  are trying to receive non-personalized recommendations (not recommended;
 *  this can negatively impact model performance), instead set
 *  UserEvent.user_pseudo_id to a random unique ID and leave
 *  UserEvent.user_info.user_id unset.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent *userEvent;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest_UserLabels *userLabels;

/**
 *  Use validate only mode for this recommendation query. If set to true, a fake
 *  model will be used that returns arbitrary Document IDs. Note that the
 *  validate only mode should only be used for testing the API, or if the model
 *  is not ready.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Additional domain specific parameters for the recommendations. Allowed
 *  values: * `returnDocument`: Boolean. If set to true, the associated Document
 *  object will be returned in RecommendResponse.results.document. *
 *  `returnScore`: Boolean. If set to true, the recommendation 'score'
 *  corresponding to each returned Document will be set in
 *  RecommendResponse.results.metadata. The given 'score' indicates the
 *  probability of a Document conversion given the user's context and history. *
 *  `strictFiltering`: Boolean. True by default. If set to false, the service
 *  will return generic (unfiltered) popular Documents instead of empty if your
 *  filter blocks all recommendation results. * `diversityLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of: *
 *  'no-diversity' * 'low-diversity' * 'medium-diversity' * 'high-diversity' *
 *  'auto-diversity' This gives request-level control and adjusts recommendation
 *  results based on Document category.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest_Params : GTLRObject
@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest_UserLabels : GTLRObject
@end


/**
 *  Response message for Recommend method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponse : GTLRObject

/**
 *  A unique attribution token. This should be included in the UserEvent logs
 *  resulting from this recommendation, which enables accurate attribution of
 *  recommendation model performance.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  IDs of documents in the request that were missing from the default Branch
 *  associated with the requested ServingConfig.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *missingIds;

/**
 *  A list of recommended Documents. The order represents the ranking (from the
 *  most relevant Document to the least).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult *> *results;

/**
 *  True if RecommendRequest.validate_only was set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  RecommendationResult represents a generic recommendation result with
 *  associated metadata.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult : GTLRObject

/** Set if `returnDocument` is set to true in RecommendRequest.params. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *document;

/**
 *  Resource ID of the recommended Document.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Additional Document metadata / annotations. Possible values: * `score`:
 *  Recommendation score in double value. Is set if `returnScore` is set to true
 *  in RecommendRequest.params.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult_Metadata *metadata;

@end


/**
 *  Additional Document metadata / annotations. Possible values: * `score`:
 *  Recommendation score in double value. Is set if `returnScore` is set to true
 *  in RecommendRequest.params.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult_Metadata : GTLRObject
@end


/**
 *  Detailed search information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchInfo : GTLRObject

/**
 *  An integer that specifies the current offset for pagination (the 0-indexed
 *  starting location, amongst the products deemed by the API as relevant). See
 *  SearchRequest.offset for definition. If this field is negative, an
 *  INVALID_ARGUMENT is returned. This can only be set for `search` events.
 *  Other event types should not set this field. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The order in which products are returned, if applicable. See
 *  SearchRequest.order_by for definition and syntax. The value must be a UTF-8
 *  encoded string with a length limit of 1,000 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. This can only be set for `search`
 *  events. Other event types should not set this field. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The user's search query. See SearchRequest.query for definition. The value
 *  must be a UTF-8 encoded string with a length limit of 5,000 characters.
 *  Otherwise, an INVALID_ARGUMENT error is returned. At least one of
 *  search_query or page_categories is required for `search` events. Other event
 *  types should not set this field. Otherwise, an INVALID_ARGUMENT error is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *searchQuery;

@end


/**
 *  A transaction represents the entire purchase transaction.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTransactionInfo : GTLRObject

/**
 *  All the costs associated with the products. These can be manufacturing
 *  costs, shipping expenses not borne by the end user, or any other costs, such
 *  that: * Profit = value - tax - cost
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cost;

/** Required. Currency code. Use three-character ISO-4217 code. */
@property(nonatomic, copy, nullable) NSString *currency;

/**
 *  The total discount(s) value applied to this transaction. This figure should
 *  be excluded from TransactionInfo.value For example, if a user paid
 *  TransactionInfo.value amount, then nominal (pre-discount) value of the
 *  transaction is the sum of TransactionInfo.value and
 *  TransactionInfo.discount_value This means that profit is calculated the same
 *  way, regardless of the discount value, and that
 *  TransactionInfo.discount_value can be larger than TransactionInfo.value: *
 *  Profit = value - tax - cost
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *discountValue;

/**
 *  All the taxes associated with the transaction.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tax;

/** The transaction ID with a length limit of 128 characters. */
@property(nonatomic, copy, nullable) NSString *transactionId;

/**
 *  Required. Total non-zero value associated with the transaction. This value
 *  may include shipping, tax, or other adjustments to the total value that you
 *  want to include.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  UserEvent captures all metadata information DiscoveryEngine API needs to
 *  know about how end users interact with customers' website.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent : GTLRObject

/**
 *  Extra user event features to include in the recommendation model. These
 *  attributes must NOT contain data that needs to be parsed or processed
 *  further, e.g. JSON or other encodings. If you provide custom attributes for
 *  ingested user events, also include them in the user events that you
 *  associate with prediction requests. Custom attribute formatting must be
 *  consistent between imported events and events provided with prediction
 *  requests. This lets the DiscoveryEngine API use those custom attributes when
 *  training models and serving predictions, which helps improve recommendation
 *  quality. This field needs to pass all below criteria, otherwise an
 *  INVALID_ARGUMENT error is returned: * The key must be a UTF-8 encoded string
 *  with a length limit of 5,000 characters. * For text attributes, at most 400
 *  values are allowed. Empty values are not allowed. Each value must be a UTF-8
 *  encoded string with a length limit of 256 characters. * For number
 *  attributes, at most 400 values are allowed. For product recommendations, an
 *  example of extra user information is traffic_channel, which is how a user
 *  arrives at the site. Users can arrive at the site by coming to the site
 *  directly, coming through Google search, or in other ways.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent_Attributes *attributes;

/**
 *  Token to attribute an API response to user action(s) to trigger the event.
 *  Highly recommended for user events that are the result of
 *  PredictionService.Predict. This field enables accurate attribution of
 *  recommendation model performance. The value must be one of: *
 *  PredictResponse.attribution_token for events that are the result of
 *  PredictionService.Predict. * SearchResponse.attribution_token for events
 *  that are the result of SearchService.Search. *
 *  CompleteQueryResponse.attribution_token for events that are the result of
 *  SearchService.CompleteQuery. This token enables us to accurately attribute
 *  page view or conversion completion back to the event and the particular
 *  predict response containing this clicked/purchased product. If user clicks
 *  on product K in the recommendation results, pass
 *  PredictResponse.attribution_token as a URL parameter to product K's page.
 *  When recording events on product K's page, log the
 *  PredictResponse.attribution_token to this field.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  CompleteQuery API details related to the event. This field should be set for
 *  `search` event when autocomplete function is enabled and the user clicks a
 *  suggestion for search.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCompletionInfo *completionInfo;

/**
 *  Should set to true if the request is made directly from the end user, in
 *  which case the UserEvent.user_info.user_agent can be populated from the HTTP
 *  request. This flag should be set only if the API request is made directly
 *  from the end user such as a mobile app (and not if a gateway or a server is
 *  processing and pushing the user events). This should not be set when using
 *  the JavaScript tag in UserEventService.CollectUserEvent.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *directUserRequest;

/**
 *  List of Documents associated with this user event. This field is optional
 *  except for the following event types: * `view-item` * `add-to-cart` *
 *  `purchase` * `media-play` * `media-complete` In a `search` event, this field
 *  represents the documents returned to the end user on the current page (the
 *  end user may have not finished browsing the whole page yet). When a new page
 *  is returned to the end user, after pagination/filtering/ordering even for
 *  the same query, a new `search` event with different UserEvent.documents is
 *  desired.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentInfo *> *documents;

/**
 *  Only required for UserEventService.ImportUserEvents method. Timestamp of
 *  when the user event happened.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  Required. User event type. Allowed values are: Generic values: * `search`:
 *  Search for Documents. * `view-item`: Detailed page view of a Document. *
 *  `view-item-list`: View of a panel or ordered list of Documents. *
 *  `view-home-page`: View of the home page. * `view-category-page`: View of a
 *  category page, e.g. Home > Men > Jeans Retail-related values: *
 *  `add-to-cart`: Add an item(s) to cart, e.g. in Retail online shopping *
 *  `purchase`: Purchase an item(s) Media-related values: * `media-play`:
 *  Start/resume watching a video, playing a song, etc. * `media-complete`:
 *  Finished or stopped midway through a video, song, etc.
 */
@property(nonatomic, copy, nullable) NSString *eventType;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the documents being filtered. One
 *  example is for `search` events, the associated SearchService.SearchRequest
 *  may contain a filter expression in SearchService.SearchRequest.filter
 *  conforming to https://google.aip.dev/160#filtering. Similarly, for
 *  `view-item-list` events that are generated from a
 *  PredictionService.PredictRequest, this field may be populated directly from
 *  PredictionService.PredictRequest.filter conforming to
 *  https://google.aip.dev/160#filtering. The value must be a UTF-8 encoded
 *  string with a length limit of 1,000 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Media-specific info. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaMediaInfo *mediaInfo;

/**
 *  Page metadata such as categories and other critical information for certain
 *  event types such as `view-category-page`.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPageInfo *pageInfo;

/** Panel metadata associated with this user event. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPanelInfo *panel;

/**
 *  The promotion IDs if this is an event associated with promotions. Currently,
 *  this field is restricted to at most one ID.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *promotionIds;

/**
 *  Search API details related to the event. This field should be set for
 *  `search` event.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchInfo *searchInfo;

/**
 *  A unique identifier for tracking a visitor session with a length limit of
 *  128 bytes. A session is an aggregation of an end user behavior in a time
 *  span. A general guideline to populate the sesion_id: 1. If user has no
 *  activity for 30 min, a new session_id should be assigned. 2. The session_id
 *  should be unique across users, suggest use uuid or add
 *  UserEvent.user_pseudo_id as prefix.
 */
@property(nonatomic, copy, nullable) NSString *sessionId;

/**
 *  A list of identifiers for the independent experiment groups this user event
 *  belongs to. This is used to distinguish between user events associated with
 *  different experiment setups on the customer end.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tagIds;

/** The transaction metadata (if any) associated with this user event. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTransactionInfo *transactionInfo;

/** Information about the end user. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserInfo *userInfo;

/**
 *  Required. A unique identifier for tracking visitors. For example, this could
 *  be implemented with an HTTP cookie, which should be able to uniquely
 *  identify a visitor on a single device. This unique identifier should not
 *  change if the visitor log in/out of the website. Do not set the field to the
 *  same fixed ID for different users. This mixes the event history of those
 *  users together, which results in degraded model quality. The field must be a
 *  UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. The field should not contain PII or
 *  user-data. We recommend to use Google Analytics [Client
 *  ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId)
 *  for this field.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Extra user event features to include in the recommendation model. These
 *  attributes must NOT contain data that needs to be parsed or processed
 *  further, e.g. JSON or other encodings. If you provide custom attributes for
 *  ingested user events, also include them in the user events that you
 *  associate with prediction requests. Custom attribute formatting must be
 *  consistent between imported events and events provided with prediction
 *  requests. This lets the DiscoveryEngine API use those custom attributes when
 *  training models and serving predictions, which helps improve recommendation
 *  quality. This field needs to pass all below criteria, otherwise an
 *  INVALID_ARGUMENT error is returned: * The key must be a UTF-8 encoded string
 *  with a length limit of 5,000 characters. * For text attributes, at most 400
 *  values are allowed. Empty values are not allowed. Each value must be a UTF-8
 *  encoded string with a length limit of 256 characters. * For number
 *  attributes, at most 400 values are allowed. For product recommendations, an
 *  example of extra user information is traffic_channel, which is how a user
 *  arrives at the site. Users can arrive at the site by coming to the site
 *  directly, coming through Google search, or in other ways.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCustomAttribute.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent_Attributes : GTLRObject
@end


/**
 *  Information of an end user.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserInfo : GTLRObject

/**
 *  User agent as included in the HTTP header. Required for getting
 *  SearchResponse.sponsored_results. The field must be a UTF-8 encoded string
 *  with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned. This should not be set when using the client side event
 *  reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or
 *  if direct_user_request is set.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

/**
 *  Highly recommended for logged-in users. Unique identifier for logged-in
 *  user, such as a user name. Don't set for anonymous users. Always use a
 *  hashed value for this ID. Don't set the field to the same fixed ID for
 *  different users. This mixes the event history of those users together, which
 *  results in degraded model quality. The field must be a UTF-8 encoded string
 *  with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error
 *  is returned.
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRDiscoveryEngine_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRDiscoveryEngine_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRDiscoveryEngine_GoogleTypeDate : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
