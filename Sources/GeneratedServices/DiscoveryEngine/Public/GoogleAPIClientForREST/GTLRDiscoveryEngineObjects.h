// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Discovery Engine API (discoveryengine/v1)
// Description:
//   Discovery Engine API.
// Documentation:
//   https://cloud.google.com/generative-ai-app-builder/docs/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDiscoveryEngine_GoogleApiDistribution;
@class GTLRDiscoveryEngine_GoogleApiDistributionBucketOptions;
@class GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsExplicit;
@class GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsExponential;
@class GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsLinear;
@class GTLRDiscoveryEngine_GoogleApiDistributionExemplar;
@class GTLRDiscoveryEngine_GoogleApiDistributionExemplar_Attachments_Item;
@class GTLRDiscoveryEngine_GoogleApiDistributionRange;
@class GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item;
@class GTLRDiscoveryEngine_GoogleApiMetric;
@class GTLRDiscoveryEngine_GoogleApiMetric_Labels;
@class GTLRDiscoveryEngine_GoogleApiMonitoredResource;
@class GTLRDiscoveryEngine_GoogleApiMonitoredResource_Labels;
@class GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata;
@class GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata_SystemLabels;
@class GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorContext;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorLog_RequestPayload;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorLog_ResponsePayload;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingHttpRequestContext;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingImportErrorContext;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingServiceContext;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingSourceLocation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AdvancedSiteSearchConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AlloyDbSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaActionConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaActionConfig_ActionParams;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAdvancedSiteSearchConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerCitation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerCitationSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerGroundingSupport;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReference;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBAPConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCondition;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConditionQueryTerm;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConditionTimeRange;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRunProgress;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpecControlPoint;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlFilterAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlPromoteAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlRedirectAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlSynonymsAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity_KeyPropertyMappings;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStoreBillingEstimation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStoreServingConfigDataStore;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDedicatedCrawlRateTimeSeries;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfig_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfigDestination;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig_ParsingConfigOverrides;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineCommonConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse_DocumentDataMap;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse_DocumentDataMap_DocumentDataMap;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaInterval;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaLanguageInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaOrganicCrawlRateTimeSeries;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProject_ServiceTermsMap;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQuery;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSchema;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSchema_StructSchema;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchLinkPromotion;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestRelevanceScoreSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSessionTurn;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSingleRegionKey;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse_Metrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUserInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerCitation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerCitationSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerGroundingSupport;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecModelSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecPromptSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfoDocumentMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestRelatedQuestionsSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultList;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResult;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReference;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfoChunkContent;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultChunkInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultSnippetInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionSearchAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaAdvancedSiteSearchConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCondition;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConditionQueryTerm;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConditionTimeRange;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpecControlPoint;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlFilterAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlPromoteAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlRedirectAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlSynonymsAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStoreBillingEstimation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStoreServingConfigDataStore;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDedicatedCrawlRateTimeSeries;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig_ParsingConfigOverrides;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineCommonConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaHealthcareFhirConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaInterval;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaLanguageInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaOrganicCrawlRateTimeSeries;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProject_ServiceTermsMap;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema_StructSchema;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchLinkPromotion;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestRelevanceScoreSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSingleRegionKey;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse_Metrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigQuerySource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptions;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptions_Families;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponseCheckGroundingFactChunk;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponseClaim;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk_DerivedStructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkChunkMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkDocumentMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkDocumentMetadata_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkPageSpan;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CloudSqlSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompleteQueryResponseQuerySuggestion;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompletionInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompletionSuggestion;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Condition;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConditionQueryTerm;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConditionTimeRange;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlFilterAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlPromoteAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlRedirectAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlSynonymsAction;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConversationContext;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConversationMessage;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateTargetSiteRequest;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomAttribute;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_Metrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStoreBillingEstimation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStoreServingConfigDataStore;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document_DerivedStructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document_StructData;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentContent;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentIndexStatus;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfig_ParsingConfigOverrides;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DoubleList;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineCommonConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FactChunk;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FactChunk_SourceMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FetchSitemapsResponseSitemapMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FhirStoreSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FirestoreSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GcsSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GroundingFact;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GroundingFact_Attributes;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1HealthcareFhirConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingEntry;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingStore;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportIdentityMappingsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Interval;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1MediaInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PageInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PanelInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Project_ServiceTermsMap;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeErrorConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeIdentityMappingsRequestInlineSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Query;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankingRecord;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult_Metadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Reply;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema_StructSchema;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchLinkPromotion;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_Params;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_UserLabels;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestFacetSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestFacetSpecFacetKey;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestImageQuery;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestRelevanceScoreSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSessionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseFacet;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseFacetFacetValue;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseQueryExpansionInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSearchResult;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSearchResult_ModelScores;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSessionInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitation;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryReference;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryReferenceChunkContent;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummarySafetyAttributes;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummarySummaryWithMetadata;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfigGenericConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfigMediaConfig;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SessionTurn;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SingleRegionKey;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Sitemap;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SpannerSource;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSiteFailureReason;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TextInput;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelRequestGcsTrainingInput;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelResponse_Metrics;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TransactionInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent_Attributes;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserInfo;
@class GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig;
@class GTLRDiscoveryEngine_GoogleLongrunningOperation;
@class GTLRDiscoveryEngine_GoogleLongrunningOperation_Metadata;
@class GTLRDiscoveryEngine_GoogleLongrunningOperation_Response;
@class GTLRDiscoveryEngine_GoogleMonitoringV3Point;
@class GTLRDiscoveryEngine_GoogleMonitoringV3TimeInterval;
@class GTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries;
@class GTLRDiscoveryEngine_GoogleMonitoringV3TypedValue;
@class GTLRDiscoveryEngine_GoogleRpcStatus;
@class GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item;
@class GTLRDiscoveryEngine_GoogleTypeDate;
@class GTLRDiscoveryEngine_GoogleTypeDateTime;
@class GTLRDiscoveryEngine_GoogleTypeTimeZone;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer.answerSkippedReasons

/**
 *  The adversarial query ignored case.
 *
 *  Value: "ADVERSARIAL_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_AdversarialQueryIgnored;
/**
 *  Default value. The answer skipped reason is not specified.
 *
 *  Value: "ANSWER_SKIPPED_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_AnswerSkippedReasonUnspecified;
/**
 *  The customer policy violation case. Google skips the summary if there is a
 *  customer policy violation detected. The policy is defined by the customer.
 *
 *  Value: "CUSTOMER_POLICY_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_CustomerPolicyViolation;
/**
 *  The jail-breaking query ignored case. For example, "Reply in the tone of a
 *  competing company's CEO". Google skips the answer if the query is classified
 *  as a jail-breaking query.
 *
 *  Value: "JAIL_BREAKING_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_JailBreakingQueryIgnored;
/**
 *  The low-grounded answer case. Google skips the answer if a well grounded
 *  answer was unable to be generated.
 *
 *  Value: "LOW_GROUNDED_ANSWER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_LowGroundedAnswer;
/**
 *  The non-answer seeking query ignored case Google skips the answer if the
 *  query is chit chat.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_NonAnswerSeekingQueryIgnored;
/**
 *  The non-answer seeking query ignored case. Google skips the answer if the
 *  query doesn't have clear intent.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY_IGNORED_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_NonAnswerSeekingQueryIgnoredV2;
/**
 *  The no relevant content case. Google skips the answer if there is no
 *  relevant content in the retrieved search results.
 *
 *  Value: "NO_RELEVANT_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_NoRelevantContent;
/**
 *  The out-of-domain query ignored case. Google skips the answer if there are
 *  no high-relevance search results.
 *
 *  Value: "OUT_OF_DOMAIN_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_OutOfDomainQueryIgnored;
/**
 *  The potential policy violation case. Google skips the answer if there is a
 *  potential policy violation detected. This includes content that may be
 *  violent or toxic.
 *
 *  Value: "POTENTIAL_POLICY_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_AnswerSkippedReasons_PotentialPolicyViolation;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer.state

/**
 *  Answer generation currently failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_Failed;
/**
 *  Answer generation is currently in progress.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_InProgress;
/**
 *  Unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_StateUnspecified;
/**
 *  Answer generation is currently in progress.
 *
 *  Value: "STREAMING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_Streaming;
/**
 *  Answer generation has succeeded.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo.type

/**
 *  Adversarial query classification type.
 *
 *  Value: "ADVERSARIAL_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_AdversarialQuery;
/**
 *  Jail-breaking query classification type.
 *
 *  Value: "JAIL_BREAKING_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_JailBreakingQuery;
/**
 *  Non-answer-seeking query classification type, for chit chat.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQuery;
/**
 *  Non-answer-seeking query classification type, for no clear intent.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQueryV2;
/**
 *  Unspecified query classification type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep.state

/**
 *  Step currently failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_Failed;
/**
 *  Step is currently in progress.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_InProgress;
/**
 *  Unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_StateUnspecified;
/**
 *  Step has succeeded.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBAPConfig.supportedConnectorModes

/**
 *  Connector utilized for Actions
 *
 *  Value: "ACTIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBAPConfig_SupportedConnectorModes_Actions;
/**
 *  Connector mode unspecified.
 *
 *  Value: "CONNECTOR_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBAPConfig_SupportedConnectorModes_ConnectorModeUnspecified;
/**
 *  Connector utilized for data ingestion.
 *
 *  Value: "DATA_INGESTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBAPConfig_SupportedConnectorModes_DataIngestion;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig.state

/**
 *  The CmekConfig can be used with DataStores.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Active;
/**
 *  The KMS key version is being rotated.
 *
 *  Value: "ACTIVE_ROTATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_ActiveRotating;
/**
 *  The CmekConfig is creating.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Creating;
/**
 *  The CmekConfig deletion process failed.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_DeleteFailed;
/**
 *  The CmekConfig is deleting.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Deleting;
/**
 *  The CmekConfig is unavailable, most likely due to the KMS Key being revoked.
 *
 *  Value: "KEY_ISSUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_KeyIssue;
/**
 *  The CmekConfig state is unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_StateUnspecified;
/**
 *  The CmekConfig is not usable, most likely due to some internal issue.
 *
 *  Value: "UNUSABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Unusable;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun.state

/**
 *  Data sync was scheduled but has been cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Cancelled;
/**
 *  The data sync is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Failed;
/**
 *  Data sync has been running longer than expected and is still running at the
 *  time the next run is supposed to start.
 *
 *  Value: "OVERRUN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Overrun;
/**
 *  Data sync is about to start.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Pending;
/**
 *  The data sync is ongoing.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Running;
/**
 *  Default value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_StateUnspecified;
/**
 *  The data sync is finished.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Succeeded;
/**
 *  The data sync completed with non-fatal errors.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Warning;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun.trigger

/**
 *  ConnectorRun auto triggered by connector initialization.
 *
 *  Value: "INITIALIZATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Initialization;
/**
 *  ConnectorRun triggered by user manually.
 *
 *  Value: "MANUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Manual;
/**
 *  ConnectorRun auto triggered by resuming connector.
 *
 *  Value: "RESUME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Resume;
/**
 *  ConnectorRun triggered by scheduler if connector has PERIODIC sync mode.
 *
 *  Value: "SCHEDULER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Scheduler;
/**
 *  Default value.
 *
 *  Value: "TRIGGER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_TriggerUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun.state

/**
 *  Data sync was scheduled but has been cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Cancelled;
/**
 *  The data sync is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Failed;
/**
 *  Data sync has been running longer than expected and is still running at the
 *  time the next run is supposed to start.
 *
 *  Value: "OVERRUN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Overrun;
/**
 *  Data sync is about to start.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Pending;
/**
 *  The data sync is ongoing.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Running;
/**
 *  Default value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_StateUnspecified;
/**
 *  The data sync is finished.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Succeeded;
/**
 *  The data sync completed with non-fatal errors.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Warning;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun.syncType

/**
 *  Sync triggers full sync of all documents.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_Full;
/**
 *  Incremental sync of updated documents.
 *
 *  Value: "INCREMENTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_Incremental;
/**
 *  Realtime sync.
 *
 *  Value: "REALTIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_Realtime;
/**
 *  Sync type unspecified.
 *
 *  Value: "SYNC_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_SyncTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl.solutionType

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl.useCases

/**
 *  Browse use case. Expects the traffic has an empty query.
 *
 *  Value: "SEARCH_USE_CASE_BROWSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_UseCases_SearchUseCaseBrowse;
/**
 *  Search use case. Expects the traffic has a non-empty query.
 *
 *  Value: "SEARCH_USE_CASE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_UseCases_SearchUseCaseSearch;
/**
 *  Value used when unset. Will not occur in CSS.
 *
 *  Value: "SEARCH_USE_CASE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_UseCases_SearchUseCaseUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec.attributeType

/**
 *  Unspecified AttributeType.
 *
 *  Value: "ATTRIBUTE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_AttributeType_AttributeTypeUnspecified;
/**
 *  For the freshness use case the attribute value will be the duration between
 *  the current time and the date in the datetime field specified. The value
 *  must be formatted as an XSD `dayTimeDuration` value (a restricted subset of
 *  an ISO 8601 duration value). The pattern for this is: `nDnM]`. For example,
 *  `5D`, `3DT12H30M`, `T24H`.
 *
 *  Value: "FRESHNESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_AttributeType_Freshness;
/**
 *  The value of the numerical field will be used to dynamically update the
 *  boost amount. In this case, the attribute_value (the x value) of the control
 *  point will be the actual value of the numerical field for which the
 *  boost_amount is specified.
 *
 *  Value: "NUMERICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_AttributeType_Numerical;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec.interpolationType

/**
 *  Interpolation type is unspecified. In this case, it defaults to Linear.
 *
 *  Value: "INTERPOLATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_InterpolationType_InterpolationTypeUnspecified;
/**
 *  Piecewise linear interpolation will be applied.
 *
 *  Value: "LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_InterpolationType_Linear;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector.blockingReasons

/**
 *  Connector requires customer to allowlist our project in their service
 *  attachment.
 *
 *  Value: "ALLOWLIST_IN_SERVICE_ATTACHMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_BlockingReasons_AllowlistInServiceAttachment;
/**
 *  Connector requires customer to allowlist static IPs.
 *
 *  Value: "ALLOWLIST_STATIC_IP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_BlockingReasons_AllowlistStaticIp;
/**
 *  Default value.
 *
 *  Value: "BLOCKING_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_BlockingReasons_BlockingReasonUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector.connectorType

/**
 *  Big query connector.
 *
 *  Value: "BIG_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_BigQuery;
/**
 *  Default value.
 *
 *  Value: "CONNECTOR_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_ConnectorTypeUnspecified;
/**
 *  Data connector connects between FHIR store and VAIS datastore.
 *
 *  Value: "GCP_FHIR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GcpFhir;
/**
 *  Google Cloud Storage connector.
 *
 *  Value: "GCS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_Gcs;
/**
 *  Google Calendar connector.
 *
 *  Value: "GOOGLE_CALENDAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GoogleCalendar;
/**
 *  Google Drive connector.
 *
 *  Value: "GOOGLE_DRIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GoogleDrive;
/**
 *  Gmail connector.
 *
 *  Value: "GOOGLE_MAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GoogleMail;
/**
 *  Native Cloud Identity connector for people search powered by People API.
 *
 *  Value: "NATIVE_CLOUD_IDENTITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_NativeCloudIdentity;
/**
 *  Third party connector to connector to third party application.
 *
 *  Value: "THIRD_PARTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_ThirdParty;
/**
 *  Federated connector, it is a third party connector that doesn't ingestion
 *  data, and search is powered by third party application's API.
 *
 *  Value: "THIRD_PARTY_FEDERATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_ThirdPartyFederated;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector.realtimeState

/**
 *  The connector is successfully set up and awaiting next sync run.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Active;
/**
 *  The connector is being set up.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Creating;
/**
 *  The connector is in error. The error details can be found in
 *  DataConnector.errors. If the error is unfixable, the DataConnector can be
 *  deleted by [CollectionService.DeleteCollection] API.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Failed;
/**
 *  Connector initialization failed. Potential causes include runtime errors or
 *  issues in the asynchronous pipeline, preventing the request from reaching
 *  downstream services (except for some connector types).
 *
 *  Value: "INITIALIZATION_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_InitializationFailed;
/**
 *  The connector is actively syncing records from the data source.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Running;
/**
 *  Default value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_StateUnspecified;
/**
 *  The connector has completed a sync run, but encountered non-fatal errors.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Warning;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector.state

/**
 *  The connector is successfully set up and awaiting next sync run.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Active;
/**
 *  The connector is being set up.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Creating;
/**
 *  The connector is in error. The error details can be found in
 *  DataConnector.errors. If the error is unfixable, the DataConnector can be
 *  deleted by [CollectionService.DeleteCollection] API.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Failed;
/**
 *  Connector initialization failed. Potential causes include runtime errors or
 *  issues in the asynchronous pipeline, preventing the request from reaching
 *  downstream services (except for some connector types).
 *
 *  Value: "INITIALIZATION_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_InitializationFailed;
/**
 *  The connector is actively syncing records from the data source.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Running;
/**
 *  Default value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_StateUnspecified;
/**
 *  The connector has completed a sync run, but encountered non-fatal errors.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Warning;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector.syncMode

/**
 *  The connector will sync data periodically based on the refresh_interval. Use
 *  it with auto_run_disabled to pause the periodic sync, or indicate a one-time
 *  sync.
 *
 *  Value: "PERIODIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_SyncMode_Periodic;
/**
 *  The data will be synced in real time.
 *
 *  Value: "STREAMING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_SyncMode_Streaming;
/**
 *  Connector that doesn't ingest data will have this value
 *
 *  Value: "UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_SyncMode_Unspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore.contentConfig

/**
 *  Default value.
 *
 *  Value: "CONTENT_CONFIG_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_ContentConfigUnspecified;
/**
 *  Only contains documents with Document.content.
 *
 *  Value: "CONTENT_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_ContentRequired;
/**
 *  The data store is used for workspace search. Details of workspace data store
 *  are specified in the WorkspaceConfig.
 *
 *  Value: "GOOGLE_WORKSPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_GoogleWorkspace;
/**
 *  Only contains documents without any Document.content.
 *
 *  Value: "NO_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_NoContent;
/**
 *  The data store is used for public website search.
 *
 *  Value: "PUBLIC_WEBSITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_PublicWebsite;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore.industryVertical

/**
 *  The generic vertical for documents that are not specific to any industry
 *  vertical.
 *
 *  Value: "GENERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_Generic;
/**
 *  The healthcare FHIR vertical.
 *
 *  Value: "HEALTHCARE_FHIR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_HealthcareFhir;
/**
 *  Value used when unset.
 *
 *  Value: "INDUSTRY_VERTICAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_IndustryVerticalUnspecified;
/**
 *  The media industry vertical.
 *
 *  Value: "MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_Media;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore.solutionTypes

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_SolutionTypes_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_SolutionTypes_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_SolutionTypes_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_SolutionTypes_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_SolutionTypes_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine.industryVertical

/**
 *  The generic vertical for documents that are not specific to any industry
 *  vertical.
 *
 *  Value: "GENERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_Generic;
/**
 *  The healthcare FHIR vertical.
 *
 *  Value: "HEALTHCARE_FHIR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_HealthcareFhir;
/**
 *  Value used when unset.
 *
 *  Value: "INDUSTRY_VERTICAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_IndustryVerticalUnspecified;
/**
 *  The media industry vertical.
 *
 *  Value: "MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_Media;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine.solutionType

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig.trainingState

/**
 *  The engine training is paused.
 *
 *  Value: "PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig_TrainingState_Paused;
/**
 *  The engine is training.
 *
 *  Value: "TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig_TrainingState_Training;
/**
 *  Unspecified training state.
 *
 *  Value: "TRAINING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig_TrainingState_TrainingStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata.dataState

/**
 *  The engine does not have sufficient training data. Error messages can be
 *  queried via Stackdriver.
 *
 *  Value: "DATA_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_DataState_DataError;
/**
 *  The engine has sufficient training data.
 *
 *  Value: "DATA_OK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_DataState_DataOk;
/**
 *  Unspecified default value, should never be explicitly set.
 *
 *  Value: "DATA_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_DataState_DataStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata.servingState

/**
 *  The engine is serving and can be queried.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_Active;
/**
 *  The engine is not serving.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_Inactive;
/**
 *  Unspecified serving state.
 *
 *  Value: "SERVING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_ServingStateUnspecified;
/**
 *  The engine is trained on tuned hyperparameters and can be queried.
 *
 *  Value: "TUNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_Tuned;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig.searchAddOns

/**
 *  Large language model add-on.
 *
 *  Value: "SEARCH_ADD_ON_LLM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchAddOns_SearchAddOnLlm;
/**
 *  Default value when the enum is unspecified. This is invalid to use.
 *
 *  Value: "SEARCH_ADD_ON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchAddOns_SearchAddOnUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig.searchTier

/**
 *  Enterprise tier.
 *
 *  Value: "SEARCH_TIER_ENTERPRISE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchTier_SearchTierEnterprise;
/**
 *  Standard tier.
 *
 *  Value: "SEARCH_TIER_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchTier_SearchTierStandard;
/**
 *  Default value when the enum is unspecified. This is invalid to use.
 *
 *  Value: "SEARCH_TIER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchTier_SearchTierUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation.state

/**
 *  The evaluation failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Failed;
/**
 *  The service is preparing to run the evaluation.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Pending;
/**
 *  The evaluation is in progress.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Running;
/**
 *  The evaluation is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_StateUnspecified;
/**
 *  The evaluation completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.advancedSiteSearchDataSources

/**
 *  Value used when unset.
 *
 *  Value: "ADVANCED_SITE_SEARCH_DATA_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_AdvancedSiteSearchDataSources_AdvancedSiteSearchDataSourceUnspecified;
/**
 *  Retrieve value from meta tag.
 *
 *  Value: "METATAGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_AdvancedSiteSearchDataSources_Metatags;
/**
 *  Retrieve value from page map.
 *
 *  Value: "PAGEMAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_AdvancedSiteSearchDataSources_Pagemap;
/**
 *  Retrieve value from schema.org data.
 *
 *  Value: "SCHEMA_ORG"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_AdvancedSiteSearchDataSources_SchemaOrg;
/**
 *  Retrieve value from the attributes set by
 *  SiteSearchEngineService.SetUriPatternDocumentData API.
 *
 *  Value: "URI_PATTERN_MAPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_AdvancedSiteSearchDataSources_UriPatternMapping;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.completableOption

/**
 *  Completable option disabled for a schema field.
 *
 *  Value: "COMPLETABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_CompletableOption_CompletableDisabled;
/**
 *  Completable option enabled for a schema field.
 *
 *  Value: "COMPLETABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_CompletableOption_CompletableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "COMPLETABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_CompletableOption_CompletableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.dynamicFacetableOption

/**
 *  Dynamic facetable option disabled for a schema field.
 *
 *  Value: "DYNAMIC_FACETABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_DynamicFacetableOption_DynamicFacetableDisabled;
/**
 *  Dynamic facetable option enabled for a schema field.
 *
 *  Value: "DYNAMIC_FACETABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_DynamicFacetableOption_DynamicFacetableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_DynamicFacetableOption_DynamicFacetableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.fieldType

/**
 *  Field value type is Boolean.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Boolean;
/**
 *  Field value type is Datetime. Datetime can be expressed as either: * a
 *  number representing milliseconds-since-the-epoch * a string representing
 *  milliseconds-since-the-epoch. e.g. `"1420070400001"` * a string representing
 *  the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date or date and
 *  time. e.g. `"2015-01-01"` or `"2015-01-01T12:10:30Z"`
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Datetime;
/**
 *  Field type is unspecified.
 *
 *  Value: "FIELD_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_FieldTypeUnspecified;
/**
 *  Field value type is Geolocation. Geolocation is expressed as an object with
 *  the following keys: * `id`: a string representing the location id *
 *  `longitude`: a number representing the longitude coordinate of the location
 *  * `latitude`: a number repesenting the latitude coordinate of the location *
 *  `address`: a string representing the full address of the location `latitude`
 *  and `longitude` must always be provided together. At least one of a)
 *  `address` or b) `latitude`-`longitude` pair must be provided.
 *
 *  Value: "GEOLOCATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Geolocation;
/**
 *  Field value type is Integer.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Integer;
/**
 *  Field value type is Number.
 *
 *  Value: "NUMBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Number;
/**
 *  Field value type is Object.
 *
 *  Value: "OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Object;
/**
 *  Field value type is String.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_String;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.indexableOption

/**
 *  Indexable option disabled for a schema field.
 *
 *  Value: "INDEXABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_IndexableOption_IndexableDisabled;
/**
 *  Indexable option enabled for a schema field.
 *
 *  Value: "INDEXABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_IndexableOption_IndexableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "INDEXABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_IndexableOption_IndexableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.recsFilterableOption

/**
 *  Filterable option disabled for a schema field.
 *
 *  Value: "FILTERABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RecsFilterableOption_FilterableDisabled;
/**
 *  Filterable option enabled for a schema field.
 *
 *  Value: "FILTERABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RecsFilterableOption_FilterableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "FILTERABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RecsFilterableOption_FilterableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.retrievableOption

/**
 *  Retrievable option disabled for a schema field.
 *
 *  Value: "RETRIEVABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RetrievableOption_RetrievableDisabled;
/**
 *  Retrievable option enabled for a schema field.
 *
 *  Value: "RETRIEVABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RetrievableOption_RetrievableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "RETRIEVABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RetrievableOption_RetrievableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig.searchableOption

/**
 *  Searchable option disabled for a schema field.
 *
 *  Value: "SEARCHABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_SearchableOption_SearchableDisabled;
/**
 *  Searchable option enabled for a schema field.
 *
 *  Value: "SEARCHABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_SearchableOption_SearchableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "SEARCHABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_SearchableOption_SearchableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig.idpType

/**
 *  Google 1P provider.
 *
 *  Value: "GSUITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig_IdpType_Gsuite;
/**
 *  Default value. ACL search not enabled.
 *
 *  Value: "IDP_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig_IdpType_IdpTypeUnspecified;
/**
 *  Third party provider.
 *
 *  Value: "THIRD_PARTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig_IdpType_ThirdParty;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig.mode

/**
 *  Natural Language Query Understanding is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig_Mode_Disabled;
/**
 *  Natural Language Query Understanding is enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig_Mode_Enabled;
/**
 *  Default value.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig_Mode_ModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse.state

/**
 *  The state is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse_State_Failed;
/**
 *  The state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse_State_StateUnspecified;
/**
 *  The state is successful.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms.state

/**
 *  The default value of the enum. This value is not actually used.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_StateUnspecified;
/**
 *  The project has given consent to the terms of service.
 *
 *  Value: "TERMS_ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_TermsAccepted;
/**
 *  The project has declined or revoked the agreement to terms of service.
 *
 *  Value: "TERMS_DECLINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_TermsDeclined;
/**
 *  The project is pending to review and accept the terms of service.
 *
 *  Value: "TERMS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_TermsPending;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason.corpusType

/**
 *  Default value.
 *
 *  Value: "CORPUS_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason_CorpusType_CorpusTypeUnspecified;
/**
 *  Denotes a crawling attempt for the desktop version of a page.
 *
 *  Value: "DESKTOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason_CorpusType_Desktop;
/**
 *  Denotes a crawling attempt for the mobile version of a page.
 *
 *  Value: "MOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason_CorpusType_Mobile;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse.state

/**
 *  The state is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse_State_Failed;
/**
 *  The state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse_State_StateUnspecified;
/**
 *  The state is successful.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating.category

/**
 *  The harm category is civic integrity.
 *
 *  Value: "HARM_CATEGORY_CIVIC_INTEGRITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryCivicIntegrity;
/**
 *  The harm category is dangerous content.
 *
 *  Value: "HARM_CATEGORY_DANGEROUS_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryDangerousContent;
/**
 *  The harm category is harassment.
 *
 *  Value: "HARM_CATEGORY_HARASSMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryHarassment;
/**
 *  The harm category is hate speech.
 *
 *  Value: "HARM_CATEGORY_HATE_SPEECH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryHateSpeech;
/**
 *  The harm category is sexually explicit content.
 *
 *  Value: "HARM_CATEGORY_SEXUALLY_EXPLICIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategorySexuallyExplicit;
/**
 *  The harm category is unspecified.
 *
 *  Value: "HARM_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating.probability

/**
 *  Harm probability unspecified.
 *
 *  Value: "HARM_PROBABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_HarmProbabilityUnspecified;
/**
 *  High level of harm.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_High;
/**
 *  Low level of harm.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_Low;
/**
 *  Medium level of harm.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_Medium;
/**
 *  Negligible level of harm.
 *
 *  Value: "NEGLIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_Negligible;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating.severity

/**
 *  High level of harm severity.
 *
 *  Value: "HARM_SEVERITY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityHigh;
/**
 *  Low level of harm severity.
 *
 *  Value: "HARM_SEVERITY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityLow;
/**
 *  Medium level of harm severity.
 *
 *  Value: "HARM_SEVERITY_MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityMedium;
/**
 *  Negligible level of harm severity.
 *
 *  Value: "HARM_SEVERITY_NEGLIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityNegligible;
/**
 *  Harm severity unspecified.
 *
 *  Value: "HARM_SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest.rankingExpressionBackend

/**
 *  Bring your own embedding (BYOE), the default way to evaluate the ranking
 *  expression.
 *
 *  Value: "BYOE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RankingExpressionBackend_Byoe;
/**
 *  The expression is compiled into a Clearbox formula.
 *
 *  Value: "CLEARBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RankingExpressionBackend_Clearbox;
/**
 *  Default option for unspecified/unknown values.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RankingExpressionBackend_Unknown;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest.relevanceThreshold

/**
 *  High relevance threshold.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_High;
/**
 *  Low relevance threshold.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_Low;
/**
 *  Lowest relevance threshold.
 *
 *  Value: "LOWEST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_Lowest;
/**
 *  Medium relevance threshold.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_Medium;
/**
 *  Default value. In this case, server behavior defaults to Google defined
 *  threshold.
 *
 *  Value: "RELEVANCE_THRESHOLD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_RelevanceThresholdUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec.attributeType

/**
 *  Unspecified AttributeType.
 *
 *  Value: "ATTRIBUTE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_AttributeTypeUnspecified;
/**
 *  For the freshness use case the attribute value will be the duration between
 *  the current time and the date in the datetime field specified. The value
 *  must be formatted as an XSD `dayTimeDuration` value (a restricted subset of
 *  an ISO 8601 duration value). The pattern for this is: `nDnM]`. For example,
 *  `5D`, `3DT12H30M`, `T24H`.
 *
 *  Value: "FRESHNESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Freshness;
/**
 *  The value of the numerical field will be used to dynamically update the
 *  boost amount. In this case, the attribute_value (the x value) of the control
 *  point will be the actual value of the numerical field for which the
 *  boost_amount is specified.
 *
 *  Value: "NUMERICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Numerical;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec.interpolationType

/**
 *  Interpolation type is unspecified. In this case, it defaults to Linear.
 *
 *  Value: "INTERPOLATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_InterpolationTypeUnspecified;
/**
 *  Piecewise linear interpolation will be applied.
 *
 *  Value: "LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_Linear;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec.searchResultMode

/**
 *  Returns chunks in the search result. Only available if the
 *  DocumentProcessingConfig.chunking_config is specified.
 *
 *  Value: "CHUNKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec_SearchResultMode_Chunks;
/**
 *  Returns documents in the search result.
 *
 *  Value: "DOCUMENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec_SearchResultMode_Documents;
/**
 *  Default value.
 *
 *  Value: "SEARCH_RESULT_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec_SearchResultMode_SearchResultModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec.matchHighlightingCondition

/**
 *  Server behavior is the same as `MATCH_HIGHLIGHTING_DISABLED`.
 *
 *  Value: "MATCH_HIGHLIGHTING_CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec_MatchHighlightingCondition_MatchHighlightingConditionUnspecified;
/**
 *  Disables match highlighting on all documents.
 *
 *  Value: "MATCH_HIGHLIGHTING_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec_MatchHighlightingCondition_MatchHighlightingDisabled;
/**
 *  Enables match highlighting on all documents.
 *
 *  Value: "MATCH_HIGHLIGHTING_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec_MatchHighlightingCondition_MatchHighlightingEnabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec.filterExtractionCondition

/**
 *  Server behavior defaults to `DISABLED`.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_ConditionUnspecified;
/**
 *  Disables NL filter extraction.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Disabled;
/**
 *  Enables NL filter extraction.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Enabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec.mode

/**
 *  Personalization is enabled if data quality requirements are met.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec_Mode_Auto;
/**
 *  Disable personalization.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec_Mode_Disabled;
/**
 *  Default value. In this case, server behavior defaults to Mode.AUTO.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec_Mode_ModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec.condition

/**
 *  Automatic query expansion built by the Search API.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec_Condition_Auto;
/**
 *  Unspecified query expansion condition. In this case, server behavior
 *  defaults to Condition.DISABLED.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec_Condition_ConditionUnspecified;
/**
 *  Disabled query expansion. Only the exact search query is used, even if
 *  SearchResponse.total_size is zero.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec_Condition_Disabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec.condition

/**
 *  Automatic switching between search-as-you-type and standard search modes,
 *  ideal for single-API implementations (e.g., debouncing).
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_Auto;
/**
 *  Server behavior defaults to Condition.DISABLED.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_ConditionUnspecified;
/**
 *  Disables Search As You Type.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_Disabled;
/**
 *  Enables Search As You Type.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_Enabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec.mode

/**
 *  Automatic spell correction built by the Search API. Search will be based on
 *  the corrected query if found.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec_Mode_Auto;
/**
 *  Unspecified spell correction mode. In this case, server behavior defaults to
 *  Mode.AUTO.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec_Mode_ModeUnspecified;
/**
 *  Search API tries to find a spelling suggestion. If a suggestion is found, it
 *  is put in the SearchResponse.corrected_query. The spelling suggestion won't
 *  be used as the search query.
 *
 *  Value: "SUGGESTION_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec_Mode_SuggestionOnly;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession.state

/**
 *  The session is currently open.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession_State_InProgress;
/**
 *  State is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse.state

/**
 *  The state is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse_State_Failed;
/**
 *  The state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse_State_StateUnspecified;
/**
 *  The state is successful.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo.siteVerificationState

/**
 *  Site exempt from verification, e.g., a public website that opens to all.
 *
 *  Value: "EXEMPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_Exempted;
/**
 *  Defaults to VERIFIED.
 *
 *  Value: "SITE_VERIFICATION_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_SiteVerificationStateUnspecified;
/**
 *  Site ownership pending verification or verification failed.
 *
 *  Value: "UNVERIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_Unverified;
/**
 *  Site ownership verified.
 *
 *  Value: "VERIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_Verified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite.indexingStatus

/**
 *  The previously indexed target site has been marked to be deleted. This is a
 *  transitioning state which will resulted in either: 1. target site deleted if
 *  unindexing is successful; 2. state reverts to SUCCEEDED if the unindexing
 *  fails.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Deleting;
/**
 *  The target site fails to be indexed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Failed;
/**
 *  Defaults to SUCCEEDED.
 *
 *  Value: "INDEXING_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_IndexingStatusUnspecified;
/**
 *  The target site is in the update queue and will be picked up by indexing
 *  pipeline.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Pending;
/**
 *  The target site has been indexed.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite.type

/**
 *  Exclude the target site.
 *
 *  Value: "EXCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_Type_Exclude;
/**
 *  Include the target site.
 *
 *  Value: "INCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_Type_Include;
/**
 *  This value is unused. In this case, server behavior defaults to
 *  Type.INCLUDE.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig.type

/**
 *  Workspace Data Store contains Calendar data
 *
 *  Value: "GOOGLE_CALENDAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleCalendar;
/**
 *  Workspace Data Store contains Chat data
 *
 *  Value: "GOOGLE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleChat;
/**
 *  Workspace Data Store contains Drive data
 *
 *  Value: "GOOGLE_DRIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleDrive;
/**
 *  Workspace Data Store contains Groups data
 *
 *  Value: "GOOGLE_GROUPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleGroups;
/**
 *  Workspace Data Store contains Keep data
 *
 *  Value: "GOOGLE_KEEP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleKeep;
/**
 *  Workspace Data Store contains Mail data
 *
 *  Value: "GOOGLE_MAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleMail;
/**
 *  Workspace Data Store contains People data
 *
 *  Value: "GOOGLE_PEOPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GooglePeople;
/**
 *  Workspace Data Store contains Sites data
 *
 *  Value: "GOOGLE_SITES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleSites;
/**
 *  Defaults to an unspecified Workspace type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer.answerSkippedReasons

/**
 *  The adversarial query ignored case.
 *
 *  Value: "ADVERSARIAL_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_AdversarialQueryIgnored;
/**
 *  Default value. The answer skipped reason is not specified.
 *
 *  Value: "ANSWER_SKIPPED_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_AnswerSkippedReasonUnspecified;
/**
 *  The customer policy violation case. Google skips the summary if there is a
 *  customer policy violation detected. The policy is defined by the customer.
 *
 *  Value: "CUSTOMER_POLICY_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_CustomerPolicyViolation;
/**
 *  The jail-breaking query ignored case. For example, "Reply in the tone of a
 *  competing company's CEO". Google skips the answer if the query is classified
 *  as a jail-breaking query.
 *
 *  Value: "JAIL_BREAKING_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_JailBreakingQueryIgnored;
/**
 *  The low-grounded answer case. Google skips the answer if a well grounded
 *  answer was unable to be generated.
 *
 *  Value: "LOW_GROUNDED_ANSWER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_LowGroundedAnswer;
/**
 *  The non-answer seeking query ignored case Google skips the answer if the
 *  query is chit chat.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_NonAnswerSeekingQueryIgnored;
/**
 *  The non-answer seeking query ignored case. Google skips the answer if the
 *  query doesn't have clear intent.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY_IGNORED_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_NonAnswerSeekingQueryIgnoredV2;
/**
 *  The no relevant content case. Google skips the answer if there is no
 *  relevant content in the retrieved search results.
 *
 *  Value: "NO_RELEVANT_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_NoRelevantContent;
/**
 *  The out-of-domain query ignored case. Google skips the answer if there are
 *  no high-relevance search results.
 *
 *  Value: "OUT_OF_DOMAIN_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_OutOfDomainQueryIgnored;
/**
 *  The potential policy violation case. Google skips the answer if there is a
 *  potential policy violation detected. This includes content that may be
 *  violent or toxic.
 *
 *  Value: "POTENTIAL_POLICY_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_AnswerSkippedReasons_PotentialPolicyViolation;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer.state

/**
 *  Answer generation currently failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_Failed;
/**
 *  Answer generation is currently in progress.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_InProgress;
/**
 *  Unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_StateUnspecified;
/**
 *  Answer generation is currently in progress.
 *
 *  Value: "STREAMING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_Streaming;
/**
 *  Answer generation has succeeded.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec.filteringLevel

/**
 *  Filter answers based on a high threshold.
 *
 *  Value: "FILTERING_LEVEL_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec_FilteringLevel_FilteringLevelHigh;
/**
 *  Filter answers based on a low threshold.
 *
 *  Value: "FILTERING_LEVEL_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec_FilteringLevel_FilteringLevelLow;
/**
 *  Default is no filter
 *
 *  Value: "FILTERING_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec_FilteringLevel_FilteringLevelUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec.types

/**
 *  Adversarial query classification type.
 *
 *  Value: "ADVERSARIAL_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec_Types_AdversarialQuery;
/**
 *  Jail-breaking query classification type.
 *
 *  Value: "JAIL_BREAKING_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec_Types_JailBreakingQuery;
/**
 *  Non-answer-seeking query classification type, for chit chat.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec_Types_NonAnswerSeekingQuery;
/**
 *  Non-answer-seeking query classification type, for no clear intent.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec_Types_NonAnswerSeekingQueryV2;
/**
 *  Unspecified query classification type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec_Types_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec.modelType

/**
 *  Large query rephraser model. Gemini 1.0 Pro model.
 *
 *  Value: "LARGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec_ModelType_Large;
/**
 *  Unspecified model type.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec_ModelType_ModelTypeUnspecified;
/**
 *  Small query rephraser model. Gemini 1.0 XS model.
 *
 *  Value: "SMALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec_ModelType_Small;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting.category

/**
 *  The harm category is civic integrity.
 *
 *  Value: "HARM_CATEGORY_CIVIC_INTEGRITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryCivicIntegrity;
/**
 *  The harm category is dangerous content.
 *
 *  Value: "HARM_CATEGORY_DANGEROUS_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryDangerousContent;
/**
 *  The harm category is harassment.
 *
 *  Value: "HARM_CATEGORY_HARASSMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryHarassment;
/**
 *  The harm category is hate speech.
 *
 *  Value: "HARM_CATEGORY_HATE_SPEECH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryHateSpeech;
/**
 *  The harm category is sexually explicit content.
 *
 *  Value: "HARM_CATEGORY_SEXUALLY_EXPLICIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategorySexuallyExplicit;
/**
 *  The harm category is unspecified.
 *
 *  Value: "HARM_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting.threshold

/**
 *  Block low threshold and above (i.e. block more).
 *
 *  Value: "BLOCK_LOW_AND_ABOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockLowAndAbove;
/**
 *  Block medium threshold and above.
 *
 *  Value: "BLOCK_MEDIUM_AND_ABOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockMediumAndAbove;
/**
 *  Block none.
 *
 *  Value: "BLOCK_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockNone;
/**
 *  Block only high threshold (i.e. block less).
 *
 *  Value: "BLOCK_ONLY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockOnlyHigh;
/**
 *  Unspecified harm block threshold.
 *
 *  Value: "HARM_BLOCK_THRESHOLD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_HarmBlockThresholdUnspecified;
/**
 *  Turn off the safety filter.
 *
 *  Value: "OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_Off;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams.searchResultMode

/**
 *  Returns chunks in the search result. Only available if the
 *  DocumentProcessingConfig.chunking_config is specified.
 *
 *  Value: "CHUNKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams_SearchResultMode_Chunks;
/**
 *  Returns documents in the search result.
 *
 *  Value: "DOCUMENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams_SearchResultMode_Documents;
/**
 *  Default value.
 *
 *  Value: "SEARCH_RESULT_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams_SearchResultMode_SearchResultModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo.type

/**
 *  Adversarial query classification type.
 *
 *  Value: "ADVERSARIAL_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_AdversarialQuery;
/**
 *  Jail-breaking query classification type.
 *
 *  Value: "JAIL_BREAKING_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_JailBreakingQuery;
/**
 *  Non-answer-seeking query classification type, for chit chat.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQuery;
/**
 *  Non-answer-seeking query classification type, for no clear intent.
 *
 *  Value: "NON_ANSWER_SEEKING_QUERY_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQueryV2;
/**
 *  Unspecified query classification type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep.state

/**
 *  Step currently failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_Failed;
/**
 *  Step is currently in progress.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_InProgress;
/**
 *  Unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_StateUnspecified;
/**
 *  Step has succeeded.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata.state

/**
 *  The Document is indexed.
 *
 *  Value: "INDEXED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_Indexed;
/**
 *  The Document is not indexed.
 *
 *  Value: "NOT_IN_INDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_NotInIndex;
/**
 *  The Document is not indexed because its URI is not in the TargetSite.
 *
 *  Value: "NOT_IN_TARGET_SITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_NotInTargetSite;
/**
 *  Should never be set.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig.state

/**
 *  The CmekConfig can be used with DataStores.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Active;
/**
 *  The KMS key version is being rotated.
 *
 *  Value: "ACTIVE_ROTATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_ActiveRotating;
/**
 *  The CmekConfig is creating.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Creating;
/**
 *  The CmekConfig deletion process failed.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_DeleteFailed;
/**
 *  The CmekConfig is deleting.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Deleting;
/**
 *  The CmekConfig is unavailable, most likely due to the KMS Key being revoked.
 *
 *  Value: "KEY_ISSUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_KeyIssue;
/**
 *  The CmekConfig state is unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_StateUnspecified;
/**
 *  The CmekConfig is not usable, most likely due to some internal issue.
 *
 *  Value: "UNUSABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Unusable;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl.solutionType

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl.useCases

/**
 *  Browse use case. Expects the traffic has an empty query.
 *
 *  Value: "SEARCH_USE_CASE_BROWSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_UseCases_SearchUseCaseBrowse;
/**
 *  Search use case. Expects the traffic has a non-empty query.
 *
 *  Value: "SEARCH_USE_CASE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_UseCases_SearchUseCaseSearch;
/**
 *  Value used when unset. Will not occur in CSS.
 *
 *  Value: "SEARCH_USE_CASE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_UseCases_SearchUseCaseUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec.attributeType

/**
 *  Unspecified AttributeType.
 *
 *  Value: "ATTRIBUTE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_AttributeType_AttributeTypeUnspecified;
/**
 *  For the freshness use case the attribute value will be the duration between
 *  the current time and the date in the datetime field specified. The value
 *  must be formatted as an XSD `dayTimeDuration` value (a restricted subset of
 *  an ISO 8601 duration value). The pattern for this is: `nDnM]`. For example,
 *  `5D`, `3DT12H30M`, `T24H`.
 *
 *  Value: "FRESHNESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_AttributeType_Freshness;
/**
 *  The value of the numerical field will be used to dynamically update the
 *  boost amount. In this case, the attribute_value (the x value) of the control
 *  point will be the actual value of the numerical field for which the
 *  boost_amount is specified.
 *
 *  Value: "NUMERICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_AttributeType_Numerical;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec.interpolationType

/**
 *  Interpolation type is unspecified. In this case, it defaults to Linear.
 *
 *  Value: "INTERPOLATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_InterpolationType_InterpolationTypeUnspecified;
/**
 *  Piecewise linear interpolation will be applied.
 *
 *  Value: "LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_InterpolationType_Linear;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore.contentConfig

/**
 *  Default value.
 *
 *  Value: "CONTENT_CONFIG_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_ContentConfigUnspecified;
/**
 *  Only contains documents with Document.content.
 *
 *  Value: "CONTENT_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_ContentRequired;
/**
 *  The data store is used for workspace search. Details of workspace data store
 *  are specified in the WorkspaceConfig.
 *
 *  Value: "GOOGLE_WORKSPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_GoogleWorkspace;
/**
 *  Only contains documents without any Document.content.
 *
 *  Value: "NO_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_NoContent;
/**
 *  The data store is used for public website search.
 *
 *  Value: "PUBLIC_WEBSITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_PublicWebsite;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore.industryVertical

/**
 *  The generic vertical for documents that are not specific to any industry
 *  vertical.
 *
 *  Value: "GENERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_Generic;
/**
 *  The healthcare FHIR vertical.
 *
 *  Value: "HEALTHCARE_FHIR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_HealthcareFhir;
/**
 *  Value used when unset.
 *
 *  Value: "INDUSTRY_VERTICAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_IndustryVerticalUnspecified;
/**
 *  The media industry vertical.
 *
 *  Value: "MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_Media;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore.solutionTypes

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_SolutionTypes_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_SolutionTypes_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_SolutionTypes_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_SolutionTypes_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_SolutionTypes_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine.industryVertical

/**
 *  The generic vertical for documents that are not specific to any industry
 *  vertical.
 *
 *  Value: "GENERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_Generic;
/**
 *  The healthcare FHIR vertical.
 *
 *  Value: "HEALTHCARE_FHIR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_HealthcareFhir;
/**
 *  Value used when unset.
 *
 *  Value: "INDUSTRY_VERTICAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_IndustryVerticalUnspecified;
/**
 *  The media industry vertical.
 *
 *  Value: "MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_Media;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine.solutionType

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig.searchAddOns

/**
 *  Large language model add-on.
 *
 *  Value: "SEARCH_ADD_ON_LLM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchAddOns_SearchAddOnLlm;
/**
 *  Default value when the enum is unspecified. This is invalid to use.
 *
 *  Value: "SEARCH_ADD_ON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchAddOns_SearchAddOnUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig.searchTier

/**
 *  Enterprise tier.
 *
 *  Value: "SEARCH_TIER_ENTERPRISE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchTier_SearchTierEnterprise;
/**
 *  Standard tier.
 *
 *  Value: "SEARCH_TIER_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchTier_SearchTierStandard;
/**
 *  Default value when the enum is unspecified. This is invalid to use.
 *
 *  Value: "SEARCH_TIER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchTier_SearchTierUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation.state

/**
 *  The evaluation failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Failed;
/**
 *  The service is preparing to run the evaluation.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Pending;
/**
 *  The evaluation is in progress.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Running;
/**
 *  The evaluation is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_StateUnspecified;
/**
 *  The evaluation completed successfully.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig.mode

/**
 *  Natural Language Query Understanding is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig_Mode_Disabled;
/**
 *  Natural Language Query Understanding is enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig_Mode_Enabled;
/**
 *  Default value.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig_Mode_ModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse.state

/**
 *  The state is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse_State_Failed;
/**
 *  The state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse_State_StateUnspecified;
/**
 *  The state is successful.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms.state

/**
 *  The default value of the enum. This value is not actually used.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_StateUnspecified;
/**
 *  The project has given consent to the terms of service.
 *
 *  Value: "TERMS_ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_TermsAccepted;
/**
 *  The project has declined or revoked the agreement to terms of service.
 *
 *  Value: "TERMS_DECLINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_TermsDeclined;
/**
 *  The project is pending to review and accept the terms of service.
 *
 *  Value: "TERMS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_TermsPending;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse.state

/**
 *  The state is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse_State_Failed;
/**
 *  The state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse_State_StateUnspecified;
/**
 *  The state is successful.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest.rankingExpressionBackend

/**
 *  Bring your own embedding (BYOE), the default way to evaluate the ranking
 *  expression.
 *
 *  Value: "BYOE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RankingExpressionBackend_Byoe;
/**
 *  The expression is compiled into a Clearbox formula.
 *
 *  Value: "CLEARBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RankingExpressionBackend_Clearbox;
/**
 *  Default option for unspecified/unknown values.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RankingExpressionBackend_Unknown;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest.relevanceThreshold

/**
 *  High relevance threshold.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_High;
/**
 *  Low relevance threshold.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_Low;
/**
 *  Lowest relevance threshold.
 *
 *  Value: "LOWEST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_Lowest;
/**
 *  Medium relevance threshold.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_Medium;
/**
 *  Default value. In this case, server behavior defaults to Google defined
 *  threshold.
 *
 *  Value: "RELEVANCE_THRESHOLD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_RelevanceThresholdUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec.attributeType

/**
 *  Unspecified AttributeType.
 *
 *  Value: "ATTRIBUTE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_AttributeTypeUnspecified;
/**
 *  For the freshness use case the attribute value will be the duration between
 *  the current time and the date in the datetime field specified. The value
 *  must be formatted as an XSD `dayTimeDuration` value (a restricted subset of
 *  an ISO 8601 duration value). The pattern for this is: `nDnM]`. For example,
 *  `5D`, `3DT12H30M`, `T24H`.
 *
 *  Value: "FRESHNESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Freshness;
/**
 *  The value of the numerical field will be used to dynamically update the
 *  boost amount. In this case, the attribute_value (the x value) of the control
 *  point will be the actual value of the numerical field for which the
 *  boost_amount is specified.
 *
 *  Value: "NUMERICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Numerical;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec.interpolationType

/**
 *  Interpolation type is unspecified. In this case, it defaults to Linear.
 *
 *  Value: "INTERPOLATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_InterpolationTypeUnspecified;
/**
 *  Piecewise linear interpolation will be applied.
 *
 *  Value: "LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_Linear;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec.searchResultMode

/**
 *  Returns chunks in the search result. Only available if the
 *  DocumentProcessingConfig.chunking_config is specified.
 *
 *  Value: "CHUNKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec_SearchResultMode_Chunks;
/**
 *  Returns documents in the search result.
 *
 *  Value: "DOCUMENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec_SearchResultMode_Documents;
/**
 *  Default value.
 *
 *  Value: "SEARCH_RESULT_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec_SearchResultMode_SearchResultModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec.filterExtractionCondition

/**
 *  Server behavior defaults to `DISABLED`.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_ConditionUnspecified;
/**
 *  Disables NL filter extraction.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Disabled;
/**
 *  Enables NL filter extraction.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Enabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec.mode

/**
 *  Personalization is enabled if data quality requirements are met.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec_Mode_Auto;
/**
 *  Disable personalization.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec_Mode_Disabled;
/**
 *  Default value. In this case, server behavior defaults to Mode.AUTO.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec_Mode_ModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec.condition

/**
 *  Automatic query expansion built by the Search API.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec_Condition_Auto;
/**
 *  Unspecified query expansion condition. In this case, server behavior
 *  defaults to Condition.DISABLED.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec_Condition_ConditionUnspecified;
/**
 *  Disabled query expansion. Only the exact search query is used, even if
 *  SearchResponse.total_size is zero.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec_Condition_Disabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec.condition

/**
 *  Automatic switching between search-as-you-type and standard search modes,
 *  ideal for single-API implementations (e.g., debouncing).
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_Auto;
/**
 *  Server behavior defaults to Condition.DISABLED.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_ConditionUnspecified;
/**
 *  Disables Search As You Type.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_Disabled;
/**
 *  Enables Search As You Type.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_Enabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec.mode

/**
 *  Automatic spell correction built by the Search API. Search will be based on
 *  the corrected query if found.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec_Mode_Auto;
/**
 *  Unspecified spell correction mode. In this case, server behavior defaults to
 *  Mode.AUTO.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec_Mode_ModeUnspecified;
/**
 *  Search API tries to find a spelling suggestion. If a suggestion is found, it
 *  is put in the SearchResponse.corrected_query. The spelling suggestion won't
 *  be used as the search query.
 *
 *  Value: "SUGGESTION_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec_Mode_SuggestionOnly;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse.state

/**
 *  The state is failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse_State_Failed;
/**
 *  The state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse_State_StateUnspecified;
/**
 *  The state is successful.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo.siteVerificationState

/**
 *  Site exempt from verification, e.g., a public website that opens to all.
 *
 *  Value: "EXEMPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_Exempted;
/**
 *  Defaults to VERIFIED.
 *
 *  Value: "SITE_VERIFICATION_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_SiteVerificationStateUnspecified;
/**
 *  Site ownership pending verification or verification failed.
 *
 *  Value: "UNVERIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_Unverified;
/**
 *  Site ownership verified.
 *
 *  Value: "VERIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_Verified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite.indexingStatus

/**
 *  The previously indexed target site has been marked to be deleted. This is a
 *  transitioning state which will resulted in either: 1. target site deleted if
 *  unindexing is successful; 2. state reverts to SUCCEEDED if the unindexing
 *  fails.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Deleting;
/**
 *  The target site fails to be indexed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Failed;
/**
 *  Defaults to SUCCEEDED.
 *
 *  Value: "INDEXING_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_IndexingStatusUnspecified;
/**
 *  The target site is in the update queue and will be picked up by indexing
 *  pipeline.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Pending;
/**
 *  The target site has been indexed.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite.type

/**
 *  Exclude the target site.
 *
 *  Value: "EXCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_Type_Exclude;
/**
 *  Include the target site.
 *
 *  Value: "INCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_Type_Include;
/**
 *  This value is unused. In this case, server behavior defaults to
 *  Type.INCLUDE.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig.type

/**
 *  Workspace Data Store contains Calendar data
 *
 *  Value: "GOOGLE_CALENDAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleCalendar;
/**
 *  Workspace Data Store contains Chat data
 *
 *  Value: "GOOGLE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleChat;
/**
 *  Workspace Data Store contains Drive data
 *
 *  Value: "GOOGLE_DRIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleDrive;
/**
 *  Workspace Data Store contains Groups data
 *
 *  Value: "GOOGLE_GROUPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleGroups;
/**
 *  Workspace Data Store contains Keep data
 *
 *  Value: "GOOGLE_KEEP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleKeep;
/**
 *  Workspace Data Store contains Mail data
 *
 *  Value: "GOOGLE_MAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleMail;
/**
 *  Workspace Data Store contains People data
 *
 *  Value: "GOOGLE_PEOPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GooglePeople;
/**
 *  Workspace Data Store contains Sites data
 *
 *  Value: "GOOGLE_SITES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleSites;
/**
 *  Defaults to an unspecified Workspace type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn.encoding

/**
 *  Binary encoding.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Encoding_Binary;
/**
 *  The encoding is unspecified.
 *
 *  Value: "ENCODING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Encoding_EncodingUnspecified;
/**
 *  Text encoding.
 *
 *  Value: "TEXT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Encoding_Text;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn.type

/**
 *  BigDecimal type.
 *
 *  Value: "BIG_NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_BigNumeric;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Boolean;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Integer;
/**
 *  JSON type.
 *
 *  Value: "JSON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Json;
/**
 *  Numerical type.
 *
 *  Value: "NUMBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Number;
/**
 *  String type.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_String;
/**
 *  The type is unspecified.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_TypeUnspecified;
/**
 *  Variable length integer type.
 *
 *  Value: "VAR_INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_VarInteger;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily.encoding

/**
 *  Binary encoding.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Encoding_Binary;
/**
 *  The encoding is unspecified.
 *
 *  Value: "ENCODING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Encoding_EncodingUnspecified;
/**
 *  Text encoding.
 *
 *  Value: "TEXT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Encoding_Text;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily.type

/**
 *  BigDecimal type.
 *
 *  Value: "BIG_NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_BigNumeric;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Boolean;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Integer;
/**
 *  JSON type.
 *
 *  Value: "JSON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Json;
/**
 *  Numerical type.
 *
 *  Value: "NUMBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Number;
/**
 *  String type.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_String;
/**
 *  The type is unspecified.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_TypeUnspecified;
/**
 *  Variable length integer type.
 *
 *  Value: "VAR_INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_VarInteger;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig.state

/**
 *  The CmekConfig can be used with DataStores.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Active;
/**
 *  The KMS key version is being rotated.
 *
 *  Value: "ACTIVE_ROTATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_ActiveRotating;
/**
 *  The CmekConfig is creating.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Creating;
/**
 *  The CmekConfig deletion process failed.
 *
 *  Value: "DELETE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_DeleteFailed;
/**
 *  The CmekConfig is deleting.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Deleting;
/**
 *  The CmekConfig is unavailable, most likely due to the KMS Key being revoked.
 *
 *  Value: "KEY_ISSUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_KeyIssue;
/**
 *  The CmekConfig state is unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_StateUnspecified;
/**
 *  The CmekConfig is not usable, most likely due to some internal issue.
 *
 *  Value: "UNUSABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Unusable;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control.solutionType

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control.useCases

/**
 *  Browse use case. Expects the traffic has an empty query.
 *
 *  Value: "SEARCH_USE_CASE_BROWSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_UseCases_SearchUseCaseBrowse;
/**
 *  Search use case. Expects the traffic has a non-empty query.
 *
 *  Value: "SEARCH_USE_CASE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_UseCases_SearchUseCaseSearch;
/**
 *  Value used when unset. Will not occur in CSS.
 *
 *  Value: "SEARCH_USE_CASE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_UseCases_SearchUseCaseUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec.attributeType

/**
 *  Unspecified AttributeType.
 *
 *  Value: "ATTRIBUTE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_AttributeType_AttributeTypeUnspecified;
/**
 *  For the freshness use case the attribute value will be the duration between
 *  the current time and the date in the datetime field specified. The value
 *  must be formatted as an XSD `dayTimeDuration` value (a restricted subset of
 *  an ISO 8601 duration value). The pattern for this is: `nDnM]`. For example,
 *  `5D`, `3DT12H30M`, `T24H`.
 *
 *  Value: "FRESHNESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_AttributeType_Freshness;
/**
 *  The value of the numerical field will be used to dynamically update the
 *  boost amount. In this case, the attribute_value (the x value) of the control
 *  point will be the actual value of the numerical field for which the
 *  boost_amount is specified.
 *
 *  Value: "NUMERICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_AttributeType_Numerical;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec.interpolationType

/**
 *  Interpolation type is unspecified. In this case, it defaults to Linear.
 *
 *  Value: "INTERPOLATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_InterpolationType_InterpolationTypeUnspecified;
/**
 *  Piecewise linear interpolation will be applied.
 *
 *  Value: "LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_InterpolationType_Linear;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation.state

/**
 *  Conversation has been completed.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation_State_Completed;
/**
 *  Conversation is currently open.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation_State_InProgress;
/**
 *  Unknown.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel.modelState

/**
 *  Input data validation failed. Model training didn't start.
 *
 *  Value: "INPUT_VALIDATION_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_InputValidationFailed;
/**
 *  Default value.
 *
 *  Value: "MODEL_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_ModelStateUnspecified;
/**
 *  The model training finished successfully but metrics did not improve.
 *
 *  Value: "NO_IMPROVEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_NoImprovement;
/**
 *  The model is ready for serving.
 *
 *  Value: "READY_FOR_SERVING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_ReadyForServing;
/**
 *  The model is currently training.
 *
 *  Value: "TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_Training;
/**
 *  The model has successfully completed training.
 *
 *  Value: "TRAINING_COMPLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_TrainingComplete;
/**
 *  The model training failed.
 *
 *  Value: "TRAINING_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_TrainingFailed;
/**
 *  The model is in a paused training state.
 *
 *  Value: "TRAINING_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_TrainingPaused;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore.contentConfig

/**
 *  Default value.
 *
 *  Value: "CONTENT_CONFIG_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_ContentConfigUnspecified;
/**
 *  Only contains documents with Document.content.
 *
 *  Value: "CONTENT_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_ContentRequired;
/**
 *  The data store is used for workspace search. Details of workspace data store
 *  are specified in the WorkspaceConfig.
 *
 *  Value: "GOOGLE_WORKSPACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_GoogleWorkspace;
/**
 *  Only contains documents without any Document.content.
 *
 *  Value: "NO_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_NoContent;
/**
 *  The data store is used for public website search.
 *
 *  Value: "PUBLIC_WEBSITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_PublicWebsite;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore.industryVertical

/**
 *  The generic vertical for documents that are not specific to any industry
 *  vertical.
 *
 *  Value: "GENERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_Generic;
/**
 *  The healthcare FHIR vertical.
 *
 *  Value: "HEALTHCARE_FHIR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_HealthcareFhir;
/**
 *  Value used when unset.
 *
 *  Value: "INDUSTRY_VERTICAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_IndustryVerticalUnspecified;
/**
 *  The media industry vertical.
 *
 *  Value: "MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_Media;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore.solutionTypes

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_SolutionTypes_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_SolutionTypes_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_SolutionTypes_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_SolutionTypes_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_SolutionTypes_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine.industryVertical

/**
 *  The generic vertical for documents that are not specific to any industry
 *  vertical.
 *
 *  Value: "GENERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_Generic;
/**
 *  The healthcare FHIR vertical.
 *
 *  Value: "HEALTHCARE_FHIR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_HealthcareFhir;
/**
 *  Value used when unset.
 *
 *  Value: "INDUSTRY_VERTICAL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_IndustryVerticalUnspecified;
/**
 *  The media industry vertical.
 *
 *  Value: "MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_Media;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine.solutionType

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig.searchAddOns

/**
 *  Large language model add-on.
 *
 *  Value: "SEARCH_ADD_ON_LLM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchAddOns_SearchAddOnLlm;
/**
 *  Default value when the enum is unspecified. This is invalid to use.
 *
 *  Value: "SEARCH_ADD_ON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchAddOns_SearchAddOnUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig.searchTier

/**
 *  Enterprise tier.
 *
 *  Value: "SEARCH_TIER_ENTERPRISE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchTier_SearchTierEnterprise;
/**
 *  Standard tier.
 *
 *  Value: "SEARCH_TIER_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchTier_SearchTierStandard;
/**
 *  Default value when the enum is unspecified. This is invalid to use.
 *
 *  Value: "SEARCH_TIER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchTier_SearchTierUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest.reconciliationMode

/**
 *  Calculates diff and replaces the entire document dataset. Existing documents
 *  may be deleted if they are not present in the source location.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest_ReconciliationMode_Full;
/**
 *  Inserts new documents or updates existing documents.
 *
 *  Value: "INCREMENTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest_ReconciliationMode_Incremental;
/**
 *  Defaults to `INCREMENTAL`.
 *
 *  Value: "RECONCILIATION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest_ReconciliationMode_ReconciliationModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms.state

/**
 *  The default value of the enum. This value is not actually used.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_StateUnspecified;
/**
 *  The project has given consent to the terms of service.
 *
 *  Value: "TERMS_ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_TermsAccepted;
/**
 *  The project has declined or revoked the agreement to terms of service.
 *
 *  Value: "TERMS_DECLINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_TermsDeclined;
/**
 *  The project is pending to review and accept the terms of service.
 *
 *  Value: "TERMS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_TermsPending;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating.category

/**
 *  The harm category is civic integrity.
 *
 *  Value: "HARM_CATEGORY_CIVIC_INTEGRITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryCivicIntegrity;
/**
 *  The harm category is dangerous content.
 *
 *  Value: "HARM_CATEGORY_DANGEROUS_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryDangerousContent;
/**
 *  The harm category is harassment.
 *
 *  Value: "HARM_CATEGORY_HARASSMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryHarassment;
/**
 *  The harm category is hate speech.
 *
 *  Value: "HARM_CATEGORY_HATE_SPEECH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryHateSpeech;
/**
 *  The harm category is sexually explicit content.
 *
 *  Value: "HARM_CATEGORY_SEXUALLY_EXPLICIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategorySexuallyExplicit;
/**
 *  The harm category is unspecified.
 *
 *  Value: "HARM_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating.probability

/**
 *  Harm probability unspecified.
 *
 *  Value: "HARM_PROBABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_HarmProbabilityUnspecified;
/**
 *  High level of harm.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_High;
/**
 *  Low level of harm.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_Low;
/**
 *  Medium level of harm.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_Medium;
/**
 *  Negligible level of harm.
 *
 *  Value: "NEGLIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_Negligible;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating.severity

/**
 *  High level of harm severity.
 *
 *  Value: "HARM_SEVERITY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityHigh;
/**
 *  Low level of harm severity.
 *
 *  Value: "HARM_SEVERITY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityLow;
/**
 *  Medium level of harm severity.
 *
 *  Value: "HARM_SEVERITY_MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityMedium;
/**
 *  Negligible level of harm severity.
 *
 *  Value: "HARM_SEVERITY_NEGLIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityNegligible;
/**
 *  Harm severity unspecified.
 *
 *  Value: "HARM_SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest.relevanceThreshold

/**
 *  High relevance threshold.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_High;
/**
 *  Low relevance threshold.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_Low;
/**
 *  Lowest relevance threshold.
 *
 *  Value: "LOWEST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_Lowest;
/**
 *  Medium relevance threshold.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_Medium;
/**
 *  Default value. In this case, server behavior defaults to Google defined
 *  threshold.
 *
 *  Value: "RELEVANCE_THRESHOLD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_RelevanceThresholdUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec.attributeType

/**
 *  Unspecified AttributeType.
 *
 *  Value: "ATTRIBUTE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_AttributeTypeUnspecified;
/**
 *  For the freshness use case the attribute value will be the duration between
 *  the current time and the date in the datetime field specified. The value
 *  must be formatted as an XSD `dayTimeDuration` value (a restricted subset of
 *  an ISO 8601 duration value). The pattern for this is: `nDnM]`. For example,
 *  `5D`, `3DT12H30M`, `T24H`.
 *
 *  Value: "FRESHNESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Freshness;
/**
 *  The value of the numerical field will be used to dynamically update the
 *  boost amount. In this case, the attribute_value (the x value) of the control
 *  point will be the actual value of the numerical field for which the
 *  boost_amount is specified.
 *
 *  Value: "NUMERICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Numerical;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec.interpolationType

/**
 *  Interpolation type is unspecified. In this case, it defaults to Linear.
 *
 *  Value: "INTERPOLATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_InterpolationTypeUnspecified;
/**
 *  Piecewise linear interpolation will be applied.
 *
 *  Value: "LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_Linear;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec.searchResultMode

/**
 *  Returns chunks in the search result. Only available if the
 *  DocumentProcessingConfig.chunking_config is specified.
 *
 *  Value: "CHUNKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec_SearchResultMode_Chunks;
/**
 *  Returns documents in the search result.
 *
 *  Value: "DOCUMENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec_SearchResultMode_Documents;
/**
 *  Default value.
 *
 *  Value: "SEARCH_RESULT_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec_SearchResultMode_SearchResultModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec.condition

/**
 *  Automatic query expansion built by the Search API.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec_Condition_Auto;
/**
 *  Unspecified query expansion condition. In this case, server behavior
 *  defaults to Condition.DISABLED.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec_Condition_ConditionUnspecified;
/**
 *  Disabled query expansion. Only the exact search query is used, even if
 *  SearchResponse.total_size is zero.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec_Condition_Disabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec.condition

/**
 *  Automatic switching between search-as-you-type and standard search modes,
 *  ideal for single-API implementations (e.g., debouncing).
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_Auto;
/**
 *  Server behavior defaults to Condition.DISABLED.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_ConditionUnspecified;
/**
 *  Disables Search As You Type.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_Disabled;
/**
 *  Enables Search As You Type.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_Enabled;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec.mode

/**
 *  Automatic spell correction built by the Search API. Search will be based on
 *  the corrected query if found.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec_Mode_Auto;
/**
 *  Unspecified spell correction mode. In this case, server behavior defaults to
 *  Mode.AUTO.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec_Mode_ModeUnspecified;
/**
 *  Search API tries to find a spelling suggestion. If a suggestion is found, it
 *  is put in the SearchResponse.corrected_query. The spelling suggestion won't
 *  be used as the search query.
 *
 *  Value: "SUGGESTION_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec_Mode_SuggestionOnly;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary.summarySkippedReasons

/**
 *  The adversarial query ignored case. Only used when
 *  SummarySpec.ignore_adversarial_query is set to `true`.
 *
 *  Value: "ADVERSARIAL_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_AdversarialQueryIgnored;
/**
 *  The customer policy violation case. Google skips the summary if there is a
 *  customer policy violation detected. The policy is defined by the customer.
 *
 *  Value: "CUSTOMER_POLICY_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_CustomerPolicyViolation;
/**
 *  The jail-breaking query ignored case. For example, "Reply in the tone of a
 *  competing company's CEO". Only used when
 *  [SearchRequest.ContentSearchSpec.SummarySpec.ignore_jail_breaking_query] is
 *  set to `true`.
 *
 *  Value: "JAIL_BREAKING_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_JailBreakingQueryIgnored;
/**
 *  The LLM addon not enabled case. Google skips the summary if the LLM addon is
 *  not enabled.
 *
 *  Value: "LLM_ADDON_NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_LlmAddonNotEnabled;
/**
 *  The non-summary seeking query ignored case. Google skips the summary if the
 *  query is chit chat. Only used when
 *  SummarySpec.ignore_non_summary_seeking_query is set to `true`.
 *
 *  Value: "NON_SUMMARY_SEEKING_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_NonSummarySeekingQueryIgnored;
/**
 *  The non-answer seeking query ignored case. Google skips the summary if the
 *  query doesn't have clear intent. Only used when
 *  [SearchRequest.ContentSearchSpec.SummarySpec.ignore_non_answer_seeking_query]
 *  is set to `true`.
 *
 *  Value: "NON_SUMMARY_SEEKING_QUERY_IGNORED_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_NonSummarySeekingQueryIgnoredV2;
/**
 *  The no relevant content case. Google skips the summary if there is no
 *  relevant content in the retrieved search results.
 *
 *  Value: "NO_RELEVANT_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_NoRelevantContent;
/**
 *  The out-of-domain query ignored case. Google skips the summary if there are
 *  no high-relevance search results. For example, the data store contains facts
 *  about company A but the user query is asking questions about company B.
 *
 *  Value: "OUT_OF_DOMAIN_QUERY_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_OutOfDomainQueryIgnored;
/**
 *  The potential policy violation case. Google skips the summary if there is a
 *  potential policy violation detected. This includes content that may be
 *  violent or toxic.
 *
 *  Value: "POTENTIAL_POLICY_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_PotentialPolicyViolation;
/**
 *  Default value. The summary skipped reason is not specified.
 *
 *  Value: "SUMMARY_SKIPPED_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_SummarySkippedReasonUnspecified;
/**
 *  The time out case. Google skips the summary if the time out.
 *
 *  Value: "TIME_OUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary_SummarySkippedReasons_TimeOut;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig.solutionType

/**
 *  Used for use cases related to the Generative AI agent.
 *
 *  Value: "SOLUTION_TYPE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeChat;
/**
 *  Used for use cases related to the Generative Chat agent. It's used for
 *  Generative chat engine only, the associated data stores must enrolled with
 *  `SOLUTION_TYPE_CHAT` solution.
 *
 *  Value: "SOLUTION_TYPE_GENERATIVE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeGenerativeChat;
/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeRecommendation;
/**
 *  Used for Discovery Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session.state

/**
 *  The session is currently open.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session_State_InProgress;
/**
 *  State is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo.siteVerificationState

/**
 *  Site exempt from verification, e.g., a public website that opens to all.
 *
 *  Value: "EXEMPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_Exempted;
/**
 *  Defaults to VERIFIED.
 *
 *  Value: "SITE_VERIFICATION_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_SiteVerificationStateUnspecified;
/**
 *  Site ownership pending verification or verification failed.
 *
 *  Value: "UNVERIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_Unverified;
/**
 *  Site ownership verified.
 *
 *  Value: "VERIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_Verified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry.matchOperator

/**
 *  If the suggestion contains the block_phrase, then block it.
 *
 *  Value: "CONTAINS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry_MatchOperator_Contains;
/**
 *  If the suggestion is an exact match to the block_phrase, then block it.
 *
 *  Value: "EXACT_MATCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry_MatchOperator_ExactMatch;
/**
 *  Default value. Should not be used
 *
 *  Value: "MATCH_OPERATOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry_MatchOperator_MatchOperatorUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite.indexingStatus

/**
 *  The previously indexed target site has been marked to be deleted. This is a
 *  transitioning state which will resulted in either: 1. target site deleted if
 *  unindexing is successful; 2. state reverts to SUCCEEDED if the unindexing
 *  fails.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Deleting;
/**
 *  The target site fails to be indexed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Failed;
/**
 *  Defaults to SUCCEEDED.
 *
 *  Value: "INDEXING_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_IndexingStatusUnspecified;
/**
 *  The target site is in the update queue and will be picked up by indexing
 *  pipeline.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Pending;
/**
 *  The target site has been indexed.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite.type

/**
 *  Exclude the target site.
 *
 *  Value: "EXCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_Type_Exclude;
/**
 *  Include the target site.
 *
 *  Value: "INCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_Type_Include;
/**
 *  This value is unused. In this case, server behavior defaults to
 *  Type.INCLUDE.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig.type

/**
 *  Workspace Data Store contains Calendar data
 *
 *  Value: "GOOGLE_CALENDAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleCalendar;
/**
 *  Workspace Data Store contains Chat data
 *
 *  Value: "GOOGLE_CHAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleChat;
/**
 *  Workspace Data Store contains Drive data
 *
 *  Value: "GOOGLE_DRIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleDrive;
/**
 *  Workspace Data Store contains Groups data
 *
 *  Value: "GOOGLE_GROUPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleGroups;
/**
 *  Workspace Data Store contains Keep data
 *
 *  Value: "GOOGLE_KEEP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleKeep;
/**
 *  Workspace Data Store contains Mail data
 *
 *  Value: "GOOGLE_MAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleMail;
/**
 *  Workspace Data Store contains People data
 *
 *  Value: "GOOGLE_PEOPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GooglePeople;
/**
 *  Workspace Data Store contains Sites data
 *
 *  Value: "GOOGLE_SITES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleSites;
/**
 *  Defaults to an unspecified Workspace type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries.metricKind

/**
 *  A value accumulated over a time interval. Cumulative measurements in a time
 *  series should have the same start time and increasing end times, until an
 *  event resets the cumulative value to zero and sets a new start time for the
 *  following points.
 *
 *  Value: "CUMULATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_Cumulative;
/**
 *  The change in a value during a time interval.
 *
 *  Value: "DELTA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_Delta;
/**
 *  An instantaneous measurement of a value.
 *
 *  Value: "GAUGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_Gauge;
/**
 *  Do not use this default value.
 *
 *  Value: "METRIC_KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_MetricKindUnspecified;

// ----------------------------------------------------------------------------
// GTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries.valueType

/**
 *  The value is a boolean. This value type can be used only if the metric kind
 *  is `GAUGE`.
 *
 *  Value: "BOOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Bool;
/**
 *  The value is a `Distribution`.
 *
 *  Value: "DISTRIBUTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Distribution;
/**
 *  The value is a double precision floating point number.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Double;
/**
 *  The value is a signed 64-bit integer.
 *
 *  Value: "INT64"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Int64;
/**
 *  The value is money.
 *
 *  Value: "MONEY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Money;
/**
 *  The value is a text string. This value type can be used only if the metric
 *  kind is `GAUGE`.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_String;
/**
 *  Do not use this default value.
 *
 *  Value: "VALUE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_ValueTypeUnspecified;

/**
 *  `Distribution` contains summary statistics for a population of values. It
 *  optionally contains a histogram representing the distribution of those
 *  values across a set of buckets. The summary statistics are the count, mean,
 *  sum of the squared deviation from the mean, the minimum, and the maximum of
 *  the set of population of values. The histogram is based on a sequence of
 *  buckets and gives a count of values that fall into each bucket. The
 *  boundaries of the buckets are given either explicitly or by formulas for
 *  buckets of fixed or exponentially increasing widths. Although it is not
 *  forbidden, it is generally a bad idea to include non-finite values
 *  (infinities or NaNs) in the population of values, as this will render the
 *  `mean` and `sum_of_squared_deviation` fields meaningless.
 */
@interface GTLRDiscoveryEngine_GoogleApiDistribution : GTLRObject

/**
 *  The number of values in each bucket of the histogram, as described in
 *  `bucket_options`. If the distribution does not have a histogram, then omit
 *  this field. If there is a histogram, then the sum of the values in
 *  `bucket_counts` must equal the value in the `count` field of the
 *  distribution. If present, `bucket_counts` should contain N values, where N
 *  is the number of buckets specified in `bucket_options`. If you supply fewer
 *  than N values, the remaining values are assumed to be 0. The order of the
 *  values in `bucket_counts` follows the bucket numbering schemes described for
 *  the three bucket types. The first value must be the count for the underflow
 *  bucket (number 0). The next N-2 values are the counts for the finite buckets
 *  (number 1 through N-2). The N'th value in `bucket_counts` is the count for
 *  the overflow bucket (number N-1).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *bucketCounts;

/**
 *  Defines the histogram bucket boundaries. If the distribution does not
 *  contain a histogram, then omit this field.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiDistributionBucketOptions *bucketOptions;

/**
 *  The number of values in the population. Must be non-negative. This value
 *  must equal the sum of the values in `bucket_counts` if a histogram is
 *  provided.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** Must be in increasing order of `value` field. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleApiDistributionExemplar *> *exemplars;

/**
 *  The arithmetic mean of the values in the population. If `count` is zero then
 *  this field must be zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mean;

/**
 *  If specified, contains the range of the population values. The field must
 *  not be present if the `count` is zero.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiDistributionRange *range;

/**
 *  The sum of squared deviations from the mean of the values in the population.
 *  For values x_i this is: Sum[i=1..n]((x_i - mean)^2) Knuth, "The Art of
 *  Computer Programming", Vol. 2, page 232, 3rd edition describes Welford's
 *  method for accumulating this sum in one pass. If `count` is zero then this
 *  field must be zero.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sumOfSquaredDeviation;

@end


/**
 *  `BucketOptions` describes the bucket boundaries used to create a histogram
 *  for the distribution. The buckets can be in a linear sequence, an
 *  exponential sequence, or each bucket can be specified explicitly.
 *  `BucketOptions` does not include the number of values in each bucket. A
 *  bucket has an inclusive lower bound and exclusive upper bound for the values
 *  that are counted for that bucket. The upper bound of a bucket must be
 *  strictly greater than the lower bound. The sequence of N buckets for a
 *  distribution consists of an underflow bucket (number 0), zero or more finite
 *  buckets (number 1 through N - 2) and an overflow bucket (number N - 1). The
 *  buckets are contiguous: the lower bound of bucket i (i > 0) is the same as
 *  the upper bound of bucket i - 1. The buckets span the whole range of finite
 *  values: lower bound of the underflow bucket is -infinity and the upper bound
 *  of the overflow bucket is +infinity. The finite buckets are so-called
 *  because both bounds are finite.
 */
@interface GTLRDiscoveryEngine_GoogleApiDistributionBucketOptions : GTLRObject

/** The explicit buckets. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsExplicit *explicitBuckets;

/** The exponential buckets. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsExponential *exponentialBuckets;

/** The linear bucket. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsLinear *linearBuckets;

@end


/**
 *  Specifies a set of buckets with arbitrary widths. There are `size(bounds) +
 *  1` (= N) buckets. Bucket `i` has the following boundaries: Upper bound (0 <=
 *  i < N-1): bounds[i] Lower bound (1 <= i < N); bounds[i - 1] The `bounds`
 *  field must contain at least one element. If `bounds` has only one element,
 *  then there are no finite buckets, and that single element is the common
 *  boundary of the overflow and underflow buckets.
 */
@interface GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsExplicit : GTLRObject

/**
 *  The values must be monotonically increasing.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *bounds;

@end


/**
 *  Specifies an exponential sequence of buckets that have a width that is
 *  proportional to the value of the lower bound. Each bucket represents a
 *  constant relative uncertainty on a specific value in the bucket. There are
 *  `num_finite_buckets + 2` (= N) buckets. Bucket `i` has the following
 *  boundaries: Upper bound (0 <= i < N-1): scale * (growth_factor ^ i). Lower
 *  bound (1 <= i < N): scale * (growth_factor ^ (i - 1)).
 */
@interface GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsExponential : GTLRObject

/**
 *  Must be greater than 1.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *growthFactor;

/**
 *  Must be greater than 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numFiniteBuckets;

/**
 *  Must be greater than 0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scale;

@end


/**
 *  Specifies a linear sequence of buckets that all have the same width (except
 *  overflow and underflow). Each bucket represents a constant absolute
 *  uncertainty on the specific value in the bucket. There are
 *  `num_finite_buckets + 2` (= N) buckets. Bucket `i` has the following
 *  boundaries: Upper bound (0 <= i < N-1): offset + (width * i). Lower bound (1
 *  <= i < N): offset + (width * (i - 1)).
 */
@interface GTLRDiscoveryEngine_GoogleApiDistributionBucketOptionsLinear : GTLRObject

/**
 *  Must be greater than 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numFiniteBuckets;

/**
 *  Lower bound of the first bucket.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  Must be greater than 0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  Exemplars are example points that may be used to annotate aggregated
 *  distribution values. They are metadata that gives information about a
 *  particular value added to a Distribution bucket, such as a trace ID that was
 *  active when a value was added. They may contain further information, such as
 *  a example values and timestamps, origin, etc.
 */
@interface GTLRDiscoveryEngine_GoogleApiDistributionExemplar : GTLRObject

/**
 *  Contextual information about the example value. Examples are: Trace:
 *  type.googleapis.com/google.monitoring.v3.SpanContext Literal string:
 *  type.googleapis.com/google.protobuf.StringValue Labels dropped during
 *  aggregation: type.googleapis.com/google.monitoring.v3.DroppedLabels There
 *  may be only a single attachment of any given message type in a single
 *  exemplar, and this is enforced by the system.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleApiDistributionExemplar_Attachments_Item *> *attachments;

/** The observation (sampling) time of the above value. */
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

/**
 *  Value of the exemplar point. This value determines to which bucket the
 *  exemplar belongs.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  GTLRDiscoveryEngine_GoogleApiDistributionExemplar_Attachments_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleApiDistributionExemplar_Attachments_Item : GTLRObject
@end


/**
 *  The range of the population values.
 */
@interface GTLRDiscoveryEngine_GoogleApiDistributionRange : GTLRObject

/**
 *  The maximum of the population values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *max;

/**
 *  The minimum of the population values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *min;

@end


/**
 *  Message that represents an arbitrary HTTP body. It should only be used for
 *  payload formats that can't be represented as JSON, such as raw binary or an
 *  HTML page. This message can be used both in streaming and non-streaming API
 *  methods in the request as well as the response. It can be used as a
 *  top-level request field, which is convenient if one wants to extract
 *  parameters from either the URL or HTTP template into the request fields and
 *  also want access to the raw HTTP body. Example: message GetResourceRequest {
 *  // A unique request id. string request_id = 1; // The raw HTTP body is bound
 *  to this field. google.api.HttpBody http_body = 2; } service ResourceService
 *  { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
 *  UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
 *  Example with streaming methods: service CaldavService { rpc
 *  GetCalendar(stream google.api.HttpBody) returns (stream
 *  google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns
 *  (stream google.api.HttpBody); } Use of this type only changes how the
 *  request and response bodies are handled, all other features will continue to
 *  work unchanged.
 */
@interface GTLRDiscoveryEngine_GoogleApiHttpBody : GTLRObject

/**
 *  The HTTP Content-Type header value specifying the content type of the body.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 *  The HTTP request/response body as raw binary.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Application specific response metadata. Must be set in the first response
 *  for streaming APIs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item *> *extensions;

@end


/**
 *  GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleApiHttpBody_Extensions_Item : GTLRObject
@end


/**
 *  A specific metric, identified by specifying values for all of the labels of
 *  a `MetricDescriptor`.
 */
@interface GTLRDiscoveryEngine_GoogleApiMetric : GTLRObject

/**
 *  The set of label values that uniquely identify this metric. All labels
 *  listed in the `MetricDescriptor` must be assigned values.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiMetric_Labels *labels;

/**
 *  An existing metric type, see google.api.MetricDescriptor. For example,
 *  `custom.googleapis.com/invoice/paid/amount`.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The set of label values that uniquely identify this metric. All labels
 *  listed in the `MetricDescriptor` must be assigned values.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleApiMetric_Labels : GTLRObject
@end


/**
 *  An object representing a resource that can be used for monitoring, logging,
 *  billing, or other purposes. Examples include virtual machine instances,
 *  databases, and storage devices such as disks. The `type` field identifies a
 *  MonitoredResourceDescriptor object that describes the resource's schema.
 *  Information in the `labels` field identifies the actual resource and its
 *  attributes according to the schema. For example, a particular Compute Engine
 *  VM instance could be represented by the following object, because the
 *  MonitoredResourceDescriptor for `"gce_instance"` has labels `"project_id"`,
 *  `"instance_id"` and `"zone"`: { "type": "gce_instance", "labels": {
 *  "project_id": "my-project", "instance_id": "12345678901234", "zone":
 *  "us-central1-a" }}
 */
@interface GTLRDiscoveryEngine_GoogleApiMonitoredResource : GTLRObject

/**
 *  Required. Values for all of the labels listed in the associated monitored
 *  resource descriptor. For example, Compute Engine VM instances use the labels
 *  `"project_id"`, `"instance_id"`, and `"zone"`.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiMonitoredResource_Labels *labels;

/**
 *  Required. The monitored resource type. This field must match the `type`
 *  field of a MonitoredResourceDescriptor object. For example, the type of a
 *  Compute Engine VM instance is `gce_instance`. Some descriptors include the
 *  service name in the type; for example, the type of a Datastream stream is
 *  `datastream.googleapis.com/Stream`.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Required. Values for all of the labels listed in the associated monitored
 *  resource descriptor. For example, Compute Engine VM instances use the labels
 *  `"project_id"`, `"instance_id"`, and `"zone"`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleApiMonitoredResource_Labels : GTLRObject
@end


/**
 *  Auxiliary metadata for a MonitoredResource object. MonitoredResource objects
 *  contain the minimum set of information to uniquely identify a monitored
 *  resource instance. There is some other useful auxiliary metadata. Monitoring
 *  and Logging use an ingestion pipeline to extract metadata for cloud
 *  resources of all types, and store the metadata in this message.
 */
@interface GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata : GTLRObject

/**
 *  Output only. Values for predefined system metadata labels. System labels are
 *  a kind of metadata extracted by Google, including "machine_image", "vpc",
 *  "subnet_id", "security_group", "name", etc. System label values can be only
 *  strings, Boolean values, or a list of strings. For example: { "name":
 *  "my-test-instance", "security_group": ["a", "b", "c"], "spot_instance":
 *  false }
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata_SystemLabels *systemLabels;

/** Output only. A map of user-defined metadata labels. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata_UserLabels *userLabels;

@end


/**
 *  Output only. Values for predefined system metadata labels. System labels are
 *  a kind of metadata extracted by Google, including "machine_image", "vpc",
 *  "subnet_id", "security_group", "name", etc. System label values can be only
 *  strings, Boolean values, or a list of strings. For example: { "name":
 *  "my-test-instance", "security_group": ["a", "b", "c"], "spot_instance":
 *  false }
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata_SystemLabels : GTLRObject
@end


/**
 *  Output only. A map of user-defined metadata labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata_UserLabels : GTLRObject
@end


/**
 *  The error payload that is populated on LRO sync APIs, including the
 *  following: *
 *  `google.cloud.discoveryengine.v1main.DataConnectorService.SetUpDataConnector`
 *  *
 *  `google.cloud.discoveryengine.v1main.DataConnectorService.StartConnectorRun`
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext : GTLRObject

/**
 *  The full resource name of the Connector Run. Format: `projects/ *
 *  /locations/ * /collections/ * /dataConnector/connectorRuns/ *`. The
 *  `connector_run_id` is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *connectorRun;

/**
 *  The full resource name of the DataConnector. Format: `projects/ *
 *  /locations/ * /collections/ * /dataConnector`.
 */
@property(nonatomic, copy, nullable) NSString *dataConnector;

/** The time when the connector run ended. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The entity to sync for the connector run. */
@property(nonatomic, copy, nullable) NSString *entity;

/** The operation resource name of the LRO to sync the connector. */
@property(nonatomic, copy, nullable) NSString *operation;

/** The time when the connector run started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The type of sync run. Can be one of the following: * `FULL` * `INCREMENTAL`
 */
@property(nonatomic, copy, nullable) NSString *syncType;

@end


/**
 *  A description of the context in which an error occurred.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorContext : GTLRObject

/** The HTTP request which was processed when the error was triggered. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingHttpRequestContext *httpRequest;

/**
 *  The location in the source code where the decision was made to report the
 *  error, usually the place where it was logged.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingSourceLocation *reportLocation;

@end


/**
 *  An error log which is reported to the Error Reporting system.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorLog : GTLRObject

/** The error payload that is populated on LRO connector sync APIs. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingConnectorRunErrorContext *connectorRunPayload;

/** A description of the context in which the error occurred. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorContext *context;

/** The error payload that is populated on LRO import APIs. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingImportErrorContext *importPayload;

/** A message describing the error. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  The API request payload, represented as a protocol buffer. Most API request
 *  types are supported—for example: *
 *  `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest`
 *  *
 *  `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorLog_RequestPayload *requestPayload;

/**
 *  The API response payload, represented as a protocol buffer. This is used to
 *  log some "soft errors", where the response is valid but we consider there
 *  are some quality issues like unjoined events. The following API responses
 *  are supported, and no PII is included: *
 *  `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` *
 *  `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` *
 *  `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorLog_ResponsePayload *responsePayload;

/** The service context in which this error has occurred. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingServiceContext *serviceContext;

/** The RPC status associated with the error log. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *status;

@end


/**
 *  The API request payload, represented as a protocol buffer. Most API request
 *  types are supported—for example: *
 *  `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest`
 *  *
 *  `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorLog_RequestPayload : GTLRObject
@end


/**
 *  The API response payload, represented as a protocol buffer. This is used to
 *  log some "soft errors", where the response is valid but we consider there
 *  are some quality issues like unjoined events. The following API responses
 *  are supported, and no PII is included: *
 *  `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` *
 *  `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` *
 *  `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingErrorLog_ResponsePayload : GTLRObject
@end


/**
 *  HTTP request data that is related to a reported error.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingHttpRequestContext : GTLRObject

/**
 *  The HTTP response status code for the request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *responseStatusCode;

@end


/**
 *  The error payload that is populated on LRO import APIs, including the
 *  following: *
 *  `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments` *
 *  `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingImportErrorContext : GTLRObject

/** The detailed content which caused the error on importing a document. */
@property(nonatomic, copy, nullable) NSString *document;

/**
 *  Google Cloud Storage file path of the import source. Can be set for batch
 *  operation error.
 */
@property(nonatomic, copy, nullable) NSString *gcsPath;

/**
 *  Line number of the content in file. Should be empty for permission or batch
 *  operation error.
 */
@property(nonatomic, copy, nullable) NSString *lineNumber;

/** The operation resource name of the LRO. */
@property(nonatomic, copy, nullable) NSString *operation;

/** The detailed content which caused the error on importing a user event. */
@property(nonatomic, copy, nullable) NSString *userEvent;

@end


/**
 *  Describes a running service that sends errors.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingServiceContext : GTLRObject

/**
 *  An identifier of the service—for example, `discoveryengine.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Indicates a location in the source code of the service for which errors are
 *  reported.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineLoggingSourceLocation : GTLRObject

/**
 *  Human-readable name of a function or method—for example,
 *  `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`.
 */
@property(nonatomic, copy, nullable) NSString *functionName;

@end


/**
 *  Configuration data for advance site search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AdvancedSiteSearchConfig : GTLRObject

/**
 *  If set true, automatic refresh is disabled for the DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAutomaticRefresh;

/**
 *  If set true, initial indexing is disabled for the DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableInitialIndex;

@end


/**
 *  AlloyDB source import data from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AlloyDbSource : GTLRObject

/**
 *  Required. The AlloyDB cluster to copy the data from with a length limit of
 *  256 characters.
 */
@property(nonatomic, copy, nullable) NSString *clusterId;

/**
 *  Required. The AlloyDB database to copy the data from with a length limit of
 *  256 characters.
 */
@property(nonatomic, copy, nullable) NSString *databaseId;

/**
 *  Intermediate Cloud Storage directory used for the import with a length limit
 *  of 2,000 characters. Can be specified if one wants to have the AlloyDB
 *  export to a specific Cloud Storage directory. Ensure that the AlloyDB
 *  service account has the necessary Cloud Storage Admin permissions to access
 *  the specified Cloud Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/**
 *  Required. The AlloyDB location to copy the data from with a length limit of
 *  256 characters.
 */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  The project ID that contains the AlloyDB source. Has a length limit of 128
 *  characters. If not specified, inherits the project ID from the parent
 *  request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Required. The AlloyDB table to copy the data from with a length limit of 256
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Access Control Configuration.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAclConfig : GTLRObject

/** Identity provider config. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig *idpConfig;

/**
 *  Immutable. The full resource name of the acl configuration. Format:
 *  `projects/{project}/locations/{location}/aclConfig`. This field must be a
 *  UTF-8 encoded string with a length limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Informations to support actions on the connector.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaActionConfig : GTLRObject

/**
 *  Required. Params needed to support actions in the format of (Key, Value)
 *  pairs. Required parameters for sources that support OAUTH, i.e. `gmail`,
 *  `google_calendar`, `jira`, `workday`, `salesforce`, `confluence`: * Key:
 *  `client_id` * Value: type STRING. The client ID for the service provider to
 *  identify your application. * Key: `client_secret` * Value:type STRING. The
 *  client secret generated by the application's authorization server.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaActionConfig_ActionParams *actionParams;

/**
 *  Output only. The connector contains the necessary parameters and is
 *  configured to support actions.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isActionConfigured;

@end


/**
 *  Required. Params needed to support actions in the format of (Key, Value)
 *  pairs. Required parameters for sources that support OAUTH, i.e. `gmail`,
 *  `google_calendar`, `jira`, `workday`, `salesforce`, `confluence`: * Key:
 *  `client_id` * Value: type STRING. The client ID for the service provider to
 *  identify your application. * Key: `client_secret` * Value:type STRING. The
 *  client secret generated by the application's authorization server.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaActionConfig_ActionParams : GTLRObject
@end


/**
 *  Configuration data for advance site search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAdvancedSiteSearchConfig : GTLRObject

/**
 *  If set true, automatic refresh is disabled for the DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAutomaticRefresh;

/**
 *  If set true, initial indexing is disabled for the DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableInitialIndex;

@end


/**
 *  Defines an answer.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer : GTLRObject

/**
 *  Additional answer-skipped reasons. This provides the reason for ignored
 *  cases. If nothing is skipped, this field is not set.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *answerSkippedReasons;

/** The textual answer. */
@property(nonatomic, copy, nullable) NSString *answerText;

/** Citations. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerCitation *> *citations;

/** Output only. Answer completed timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *completeTime;

/** Output only. Answer creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  A score in the range of [0, 1] describing how grounded the answer is by the
 *  reference chunks.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groundingScore;

/** Optional. Grounding supports. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerGroundingSupport *> *groundingSupports;

/**
 *  Immutable. Fully qualified name
 *  `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/
 *  * /answers/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Query understanding information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo *queryUnderstandingInfo;

/** References. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReference *> *references;

/** Suggested related questions. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *relatedQuestions;

/** Optional. Safety ratings. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating *> *safetyRatings;

/**
 *  The state of the answer generation.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_Failed
 *        Answer generation currently failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_InProgress
 *        Answer generation is currently in progress. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_StateUnspecified
 *        Unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_Streaming
 *        Answer generation is currently in progress. (Value: "STREAMING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer_State_Succeeded
 *        Answer generation has succeeded. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Answer generation steps. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep *> *steps;

@end


/**
 *  Citation info for a segment.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerCitation : GTLRObject

/**
 *  End of the attributed segment, exclusive. Measured in bytes (UTF-8 unicode).
 *  If there are multi-byte characters,such as non-ASCII characters, the index
 *  measurement is longer than the string length.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/** Citation sources for the attributed segment. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerCitationSource *> *sources;

/**
 *  Index indicates the start of the segment, measured in bytes (UTF-8 unicode).
 *  If there are multi-byte characters,such as non-ASCII characters, the index
 *  measurement is longer than the string length.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

@end


/**
 *  Citation source.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerCitationSource : GTLRObject

/** ID of the citation source. */
@property(nonatomic, copy, nullable) NSString *referenceId;

@end


/**
 *  Grounding support for a claim in `answer_text`.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerGroundingSupport : GTLRObject

/**
 *  Required. End of the claim, exclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/**
 *  Indicates that this claim required grounding check. When the system decided
 *  this claim didn't require attribution/grounding check, this field is set to
 *  false. In that case, no grounding check was done for the claim and therefore
 *  `grounding_score`, `sources` is not returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groundingCheckRequired;

/**
 *  A score in the range of [0, 1] describing how grounded is a specific claim
 *  by the references. Higher value means that the claim is better supported by
 *  the reference chunks.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groundingScore;

/** Optional. Citation sources for the claim. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerCitationSource *> *sources;

/**
 *  Required. Index indicates the start of the claim, measured in bytes (UTF-8
 *  unicode).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

@end


/**
 *  Query understanding information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo : GTLRObject

/** Query classification information. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo *> *queryClassificationInfo;

@end


/**
 *  Query classification information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo : GTLRObject

/**
 *  Classification output.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *positive;

/**
 *  Query classification type.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_AdversarialQuery
 *        Adversarial query classification type. (Value: "ADVERSARIAL_QUERY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_JailBreakingQuery
 *        Jail-breaking query classification type. (Value:
 *        "JAIL_BREAKING_QUERY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQuery
 *        Non-answer-seeking query classification type, for chit chat. (Value:
 *        "NON_ANSWER_SEEKING_QUERY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQueryV2
 *        Non-answer-seeking query classification type, for no clear intent.
 *        (Value: "NON_ANSWER_SEEKING_QUERY_V2")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo_Type_TypeUnspecified
 *        Unspecified query classification type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Reference.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReference : GTLRObject

/** Chunk information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo *chunkInfo;

/** Structured document information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo *structuredDocumentInfo;

/** Unstructured document information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo *unstructuredDocumentInfo;

@end


/**
 *  Chunk information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo : GTLRObject

/** Chunk resource name. */
@property(nonatomic, copy, nullable) NSString *chunk;

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Document metadata. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata *documentMetadata;

/**
 *  The relevance of the chunk for a given query. Values range from 0.0
 *  (completely irrelevant) to 1.0 (completely relevant). This value is for
 *  informational purpose only. It may change for the same query and chunk at
 *  any time due to a model retraining or change in implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relevanceScore;

@end


/**
 *  Document metadata.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata : GTLRObject

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata_StructData *structData;

/** Title. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata_StructData : GTLRObject
@end


/**
 *  Structured search information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo : GTLRObject

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/** Structured search data. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo_StructData *structData;

/** Output only. The title of the document. */
@property(nonatomic, copy, nullable) NSString *title;

/** Output only. The URI of the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Structured search data.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo_StructData : GTLRObject
@end


/**
 *  Unstructured document information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo : GTLRObject

/** List of cited chunk contents derived from document content. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent *> *chunkContents;

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo_StructData *structData;

/** Title. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo_StructData : GTLRObject
@end


/**
 *  Chunk content.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent : GTLRObject

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

/**
 *  The relevance of the chunk for a given query. Values range from 0.0
 *  (completely irrelevant) to 1.0 (completely relevant). This value is for
 *  informational purpose only. It may change for the same query and chunk at
 *  any time due to a model retraining or change in implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relevanceScore;

@end


/**
 *  Step information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep : GTLRObject

/** Actions. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepAction *> *actions;

/**
 *  The description of the step.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The state of the step.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_Failed
 *        Step currently failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_InProgress
 *        Step is currently in progress. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_StateUnspecified
 *        Unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStep_State_Succeeded
 *        Step has succeeded. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** The thought of the step. */
@property(nonatomic, copy, nullable) NSString *thought;

@end


/**
 *  Action.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepAction : GTLRObject

/** Observation. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation *observation;

/** Search action. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction *searchAction;

@end


/**
 *  Observation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation : GTLRObject

/**
 *  Search results observed by the search action, it can be snippets info or
 *  chunk info, depending on the citation type set by the user.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult *> *searchResults;

@end


/**
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult : GTLRObject

/**
 *  If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on, populate
 *  chunk info.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo *> *chunkInfo;

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/**
 *  If citation_type is DOCUMENT_LEVEL_CITATION, populate document level
 *  snippets.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo *> *snippetInfo;

/**
 *  Data representation. The structured JSON data for the document. It's
 *  populated from the struct data from the Document, or the Chunk in search
 *  result.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult_StructData *structData;

/** Title. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Data representation. The structured JSON data for the document. It's
 *  populated from the struct data from the Document, or the Chunk in search
 *  result.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult_StructData : GTLRObject
@end


/**
 *  Chunk information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo : GTLRObject

/** Chunk resource name. */
@property(nonatomic, copy, nullable) NSString *chunk;

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The relevance of the chunk for a given query. Values range from 0.0
 *  (completely irrelevant) to 1.0 (completely relevant). This value is for
 *  informational purpose only. It may change for the same query and chunk at
 *  any time due to a model retraining or change in implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relevanceScore;

@end


/**
 *  Snippet information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo : GTLRObject

/** Snippet content. */
@property(nonatomic, copy, nullable) NSString *snippet;

/** Status of the snippet defined by the search team. */
@property(nonatomic, copy, nullable) NSString *snippetStatus;

@end


/**
 *  Search action.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction : GTLRObject

/** The query to search. */
@property(nonatomic, copy, nullable) NSString *query;

@end


/**
 *  The configuration for the BAP connector.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBAPConfig : GTLRObject

/**
 *  Required. The supported connector modes for the associated BAP connection.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supportedConnectorModes;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.BatchCreateTargetSites operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for SiteSearchEngineService.BatchCreateTargetSites method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse : GTLRObject

/** TargetSites created. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite *> *targetSites;

@end


/**
 *  Configurations used to enable CMEK data encryption with Cloud KMS keys.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig : GTLRObject

/**
 *  Output only. The default CmekConfig for the Customer.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDefault;

/**
 *  KMS key resource name which will be used to encrypt resources
 *  `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

/**
 *  KMS key version resource name which will be used to encrypt resources
 *  `/cryptoKeyVersions/{keyVersion}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyVersion;

/**
 *  Output only. The timestamp of the last key rotation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lastRotationTimestampMicros;

/**
 *  Required. The name of the CmekConfig of the form
 *  `projects/{project}/locations/{location}/cmekConfig` or
 *  `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Single-regional CMEKs that are required for some VAIS features.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSingleRegionKey *> *singleRegionKeys;

/**
 *  Output only. The states of the CmekConfig.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Active
 *        The CmekConfig can be used with DataStores. (Value: "ACTIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_ActiveRotating
 *        The KMS key version is being rotated. (Value: "ACTIVE_ROTATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Creating
 *        The CmekConfig is creating. (Value: "CREATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_DeleteFailed
 *        The CmekConfig deletion process failed. (Value: "DELETE_FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Deleting
 *        The CmekConfig is deleting. (Value: "DELETING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_KeyIssue
 *        The CmekConfig is unavailable, most likely due to the KMS Key being
 *        revoked. (Value: "KEY_ISSUE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_StateUnspecified
 *        The CmekConfig state is unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig_State_Unusable
 *        The CmekConfig is not usable, most likely due to some internal issue.
 *        (Value: "UNUSABLE")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Collection is a container for configuring resources and access to a set of
 *  DataStores.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCollection : GTLRObject

/** Output only. Timestamp the Collection was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The data connector, if present, manages the connection for data
 *  stores in the Collection. To set up the connector, use
 *  DataConnectorService.SetUpDataConnector method, which creates a new
 *  Collection while setting up the DataConnector singleton resource. Setting up
 *  connector on an existing Collection is not supported. This output only field
 *  contains a subset of the DataConnector fields, including `name`,
 *  `data_source`, `entities.entity_name` and `entities.data_store`. To get more
 *  details about a data connector, use the
 *  DataConnectorService.GetDataConnector method.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector *dataConnector;

/**
 *  Required. The Collection display name. This field must be a UTF-8 encoded
 *  string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Immutable. The full resource name of the Collection. Format:
 *  `projects/{project}/locations/{location}/collections/{collection_id}`. This
 *  field must be a UTF-8 encoded string with a length limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Defines circumstances to be checked before allowing a behavior
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCondition : GTLRObject

/**
 *  Range of time(s) specifying when condition is active. Maximum of 10 time
 *  ranges.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConditionTimeRange *> *activeTimeRange;

/**
 *  Optional. Query regex to match the whole search query. Cannot be set when
 *  Condition.query_terms is set. This is currently supporting promotion use
 *  case.
 */
@property(nonatomic, copy, nullable) NSString *queryRegex;

/**
 *  Search only A list of terms to match the query on. Cannot be set when
 *  Condition.query_regex is set. Maximum of 10 query terms.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConditionQueryTerm *> *queryTerms;

@end


/**
 *  Matcher for search request query
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConditionQueryTerm : GTLRObject

/**
 *  Whether the search query needs to exactly match the query term.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullMatch;

/**
 *  The specific query value to match against Must be lowercase, must be UTF-8.
 *  Can have at most 3 space separated terms if full_match is true. Cannot be an
 *  empty string. Maximum length of 5000 characters.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Used for time-dependent conditions.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConditionTimeRange : GTLRObject

/** End of time range. Range is inclusive. Must be in the future. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Start of time range. Range is inclusive. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  A data sync run of DataConnector. After DataConnector is successfully
 *  initialized, data syncs are scheduled at DataConnector.refresh_interval. A
 *  ConnectorRun represents a data sync either in the past or onging that the
 *  moment. //
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun : GTLRObject

/** Output only. The time when the connector run ended. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. The details of the entities synced at the ConnectorRun. Each
 *  ConnectorRun consists of syncing one or more entities.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun *> *entityRuns;

/**
 *  Contains info about errors incurred during the sync. Only exist if running
 *  into an error state. Contains error code and error message. Use with the
 *  `state` field.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errors;

/** Output only. The time when the connector run was most recently paused. */
@property(nonatomic, strong, nullable) GTLRDateTime *latestPauseTime;

/**
 *  Output only. The full resource name of the Connector Run. Format: `projects/
 *  * /locations/ * /collections/ * /dataConnector/connectorRuns/ *`. The
 *  `connector_run_id` is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The time when the connector run started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The state of the sync run.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Cancelled
 *        Data sync was scheduled but has been cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Failed
 *        The data sync is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Overrun
 *        Data sync has been running longer than expected and is still running
 *        at the time the next run is supposed to start. (Value: "OVERRUN")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Pending
 *        Data sync is about to start. (Value: "PENDING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Running
 *        The data sync is ongoing. (Value: "RUNNING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_StateUnspecified
 *        Default value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Succeeded
 *        The data sync is finished. (Value: "SUCCEEDED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_State_Warning
 *        The data sync completed with non-fatal errors. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Timestamp at which the connector run sync state was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *stateUpdateTime;

/**
 *  Output only. The trigger for this ConnectorRun.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Initialization
 *        ConnectorRun auto triggered by connector initialization. (Value:
 *        "INITIALIZATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Manual
 *        ConnectorRun triggered by user manually. (Value: "MANUAL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Resume
 *        ConnectorRun auto triggered by resuming connector. (Value: "RESUME")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_Scheduler
 *        ConnectorRun triggered by scheduler if connector has PERIODIC sync
 *        mode. (Value: "SCHEDULER")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRun_Trigger_TriggerUnspecified
 *        Default value. (Value: "TRIGGER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trigger;

@end


/**
 *  Represents an entity that was synced in this ConnectorRun.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun : GTLRObject

/**
 *  The number of documents deleted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deletedRecordCount;

/**
 *  The name of the source entity.
 *
 *  Remapped to 'entityNameProperty' to avoid NSObject's 'entityName'.
 */
@property(nonatomic, copy, nullable) NSString *entityNameProperty;

/**
 *  The total number of documents failed at sync at any stage (extraction,
 *  indexing, etc).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *errorRecordCount;

/**
 *  The errors from the entity's sync run. Only exist if running into an error
 *  state. Contains error code and error message.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errors;

/**
 *  The number of documents extracted from connector source, ready to be
 *  ingested to UCS.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *extractedRecordCount;

/**
 *  The number of documents indexed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *indexedRecordCount;

/** Metadata to generate the progress bar. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRunProgress *progress;

/**
 *  The number of requests sent to 3p API.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sourceApiRequestCount;

/**
 *  The state of the entity's sync run.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Cancelled
 *        Data sync was scheduled but has been cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Failed
 *        The data sync is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Overrun
 *        Data sync has been running longer than expected and is still running
 *        at the time the next run is supposed to start. (Value: "OVERRUN")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Pending
 *        Data sync is about to start. (Value: "PENDING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Running
 *        The data sync is ongoing. (Value: "RUNNING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_StateUnspecified
 *        Default value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Succeeded
 *        The data sync is finished. (Value: "SUCCEEDED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_State_Warning
 *        The data sync completed with non-fatal errors. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Timestamp at which the entity sync state was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *stateUpdateTime;

/**
 *  The timestamp for either extracted_documents_count, indexed_documents_count
 *  and error_documents_count was last updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *statsUpdateTime;

/**
 *  Sync type of this run.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_Full
 *        Sync triggers full sync of all documents. (Value: "FULL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_Incremental
 *        Incremental sync of updated documents. (Value: "INCREMENTAL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_Realtime
 *        Realtime sync. (Value: "REALTIME")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun_SyncType_SyncTypeUnspecified
 *        Sync type unspecified. (Value: "SYNC_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *syncType;

@end


/**
 *  Represents the progress of a sync run.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRunProgress : GTLRObject

/**
 *  The current progress.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *currentCount;

/**
 *  Derived. The percentile of the progress.current_count / total_count. The
 *  value is between [0, 1.0] inclusive.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentile;

/**
 *  The total.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

@end


/**
 *  Defines a conditioned behavior to employ during serving. Must be attached to
 *  a ServingConfig to be considered at serving time. Permitted actions
 *  dependent on `SolutionType`.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl : GTLRObject

/**
 *  Output only. List of all ServingConfig IDs this control is attached to. May
 *  take up to 10 minutes to update after changes.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *associatedServingConfigIds;

/** Defines a boost-type control */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostAction *boostAction;

/**
 *  Determines when the associated action will trigger. Omit to always apply the
 *  action. Currently only a single condition may be specified. Otherwise an
 *  INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCondition *> *conditions;

/**
 *  Required. Human readable name. The identifier used in UI views. Must be
 *  UTF-8 encoded string. Length limit is 128 characters. Otherwise an INVALID
 *  ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Defines a filter-type control Currently not supported by Recommendation */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlFilterAction *filterAction;

/**
 *  Immutable. Fully qualified name `projects/ * /locations/global/dataStore/ *
 *  /controls/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Promote certain links based on predefined trigger queries. This now only
 *  supports basic site search.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlPromoteAction *promoteAction;

/** Defines a redirect-type control. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlRedirectAction *redirectAction;

/**
 *  Required. Immutable. What solution the control belongs to. Must be
 *  compatible with vertical of resource. Otherwise an INVALID ARGUMENT error is
 *  thrown.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeChat
 *        Used for use cases related to the Generative AI agent. (Value:
 *        "SOLUTION_TYPE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeGenerativeChat
 *        Used for use cases related to the Generative Chat agent. It's used for
 *        Generative chat engine only, the associated data stores must enrolled
 *        with `SOLUTION_TYPE_CHAT` solution. (Value:
 *        "SOLUTION_TYPE_GENERATIVE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeRecommendation
 *        Used for Recommendations AI. (Value: "SOLUTION_TYPE_RECOMMENDATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeSearch
 *        Used for Discovery Search. (Value: "SOLUTION_TYPE_SEARCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControl_SolutionType_SolutionTypeUnspecified
 *        Default value. (Value: "SOLUTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *solutionType;

/** Treats a group of terms as synonyms of one another. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlSynonymsAction *synonymsAction;

/**
 *  Specifies the use case for the control. Affects what condition fields can be
 *  set. Only applies to SOLUTION_TYPE_SEARCH. Currently only allow one use case
 *  per control. Must be set when solution_type is
 *  SolutionType.SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *useCases;

@end


/**
 *  Adjusts order of products in returned list.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostAction : GTLRObject

/**
 *  Strength of the boost, which should be in [-1, 1]. Negative boost means
 *  demotion. Default is 0.0 (No-op).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost GTLR_DEPRECATED;

/**
 *  Required. Specifies which data store's documents can be boosted by this
 *  control. Full data store name e.g.
 *  projects/123/locations/global/collections/default_collection/dataStores/default_data_store
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Required. Specifies which products to apply the boost to. If no filter is
 *  provided all products will be boosted (No-op). Syntax documentation:
 *  https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000
 *  characters. Otherwise an INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Strength of the boost, which should be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0 (No-op).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fixedBoost;

/**
 *  Optional. Complex specification for custom ranking based on customer defined
 *  attribute value.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec *interpolationBoostSpec;

@end


/**
 *  Specification for custom ranking based on customer specified attribute
 *  value. It provides more controls for customized ranking than the simple
 *  (condition, boost) combination above.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec : GTLRObject

/**
 *  Optional. The attribute type to be used to determine the boost amount. The
 *  attribute value can be derived from the field value of the specified
 *  field_name. In the case of numerical it is straightforward i.e.
 *  attribute_value = numerical_field_value. In the case of freshness however,
 *  attribute_value = (time.now() - datetime_field_value).
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_AttributeType_AttributeTypeUnspecified
 *        Unspecified AttributeType. (Value: "ATTRIBUTE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_AttributeType_Freshness
 *        For the freshness use case the attribute value will be the duration
 *        between the current time and the date in the datetime field specified.
 *        The value must be formatted as an XSD `dayTimeDuration` value (a
 *        restricted subset of an ISO 8601 duration value). The pattern for this
 *        is: `nDnM]`. For example, `5D`, `3DT12H30M`, `T24H`. (Value:
 *        "FRESHNESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_AttributeType_Numerical
 *        The value of the numerical field will be used to dynamically update
 *        the boost amount. In this case, the attribute_value (the x value) of
 *        the control point will be the actual value of the numerical field for
 *        which the boost_amount is specified. (Value: "NUMERICAL")
 */
@property(nonatomic, copy, nullable) NSString *attributeType;

/**
 *  Optional. The control points used to define the curve. The monotonic
 *  function (defined through the interpolation_type above) passes through the
 *  control points listed here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpecControlPoint *> *controlPoints;

/**
 *  Optional. The name of the field whose value will be used to determine the
 *  boost amount.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  Optional. The interpolation type to be applied to connect the control points
 *  listed below.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_InterpolationType_InterpolationTypeUnspecified
 *        Interpolation type is unspecified. In this case, it defaults to
 *        Linear. (Value: "INTERPOLATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec_InterpolationType_Linear
 *        Piecewise linear interpolation will be applied. (Value: "LINEAR")
 */
@property(nonatomic, copy, nullable) NSString *interpolationType;

@end


/**
 *  The control points used to define the curve. The curve defined through these
 *  control points can only be monotonically increasing or decreasing(constant
 *  values are acceptable).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpecControlPoint : GTLRObject

/**
 *  Optional. Can be one of: 1. The numerical field value. 2. The duration spec
 *  for freshness: The value must be formatted as an XSD `dayTimeDuration` value
 *  (a restricted subset of an ISO 8601 duration value). The pattern for this
 *  is: `nDnM]`.
 */
@property(nonatomic, copy, nullable) NSString *attributeValue;

/**
 *  Optional. The value between -1 to 1 by which to boost the score if the
 *  attribute_value evaluates to the value specified above.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boostAmount;

@end


/**
 *  Specified which products may be included in results. Uses same filter as
 *  boost.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlFilterAction : GTLRObject

/**
 *  Required. Specifies which data store's documents can be filtered by this
 *  control. Full data store name e.g.
 *  projects/123/locations/global/collections/default_collection/dataStores/default_data_store
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Required. A filter to apply on the matching condition results. Required
 *  Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order
 *  Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is
 *  thrown.
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  Promote certain links based on some trigger queries. Example: Promote shoe
 *  store link when searching for `shoe` keyword. The link can be outside of
 *  associated data store.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlPromoteAction : GTLRObject

/** Required. Data store with which this promotion is attached to. */
@property(nonatomic, copy, nullable) NSString *dataStore;

/** Required. Promotion attached to this action. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchLinkPromotion *searchLinkPromotion;

@end


/**
 *  Redirects a shopper to the provided URI.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlRedirectAction : GTLRObject

/**
 *  Required. The URI to which the shopper will be redirected. Required. URI
 *  must have length equal or less than 2000 characters. Otherwise an INVALID
 *  ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *redirectUri;

@end


/**
 *  Creates a set of terms that will act as synonyms of one another. Example:
 *  "happy" will also be considered as "glad", "glad" will also be considered as
 *  "happy".
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaControlSynonymsAction : GTLRObject

/**
 *  Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at
 *  least 2 synonyms. Otherwise an INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

@end


/**
 *  The historical crawl rate timeseries data, used for monitoring.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries : GTLRObject

/** The QPS of the crawl rate. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries *qpsTimeSeries;

@end


/**
 *  Metadata related to the progress of the DataStoreService.CreateDataStore
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCreateDataStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the EngineService.CreateEngine
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCreateEngineMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for EvaluationService.CreateEvaluation method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCreateEvaluationMetadata : GTLRObject
@end


/**
 *  Metadata for Create Schema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.CreateSitemap operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCreateSitemapMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.CreateTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCreateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Defines custom fine tuning spec.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec : GTLRObject

/**
 *  Whether or not to enable and include custom fine tuned search adaptor model.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSearchAdaptor;

@end


/**
 *  Manages the connection to external data sources for all data stores grouped
 *  under a Collection. It's a singleton resource of Collection. The
 *  initialization is only supported through
 *  DataConnectorService.SetUpDataConnector method, which will create a new
 *  Collection and initialize its DataConnector.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector : GTLRObject

/** Optional. Action configurations to make the connector support actions. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaActionConfig *actionConfig;

/**
 *  Indicates whether the connector is disabled for auto run. It can be used to
 *  pause periodical and real time sync.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoRunDisabled;

/** Optional. The configuration for establishing a BAP connection. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaBAPConfig *bapConfig;

/**
 *  Output only. User actions that must be completed before the connector can
 *  start syncing data.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *blockingReasons;

/**
 *  Output only. The type of connector. Each source can only map to one type.
 *  For example, salesforce, confluence and jira have THIRD_PARTY connector
 *  type. It is notmutable once set by system.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_BigQuery
 *        Big query connector. (Value: "BIG_QUERY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_ConnectorTypeUnspecified
 *        Default value. (Value: "CONNECTOR_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GcpFhir
 *        Data connector connects between FHIR store and VAIS datastore. (Value:
 *        "GCP_FHIR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_Gcs
 *        Google Cloud Storage connector. (Value: "GCS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GoogleCalendar
 *        Google Calendar connector. (Value: "GOOGLE_CALENDAR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GoogleDrive
 *        Google Drive connector. (Value: "GOOGLE_DRIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_GoogleMail
 *        Gmail connector. (Value: "GOOGLE_MAIL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_NativeCloudIdentity
 *        Native Cloud Identity connector for people search powered by People
 *        API. (Value: "NATIVE_CLOUD_IDENTITY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_ThirdParty
 *        Third party connector to connector to third party application. (Value:
 *        "THIRD_PARTY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_ConnectorType_ThirdPartyFederated
 *        Federated connector, it is a third party connector that doesn't
 *        ingestion data, and search is powered by third party application's
 *        API. (Value: "THIRD_PARTY_FEDERATED")
 */
@property(nonatomic, copy, nullable) NSString *connectorType;

/** Output only. Timestamp the DataConnector was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The name of the data source. Supported values: `salesforce`,
 *  `jira`, `confluence`, `bigquery`.
 */
@property(nonatomic, copy, nullable) NSString *dataSource;

/**
 *  Optional. Any target destinations used to connect to third-party services.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfig *> *destinationConfigs;

/** List of entities from the connected data source to ingest. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity *> *entities;

/**
 *  Output only. The errors from initialization or from the latest connector
 *  run.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errors;

/**
 *  The refresh interval to sync the Access Control List information for the
 *  documents ingested by this connector. If not set, the access control list
 *  will be refreshed at the default interval of 30 minutes. The identity
 *  refresh interval can be at least 30 minutes and at most 7 days.
 */
@property(nonatomic, strong, nullable) GTLRDuration *identityRefreshInterval GTLR_DEPRECATED;

/**
 *  The configuration for the identity data synchronization runs. This contains
 *  the refresh interval to sync the Access Control List information for the
 *  documents ingested by this connector.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig *identityScheduleConfig;

/**
 *  Input only. The KMS key to be used to protect the DataStores managed by this
 *  connector. Must be set for requests that need to comply with CMEK Org Policy
 *  protections. If this field is set and processed successfully, the DataStores
 *  created by this connector will be protected by the KMS key.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/**
 *  Output only. For periodic connectors only, the last time a data sync was
 *  completed.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastSyncTime;

/**
 *  Output only. The most recent timestamp when this DataConnector was paused,
 *  affecting all functionalities such as data synchronization. Pausing a
 *  connector has the following effects: - All functionalities, including data
 *  synchronization, are halted. - Any ongoing data synchronization job will be
 *  canceled. - No future data synchronization runs will be scheduled nor can be
 *  triggered.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *latestPauseTime;

/**
 *  Output only. The full resource name of the Data Connector. Format:
 *  `projects/ * /locations/ * /collections/ * /dataConnector`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Defines the scheduled time for the next data synchronization. This field
 *  requires hour , minute, and time_zone from the [IANA Time Zone
 *  Database](https://www.iana.org/time-zones). This is utilized when the data
 *  connector has a refresh interval greater than 1 day. When the hours or
 *  minutes are not specified, we will assume a sync time of 0:00. The user must
 *  provide a time zone to avoid ambiguity.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleTypeDateTime *nextSyncTime;

/**
 *  Required. Params needed to access the source in the format of (Key, Value)
 *  pairs. Required parameters for all data sources: * Key: `instance_uri` *
 *  Value: type STRING. The uri to access the data source. Required parameters
 *  for sources that support OAUTH, i.e. `salesforce`: * Key: `client_id` *
 *  Value: type STRING. The client ID for the third party service provider to
 *  identify your application. * Key: `client_secret` * Value:type STRING. The
 *  client secret generated by the third party authorization server. * Key:
 *  `access_token` * Value: type STRING. OAuth token for UCS to access to the
 *  protected resource. * Key: `refresh_token` * Value: type STRING. OAuth
 *  refresh token for UCS to obtain a new access token without user interaction.
 *  Required parameters for sources that support basic API token auth, i.e.
 *  `jira`, `confluence`: * Key: `user_account` * Value: type STRING. The
 *  username or email with the source. * Key: `api_token` * Value: type STRING.
 *  The API token generated for the source account, that is used for
 *  authenticating anywhere where you would have used a password. Example:
 *  ```json { "instance_uri": "https://xxx.atlassian.net", "user_account":
 *  "xxxx.xxx\@xxx.com", "api_token": "test-token" } ``` Optional parameter to
 *  specify the authorization type to use for multiple authorization types
 *  support: * Key: `auth_type` * Value: type STRING. The authorization type for
 *  the data source. Supported values: `BASIC_AUTH`, `OAUTH`,
 *  `OAUTH_ACCESS_TOKEN`, `OAUTH_TWO_LEGGED`, `OAUTH_JWT_BEARER`,
 *  `OAUTH_PASSWORD_GRANT`, `JWT`, `API_TOKEN`, `FEDERATED_CREDENTIAL`.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_Params *params;

/**
 *  Output only. The tenant project ID associated with private connectivity
 *  connectors. This project must be allowlisted by in order for the connector
 *  to function.
 */
@property(nonatomic, copy, nullable) NSString *privateConnectivityProjectId;

/**
 *  Output only. real-time sync state
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Active
 *        The connector is successfully set up and awaiting next sync run.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Creating
 *        The connector is being set up. (Value: "CREATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Failed
 *        The connector is in error. The error details can be found in
 *        DataConnector.errors. If the error is unfixable, the DataConnector can
 *        be deleted by [CollectionService.DeleteCollection] API. (Value:
 *        "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_InitializationFailed
 *        Connector initialization failed. Potential causes include runtime
 *        errors or issues in the asynchronous pipeline, preventing the request
 *        from reaching downstream services (except for some connector types).
 *        (Value: "INITIALIZATION_FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Running
 *        The connector is actively syncing records from the data source.
 *        (Value: "RUNNING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_StateUnspecified
 *        Default value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_RealtimeState_Warning
 *        The connector has completed a sync run, but encountered non-fatal
 *        errors. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *realtimeState;

/**
 *  Required. The refresh interval for data sync. If duration is set to 0, the
 *  data will be synced in real time. The streaming feature is not supported
 *  yet. The minimum is 30 minutes and maximum is 7 days.
 */
@property(nonatomic, strong, nullable) GTLRDuration *refreshInterval;

/**
 *  Output only. State of the connector.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Active
 *        The connector is successfully set up and awaiting next sync run.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Creating
 *        The connector is being set up. (Value: "CREATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Failed
 *        The connector is in error. The error details can be found in
 *        DataConnector.errors. If the error is unfixable, the DataConnector can
 *        be deleted by [CollectionService.DeleteCollection] API. (Value:
 *        "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_InitializationFailed
 *        Connector initialization failed. Potential causes include runtime
 *        errors or issues in the asynchronous pipeline, preventing the request
 *        from reaching downstream services (except for some connector types).
 *        (Value: "INITIALIZATION_FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Running
 *        The connector is actively syncing records from the data source.
 *        (Value: "RUNNING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_StateUnspecified
 *        Default value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_State_Warning
 *        The connector has completed a sync run, but encountered non-fatal
 *        errors. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. The static IP addresses used by this connector. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *staticIpAddresses;

/**
 *  Optional. Whether customer has enabled static IP addresses for this
 *  connector.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *staticIpEnabled;

/**
 *  The data synchronization mode supported by the data connector.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_SyncMode_Periodic
 *        The connector will sync data periodically based on the
 *        refresh_interval. Use it with auto_run_disabled to pause the periodic
 *        sync, or indicate a one-time sync. (Value: "PERIODIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_SyncMode_Streaming
 *        The data will be synced in real time. (Value: "STREAMING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_SyncMode_Unspecified
 *        Connector that doesn't ingest data will have this value (Value:
 *        "UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *syncMode;

/** Output only. Timestamp the DataConnector was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Required. Params needed to access the source in the format of (Key, Value)
 *  pairs. Required parameters for all data sources: * Key: `instance_uri` *
 *  Value: type STRING. The uri to access the data source. Required parameters
 *  for sources that support OAUTH, i.e. `salesforce`: * Key: `client_id` *
 *  Value: type STRING. The client ID for the third party service provider to
 *  identify your application. * Key: `client_secret` * Value:type STRING. The
 *  client secret generated by the third party authorization server. * Key:
 *  `access_token` * Value: type STRING. OAuth token for UCS to access to the
 *  protected resource. * Key: `refresh_token` * Value: type STRING. OAuth
 *  refresh token for UCS to obtain a new access token without user interaction.
 *  Required parameters for sources that support basic API token auth, i.e.
 *  `jira`, `confluence`: * Key: `user_account` * Value: type STRING. The
 *  username or email with the source. * Key: `api_token` * Value: type STRING.
 *  The API token generated for the source account, that is used for
 *  authenticating anywhere where you would have used a password. Example:
 *  ```json { "instance_uri": "https://xxx.atlassian.net", "user_account":
 *  "xxxx.xxx\@xxx.com", "api_token": "test-token" } ``` Optional parameter to
 *  specify the authorization type to use for multiple authorization types
 *  support: * Key: `auth_type` * Value: type STRING. The authorization type for
 *  the data source. Supported values: `BASIC_AUTH`, `OAUTH`,
 *  `OAUTH_ACCESS_TOKEN`, `OAUTH_TWO_LEGGED`, `OAUTH_JWT_BEARER`,
 *  `OAUTH_PASSWORD_GRANT`, `JWT`, `API_TOKEN`, `FEDERATED_CREDENTIAL`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnector_Params : GTLRObject
@end


/**
 *  Represents an entity in the data source. For example, the `Account` object
 *  in Salesforce.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity : GTLRObject

/**
 *  Output only. The full resource name of the associated data store for the
 *  source entity. Format: `projects/ * /locations/ * /collections/ *
 *  /dataStores/ *`. When the connector is initialized by the
 *  DataConnectorService.SetUpDataConnector method, a DataStore is automatically
 *  created for each source entity.
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  The name of the entity. Supported values by data source: * Salesforce:
 *  `Lead`, `Opportunity`, `Contact`, `Account`, `Case`, `Contract`, `Campaign`
 *  * Jira: `Issue` * Confluence: `Content`, `Space`
 *
 *  Remapped to 'entityNameProperty' to avoid NSObject's 'entityName'.
 */
@property(nonatomic, copy, nullable) NSString *entityNameProperty;

/** Optional. Configuration for `HEALTHCARE_FHIR` vertical. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig *healthcareFhirConfig;

/**
 *  Attributes for indexing. Key: Field name. Value: The key property to map a
 *  field to, such as `title`, and `description`. Supported key properties: *
 *  `title`: The title for data record. This would be displayed on search
 *  results. * `description`: The description for data record. This would be
 *  displayed on search results.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity_KeyPropertyMappings *keyPropertyMappings;

/**
 *  The parameters for the entity to facilitate data ingestion. E.g. for
 *  BigQuery connectors: * Key: `document_id_column` * Value: type STRING. The
 *  value of the column ID.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity_Params *params;

/**
 *  Optional. The start schema to use for the DataStore created from this
 *  SourceEntity. If unset, a default vertical specialized schema will be used.
 *  This field is only used by SetUpDataConnector API, and will be ignored if
 *  used in other APIs. This field will be omitted from all API responses
 *  including GetDataConnector API. To retrieve a schema of a DataStore, use
 *  SchemaService.GetSchema API instead. The provided schema will be validated
 *  against certain rules on schema. Learn more from [this
 *  doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSchema *startingSchema;

@end


/**
 *  Attributes for indexing. Key: Field name. Value: The key property to map a
 *  field to, such as `title`, and `description`. Supported key properties: *
 *  `title`: The title for data record. This would be displayed on search
 *  results. * `description`: The description for data record. This would be
 *  displayed on search results.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity_KeyPropertyMappings : GTLRObject
@end


/**
 *  The parameters for the entity to facilitate data ingestion. E.g. for
 *  BigQuery connectors: * Key: `document_id_column` * Value: type STRING. The
 *  value of the column ID.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity_Params : GTLRObject
@end


/**
 *  DataStore captures global settings and configs at the DataStore level.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore : GTLRObject

/**
 *  Immutable. Whether data in the DataStore has ACL information. If set to
 *  `true`, the source data must have ACL. ACL will be ingested when data is
 *  ingested by DocumentService.ImportDocuments methods. When ACL is enabled for
 *  the DataStore, Document can't be accessed by calling
 *  DocumentService.GetDocument or DocumentService.ListDocuments. Currently ACL
 *  is only supported in `GENERIC` industry vertical with non-`PUBLIC_WEBSITE`
 *  content config.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *aclEnabled;

/** Optional. Configuration for advanced site search. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAdvancedSiteSearchConfig *advancedSiteSearchConfig;

/** Output only. Data size estimation for billing. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStoreBillingEstimation *billingEstimation;

/** Output only. CMEK-related information for the DataStore. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCmekConfig *cmekConfig;

/**
 *  Immutable. The content config of the data store. If this field is unset, the
 *  server behavior defaults to ContentConfig.NO_CONTENT.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_ContentConfigUnspecified
 *        Default value. (Value: "CONTENT_CONFIG_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_ContentRequired
 *        Only contains documents with Document.content. (Value:
 *        "CONTENT_REQUIRED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_GoogleWorkspace
 *        The data store is used for workspace search. Details of workspace data
 *        store are specified in the WorkspaceConfig. (Value:
 *        "GOOGLE_WORKSPACE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_NoContent
 *        Only contains documents without any Document.content. (Value:
 *        "NO_CONTENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_ContentConfig_PublicWebsite
 *        The data store is used for public website search. (Value:
 *        "PUBLIC_WEBSITE")
 */
@property(nonatomic, copy, nullable) NSString *contentConfig;

/** Output only. Timestamp the DataStore was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The id of the default Schema associated to this data store.
 */
@property(nonatomic, copy, nullable) NSString *defaultSchemaId;

/**
 *  Required. The data store display name. This field must be a UTF-8 encoded
 *  string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Configuration for Document understanding and enrichment. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig *documentProcessingConfig;

/** Optional. Configuration for `HEALTHCARE_FHIR` vertical. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig *healthcareFhirConfig;

/**
 *  Immutable. The fully qualified resource name of the associated
 *  IdentityMappingStore. This field can only be set for acl_enabled DataStores
 *  with `THIRD_PARTY` or `GSUITE` IdP. Format:
 *  `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
 */
@property(nonatomic, copy, nullable) NSString *identityMappingStore;

/** Output only. Data store level identity provider config. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig *idpConfig;

/**
 *  Immutable. The industry vertical that the data store registers.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_Generic
 *        The generic vertical for documents that are not specific to any
 *        industry vertical. (Value: "GENERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_HealthcareFhir
 *        The healthcare FHIR vertical. (Value: "HEALTHCARE_FHIR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_IndustryVerticalUnspecified
 *        Value used when unset. (Value: "INDUSTRY_VERTICAL_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStore_IndustryVertical_Media
 *        The media industry vertical. (Value: "MEDIA")
 */
@property(nonatomic, copy, nullable) NSString *industryVertical;

/**
 *  Optional. If set, this DataStore is an Infobot FAQ DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInfobotFaqDataStore;

/**
 *  Input only. The KMS key to be used to protect this DataStore at creation
 *  time. Must be set for requests that need to comply with CMEK Org Policy
 *  protections. If this field is set and processed successfully, the DataStore
 *  will be protected by the KMS key, as indicated in the cmek_config field.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/** Language info for DataStore. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaLanguageInfo *languageInfo;

/**
 *  Immutable. The full resource name of the data store. Format:
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Configuration for Natural Language Query Understanding. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig *naturalLanguageQueryUnderstandingConfig;

/** Optional. Stores serving config at DataStore level. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStoreServingConfigDataStore *servingConfigDataStore;

/**
 *  The solutions that the data store enrolls. Available solutions for each
 *  industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and
 *  `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is
 *  automatically enrolled. Other solutions cannot be enrolled.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *solutionTypes;

/**
 *  The start schema to use for this DataStore when provisioning it. If unset, a
 *  default vertical specialized schema will be used. This field is only used by
 *  CreateDataStore API, and will be ignored if used in other APIs. This field
 *  will be omitted from all API responses including CreateDataStore API. To
 *  retrieve a schema of a DataStore, use SchemaService.GetSchema API instead.
 *  The provided schema will be validated against certain rules on schema. Learn
 *  more from [this
 *  doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSchema *startingSchema;

/**
 *  Config to store data store type configuration for workspace data. This must
 *  be set when DataStore.content_config is set as
 *  DataStore.ContentConfig.GOOGLE_WORKSPACE.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig *workspaceConfig;

@end


/**
 *  Estimation of data size per data store.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStoreBillingEstimation : GTLRObject

/**
 *  Data size for structured data in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *structuredDataSize;

/** Last updated timestamp for structured data. */
@property(nonatomic, strong, nullable) GTLRDateTime *structuredDataUpdateTime;

/**
 *  Data size for unstructured data in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unstructuredDataSize;

/** Last updated timestamp for unstructured data. */
@property(nonatomic, strong, nullable) GTLRDateTime *unstructuredDataUpdateTime;

/**
 *  Data size for websites in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *websiteDataSize;

/** Last updated timestamp for websites. */
@property(nonatomic, strong, nullable) GTLRDateTime *websiteDataUpdateTime;

@end


/**
 *  Stores information regarding the serving configurations at DataStore level.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDataStoreServingConfigDataStore : GTLRObject

/**
 *  If set true, the DataStore will not be available for serving search
 *  requests.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabledForServing;

@end


/**
 *  The historical dedicated crawl rate timeseries data, used for monitoring.
 *  Dedicated crawl is used by Vertex AI to crawl the user's website when
 *  dedicate crawl is set.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDedicatedCrawlRateTimeSeries : GTLRObject

/** Vertex AI's error rate time series of auto-refresh dedicated crawl. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries *autoRefreshCrawlErrorRate;

/**
 *  Vertex AI's dedicated crawl rate time series of auto-refresh, which is the
 *  crawl rate of Google-CloudVertexBot when dedicate crawl is set, and the
 *  crawl rate is for best effort use cases like refreshing urls periodically.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries *autoRefreshCrawlRate;

/** Vertex AI's error rate time series of user triggered dedicated crawl. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries *userTriggeredCrawlErrorRate;

/**
 *  Vertex AI's dedicated crawl rate time series of user triggered crawl, which
 *  is the crawl rate of Google-CloudVertexBot when dedicate crawl is set, and
 *  user triggered crawl rate is for deterministic use cases like crawling urls
 *  or sitemaps specified by users.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries *userTriggeredCrawlRate;

@end


/**
 *  Metadata related to the progress of the CmekConfigService.DeleteCmekConfig
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteCmekConfigMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the CollectionService.UpdateCollection
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteCollectionMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the DataStoreService.DeleteDataStore
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteDataStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the EngineService.DeleteEngine
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteEngineMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  IdentityMappingStoreService.DeleteIdentityMappingStore operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteIdentityMappingStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for DeleteSchema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request for DeleteSession method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteSessionRequest : GTLRObject

/**
 *  Required. The resource name of the Session to delete. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DeleteSitemap operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteSitemapMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DeleteTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDeleteTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Defines target endpoints used to connect to third-party sources.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfig : GTLRObject

/** Optional. The destinations for the corresponding key. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfigDestination *> *destinations;

/**
 *  Optional. Unique destination identifier that is supported by the connector.
 */
@property(nonatomic, copy, nullable) NSString *key;

/** Optional. Additional parameters for this destination config. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfig_Params *params;

@end


/**
 *  Optional. Additional parameters for this destination config.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfig_Params : GTLRObject
@end


/**
 *  Defines a target endpoint
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDestinationConfigDestination : GTLRObject

/** Publicly routable host. */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  Optional. Target port number accepted by the destination.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for SiteSearchEngineService.DisableAdvancedSiteSearch
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchResponse : GTLRObject
@end


/**
 *  A singleton resource of DataStore. If it's empty when DataStore is created
 *  and DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED, the
 *  default parser will default to digital parser.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig : GTLRObject

/** Whether chunking mode is enabled. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig *chunkingConfig;

/**
 *  Configurations for default Document parser. If not specified, we will
 *  configure it as default DigitalParsingConfig, and the default parsing config
 *  will be applied to all file types for Document parsing.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig *defaultParsingConfig;

/**
 *  The full resource name of the Document Processing Config. Format: `projects/
 *  * /locations/ * /collections/ * /dataStores/ * /documentProcessingConfig`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Map from file type to override the default parsing configuration based on
 *  the file type. Supported keys: * `pdf`: Override parsing config for PDF
 *  files, either digital parsing, ocr parsing or layout parsing is supported. *
 *  `html`: Override parsing config for HTML files, only digital parsing and
 *  layout parsing are supported. * `docx`: Override parsing config for DOCX
 *  files, only digital parsing and layout parsing are supported. * `pptx`:
 *  Override parsing config for PPTX files, only digital parsing and layout
 *  parsing are supported. * `xlsm`: Override parsing config for XLSM files,
 *  only digital parsing and layout parsing are supported. * `xlsx`: Override
 *  parsing config for XLSX files, only digital parsing and layout parsing are
 *  supported.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig_ParsingConfigOverrides *parsingConfigOverrides;

@end


/**
 *  Map from file type to override the default parsing configuration based on
 *  the file type. Supported keys: * `pdf`: Override parsing config for PDF
 *  files, either digital parsing, ocr parsing or layout parsing is supported. *
 *  `html`: Override parsing config for HTML files, only digital parsing and
 *  layout parsing are supported. * `docx`: Override parsing config for DOCX
 *  files, only digital parsing and layout parsing are supported. * `pptx`:
 *  Override parsing config for PPTX files, only digital parsing and layout
 *  parsing are supported. * `xlsm`: Override parsing config for XLSM files,
 *  only digital parsing and layout parsing are supported. * `xlsx`: Override
 *  parsing config for XLSX files, only digital parsing and layout parsing are
 *  supported.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig_ParsingConfigOverrides : GTLRObject
@end


/**
 *  Configuration for chunking config.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig : GTLRObject

/** Configuration for the layout based chunking. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig *layoutBasedChunkingConfig;

@end


/**
 *  Configuration for the layout based chunking.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig : GTLRObject

/**
 *  The token size limit for each chunk. Supported values: 100-500 (inclusive).
 *  Default value: 500.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *chunkSize;

/**
 *  Whether to include appending different levels of headings to chunks from the
 *  middle of the document to prevent context loss. Default value: False.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeAncestorHeadings;

@end


/**
 *  Related configurations applied to a specific type of document parser.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig : GTLRObject

/** Configurations applied to digital parser. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig *digitalParsingConfig;

/** Configurations applied to layout parser. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig *layoutParsingConfig;

/**
 *  Configurations applied to OCR parser. Currently it only applies to PDFs.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig *ocrParsingConfig;

@end


/**
 *  The digital parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig : GTLRObject
@end


/**
 *  The layout parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig : GTLRObject
@end


/**
 *  The OCR parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig : GTLRObject

/**
 *  [DEPRECATED] This field is deprecated. To use the additional enhanced
 *  document elements processing, please switch to `layout_parsing_config`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *enhancedDocumentElements GTLR_DEPRECATED;

/**
 *  If true, will use native text instead of OCR text on pages containing native
 *  text.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useNativeText;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for SiteSearchEngineService.EnableAdvancedSiteSearch
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchResponse : GTLRObject
@end


/**
 *  Metadata that describes the training and serving parameters of an Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine : GTLRObject

/**
 *  Configurations for the Chat Engine. Only applicable if solution_type is
 *  SOLUTION_TYPE_CHAT.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig *chatEngineConfig;

/**
 *  Output only. Additional information of the Chat Engine. Only applicable if
 *  solution_type is SOLUTION_TYPE_CHAT.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata *chatEngineMetadata;

/** Common config spec that specifies the metadata of the engine. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineCommonConfig *commonConfig;

/** Output only. Timestamp the Recommendation Engine was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and
 *  SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with
 *  at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple
 *  DataStores in the same Collection can be associated here. Note that when
 *  used in CreateEngineRequest, one DataStore id must be provided as the system
 *  will use it for necessary initializations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dataStoreIds;

/**
 *  Optional. Whether to disable analytics for searches performed on this
 *  engine.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAnalytics;

/**
 *  Required. The display name of the engine. Should be human readable. UTF-8
 *  encoded string with limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The industry vertical that the engine registers. The restriction of the
 *  Engine industry vertical is based on DataStore: Vertical on Engine has to
 *  match vertical of the DataStore linked to the engine.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_Generic
 *        The generic vertical for documents that are not specific to any
 *        industry vertical. (Value: "GENERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_HealthcareFhir
 *        The healthcare FHIR vertical. (Value: "HEALTHCARE_FHIR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_IndustryVerticalUnspecified
 *        Value used when unset. (Value: "INDUSTRY_VERTICAL_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_IndustryVertical_Media
 *        The media industry vertical. (Value: "MEDIA")
 */
@property(nonatomic, copy, nullable) NSString *industryVertical;

/**
 *  Configurations for the Media Engine. Only applicable on the data stores with
 *  solution_type SOLUTION_TYPE_RECOMMENDATION and IndustryVertical.MEDIA
 *  vertical.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig *mediaRecommendationEngineConfig;

/**
 *  Immutable. The fully qualified resource name of the engine. This field must
 *  be a UTF-8 encoded string with a length limit of 1024 characters. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
 *  engine should be 1-63 characters, and valid characters are /a-z0-9* /.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Additional information of a recommendation engine. Only
 *  applicable if solution_type is SOLUTION_TYPE_RECOMMENDATION.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata *recommendationMetadata;

/**
 *  Configurations for the Search Engine. Only applicable if solution_type is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig *searchEngineConfig;

/** Additional config specs for a `similar-items` engine. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig *similarDocumentsConfig;

/**
 *  Required. The solutions of the engine.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeChat
 *        Used for use cases related to the Generative AI agent. (Value:
 *        "SOLUTION_TYPE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeGenerativeChat
 *        Used for use cases related to the Generative Chat agent. It's used for
 *        Generative chat engine only, the associated data stores must enrolled
 *        with `SOLUTION_TYPE_CHAT` solution. (Value:
 *        "SOLUTION_TYPE_GENERATIVE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeRecommendation
 *        Used for Recommendations AI. (Value: "SOLUTION_TYPE_RECOMMENDATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeSearch
 *        Used for Discovery Search. (Value: "SOLUTION_TYPE_SEARCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngine_SolutionType_SolutionTypeUnspecified
 *        Default value. (Value: "SOLUTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *solutionType;

/** Output only. Timestamp the Recommendation Engine was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Configurations for a Chat Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig : GTLRObject

/**
 *  The configurationt generate the Dialogflow agent that is associated to this
 *  Engine. Note that these configurations are one-time consumed by and passed
 *  to Dialogflow service. It means they cannot be retrieved using
 *  EngineService.GetEngine or EngineService.ListEngines API after engine
 *  creation.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig *agentCreationConfig;

/**
 *  Optional. If the flag set to true, we allow the agent and engine are in
 *  different locations, otherwise the agent and engine are required to be in
 *  the same location. The flag is set to false by default. Note that the
 *  `allow_cross_region` are one-time consumed by and passed to
 *  EngineService.CreateEngine. It means they cannot be retrieved using
 *  EngineService.GetEngine or EngineService.ListEngines API after engine
 *  creation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowCrossRegion;

/**
 *  The resource name of an exist Dialogflow agent to link to this Chat Engine.
 *  Customers can either provide `agent_creation_config` to create agent or
 *  provide an agent name that links the agent with the Chat engine. Format:
 *  `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are
 *  one-time consumed by and passed to Dialogflow service. It means they cannot
 *  be retrieved using EngineService.GetEngine or EngineService.ListEngines API
 *  after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
 *  agent association after Engine is created.
 */
@property(nonatomic, copy, nullable) NSString *dialogflowAgentToLink;

@end


/**
 *  Configurations for generating a Dialogflow agent. Note that these
 *  configurations are one-time consumed by and passed to Dialogflow service. It
 *  means they cannot be retrieved using EngineService.GetEngine or
 *  EngineService.ListEngines API after engine creation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig : GTLRObject

/**
 *  Name of the company, organization or other entity that the agent represents.
 *  Used for knowledge connector LLM prompt and for knowledge search.
 */
@property(nonatomic, copy, nullable) NSString *business;

/**
 *  Required. The default language of the agent as a language tag. See [Language
 *  Support](https://cloud.google.com/dialogflow/docs/reference/language) for a
 *  list of the currently supported language codes.
 */
@property(nonatomic, copy, nullable) NSString *defaultLanguageCode;

/**
 *  Agent location for Agent creation, supported values: global/us/eu. If not
 *  provided, us Engine will create Agent using us-central-1 by default; eu
 *  Engine will create Agent using eu-west-1 by default.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Required. The time zone of the agent from the [time zone
 *  database](https://www.iana.org/time-zones), e.g., America/New_York,
 *  Europe/Paris.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  Additional information of a Chat Engine. Fields in this message are output
 *  only.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata : GTLRObject

/**
 *  The resource name of a Dialogflow agent, that this Chat Engine refers to.
 *  Format: `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *dialogflowAgent;

@end


/**
 *  Common configurations for an Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineCommonConfig : GTLRObject

/**
 *  The name of the company, business or entity that is associated with the
 *  engine. Setting this may help improve LLM related features.
 */
@property(nonatomic, copy, nullable) NSString *companyName;

@end


/**
 *  Additional config specs for a Media Recommendation engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig : GTLRObject

/**
 *  The optimization objective. e.g., `cvr`. This field together with
 *  optimization_objective describe engine metadata to use to control engine
 *  training and serving. Currently supported values: `ctr`, `cvr`. If not
 *  specified, we choose default based on engine type. Default depends on type
 *  of recommendation: `recommended-for-you` => `ctr` `others-you-may-like` =>
 *  `ctr`
 */
@property(nonatomic, copy, nullable) NSString *optimizationObjective;

/**
 *  Name and value of the custom threshold for cvr optimization_objective. For
 *  target_field `watch-time`, target_field_value must be an integer value
 *  indicating the media progress time in seconds between (0, 86400] (excludes
 *  0, includes 86400) (e.g., 90). For target_field `watch-percentage`, the
 *  target_field_value must be a valid float value between (0, 1.0] (excludes 0,
 *  includes 1.0) (e.g., 0.5).
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig *optimizationObjectiveConfig;

/**
 *  The training state that the engine is in (e.g. `TRAINING` or `PAUSED`).
 *  Since part of the cost of running the service is frequency of training -
 *  this can be used to determine when to train engine in order to control cost.
 *  If not specified: the default value for `CreateEngine` method is `TRAINING`.
 *  The default value for `UpdateEngine` method is to keep the state the same as
 *  before.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig_TrainingState_Paused
 *        The engine training is paused. (Value: "PAUSED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig_TrainingState_Training
 *        The engine is training. (Value: "TRAINING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig_TrainingState_TrainingStateUnspecified
 *        Unspecified training state. (Value: "TRAINING_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trainingState;

/**
 *  Required. The type of engine. e.g., `recommended-for-you`. This field
 *  together with optimization_objective describe engine metadata to use to
 *  control engine training and serving. Currently supported values:
 *  `recommended-for-you`, `others-you-may-like`, `more-like-this`,
 *  `most-popular-items`.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Custom threshold for `cvr` optimization_objective.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig : GTLRObject

/**
 *  Required. The name of the field to target. Currently supported values:
 *  `watch-percentage`, `watch-time`.
 */
@property(nonatomic, copy, nullable) NSString *targetField;

/**
 *  Required. The threshold to be applied to the target (e.g., 0.5).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetFieldValueFloat;

@end


/**
 *  Additional information of a recommendation engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata : GTLRObject

/**
 *  Output only. The state of data requirements for this engine: `DATA_OK` and
 *  `DATA_ERROR`. Engine cannot be trained if the data is in `DATA_ERROR` state.
 *  Engine can have `DATA_ERROR` state even if serving state is `ACTIVE`:
 *  engines were trained successfully before, but cannot be refreshed because
 *  the underlying engine no longer has sufficient data for training.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_DataState_DataError
 *        The engine does not have sufficient training data. Error messages can
 *        be queried via Stackdriver. (Value: "DATA_ERROR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_DataState_DataOk
 *        The engine has sufficient training data. (Value: "DATA_OK")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_DataState_DataStateUnspecified
 *        Unspecified default value, should never be explicitly set. (Value:
 *        "DATA_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dataState;

/**
 *  Output only. The timestamp when the latest successful tune finished. Only
 *  applicable on Media Recommendation engines.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastTuneTime;

/**
 *  Output only. The serving state of the engine: `ACTIVE`, `NOT_ACTIVE`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_Active
 *        The engine is serving and can be queried. (Value: "ACTIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_Inactive
 *        The engine is not serving. (Value: "INACTIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_ServingStateUnspecified
 *        Unspecified serving state. (Value: "SERVING_STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata_ServingState_Tuned
 *        The engine is trained on tuned hyperparameters and can be queried.
 *        (Value: "TUNED")
 */
@property(nonatomic, copy, nullable) NSString *servingState;

/**
 *  Output only. The latest tune operation id associated with the engine. Only
 *  applicable on Media Recommendation engines. If present, this operation id
 *  can be used to determine if there is an ongoing tune for this engine. To
 *  check the operation status, send the GetOperation request with this
 *  operation id in the engine resource format. If no tuning has happened for
 *  this engine, the string is empty.
 */
@property(nonatomic, copy, nullable) NSString *tuningOperation;

@end


/**
 *  Configurations for a Search Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig : GTLRObject

/** The add-on that this search engine enables. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *searchAddOns;

/**
 *  The search feature tier of this engine. Different tiers might have different
 *  pricing. To learn more, check the pricing documentation. Defaults to
 *  SearchTier.SEARCH_TIER_STANDARD if not specified.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchTier_SearchTierEnterprise
 *        Enterprise tier. (Value: "SEARCH_TIER_ENTERPRISE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchTier_SearchTierStandard
 *        Standard tier. (Value: "SEARCH_TIER_STANDARD")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig_SearchTier_SearchTierUnspecified
 *        Default value when the enum is unspecified. This is invalid to use.
 *        (Value: "SEARCH_TIER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchTier;

@end


/**
 *  Additional config specs for a `similar-items` engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig : GTLRObject
@end


/**
 *  Metadata related to the progress of the EstimateDataSize operation. This is
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEstimateDataSizeMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

@end


/**
 *  Response of the EstimateDataSize request. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEstimateDataSizeResponse : GTLRObject

/**
 *  Data size in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataSizeBytes;

/**
 *  Total number of documents.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *documentCount;

@end


/**
 *  An evaluation is a single execution (or run) of an evaluation process. It
 *  encapsulates the state of the evaluation and the resulting data.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation : GTLRObject

/** Output only. Timestamp the Evaluation was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Timestamp the Evaluation was completed at. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. The error that occurred during evaluation. Only populated when
 *  the evaluation's state is FAILED.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Output only. A sample of errors encountered while processing the request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/** Required. The specification of the evaluation. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec *evaluationSpec;

/**
 *  Identifier. The full resource name of the Evaluation, in the format of
 *  `projects/{project}/locations/{location}/evaluations/{evaluation}`. This
 *  field must be a UTF-8 encoded string with a length limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The metrics produced by the evaluation, averaged across all
 *  SampleQuerys in the SampleQuerySet. Only populated when the evaluation's
 *  state is SUCCEEDED.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetrics *qualityMetrics;

/**
 *  Output only. The state of the evaluation.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Failed
 *        The evaluation failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Pending
 *        The service is preparing to run the evaluation. (Value: "PENDING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Running
 *        The evaluation is in progress. (Value: "RUNNING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_StateUnspecified
 *        The evaluation is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluation_State_Succeeded
 *        The evaluation completed successfully. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Describes the specification of the evaluation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec : GTLRObject

/** Required. The specification of the query set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec *querySetSpec;

/**
 *  Required. The search request that is used to perform the evaluation. Only
 *  the following fields within SearchRequest are supported; if any other fields
 *  are provided, an UNSUPPORTED error will be returned: *
 *  SearchRequest.serving_config * SearchRequest.branch *
 *  SearchRequest.canonical_filter * SearchRequest.query_expansion_spec *
 *  SearchRequest.spell_correction_spec * SearchRequest.content_search_spec *
 *  SearchRequest.user_pseudo_id
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest *searchRequest;

@end


/**
 *  Describes the specification of the query set.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec : GTLRObject

/**
 *  Required. The full resource name of the SampleQuerySet used for the
 *  evaluation, in the format of
 *  `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
 */
@property(nonatomic, copy, nullable) NSString *sampleQuerySet;

@end


/**
 *  Configurations for fields of a schema. For example, configuring a field is
 *  indexable, or searchable.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig : GTLRObject

/**
 *  If this field is set, only the corresponding source will be indexed for this
 *  field. Otherwise, the values from different sources are merged. Assuming a
 *  page with `` in meta tag, and `` in page map: if this enum is set to
 *  METATAGS, we will only index ``; if this enum is not set, we will merge them
 *  and index ``.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *advancedSiteSearchDataSources;

/**
 *  If completable_option is COMPLETABLE_ENABLED, field values are directly used
 *  and returned as suggestions for Autocomplete in
 *  CompletionService.CompleteQuery. If completable_option is unset, the server
 *  behavior defaults to COMPLETABLE_DISABLED for fields that support setting
 *  completable options, which are just `string` fields. For those fields that
 *  do not support setting completable options, the server will skip completable
 *  option setting, and setting completable_option for those fields will throw
 *  `INVALID_ARGUMENT` error.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_CompletableOption_CompletableDisabled
 *        Completable option disabled for a schema field. (Value:
 *        "COMPLETABLE_DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_CompletableOption_CompletableEnabled
 *        Completable option enabled for a schema field. (Value:
 *        "COMPLETABLE_ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_CompletableOption_CompletableOptionUnspecified
 *        Value used when unset. (Value: "COMPLETABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *completableOption;

/**
 *  If dynamic_facetable_option is DYNAMIC_FACETABLE_ENABLED, field values are
 *  available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if
 *  FieldConfig.indexable_option is INDEXABLE_DISABLED. Otherwise, an
 *  `INVALID_ARGUMENT` error will be returned. If dynamic_facetable_option is
 *  unset, the server behavior defaults to DYNAMIC_FACETABLE_DISABLED for fields
 *  that support setting dynamic facetable options. For those fields that do not
 *  support setting dynamic facetable options, such as `object` and `boolean`,
 *  the server will skip dynamic facetable option setting, and setting
 *  dynamic_facetable_option for those fields will throw `INVALID_ARGUMENT`
 *  error.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_DynamicFacetableOption_DynamicFacetableDisabled
 *        Dynamic facetable option disabled for a schema field. (Value:
 *        "DYNAMIC_FACETABLE_DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_DynamicFacetableOption_DynamicFacetableEnabled
 *        Dynamic facetable option enabled for a schema field. (Value:
 *        "DYNAMIC_FACETABLE_ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_DynamicFacetableOption_DynamicFacetableOptionUnspecified
 *        Value used when unset. (Value: "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dynamicFacetableOption;

/**
 *  Required. Field path of the schema field. For example: `title`,
 *  `description`, `release_info.release_year`.
 */
@property(nonatomic, copy, nullable) NSString *fieldPath;

/**
 *  Output only. Raw type of the field.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Boolean
 *        Field value type is Boolean. (Value: "BOOLEAN")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Datetime
 *        Field value type is Datetime. Datetime can be expressed as either: * a
 *        number representing milliseconds-since-the-epoch * a string
 *        representing milliseconds-since-the-epoch. e.g. `"1420070400001"` * a
 *        string representing the [ISO
 *        8601](https://en.wikipedia.org/wiki/ISO_8601) date or date and time.
 *        e.g. `"2015-01-01"` or `"2015-01-01T12:10:30Z"` (Value: "DATETIME")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_FieldTypeUnspecified
 *        Field type is unspecified. (Value: "FIELD_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Geolocation
 *        Field value type is Geolocation. Geolocation is expressed as an object
 *        with the following keys: * `id`: a string representing the location id
 *        * `longitude`: a number representing the longitude coordinate of the
 *        location * `latitude`: a number repesenting the latitude coordinate of
 *        the location * `address`: a string representing the full address of
 *        the location `latitude` and `longitude` must always be provided
 *        together. At least one of a) `address` or b) `latitude`-`longitude`
 *        pair must be provided. (Value: "GEOLOCATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Integer
 *        Field value type is Integer. (Value: "INTEGER")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Number
 *        Field value type is Number. (Value: "NUMBER")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_Object
 *        Field value type is Object. (Value: "OBJECT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_FieldType_String
 *        Field value type is String. (Value: "STRING")
 */
@property(nonatomic, copy, nullable) NSString *fieldType;

/**
 *  If indexable_option is INDEXABLE_ENABLED, field values are indexed so that
 *  it can be filtered or faceted in SearchService.Search. If indexable_option
 *  is unset, the server behavior defaults to INDEXABLE_DISABLED for fields that
 *  support setting indexable options. For those fields that do not support
 *  setting indexable options, such as `object` and `boolean` and key
 *  properties, the server will skip indexable_option setting, and setting
 *  indexable_option for those fields will throw `INVALID_ARGUMENT` error.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_IndexableOption_IndexableDisabled
 *        Indexable option disabled for a schema field. (Value:
 *        "INDEXABLE_DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_IndexableOption_IndexableEnabled
 *        Indexable option enabled for a schema field. (Value:
 *        "INDEXABLE_ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_IndexableOption_IndexableOptionUnspecified
 *        Value used when unset. (Value: "INDEXABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *indexableOption;

/**
 *  Output only. Type of the key property that this field is mapped to. Empty
 *  string if this is not annotated as mapped to a key property. Example types
 *  are `title`, `description`. Full list is defined by `keyPropertyMapping` in
 *  the schema field annotation. If the schema field has a `KeyPropertyMapping`
 *  annotation, `indexable_option` and `searchable_option` of this field cannot
 *  be modified.
 */
@property(nonatomic, copy, nullable) NSString *keyPropertyType;

/**
 *  Optional. The metatag name found in the HTML page. If user defines this
 *  field, the value of this metatag name will be used to extract metatag. If
 *  the user does not define this field, the FieldConfig.field_path will be used
 *  to extract metatag.
 */
@property(nonatomic, copy, nullable) NSString *metatagName;

/**
 *  If recs_filterable_option is FILTERABLE_ENABLED, field values are filterable
 *  by filter expression in RecommendationService.Recommend. If
 *  FILTERABLE_ENABLED but the field type is numerical, field values are not
 *  filterable by text queries in RecommendationService.Recommend. Only textual
 *  fields are supported. If recs_filterable_option is unset, the default
 *  setting is FILTERABLE_DISABLED for fields that support setting filterable
 *  options. When a field set to [FILTERABLE_DISABLED] is filtered, a warning is
 *  generated and an empty result is returned.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RecsFilterableOption_FilterableDisabled
 *        Filterable option disabled for a schema field. (Value:
 *        "FILTERABLE_DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RecsFilterableOption_FilterableEnabled
 *        Filterable option enabled for a schema field. (Value:
 *        "FILTERABLE_ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RecsFilterableOption_FilterableOptionUnspecified
 *        Value used when unset. (Value: "FILTERABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *recsFilterableOption;

/**
 *  If retrievable_option is RETRIEVABLE_ENABLED, field values are included in
 *  the search results. If retrievable_option is unset, the server behavior
 *  defaults to RETRIEVABLE_DISABLED for fields that support setting retrievable
 *  options. For those fields that do not support setting retrievable options,
 *  such as `object` and `boolean`, the server will skip retrievable option
 *  setting, and setting retrievable_option for those fields will throw
 *  `INVALID_ARGUMENT` error.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RetrievableOption_RetrievableDisabled
 *        Retrievable option disabled for a schema field. (Value:
 *        "RETRIEVABLE_DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RetrievableOption_RetrievableEnabled
 *        Retrievable option enabled for a schema field. (Value:
 *        "RETRIEVABLE_ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_RetrievableOption_RetrievableOptionUnspecified
 *        Value used when unset. (Value: "RETRIEVABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *retrievableOption;

/**
 *  Field paths for indexing custom attribute from schema.org data. More details
 *  of schema.org and its defined types can be found at
 *  [schema.org](https://schema.org). It is only used on advanced site search
 *  schema. Currently only support full path from root. The full path to a field
 *  is constructed by concatenating field names, starting from `_root`, with a
 *  period `.` as the delimiter. Examples: * Publish date of the root:
 *  _root.datePublished * Publish date of the reviews:
 *  _root.review.datePublished
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *schemaOrgPaths;

/**
 *  If searchable_option is SEARCHABLE_ENABLED, field values are searchable by
 *  text queries in SearchService.Search. If SEARCHABLE_ENABLED but field type
 *  is numerical, field values will not be searchable by text queries in
 *  SearchService.Search, as there are no text values associated to numerical
 *  fields. If searchable_option is unset, the server behavior defaults to
 *  SEARCHABLE_DISABLED for fields that support setting searchable options. Only
 *  `string` fields that have no key property mapping support setting
 *  searchable_option. For those fields that do not support setting searchable
 *  options, the server will skip searchable option setting, and setting
 *  searchable_option for those fields will throw `INVALID_ARGUMENT` error.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_SearchableOption_SearchableDisabled
 *        Searchable option disabled for a schema field. (Value:
 *        "SEARCHABLE_DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_SearchableOption_SearchableEnabled
 *        Searchable option enabled for a schema field. (Value:
 *        "SEARCHABLE_ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig_SearchableOption_SearchableOptionUnspecified
 *        Value used when unset. (Value: "SEARCHABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchableOption;

@end


/**
 *  Request for GetSession method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetSessionRequest : GTLRObject

/**
 *  Optional. If set to true, the full session including all answer details will
 *  be returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeAnswerDetails;

/**
 *  Required. The resource name of the Session to get. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Response message for SiteSearchEngineService.GetUriPatternDocumentData
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse : GTLRObject

/**
 *  Document data keyed by URI pattern. For example: document_data_map = {
 *  "www.url1.com/ *": { "Categories": ["category1", "category2"] },
 *  "www.url2.com/ *": { "Categories": ["category3"] } }
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse_DocumentDataMap *documentDataMap;

@end


/**
 *  Document data keyed by URI pattern. For example: document_data_map = {
 *  "www.url1.com/ *": { "Categories": ["category1", "category2"] },
 *  "www.url2.com/ *": { "Categories": ["category3"] } }
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse_DocumentDataMap_DocumentDataMap.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse_DocumentDataMap : GTLRObject
@end


/**
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse_DocumentDataMap_DocumentDataMap
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse_DocumentDataMap_DocumentDataMap : GTLRObject
@end


/**
 *  Config to data store for `HEALTHCARE_FHIR` vertical.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig : GTLRObject

/**
 *  Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set
 *  to `true`, the predefined healthcare fhir schema can be extended for more
 *  customized searching and filtering.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableConfigurableSchema;

/**
 *  Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If
 *  set to `true`, the batch ingestion will be processed in a static indexing
 *  mode which is slower but more capable of handling larger volume.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableStaticIndexingForBatchIngestion;

@end


/**
 *  IdentityMappingEntry LongRunningOperation metadata for
 *  IdentityMappingStoreService.ImportIdentityMappings and
 *  IdentityMappingStoreService.PurgeIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdentityMappingEntryOperationMetadata : GTLRObject

/**
 *  The number of IdentityMappingEntries that failed to be processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  The number of IdentityMappingEntries that were successfully processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  The total number of IdentityMappingEntries that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

@end


/**
 *  The configuration for the identity data synchronization runs.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig : GTLRObject

/**
 *  Optional. The UTC time when the next data sync is expected to start for the
 *  Data Connector. Customers are only able to specify the hour and minute to
 *  schedule the data sync. This is utilized when the data connector has a
 *  refresh interval greater than 1 day.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleTypeDateTime *nextSyncTime;

/**
 *  Optional. The refresh interval to sync the Access Control List information
 *  for the documents ingested by this connector. If not set, the access control
 *  list will be refreshed at the default interval of 30 minutes. The identity
 *  refresh interval can be at least 30 minutes and at most 7 days.
 */
@property(nonatomic, strong, nullable) GTLRDuration *refreshInterval;

@end


/**
 *  Identity Provider Config.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig : GTLRObject

/** External Identity provider config. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig *externalIdpConfig;

/**
 *  Identity provider type configured.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig_IdpType_Gsuite
 *        Google 1P provider. (Value: "GSUITE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig_IdpType_IdpTypeUnspecified
 *        Default value. ACL search not enabled. (Value: "IDP_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfig_IdpType_ThirdParty
 *        Third party provider. (Value: "THIRD_PARTY")
 */
@property(nonatomic, copy, nullable) NSString *idpType;

@end


/**
 *  Third party IDP Config.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig : GTLRObject

/** Workforce pool name. Example: "locations/global/workforcePools/pool_id" */
@property(nonatomic, copy, nullable) NSString *workforcePoolName;

@end


/**
 *  Metadata related to the progress of the ImportCompletionSuggestions
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of CompletionSuggestions that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of CompletionSuggestions successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the CompletionService.ImportCompletionSuggestions method. If the
 *  long running operation is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsResponse : GTLRObject

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportDocuments operation. This is
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Total count of entries that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportDocumentsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig : GTLRObject

/**
 *  Cloud Storage prefix for import errors. This must be an empty, existing
 *  Cloud Storage directory. Import errors are written to sharded files in this
 *  directory, one per line, as a JSON-encoded `google.rpc.Status` message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Response message for IdentityMappingStoreService.ImportIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportIdentityMappingsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportSampleQueries operation. This
 *  will be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportSampleQueriesMetadata : GTLRObject

/** ImportSampleQueries operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of SampleQuerys that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of SampleQuerys successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Total count of SampleQuerys that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

/**
 *  ImportSampleQueries operation last update time. If the operation is done,
 *  this is also the finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the SampleQueryService.ImportSampleQueries method. If the long
 *  running operation is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportSampleQueriesResponse : GTLRObject

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportSuggestionDenyListEntries
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CompletionService.ImportSuggestionDenyListEntries
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of deny list entries that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failedEntriesCount;

/**
 *  Count of deny list entries successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedEntriesCount;

@end


/**
 *  Metadata related to the progress of the Import operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse : GTLRObject

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of user events imported with complete existing Documents.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with Document information not found in
 *  the existing Branch.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  A floating point interval.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaInterval : GTLRObject

/**
 *  Exclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMaximum;

/**
 *  Exclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMinimum;

/**
 *  Inclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximum;

/**
 *  Inclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimum;

@end


/**
 *  Language info for DataStore.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaLanguageInfo : GTLRObject

/**
 *  Output only. Language part of normalized_language_code. E.g.: `en-US` ->
 *  `en`, `zh-Hans-HK` -> `zh`, `en` -> `en`.
 */
@property(nonatomic, copy, nullable) NSString *language;

/** The language code for the DataStore. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Output only. This is the normalized form of language_code. E.g.:
 *  language_code of `en-GB`, `en_GB`, `en-UK` or `en-gb` will have
 *  normalized_language_code of `en-GB`.
 */
@property(nonatomic, copy, nullable) NSString *normalizedLanguageCode;

/**
 *  Output only. Region part of normalized_language_code, if present. E.g.:
 *  `en-US` -> `US`, `zh-Hans-HK` -> `HK`, `en` -> ``.
 */
@property(nonatomic, copy, nullable) NSString *region;

@end


/**
 *  Request for ListSessions method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaListSessionsRequest : GTLRObject

/**
 *  A filter to apply on the list results. The supported features are:
 *  user_pseudo_id, state. Example: "user_pseudo_id = some_id"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `update_time`
 *  * `create_time` * `session_name` * `is_pinned` Example: * "update_time desc"
 *  * "create_time" * "is_pinned desc,update_time desc": list sessions by
 *  is_pinned first, then by update_time.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of results to return. If unspecified, defaults to 50. Max
 *  allowed value is 1000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A page token, received from a previous `ListSessions` call. Provide this to
 *  retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The data store resource name. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

@end


/**
 *  Response for ListSessions method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sessions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaListSessionsResponse : GTLRCollectionObject

/** Pagination token, if not returned indicates the last page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  All the Sessions for a given data store.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession *> *sessions;

@end


/**
 *  Configuration for Natural Language Query Understanding.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig : GTLRObject

/**
 *  Mode of Natural Language Query Understanding. If this field is unset, the
 *  behavior defaults to NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig_Mode_Disabled
 *        Natural Language Query Understanding is disabled. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig_Mode_Enabled
 *        Natural Language Query Understanding is enabled. (Value: "ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig_Mode_ModeUnspecified
 *        Default value. (Value: "MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Response message for CrawlRateManagementService.ObtainCrawlRate method. The
 *  response contains organcic or dedicated crawl rate time series data for
 *  monitoring, depending on whether dedicated crawl rate is set.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse : GTLRObject

/**
 *  The historical dedicated crawl rate timeseries data, used for monitoring.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaDedicatedCrawlRateTimeSeries *dedicatedCrawlRateTimeSeries;

/** Errors from service when handling the request. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/** The historical organic crawl rate timeseries data, used for monitoring. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaOrganicCrawlRateTimeSeries *organicCrawlRateTimeSeries;

/**
 *  Output only. The state of the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse_State_Failed
 *        The state is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse_State_StateUnspecified
 *        The state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse_State_Succeeded
 *        The state is successful. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The historical organic crawl rate timeseries data, used for monitoring.
 *  Organic crawl is auto-determined by Google to crawl the user's website when
 *  dedicate crawl is not set. Crawl rate is the QPS of crawl request Google
 *  sends to the user's website.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaOrganicCrawlRateTimeSeries : GTLRObject

/**
 *  Google's organic crawl rate time series, which is the sum of all googlebots'
 *  crawl rate. Please refer to
 *  https://developers.google.com/search/docs/crawling-indexing/overview-google-crawlers
 *  for more details about googlebots.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries *googleOrganicCrawlRate;

/**
 *  Vertex AI's organic crawl rate time series, which is the crawl rate of
 *  Google-CloudVertexBot when dedicate crawl is not set. Please refer to
 *  https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers#google-cloudvertexbot
 *  for more details about Google-CloudVertexBot.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries *vertexAiOrganicCrawlRate;

@end


/**
 *  Metadata and configurations for a Google Cloud project in the service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProject : GTLRObject

/** Output only. The timestamp when this project is created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Full resource name of the project, for example
 *  `projects/{project}`. Note that when making requests, project number and
 *  project id are both acceptable, but the server will always respond in
 *  project number.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The timestamp when this project is successfully provisioned.
 *  Empty value means this project is still provisioning and is not ready for
 *  use.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *provisionCompletionTime;

/**
 *  Output only. A map of terms of services. The key is the `id` of
 *  ServiceTerms.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProject_ServiceTermsMap *serviceTermsMap;

@end


/**
 *  Output only. A map of terms of services. The key is the `id` of
 *  ServiceTerms.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProject_ServiceTermsMap : GTLRObject
@end


/**
 *  Metadata about the terms of service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms : GTLRObject

/** The last time when the project agreed to the terms of service. */
@property(nonatomic, strong, nullable) GTLRDateTime *acceptTime;

/**
 *  The last time when the project declined or revoked the agreement to terms of
 *  service.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *declineTime;

/**
 *  The unique identifier of this terms of service. Available terms: *
 *  `GA_DATA_USE_TERMS`: [Terms for data
 *  use](https://cloud.google.com/retail/data-use-terms). When using this as
 *  `id`, the acceptable version to provide is `2022-11-23`.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Whether the project has accepted/rejected the service terms or it is still
 *  pending.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_StateUnspecified
 *        The default value of the enum. This value is not actually used.
 *        (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_TermsAccepted
 *        The project has given consent to the terms of service. (Value:
 *        "TERMS_ACCEPTED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_TermsDeclined
 *        The project has declined or revoked the agreement to terms of service.
 *        (Value: "TERMS_DECLINED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProjectServiceTerms_State_TermsPending
 *        The project is pending to review and accept the terms of service.
 *        (Value: "TERMS_PENDING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The version string of the terms of service. For acceptable values, see the
 *  comments for id above.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Metadata associated with a project provision operation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaProvisionProjectMetadata : GTLRObject
@end


/**
 *  Metadata related to the progress of the PurgeCompletionSuggestions
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CompletionService.PurgeCompletionSuggestions method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Whether the completion suggestions were successfully purged.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeSucceeded;

@end


/**
 *  Metadata related to the progress of the PurgeDocuments operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were ignored as entries were not found.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoredCount;

/**
 *  Count of entries that were deleted successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for DocumentService.PurgeDocuments method. If the long
 *  running operation is successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse : GTLRObject

/**
 *  The total count of documents purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

/**
 *  A sample of document names that will be deleted. Only populated if `force`
 *  is set to false. A max of 100 names will be returned and the names are
 *  chosen at random.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeSample;

@end


/**
 *  Metadata related to the progress of the PurgeSuggestionDenyListEntries
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CompletionService.PurgeSuggestionDenyListEntries
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Number of suggestion deny list entries purged.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

@end


/**
 *  Metadata related to the progress of the PurgeUserEvents operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were deleted successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the PurgeUserEventsRequest. If the long running operation is
 *  successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse : GTLRObject

/**
 *  The total count of events purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

@end


/**
 *  Describes the metrics produced by the evaluation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetrics : GTLRObject

/**
 *  Normalized discounted cumulative gain (NDCG) per document, at various top-k
 *  cutoff levels. NDCG measures the ranking quality, giving higher relevance to
 *  top results. Example (top-3): Suppose SampleQuery with three retrieved
 *  documents (D1, D2, D3) and binary relevance judgements (1 for relevant, 0
 *  for not relevant): Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2
 *  (1), D3 (0)] Calculate NDCG\@3 for each SampleQuery: * DCG\@3: 0/log2(1+1) +
 *  1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG\@3: 1/log2(1+1) + 1/log2(2+1) +
 *  0/log2(3+1) = 1.63 * NDCG\@3: 1.13/1.63 = 0.693
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics *docNdcg;

/**
 *  Precision per document, at various top-k cutoff levels. Precision is the
 *  fraction of retrieved documents that are relevant. Example (top-5): * For a
 *  single SampleQuery, If 4 out of 5 retrieved documents in the top-5 are
 *  relevant, precision\@5 = 4/5 = 0.8
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics *docPrecision;

/**
 *  Recall per document, at various top-k cutoff levels. Recall is the fraction
 *  of relevant documents retrieved out of all relevant documents. Example
 *  (top-5): * For a single SampleQuery, If 3 out of 5 relevant documents are
 *  retrieved in the top-5, recall\@5 = 3/5 = 0.6
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics *docRecall;

/**
 *  Normalized discounted cumulative gain (NDCG) per page, at various top-k
 *  cutoff levels. NDCG measures the ranking quality, giving higher relevance to
 *  top results. Example (top-3): Suppose SampleQuery with three retrieved pages
 *  (P1, P2, P3) and binary relevance judgements (1 for relevant, 0 for not
 *  relevant): Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3
 *  (0)] Calculate NDCG\@3 for SampleQuery: * DCG\@3: 0/log2(1+1) + 1/log2(2+1)
 *  + 1/log2(3+1) = 1.13 * Ideal DCG\@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1)
 *  = 1.63 * NDCG\@3: 1.13/1.63 = 0.693
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics *pageNdcg;

/**
 *  Recall per page, at various top-k cutoff levels. Recall is the fraction of
 *  relevant pages retrieved out of all relevant pages. Example (top-5): * For a
 *  single SampleQuery, if 3 out of 5 relevant pages are retrieved in the top-5,
 *  recall\@5 = 3/5 = 0.6
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics *pageRecall;

@end


/**
 *  Stores the metric values at specific top-k levels.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics : GTLRObject

/**
 *  The top-1 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top1;

/**
 *  The top-10 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top10;

/**
 *  The top-3 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top3;

/**
 *  The top-5 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top5;

@end


/**
 *  Defines a user inputed query.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQuery : GTLRObject

/** Unique Id for the query. */
@property(nonatomic, copy, nullable) NSString *queryId;

/** Plain text. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Metadata related to the progress of the SiteSearchEngineService.RecrawlUris
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Unique URIs in the request that have invalid format. Sample limited to 1000.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *invalidUris;

/**
 *  Total number of unique URIs in the request that have invalid format.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invalidUrisCount;

/** URIs that have no index meta tag. Sample limited to 1000. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *noindexUris;

/**
 *  Total number of URIs that have no index meta tag.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *noindexUrisCount;

/**
 *  Total number of URIs that have yet to be crawled.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pendingCount;

/**
 *  Total number of URIs that were rejected due to insufficient indexing
 *  resources.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quotaExceededCount;

/**
 *  Total number of URIs that have been crawled so far.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Unique URIs in the request that don't match any TargetSite in the DataStore,
 *  only match TargetSites that haven't been fully indexed, or match a
 *  TargetSite with type EXCLUDE. Sample limited to 1000.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *urisNotMatchingTargetSites;

/**
 *  Total number of URIs that don't match any TargetSites.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *urisNotMatchingTargetSitesCount;

/**
 *  Total number of unique URIs in the request that are not in invalid_uris.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validUrisCount;

@end


/**
 *  Response message for SiteSearchEngineService.RecrawlUris method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponse : GTLRObject

/** URIs that were not crawled before the LRO terminated. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *failedUris;

/** Details for a sample of up to 10 `failed_uris`. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo *> *failureSamples;

@end


/**
 *  Details about why a particular URI failed to be crawled. Each FailureInfo
 *  contains one FailureReason per CorpusType.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo : GTLRObject

/** List of failure reasons by corpus type (e.g. desktop, mobile). */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason *> *failureReasons;

/** URI that failed to be crawled. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Details about why crawling failed for a particular CorpusType, e.g., DESKTOP
 *  and MOBILE crawling may fail for different reasons.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason : GTLRObject

/**
 *  DESKTOP, MOBILE, or CORPUS_TYPE_UNSPECIFIED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason_CorpusType_CorpusTypeUnspecified
 *        Default value. (Value: "CORPUS_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason_CorpusType_Desktop
 *        Denotes a crawling attempt for the desktop version of a page. (Value:
 *        "DESKTOP")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason_CorpusType_Mobile
 *        Denotes a crawling attempt for the mobile version of a page. (Value:
 *        "MOBILE")
 */
@property(nonatomic, copy, nullable) NSString *corpusType;

/** Reason why the URI was not crawled. */
@property(nonatomic, copy, nullable) NSString *errorMessage;

@end


/**
 *  Metadata related to the progress of the
 *  CrawlRateManagementService.RemoveDedicatedCrawlRate operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CrawlRateManagementService.RemoveDedicatedCrawlRate
 *  method. It simply returns the state of the response, and an error message if
 *  the state is FAILED.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse : GTLRObject

/** Errors from service when handling the request. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Output only. The state of the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse_State_Failed
 *        The state is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse_State_StateUnspecified
 *        The state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse_State_Succeeded
 *        The state is successful. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Safety rating corresponding to the generated content.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating : GTLRObject

/**
 *  Output only. Indicates whether the content was filtered out because of this
 *  rating.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *blocked;

/**
 *  Output only. Harm category.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryCivicIntegrity
 *        The harm category is civic integrity. (Value:
 *        "HARM_CATEGORY_CIVIC_INTEGRITY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryDangerousContent
 *        The harm category is dangerous content. (Value:
 *        "HARM_CATEGORY_DANGEROUS_CONTENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryHarassment
 *        The harm category is harassment. (Value: "HARM_CATEGORY_HARASSMENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryHateSpeech
 *        The harm category is hate speech. (Value: "HARM_CATEGORY_HATE_SPEECH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategorySexuallyExplicit
 *        The harm category is sexually explicit content. (Value:
 *        "HARM_CATEGORY_SEXUALLY_EXPLICIT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Category_HarmCategoryUnspecified
 *        The harm category is unspecified. (Value: "HARM_CATEGORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *category;

/**
 *  Output only. Harm probability levels in the content.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_HarmProbabilityUnspecified
 *        Harm probability unspecified. (Value: "HARM_PROBABILITY_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_High
 *        High level of harm. (Value: "HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_Low
 *        Low level of harm. (Value: "LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_Medium
 *        Medium level of harm. (Value: "MEDIUM")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Probability_Negligible
 *        Negligible level of harm. (Value: "NEGLIGIBLE")
 */
@property(nonatomic, copy, nullable) NSString *probability;

/**
 *  Output only. Harm probability score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *probabilityScore;

/**
 *  Output only. Harm severity levels in the content.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityHigh
 *        High level of harm severity. (Value: "HARM_SEVERITY_HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityLow
 *        Low level of harm severity. (Value: "HARM_SEVERITY_LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityMedium
 *        Medium level of harm severity. (Value: "HARM_SEVERITY_MEDIUM")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityNegligible
 *        Negligible level of harm severity. (Value: "HARM_SEVERITY_NEGLIGIBLE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSafetyRating_Severity_HarmSeverityUnspecified
 *        Harm severity unspecified. (Value: "HARM_SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Output only. Harm severity score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *severityScore;

@end


/**
 *  Defines the structure and layout of a type of document data.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSchema : GTLRObject

/** Output only. Configurations for fields of the schema. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaFieldConfig *> *fieldConfigs;

/** The JSON representation of the schema. */
@property(nonatomic, copy, nullable) NSString *jsonSchema;

/**
 *  Immutable. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The structured representation of the schema. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSchema_StructSchema *structSchema;

@end


/**
 *  The structured representation of the schema.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSchema_StructSchema : GTLRObject
@end


/**
 *  Promotion proto includes uri and other helping information to display the
 *  promotion.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchLinkPromotion : GTLRObject

/**
 *  Optional. The Promotion description. Maximum length: 200 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. The enabled promotion will be returned for any serving configs
 *  associated with the parent of the control this promotion is attached to.
 *  This flag is used for basic site search only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/** Optional. The promotion thumbnail image url. */
@property(nonatomic, copy, nullable) NSString *imageUri;

/** Required. The title of the promotion. Maximum length: 160 characters. */
@property(nonatomic, copy, nullable) NSString *title;

/** Required. The URL for the page the user wants to promote. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Request message for SearchService.Search method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest : GTLRObject

/**
 *  Boost specification to boost certain documents. For more information on
 *  boosting, see
 *  [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec *boostSpec;

/**
 *  The branch resource name, such as `projects/ *
 *  /locations/global/collections/default_collection/dataStores/default_data_store/branches/0`.
 *  Use `default_branch` as the branch ID or leave this field empty, to search
 *  documents under the default branch.
 */
@property(nonatomic, copy, nullable) NSString *branch;

/**
 *  The default filter that is applied when a user performs a search without
 *  checking any filters on the search page. The filter applied to every search
 *  request when quality improvement such as query expansion is needed. In the
 *  case a query does not have a sufficient amount of results this filter will
 *  be used to determine whether or not to enable the query expansion flow. The
 *  original filter will still be used for the query expanded search. This field
 *  is strongly recommended to achieve high search quality. For more information
 *  about filter syntax, see SearchRequest.filter.
 */
@property(nonatomic, copy, nullable) NSString *canonicalFilter;

/** A specification for configuring the behavior of content search. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec *contentSearchSpec;

/**
 *  Custom fine tuning configs. If set, it has higher priority than the configs
 *  set in ServingConfig.custom_fine_tuning_spec.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec *customFineTuningSpec;

/**
 *  Specifications that define the specific [DataStore]s to be searched, along
 *  with configurations for those data stores. This is only considered for
 *  Engines with multiple data stores. For engines with a single data store, the
 *  specs directly under SearchRequest should be used.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec *> *dataStoreSpecs;

/**
 *  Optional. Config for display feature, like match highlighting on search
 *  results.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec *displaySpec;

/**
 *  Uses the provided embedding to do additional semantic document retrieval.
 *  The retrieval is based on the dot product of
 *  SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document
 *  embedding that is provided in
 *  SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If
 *  SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not provided, it
 *  will use ServingConfig.EmbeddingConfig.field_path.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec *embeddingSpec;

/**
 *  Facet specifications for faceted search. If empty, no facets are returned. A
 *  maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
 *  returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec *> *facetSpecs;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the documents being filtered. Filter
 *  expression is case-sensitive. If this field is unrecognizable, an
 *  `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
 *  mapping the LHS filter key to a key property defined in the Vertex AI Search
 *  backend -- this mapping is defined by the customer in their schema. For
 *  example a media customer might have a field 'name' in their schema. In this
 *  case the filter would look like this: filter --> name:'ANY("king kong")' For
 *  more information about filtering including syntax and filter operators, see
 *  [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Raw image query. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery *imageQuery;

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". For more
 *  information, see [Standard
 *  fields](https://cloud.google.com/apis/design/standard_fields). This field
 *  helps to better interpret the query. If a value isn't specified, the query
 *  language code is automatically detected, which may not be accurate.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  If `naturalLanguageQueryUnderstandingSpec` is not specified, no additional
 *  natural language query understanding will be done.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec *naturalLanguageQueryUnderstandingSpec;

/**
 *  A 0-indexed integer that specifies the current offset (that is, starting
 *  result location, amongst the Documents deemed by the API as relevant) in
 *  search results. This field is only considered if page_token is unset. If
 *  this field is negative, an `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The maximum number of results to return for OneBox. This applies to each
 *  OneBox type individually. Default number is 10.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *oneBoxPageSize;

/**
 *  The order in which documents are returned. Documents can be ordered by a
 *  field in an Document object. Leave it unset if ordered by relevance.
 *  `order_by` expression is case-sensitive. For more information on ordering
 *  the website search results, see [Order web search
 *  results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results).
 *  For more information on ordering the healthcare search results, see [Order
 *  healthcare search
 *  results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results).
 *  If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of Documents to return. The maximum allowed value depends on
 *  the data type. Values above the maximum value are coerced to the maximum
 *  value. * Websites with basic indexing: Default `10`, Maximum `25`. *
 *  Websites with advanced indexing: Default `25`, Maximum `50`. * Other:
 *  Default `50`, Maximum `100`. If this field is negative, an
 *  `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A page token received from a previous SearchService.Search call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to SearchService.Search must match the call that provided the page
 *  token. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Additional search parameters. For public website search only, supported
 *  values are: * `user_country_code`: string. Default empty. If set to
 *  non-empty, results are restricted or boosted based on the location provided.
 *  For example, `user_country_code: "au"` For available codes see [Country
 *  Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
 *  * `search_type`: double. Default empty. Enables non-webpage searching
 *  depending on the value. The only valid non-default value is 1, which enables
 *  image searching. For example, `search_type: 1`
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_Params *params;

/**
 *  The specification for personalization. Notice that if both
 *  ServingConfig.personalization_spec and SearchRequest.personalization_spec
 *  are set, SearchRequest.personalization_spec overrides
 *  ServingConfig.personalization_spec.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec *personalizationSpec;

/** Raw search query. */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  The query expansion specification that specifies the conditions under which
 *  query expansion occurs.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec *queryExpansionSpec;

/**
 *  The ranking expression controls the customized ranking on retrieval
 *  documents. This overrides ServingConfig.ranking_expression. The syntax and
 *  supported features depend on the ranking_expression_backend value. If
 *  ranking_expression_backend is not provided, it defaults to BYOE. === BYOE
 *  === If ranking expression is not provided or set to BYOE, it should be a
 *  single function or multiple functions that are joined by "+". *
 *  ranking_expression = function, { " + ", function }; Supported functions: *
 *  double * relevance_score * double * dotProduct(embedding_field_path)
 *  Function variables: * `relevance_score`: pre-defined keywords, used for
 *  measure relevance between query and document. * `embedding_field_path`: the
 *  document embedding field used with query embedding vector. * `dotProduct`:
 *  embedding function between embedding_field_path and query embedding vector.
 *  Example ranking expression: If document has an embedding field
 *  doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3
 *  * dotProduct(doc_embedding)`. === CLEARBOX === If ranking expression is set
 *  to CLEARBOX, the following expression types (and combinations of those
 *  chained using + or * operators) are supported: * double * signal *
 *  log(signal) * exp(signal) * rr(signal, double > 0) -- reciprocal rank
 *  transformation with second argument being a denominator constant. *
 *  is_nan(signal) -- returns 0 if signal is NaN, 1 otherwise. *
 *  fill_nan(signal1, signal2 | double) -- if signal1 is NaN, returns signal2 |
 *  double, else returns signal1. Examples: * 0.2 * gecko_score + 0.8 *
 *  log(bm25_score) * 0.2 * exp(fill_nan(gecko_score, 0)) + 0.3 *
 *  is_nan(bm25_score) * 0.2 * rr(gecko_score, 16) + 0.8 * rr(bm25_score, 32)
 *  The following signals are supported: * gecko_score -- semantic similarity
 *  adjustment * bm25_score -- keyword match adjustment * jetstream_score --
 *  semantic relevance adjustment * pctr_rank -- predicted conversion rate
 *  adjustment as a rank * freshness_rank -- freshness adjustment as a rank *
 *  base_rank -- the default rank of the result
 */
@property(nonatomic, copy, nullable) NSString *rankingExpression;

/**
 *  Optional. The backend to use for the ranking expression evaluation.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RankingExpressionBackend_Byoe
 *        Bring your own embedding (BYOE), the default way to evaluate the
 *        ranking expression. (Value: "BYOE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RankingExpressionBackend_Clearbox
 *        The expression is compiled into a Clearbox formula. (Value:
 *        "CLEARBOX")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RankingExpressionBackend_Unknown
 *        Default option for unspecified/unknown values. (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *rankingExpressionBackend;

/**
 *  The Unicode country/region code (CLDR) of a location, such as "US" and
 *  "419". For more information, see [Standard
 *  fields](https://cloud.google.com/apis/design/standard_fields). If set, then
 *  results will be boosted based on the region_code provided.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

/** Optional. The specification for returning the relevance score. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestRelevanceScoreSpec *relevanceScoreSpec;

/**
 *  The relevance threshold of the search results. Default to Google defined
 *  threshold, leveraging a balance of precision and recall to deliver both
 *  highly accurate results and comprehensive coverage of relevant information.
 *  This feature is not supported for healthcare search.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_High
 *        High relevance threshold. (Value: "HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_Low
 *        Low relevance threshold. (Value: "LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_Lowest
 *        Lowest relevance threshold. (Value: "LOWEST")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_Medium
 *        Medium relevance threshold. (Value: "MEDIUM")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_RelevanceThreshold_RelevanceThresholdUnspecified
 *        Default value. In this case, server behavior defaults to Google
 *        defined threshold. (Value: "RELEVANCE_THRESHOLD_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *relevanceThreshold;

/**
 *  Whether to turn on safe search. This is only supported for website search.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *safeSearch;

/**
 *  Search as you type configuration. Only supported for the
 *  IndustryVertical.MEDIA vertical.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec *searchAsYouTypeSpec;

/**
 *  Required. The resource name of the Search serving config, such as `projects/
 *  * /locations/global/collections/default_collection/engines/ *
 *  /servingConfigs/default_serving_config`, or `projects/ *
 *  /locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
 *  This field is used to identify the serving configuration name, set of models
 *  used to make the search.
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  The session resource name. Optional. Session allows users to do multi-turn
 *  /search API calls or coordination between /search API calls and /answer API
 *  calls. Example #1 (multi-turn /search API calls): 1. Call /search API with
 *  the auto-session mode (see below). 2. Call /search API with the session ID
 *  generated in the first call. Here, the previous search query gets considered
 *  in query standing. I.e., if the first query is "How did Alphabet do in
 *  2022?" and the current query is "How about 2023?", the current query will be
 *  interpreted as "How did Alphabet do in 2023?". Example #2 (coordination
 *  between /search API calls and /answer API calls): 1. Call /search API with
 *  the auto-session mode (see below). 2. Call /answer API with the session ID
 *  generated in the first call. Here, the answer generation happens in the
 *  context of the search results from the first search call. Auto-session mode:
 *  when `projects/.../sessions/-` is used, a new session gets automatically
 *  created. Otherwise, users can use the create-session API to create a session
 *  manually. Multi-turn Search feature is currently at private GA stage. Please
 *  use v1alpha or v1beta version instead before we launch this feature to
 *  public GA. Or ask for allowlisting through Google Support team.
 */
@property(nonatomic, copy, nullable) NSString *session;

/** Session specification. Can be used only when `session` is set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec *sessionSpec;

/**
 *  The spell correction specification that specifies the mode under which spell
 *  correction takes effect.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec *spellCorrectionSpec;

/**
 *  Information about the end user. Highly recommended for analytics and
 *  personalization. UserInfo.user_agent is used to deduce `device_type` for
 *  analytics.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUserInfo *userInfo;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_UserLabels *userLabels;

/**
 *  A unique identifier for tracking visitors. For example, this could be
 *  implemented with an HTTP cookie, which should be able to uniquely identify a
 *  visitor on a single device. This unique identifier should not change if the
 *  visitor logs in or out of the website. This field should NOT have a fixed
 *  value such as `unknown_visitor`. This should be the same identifier as
 *  UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field
 *  must be a UTF-8 encoded string with a length limit of 128 characters.
 *  Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Additional search parameters. For public website search only, supported
 *  values are: * `user_country_code`: string. Default empty. If set to
 *  non-empty, results are restricted or boosted based on the location provided.
 *  For example, `user_country_code: "au"` For available codes see [Country
 *  Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
 *  * `search_type`: double. Default empty. Enables non-webpage searching
 *  depending on the value. The only valid non-default value is 1, which enables
 *  image searching. For example, `search_type: 1`
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_Params : GTLRObject
@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequest_UserLabels : GTLRObject
@end


/**
 *  Boost specification to boost certain documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec : GTLRObject

/**
 *  Condition boost specifications. If a document matches multiple conditions in
 *  the specifictions, boost scores from these specifications are all applied
 *  and combined in a non-linear way. Maximum number of specifications is 20.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec *> *conditionBoostSpecs;

@end


/**
 *  Boost applies to documents which match a condition.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec : GTLRObject

/**
 *  Strength of the condition boost, which should be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0. Setting to 1.0 gives the document a big
 *  promotion. However, it does not necessarily mean that the boosted document
 *  will be the top result at all times, nor that other documents will be
 *  excluded. Results could still be shown even when none of them matches the
 *  condition. And results that are significantly more relevant to the search
 *  query can still trump your heavily favored but irrelevant documents. Setting
 *  to -1.0 gives the document a big demotion. However, results that are deeply
 *  relevant might still be shown. The document will have an upstream battle to
 *  get a fairly high ranking, but it is not blocked out completely. Setting to
 *  0.0 means no boost applied. The boosting condition is ignored. Only one of
 *  the (condition, boost) combination or the boost_control_spec below are set.
 *  If both are set then the global boost is ignored and the more fine-grained
 *  boost_control_spec is applied.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost;

/**
 *  Complex specification for custom ranking based on customer defined attribute
 *  value.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec *boostControlSpec;

/**
 *  An expression which specifies a boost condition. The syntax and supported
 *  fields are the same as a filter expression. See SearchRequest.filter for
 *  detail syntax and limitations. Examples: * To boost documents with document
 *  ID "doc_1" or "doc_2", and color "Red" or "Blue": `(document_id:
 *  ANY("doc_1", "doc_2")) AND (color: ANY("Red", "Blue"))`
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  Specification for custom ranking based on customer specified attribute
 *  value. It provides more controls for customized ranking than the simple
 *  (condition, boost) combination above.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec : GTLRObject

/**
 *  The attribute type to be used to determine the boost amount. The attribute
 *  value can be derived from the field value of the specified field_name. In
 *  the case of numerical it is straightforward i.e. attribute_value =
 *  numerical_field_value. In the case of freshness however, attribute_value =
 *  (time.now() - datetime_field_value).
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_AttributeTypeUnspecified
 *        Unspecified AttributeType. (Value: "ATTRIBUTE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Freshness
 *        For the freshness use case the attribute value will be the duration
 *        between the current time and the date in the datetime field specified.
 *        The value must be formatted as an XSD `dayTimeDuration` value (a
 *        restricted subset of an ISO 8601 duration value). The pattern for this
 *        is: `nDnM]`. For example, `5D`, `3DT12H30M`, `T24H`. (Value:
 *        "FRESHNESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Numerical
 *        The value of the numerical field will be used to dynamically update
 *        the boost amount. In this case, the attribute_value (the x value) of
 *        the control point will be the actual value of the numerical field for
 *        which the boost_amount is specified. (Value: "NUMERICAL")
 */
@property(nonatomic, copy, nullable) NSString *attributeType;

/**
 *  The control points used to define the curve. The monotonic function (defined
 *  through the interpolation_type above) passes through the control points
 *  listed here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint *> *controlPoints;

/**
 *  The name of the field whose value will be used to determine the boost
 *  amount.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  The interpolation type to be applied to connect the control points listed
 *  below.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_InterpolationTypeUnspecified
 *        Interpolation type is unspecified. In this case, it defaults to
 *        Linear. (Value: "INTERPOLATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_Linear
 *        Piecewise linear interpolation will be applied. (Value: "LINEAR")
 */
@property(nonatomic, copy, nullable) NSString *interpolationType;

@end


/**
 *  The control points used to define the curve. The curve defined through these
 *  control points can only be monotonically increasing or decreasing(constant
 *  values are acceptable).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint : GTLRObject

/**
 *  Can be one of: 1. The numerical field value. 2. The duration spec for
 *  freshness: The value must be formatted as an XSD `dayTimeDuration` value (a
 *  restricted subset of an ISO 8601 duration value). The pattern for this is:
 *  `nDnM]`.
 */
@property(nonatomic, copy, nullable) NSString *attributeValue;

/**
 *  The value between -1 to 1 by which to boost the score if the attribute_value
 *  evaluates to the value specified above.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boostAmount;

@end


/**
 *  A specification for configuring the behavior of content search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec : GTLRObject

/**
 *  Specifies the chunk spec to be returned from the search response. Only
 *  available if the SearchRequest.ContentSearchSpec.search_result_mode is set
 *  to CHUNKS
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec *chunkSpec;

/**
 *  If there is no extractive_content_spec provided, there will be no extractive
 *  answer in the search response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec *extractiveContentSpec;

/**
 *  Specifies the search result mode. If unspecified, the search result mode
 *  defaults to `DOCUMENTS`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec_SearchResultMode_Chunks
 *        Returns chunks in the search result. Only available if the
 *        DocumentProcessingConfig.chunking_config is specified. (Value:
 *        "CHUNKS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec_SearchResultMode_Documents
 *        Returns documents in the search result. (Value: "DOCUMENTS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec_SearchResultMode_SearchResultModeUnspecified
 *        Default value. (Value: "SEARCH_RESULT_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchResultMode;

/**
 *  If `snippetSpec` is not specified, snippets are not included in the search
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec *snippetSpec;

/**
 *  If `summarySpec` is not specified, summaries are not included in the search
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec *summarySpec;

@end


/**
 *  Specifies the chunk spec to be returned from the search response. Only
 *  available if the SearchRequest.ContentSearchSpec.search_result_mode is set
 *  to CHUNKS
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec : GTLRObject

/**
 *  The number of next chunks to be returned of the current chunk. The maximum
 *  allowed value is 3. If not specified, no next chunks will be returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numNextChunks;

/**
 *  The number of previous chunks to be returned of the current chunk. The
 *  maximum allowed value is 3. If not specified, no previous chunks will be
 *  returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numPreviousChunks;

@end


/**
 *  A specification for configuring the extractive content in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec : GTLRObject

/**
 *  The maximum number of extractive answers returned in each search result. An
 *  extractive answer is a verbatim answer extracted from the original document,
 *  which provides a precise and contextually relevant answer to the search
 *  query. If the number of matching answers is less than the
 *  `max_extractive_answer_count`, return all of the answers. Otherwise, return
 *  the `max_extractive_answer_count`. At most five answers are returned for
 *  each SearchResult.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxExtractiveAnswerCount;

/**
 *  The max number of extractive segments returned in each search result. Only
 *  applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED
 *  or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is
 *  a text segment extracted from the original document that is relevant to the
 *  search query, and, in general, more verbose than an extractive answer. The
 *  segment could then be used as input for LLMs to generate summaries and
 *  answers. If the number of matching segments is less than
 *  `max_extractive_segment_count`, return all of the segments. Otherwise,
 *  return the `max_extractive_segment_count`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxExtractiveSegmentCount;

/**
 *  Return at most `num_next_segments` segments after each selected segments.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numNextSegments;

/**
 *  Specifies whether to also include the adjacent from each selected segments.
 *  Return at most `num_previous_segments` segments before each selected
 *  segments.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numPreviousSegments;

/**
 *  Specifies whether to return the confidence score from the extractive
 *  segments in each search result. This feature is available only for new or
 *  allowlisted data stores. To allowlist your data store, contact your Customer
 *  Engineer. The default value is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnExtractiveSegmentScore;

@end


/**
 *  A specification for configuring snippets in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec : GTLRObject

/**
 *  [DEPRECATED] This field is deprecated. To control snippet return, use
 *  `return_snippet` field. For backwards compatibility, we will return snippet
 *  if max_snippet_count > 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxSnippetCount GTLR_DEPRECATED;

/**
 *  [DEPRECATED] This field is deprecated and will have no affect on the
 *  snippet.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *referenceOnly GTLR_DEPRECATED;

/**
 *  If `true`, then return snippet. If no snippet can be generated, we return
 *  "No snippet is available for this page." A `snippet_status` with `SUCCESS`
 *  or `NO_SNIPPET_AVAILABLE` will also be returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnSnippet;

@end


/**
 *  A specification for configuring a summary returned in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec : GTLRObject

/**
 *  Specifies whether to filter out adversarial queries. The default value is
 *  `false`. Google employs search-query classification to detect adversarial
 *  queries. No summary is returned if the search query is classified as an
 *  adversarial query. For example, a user might ask a question regarding
 *  negative comments about the company or submit a query designed to generate
 *  unsafe, policy-violating output. If this field is set to `true`, we skip
 *  generating summaries for adversarial queries and return fallback messages
 *  instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreAdversarialQuery;

/**
 *  Optional. Specifies whether to filter out jail-breaking queries. The default
 *  value is `false`. Google employs search-query classification to detect
 *  jail-breaking queries. No summary is returned if the search query is
 *  classified as a jail-breaking query. A user might add instructions to the
 *  query to change the tone, style, language, content of the answer, or ask the
 *  model to act as a different entity, e.g. "Reply in the tone of a competing
 *  company's CEO". If this field is set to `true`, we skip generating summaries
 *  for jail-breaking queries and return fallback messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreJailBreakingQuery;

/**
 *  Specifies whether to filter out queries that have low relevance. The default
 *  value is `false`. If this field is set to `false`, all search results are
 *  used regardless of relevance to generate answers. If set to `true`, only
 *  queries with high relevance search results will generate answers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreLowRelevantContent;

/**
 *  Specifies whether to filter out queries that are not summary-seeking. The
 *  default value is `false`. Google employs search-query classification to
 *  detect summary-seeking queries. No summary is returned if the search query
 *  is classified as a non-summary seeking query. For example, `why is the sky
 *  blue` and `Who is the best soccer player in the world?` are summary-seeking
 *  queries, but `SFO airport` and `world cup 2026` are not. They are most
 *  likely navigational queries. If this field is set to `true`, we skip
 *  generating summaries for non-summary seeking queries and return fallback
 *  messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreNonSummarySeekingQuery;

/**
 *  Specifies whether to include citations in the summary. The default value is
 *  `false`. When this field is set to `true`, summaries include in-line
 *  citation numbers. Example summary including citations: BigQuery is Google
 *  Cloud's fully managed and completely serverless enterprise data warehouse
 *  [1]. BigQuery supports all data types, works across clouds, and has built-in
 *  machine learning and business intelligence, all within a unified platform
 *  [2, 3]. The citation numbers refer to the returned search results and are
 *  1-indexed. For example, [1] means that the sentence is attributed to the
 *  first search result. [2, 3] means that the sentence is attributed to both
 *  the second and third search results.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeCitations;

/**
 *  Language code for Summary. Use language tags defined by
 *  [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an
 *  experimental feature.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  If specified, the spec will be used to modify the prompt provided to the
 *  LLM.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec *modelPromptSpec;

/**
 *  If specified, the spec will be used to modify the model specification
 *  provided to the LLM.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec *modelSpec;

/**
 *  The number of top results to generate the summary from. If the number of
 *  results returned is less than `summaryResultCount`, the summary is generated
 *  from all of the results. At most 10 results for documents mode, or 50 for
 *  chunks mode, can be used to generate a summary. The chunks mode is used when
 *  SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *summaryResultCount;

/**
 *  If true, answer will be generated from most relevant chunks from top search
 *  results. This feature will improve summary quality. Note that with this
 *  feature enabled, not all top search results will be referenced and included
 *  in the reference list, so the citation source index only points to the
 *  search results listed in the reference list.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useSemanticChunks;

@end


/**
 *  Specification of the prompt to use with the model.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec : GTLRObject

/**
 *  Text at the beginning of the prompt that instructs the assistant. Examples
 *  are available in the user guide.
 */
@property(nonatomic, copy, nullable) NSString *preamble;

@end


/**
 *  Specification of the model.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec : GTLRObject

/**
 *  The model version used to generate the summary. Supported values are: *
 *  `stable`: string. Default value when no value is specified. Uses a generally
 *  available, fine-tuned model. For more information, see [Answer generation
 *  model versions and
 *  lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
 *  * `preview`: string. (Public preview) Uses a preview model. For more
 *  information, see [Answer generation model versions and
 *  lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  A struct to define data stores to filter on in a search call and
 *  configurations for those data stores. Otherwise, an `INVALID_ARGUMENT` error
 *  is returned.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec : GTLRObject

/**
 *  Optional. Boost specification to boost certain documents. For more
 *  information on boosting, see
 *  [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec *boostSpec;

/**
 *  Required. Full resource name of DataStore, such as
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Optional. Filter specification to filter documents in the data store
 *  specified by data_store field. For more information on filtering, see
 *  [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  Specifies features for display, like match highlighting.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec : GTLRObject

/**
 *  The condition under which match highlighting should occur.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec_MatchHighlightingCondition_MatchHighlightingConditionUnspecified
 *        Server behavior is the same as `MATCH_HIGHLIGHTING_DISABLED`. (Value:
 *        "MATCH_HIGHLIGHTING_CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec_MatchHighlightingCondition_MatchHighlightingDisabled
 *        Disables match highlighting on all documents. (Value:
 *        "MATCH_HIGHLIGHTING_DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec_MatchHighlightingCondition_MatchHighlightingEnabled
 *        Enables match highlighting on all documents. (Value:
 *        "MATCH_HIGHLIGHTING_ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *matchHighlightingCondition;

@end


/**
 *  The specification that uses customized query embedding vector to do semantic
 *  document retrieval.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec : GTLRObject

/** The embedding vector used for retrieval. Limit to 1. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector *> *embeddingVectors;

@end


/**
 *  Embedding vector.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector : GTLRObject

/** Embedding field path in schema. */
@property(nonatomic, copy, nullable) NSString *fieldPath;

/**
 *  Query embedding vector.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *vector;

@end


/**
 *  A facet specification to perform faceted search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec : GTLRObject

/**
 *  Enables dynamic position for this facet. If set to true, the position of
 *  this facet among all facets in the response is determined automatically. If
 *  dynamic facets are enabled, it is ordered together. If set to false, the
 *  position of this facet in the response is the same as in the request, and it
 *  is ranked before the facets with dynamic position enable and all dynamic
 *  facets. For example, you may always want to have rating facet returned in
 *  the response, but it's not necessarily to always display the rating facet at
 *  the top. In that case, you can set enable_dynamic_position to true so that
 *  the position of rating facet in response is determined automatically.
 *  Another example, assuming you have the following facets in the request: *
 *  "rating", enable_dynamic_position = true * "price", enable_dynamic_position
 *  = false * "brands", enable_dynamic_position = false And also you have a
 *  dynamic facets enabled, which generates a facet `gender`. Then the final
 *  order of the facets in the response can be ("price", "brands", "rating",
 *  "gender") or ("price", "brands", "gender", "rating") depends on how API
 *  orders "gender" and "rating" facets. However, notice that "price" and
 *  "brands" are always ranked at first and second position because their
 *  enable_dynamic_position is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDynamicPosition;

/**
 *  List of keys to exclude when faceting. By default, FacetKey.key is not
 *  excluded from the filter unless it is listed in this field. Listing a facet
 *  key in this field allows its values to appear as facet results, even when
 *  they are filtered out of search results. Using this field does not affect
 *  what search results are returned. For example, suppose there are 100
 *  documents with the color facet "Red" and 200 documents with the color facet
 *  "Blue". A query containing the filter "color:ANY("Red")" and having "color"
 *  as FacetKey.key would by default return only "Red" documents in the search
 *  results, and also return "Red" with count 100 as the only color facet.
 *  Although there are also blue documents available, "Blue" would not be shown
 *  as an available facet value. If "color" is listed in "excludedFilterKeys",
 *  then the query returns the facet values "Red" with count 100 and "Blue" with
 *  count 200, because the "color" key is now excluded from the filter. Because
 *  this field doesn't affect search results, the search results are still
 *  correctly filtered to return only "Red" documents. A maximum of 100 values
 *  are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedFilterKeys;

/** Required. The facet key specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey *facetKey;

/**
 *  Maximum facet values that are returned for this facet. If unspecified,
 *  defaults to 20. The maximum allowed value is 300. Values above 300 are
 *  coerced to 300. For aggregation in healthcare search, when the
 *  [FacetKey.key] is "healthcare_aggregation_key", the limit will be overridden
 *  to 10,000 internally, regardless of the value set here. If this field is
 *  negative, an `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *limit;

@end


/**
 *  Specifies how a facet is computed.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey : GTLRObject

/**
 *  True to make facet keys case insensitive when getting faceting values with
 *  prefixes or contains; false otherwise.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *caseInsensitive;

/**
 *  Only get facet values that contain the given strings. For example, suppose
 *  "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi >
 *  2022". If set "contains" to "2022", the "category" facet only contains
 *  "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields.
 *  Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *contains;

/**
 *  Set only if values should be bucketed into intervals. Must be set for facets
 *  with numerical values. Must not be set for facet with text values. Maximum
 *  number of intervals is 30.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaInterval *> *intervals;

/**
 *  Required. Supported textual and numerical facet keys in Document object,
 *  over which the facet values are computed. Facet key is case-sensitive.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The order in which documents are returned. Allowed values are: * "count
 *  desc", which means order by SearchResponse.Facet.values.count descending. *
 *  "value desc", which means order by SearchResponse.Facet.values.value
 *  descending. Only applies to textual facets. If not set, textual values are
 *  sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order);
 *  numerical intervals are sorted in the order given by
 *  FacetSpec.FacetKey.intervals.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Only get facet values that start with the given string prefix. For example,
 *  suppose "category" has three values "Action > 2022", "Action > 2021" and
 *  "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only
 *  contains "Action > 2022" and "Action > 2021". Only supported on textual
 *  fields. Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *prefixes;

/**
 *  Only get facet for the given restricted values. Only supported on textual
 *  fields. For example, suppose "category" has three values "Action > 2022",
 *  "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action >
 *  2022", the "category" facet only contains "Action > 2022". Only supported on
 *  textual fields. Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedValues;

@end


/**
 *  Specifies the image query input.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery : GTLRObject

/**
 *  Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP.
 */
@property(nonatomic, copy, nullable) NSString *imageBytes;

@end


/**
 *  Specification to enable natural language understanding capabilities for
 *  search requests.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec : GTLRObject

/**
 *  The condition under which filter extraction should occur. Server behavior
 *  defaults to `DISABLED`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_ConditionUnspecified
 *        Server behavior defaults to `DISABLED`. (Value:
 *        "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Disabled
 *        Disables NL filter extraction. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Enabled
 *        Enables NL filter extraction. (Value: "ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *filterExtractionCondition;

/**
 *  Field names used for location-based filtering, where geolocation filters are
 *  detected in natural language search queries. Only valid when the
 *  FilterExtractionCondition is set to `ENABLED`. If this field is set, it
 *  overrides the field names set in
 *  ServingConfig.geo_search_query_detection_field_names.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *geoSearchQueryDetectionFieldNames;

@end


/**
 *  The specification for personalization.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec : GTLRObject

/**
 *  The personalization mode of the search request. Defaults to Mode.AUTO.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec_Mode_Auto
 *        Personalization is enabled if data quality requirements are met.
 *        (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec_Mode_Disabled
 *        Disable personalization. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec_Mode_ModeUnspecified
 *        Default value. In this case, server behavior defaults to Mode.AUTO.
 *        (Value: "MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Specification to determine under which conditions query expansion should
 *  occur.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec : GTLRObject

/**
 *  The condition under which query expansion should occur. Default to
 *  Condition.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec_Condition_Auto
 *        Automatic query expansion built by the Search API. (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec_Condition_ConditionUnspecified
 *        Unspecified query expansion condition. In this case, server behavior
 *        defaults to Condition.DISABLED. (Value: "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec_Condition_Disabled
 *        Disabled query expansion. Only the exact search query is used, even if
 *        SearchResponse.total_size is zero. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  Whether to pin unexpanded results. If this field is set to true, unexpanded
 *  products are always at the top of the search results, followed by the
 *  expanded results.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pinUnexpandedResults;

@end


/**
 *  The specification for returning the document relevance score.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestRelevanceScoreSpec : GTLRObject

/**
 *  Optional. Whether to return the relevance score for search results. The
 *  higher the score, the more relevant the document is to the query.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnRelevanceScore;

@end


/**
 *  Specification for search as you type in search requests.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec : GTLRObject

/**
 *  The condition under which search as you type should occur. Default to
 *  Condition.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_Auto
 *        Automatic switching between search-as-you-type and standard search
 *        modes, ideal for single-API implementations (e.g., debouncing).
 *        (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_ConditionUnspecified
 *        Server behavior defaults to Condition.DISABLED. (Value:
 *        "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_Disabled
 *        Disables Search As You Type. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec_Condition_Enabled
 *        Enables Search As You Type. (Value: "ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  Session specification. Multi-turn Search feature is currently at private GA
 *  stage. Please use v1alpha or v1beta version instead before we launch this
 *  feature to public GA. Or ask for allowlisting through Google Support team.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec : GTLRObject

/**
 *  If set, the search result gets stored to the "turn" specified by this query
 *  ID. Example: Let's say the session looks like this: session { name:
 *  ".../sessions/xxx" turns { query { text: "What is foo?" query_id:
 *  ".../questions/yyy" } answer: "Foo is ..." } turns { query { text: "How
 *  about bar then?" query_id: ".../questions/zzz" } } } The user can call
 *  /search API with a request like this: session: ".../sessions/xxx"
 *  session_spec { query_id: ".../questions/zzz" } Then, the API stores the
 *  search result, associated with the last turn. The stored search result can
 *  be used by a subsequent /answer API call (with the session ID and the query
 *  ID specified). Also, it is possible to call /search and /answer in parallel
 *  with the same session ID & query ID.
 */
@property(nonatomic, copy, nullable) NSString *queryId;

/**
 *  The number of top search results to persist. The persisted search results
 *  can be used for the subsequent /answer api call. This field is similar to
 *  the `summary_result_count` field in
 *  SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At most 10
 *  results for documents mode, or 50 for chunks mode.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *searchResultPersistenceCount;

@end


/**
 *  The specification for query spell correction.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec : GTLRObject

/**
 *  The mode under which spell correction replaces the original search query.
 *  Defaults to Mode.AUTO.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec_Mode_Auto
 *        Automatic spell correction built by the Search API. Search will be
 *        based on the corrected query if found. (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec_Mode_ModeUnspecified
 *        Unspecified spell correction mode. In this case, server behavior
 *        defaults to Mode.AUTO. (Value: "MODE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec_Mode_SuggestionOnly
 *        Search API tries to find a spelling suggestion. If a suggestion is
 *        found, it is put in the SearchResponse.corrected_query. The spelling
 *        suggestion won't be used as the search query. (Value:
 *        "SUGGESTION_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  External session proto definition.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession : GTLRObject

/**
 *  Optional. The display name of the session. This field is used to identify
 *  the session in the UI. By default, the display name is the first turn query
 *  text in the session.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The time the session finished. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Optional. Whether the session is pinned, pinned session will be displayed on
 *  the top of the session list.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPinned;

/**
 *  Immutable. Fully qualified name
 *  `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The time the session started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The state of the session.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession_State_InProgress
 *        The session is currently open. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession_State_StateUnspecified
 *        State is unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Turns. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSessionTurn *> *turns;

/** A unique identifier for tracking users. */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Represents a turn, including a query from the user and a answer from
 *  service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSessionTurn : GTLRObject

/**
 *  The resource name of the answer to the user query. Only set if the answer
 *  generation (/answer API call) happened in this turn.
 */
@property(nonatomic, copy, nullable) NSString *answer;

/**
 *  Output only. In ConversationalSearchService.GetSession API, if
 *  GetSessionRequest.include_answer_details is set to true, this field will be
 *  populated when getting answer query session.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaAnswer *detailedAnswer;

/** The user query. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaQuery *query;

@end


/**
 *  Metadata related to the progress of the
 *  CrawlRateManagementService.SetDedicatedCrawlRate operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CrawlRateManagementService.SetDedicatedCrawlRate
 *  method. It simply returns the state of the response, and an error message if
 *  the state is FAILED.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse : GTLRObject

/** Errors from service when handling the request. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Output only. The state of the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse_State_Failed
 *        The state is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse_State_StateUnspecified
 *        The state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse_State_Succeeded
 *        The state is successful. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for DataConnectorService.SetUpDataConnector method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetUpDataConnectorMetadata : GTLRObject
@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.SetUriPatternDocumentData operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for SiteSearchEngineService.SetUriPatternDocumentData
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataResponse : GTLRObject
@end


/**
 *  Metadata for single-regional CMEKs.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSingleRegionKey : GTLRObject

/**
 *  Required. Single-regional kms key resource name which will be used to
 *  encrypt resources
 *  `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

@end


/**
 *  A sitemap for the SiteSearchEngine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSitemap : GTLRObject

/** Output only. The sitemap's creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The fully qualified resource name of the sitemap. `projects/ *
 *  /locations/ * /collections/ * /dataStores/ * /siteSearchEngine/sitemaps/ *`
 *  The `sitemap_id` suffix is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Verification information for target sites in advanced site search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo : GTLRObject

/**
 *  Site verification state indicating the ownership and validity.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_Exempted
 *        Site exempt from verification, e.g., a public website that opens to
 *        all. (Value: "EXEMPTED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_SiteVerificationStateUnspecified
 *        Defaults to VERIFIED. (Value: "SITE_VERIFICATION_STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_Unverified
 *        Site ownership pending verification or verification failed. (Value:
 *        "UNVERIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo_SiteVerificationState_Verified
 *        Site ownership verified. (Value: "VERIFIED")
 */
@property(nonatomic, copy, nullable) NSString *siteVerificationState;

/** Latest site verification time. */
@property(nonatomic, strong, nullable) GTLRDateTime *verifyTime;

@end


/**
 *  A target site for the SiteSearchEngine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite : GTLRObject

/**
 *  Immutable. If set to false, a uri_pattern is generated to include all pages
 *  whose address contains the provided_uri_pattern. If set to true, an
 *  uri_pattern is generated to try to be an exact match of the
 *  provided_uri_pattern or just the specific page if the provided_uri_pattern
 *  is a specific one. provided_uri_pattern is always normalized to generate the
 *  URI pattern to be used by the search engine.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exactMatch;

/** Output only. Failure reason. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason *failureReason;

/**
 *  Output only. This is system-generated based on the provided_uri_pattern.
 */
@property(nonatomic, copy, nullable) NSString *generatedUriPattern;

/**
 *  Output only. Indexing status.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Deleting
 *        The previously indexed target site has been marked to be deleted. This
 *        is a transitioning state which will resulted in either: 1. target site
 *        deleted if unindexing is successful; 2. state reverts to SUCCEEDED if
 *        the unindexing fails. (Value: "DELETING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Failed
 *        The target site fails to be indexed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_IndexingStatusUnspecified
 *        Defaults to SUCCEEDED. (Value: "INDEXING_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Pending
 *        The target site is in the update queue and will be picked up by
 *        indexing pipeline. (Value: "PENDING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_IndexingStatus_Succeeded
 *        The target site has been indexed. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *indexingStatus;

/**
 *  Output only. The fully qualified resource name of the target site.
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
 *  The `target_site_id` is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Input only. The user provided URI pattern from which the
 *  `generated_uri_pattern` is generated.
 */
@property(nonatomic, copy, nullable) NSString *providedUriPattern;

/** Output only. Root domain of the provided_uri_pattern. */
@property(nonatomic, copy, nullable) NSString *rootDomainUri;

/** Output only. Site ownership and validity verification status. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo *siteVerificationInfo;

/**
 *  The type of the target site, e.g., whether the site is to be included or
 *  excluded.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_Type_Exclude
 *        Exclude the target site. (Value: "EXCLUDE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_Type_Include
 *        Include the target site. (Value: "INCLUDE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSite_Type_TypeUnspecified
 *        This value is unused. In this case, server behavior defaults to
 *        Type.INCLUDE. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. The target site's last updated time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Site search indexing failure reasons.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason : GTLRObject

/** Failed due to insufficient quota. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure *quotaFailure;

@end


/**
 *  Failed due to insufficient quota.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure : GTLRObject

/**
 *  This number is an estimation on how much total quota this project needs to
 *  successfully complete indexing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalRequiredQuota;

@end


/**
 *  Metadata related to the progress of the TrainCustomModel operation. This is
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTrainCustomModelMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the TrainCustomModelRequest. This message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the data. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/** The metrics of the trained model. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse_Metrics *metrics;

/** Fully qualified name of the CustomTuningModel. */
@property(nonatomic, copy, nullable) NSString *modelName;

/**
 *  The trained model status. Possible values are: * **bad-data**: The training
 *  data quality is bad. * **no-improvement**: Tuning didn't improve
 *  performance. Won't deploy. * **in-progress**: Model training job creation is
 *  in progress. * **training**: Model is actively training. * **evaluating**:
 *  The model is evaluating trained metrics. * **indexing**: The model trained
 *  metrics are indexing. * **ready**: The model is ready for serving.
 */
@property(nonatomic, copy, nullable) NSString *modelStatus;

@end


/**
 *  The metrics of the trained model.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of doubleValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse_Metrics : GTLRObject
@end


/**
 *  Metadata associated with a tune operation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTuneEngineMetadata : GTLRObject

/**
 *  Required. The resource name of the engine that this tune applies to. Format:
 *  `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
 */
@property(nonatomic, copy, nullable) NSString *engine;

@end


/**
 *  Response associated with a tune operation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaTuneEngineResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the CmekConfigService.UpdateCmekConfig
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUpdateCmekConfigMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the CollectionService.UpdateCollection
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUpdateCollectionMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for UpdateSchema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request for UpdateSession method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUpdateSessionRequest : GTLRObject

/** Required. The Session to update. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaSession *session;

/**
 *  Indicates which fields in the provided Session to update. The following are
 *  NOT supported: * Session.name If not set or empty, all supported fields are
 *  updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.UpdateTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUpdateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Information of an end user.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaUserInfo : GTLRObject

/**
 *  User agent as included in the HTTP header. The field must be a UTF-8 encoded
 *  string with a length limit of 1,000 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned. This should not be set when using the
 *  client side event reporting with GTM or JavaScript tag in
 *  UserEventService.CollectUserEvent or if UserEvent.direct_user_request is
 *  set.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

/**
 *  Highly recommended for logged-in users. Unique identifier for logged-in
 *  user, such as a user name. Don't set for anonymous users. Always use a
 *  hashed value for this ID. Don't set the field to the same fixed ID for
 *  different users. This mixes the event history of those users together, which
 *  results in degraded model quality. The field must be a UTF-8 encoded string
 *  with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT`
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  Config to store data store type configuration for workspace data
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig : GTLRObject

/** Obfuscated Dasher customer ID. */
@property(nonatomic, copy, nullable) NSString *dasherCustomerId;

/**
 *  Optional. The super admin email address for the workspace that will be used
 *  for access token generation. For now we only use it for Native Google Drive
 *  connector data ingestion.
 */
@property(nonatomic, copy, nullable) NSString *superAdminEmailAddress;

/**
 *  Optional. The super admin service account for the workspace that will be
 *  used for access token generation. For now we only use it for Native Google
 *  Drive connector data ingestion.
 */
@property(nonatomic, copy, nullable) NSString *superAdminServiceAccount;

/**
 *  The Google Workspace data source.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleCalendar
 *        Workspace Data Store contains Calendar data (Value: "GOOGLE_CALENDAR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleChat
 *        Workspace Data Store contains Chat data (Value: "GOOGLE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleDrive
 *        Workspace Data Store contains Drive data (Value: "GOOGLE_DRIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleGroups
 *        Workspace Data Store contains Groups data (Value: "GOOGLE_GROUPS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleKeep
 *        Workspace Data Store contains Keep data (Value: "GOOGLE_KEEP")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleMail
 *        Workspace Data Store contains Mail data (Value: "GOOGLE_MAIL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GooglePeople
 *        Workspace Data Store contains People data (Value: "GOOGLE_PEOPLE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_GoogleSites
 *        Workspace Data Store contains Sites data (Value: "GOOGLE_SITES")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1alphaWorkspaceConfig_Type_TypeUnspecified
 *        Defaults to an unspecified Workspace type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Defines an answer.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer : GTLRObject

/**
 *  Additional answer-skipped reasons. This provides the reason for ignored
 *  cases. If nothing is skipped, this field is not set.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *answerSkippedReasons;

/** The textual answer. */
@property(nonatomic, copy, nullable) NSString *answerText;

/** Citations. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerCitation *> *citations;

/** Output only. Answer completed timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *completeTime;

/** Output only. Answer creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  A score in the range of [0, 1] describing how grounded the answer is by the
 *  reference chunks.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groundingScore;

/** Optional. Grounding supports. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerGroundingSupport *> *groundingSupports;

/**
 *  Immutable. Fully qualified name
 *  `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/
 *  * /answers/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Query understanding information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfo *queryUnderstandingInfo;

/** References. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReference *> *references;

/** Suggested related questions. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *relatedQuestions;

/** Optional. Safety ratings. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating *> *safetyRatings;

/**
 *  The state of the answer generation.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_Failed
 *        Answer generation currently failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_InProgress
 *        Answer generation is currently in progress. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_StateUnspecified
 *        Unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_Streaming
 *        Answer generation is currently in progress. (Value: "STREAMING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer_State_Succeeded
 *        Answer generation has succeeded. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Answer generation steps. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep *> *steps;

@end


/**
 *  Citation info for a segment.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerCitation : GTLRObject

/**
 *  End of the attributed segment, exclusive. Measured in bytes (UTF-8 unicode).
 *  If there are multi-byte characters,such as non-ASCII characters, the index
 *  measurement is longer than the string length.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/** Citation sources for the attributed segment. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerCitationSource *> *sources;

/**
 *  Index indicates the start of the segment, measured in bytes (UTF-8 unicode).
 *  If there are multi-byte characters,such as non-ASCII characters, the index
 *  measurement is longer than the string length.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

@end


/**
 *  Citation source.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerCitationSource : GTLRObject

/** ID of the citation source. */
@property(nonatomic, copy, nullable) NSString *referenceId;

@end


/**
 *  Grounding support for a claim in `answer_text`.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerGroundingSupport : GTLRObject

/**
 *  Required. End of the claim, exclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/**
 *  Indicates that this claim required grounding check. When the system decided
 *  this claim didn't require attribution/grounding check, this field is set to
 *  false. In that case, no grounding check was done for the claim and therefore
 *  `grounding_score`, `sources` is not returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groundingCheckRequired;

/**
 *  A score in the range of [0, 1] describing how grounded is a specific claim
 *  by the references. Higher value means that the claim is better supported by
 *  the reference chunks.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groundingScore;

/** Optional. Citation sources for the claim. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerCitationSource *> *sources;

/**
 *  Required. Index indicates the start of the claim, measured in bytes (UTF-8
 *  unicode).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

@end


/**
 *  Request message for ConversationalSearchService.AnswerQuery method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequest : GTLRObject

/** Answer generation specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpec *answerGenerationSpec;

/**
 *  Deprecated: This field is deprecated. Streaming Answer API will be
 *  supported. Asynchronous mode control. If enabled, the response will be
 *  returned with answer/session resource name without final answer. The API
 *  users need to do the polling to get the latest status of answer/session by
 *  calling ConversationalSearchService.GetAnswer or
 *  ConversationalSearchService.GetSession method.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *asynchronousMode GTLR_DEPRECATED;

/** Optional. End user specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpec *endUserSpec;

/** Optional. Grounding specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec *groundingSpec;

/** Required. Current user query. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Query *query;

/** Query understanding specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpec *queryUnderstandingSpec;

/** Related questions specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestRelatedQuestionsSpec *relatedQuestionsSpec;

/** Model specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpec *safetySpec;

/** Search specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpec *searchSpec;

/**
 *  The session resource name. Not required. When session field is not set, the
 *  API is in sessionless mode. We support auto session mode: users can use the
 *  wildcard symbol `-` as session ID. A new ID will be automatically generated
 *  and assigned.
 */
@property(nonatomic, copy, nullable) NSString *session;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequest_UserLabels *userLabels;

/**
 *  A unique identifier for tracking visitors. For example, this could be
 *  implemented with an HTTP cookie, which should be able to uniquely identify a
 *  visitor on a single device. This unique identifier should not change if the
 *  visitor logs in or out of the website. This field should NOT have a fixed
 *  value such as `unknown_visitor`. The field must be a UTF-8 encoded string
 *  with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT`
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequest_UserLabels : GTLRObject
@end


/**
 *  Answer generation specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpec : GTLRObject

/**
 *  Language code for Answer. Use language tags defined by
 *  [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an
 *  experimental feature.
 */
@property(nonatomic, copy, nullable) NSString *answerLanguageCode;

/**
 *  Specifies whether to filter out adversarial queries. The default value is
 *  `false`. Google employs search-query classification to detect adversarial
 *  queries. No answer is returned if the search query is classified as an
 *  adversarial query. For example, a user might ask a question regarding
 *  negative comments about the company or submit a query designed to generate
 *  unsafe, policy-violating output. If this field is set to `true`, we skip
 *  generating answers for adversarial queries and return fallback messages
 *  instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreAdversarialQuery;

/**
 *  Optional. Specifies whether to filter out jail-breaking queries. The default
 *  value is `false`. Google employs search-query classification to detect
 *  jail-breaking queries. No summary is returned if the search query is
 *  classified as a jail-breaking query. A user might add instructions to the
 *  query to change the tone, style, language, content of the answer, or ask the
 *  model to act as a different entity, e.g. "Reply in the tone of a competing
 *  company's CEO". If this field is set to `true`, we skip generating summaries
 *  for jail-breaking queries and return fallback messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreJailBreakingQuery;

/**
 *  Specifies whether to filter out queries that have low relevance. If this
 *  field is set to `false`, all search results are used regardless of relevance
 *  to generate answers. If set to `true` or unset, the behavior will be
 *  determined automatically by the service.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreLowRelevantContent;

/**
 *  Specifies whether to filter out queries that are not answer-seeking. The
 *  default value is `false`. Google employs search-query classification to
 *  detect answer-seeking queries. No answer is returned if the search query is
 *  classified as a non-answer seeking query. If this field is set to `true`, we
 *  skip generating answers for non-answer seeking queries and return fallback
 *  messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreNonAnswerSeekingQuery;

/**
 *  Specifies whether to include citation metadata in the answer. The default
 *  value is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeCitations;

/** Answer generation model specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecModelSpec *modelSpec;

/** Answer generation prompt specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecPromptSpec *promptSpec;

@end


/**
 *  Answer Generation Model specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecModelSpec : GTLRObject

/**
 *  Model version. If not set, it will use the default stable model. Allowed
 *  values are: stable, preview.
 */
@property(nonatomic, copy, nullable) NSString *modelVersion;

@end


/**
 *  Answer generation prompt specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestAnswerGenerationSpecPromptSpec : GTLRObject

/** Customized preamble. */
@property(nonatomic, copy, nullable) NSString *preamble;

@end


/**
 *  End user specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpec : GTLRObject

/** Optional. End user metadata. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaData *> *endUserMetadata;

@end


/**
 *  End user metadata.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaData : GTLRObject

/** Chunk information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfo *chunkInfo;

@end


/**
 *  Chunk information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfo : GTLRObject

/** Chunk textual content. It is limited to 8000 characters. */
@property(nonatomic, copy, nullable) NSString *content;

/** Metadata of the document from the current chunk. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfoDocumentMetadata *documentMetadata;

@end


/**
 *  Document metadata contains the information of the document of the current
 *  chunk.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfoDocumentMetadata : GTLRObject

/** Title of the document. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Grounding specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec : GTLRObject

/**
 *  Optional. Specifies whether to enable the filtering based on grounding score
 *  and at what level.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec_FilteringLevel_FilteringLevelHigh
 *        Filter answers based on a high threshold. (Value:
 *        "FILTERING_LEVEL_HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec_FilteringLevel_FilteringLevelLow
 *        Filter answers based on a low threshold. (Value:
 *        "FILTERING_LEVEL_LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestGroundingSpec_FilteringLevel_FilteringLevelUnspecified
 *        Default is no filter (Value: "FILTERING_LEVEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *filteringLevel;

/**
 *  Optional. Specifies whether to include grounding_supports in the answer. The
 *  default value is `false`. When this field is set to `true`, returned answer
 *  will have `grounding_score` and will contain GroundingSupports for each
 *  claim.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeGroundingSupports;

@end


/**
 *  Query understanding specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpec : GTLRObject

/** Query classification specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec *queryClassificationSpec;

/** Query rephraser specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec *queryRephraserSpec;

@end


/**
 *  Query classification specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec : GTLRObject

/** Enabled query classification types. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *types;

@end


/**
 *  Query rephraser specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec : GTLRObject

/**
 *  Disable query rephraser.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disable;

/**
 *  Max rephrase steps. The max number is 5 steps. If not set or set to < 1, it
 *  will be set to 1 by default.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRephraseSteps;

/** Optional. Query Rephraser Model specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec *modelSpec;

@end


/**
 *  Query Rephraser Model specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec : GTLRObject

/**
 *  Optional. Enabled query rephraser model type. If not set, it will use LARGE
 *  by default.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec_ModelType_Large
 *        Large query rephraser model. Gemini 1.0 Pro model. (Value: "LARGE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec_ModelType_ModelTypeUnspecified
 *        Unspecified model type. (Value: "MODEL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec_ModelType_Small
 *        Small query rephraser model. Gemini 1.0 XS model. (Value: "SMALL")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

@end


/**
 *  Related questions specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestRelatedQuestionsSpec : GTLRObject

/**
 *  Enable related questions feature if true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

@end


/**
 *  Safety specification. There are two use cases: 1. when only
 *  safety_spec.enable is set, the BLOCK_LOW_AND_ABOVE threshold will be applied
 *  for all categories. 2. when safety_spec.enable is set and some
 *  safety_settings are set, only specified safety_settings are applied.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpec : GTLRObject

/**
 *  Enable the safety filtering on the answer response. It is false by default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

/**
 *  Optional. Safety settings. This settings are effective only when the
 *  safety_spec.enable is true.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting *> *safetySettings;

@end


/**
 *  Safety settings.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting : GTLRObject

/**
 *  Required. Harm category.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryCivicIntegrity
 *        The harm category is civic integrity. (Value:
 *        "HARM_CATEGORY_CIVIC_INTEGRITY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryDangerousContent
 *        The harm category is dangerous content. (Value:
 *        "HARM_CATEGORY_DANGEROUS_CONTENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryHarassment
 *        The harm category is harassment. (Value: "HARM_CATEGORY_HARASSMENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryHateSpeech
 *        The harm category is hate speech. (Value: "HARM_CATEGORY_HATE_SPEECH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategorySexuallyExplicit
 *        The harm category is sexually explicit content. (Value:
 *        "HARM_CATEGORY_SEXUALLY_EXPLICIT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Category_HarmCategoryUnspecified
 *        The harm category is unspecified. (Value: "HARM_CATEGORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *category;

/**
 *  Required. The harm block threshold.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockLowAndAbove
 *        Block low threshold and above (i.e. block more). (Value:
 *        "BLOCK_LOW_AND_ABOVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockMediumAndAbove
 *        Block medium threshold and above. (Value: "BLOCK_MEDIUM_AND_ABOVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockNone
 *        Block none. (Value: "BLOCK_NONE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_BlockOnlyHigh
 *        Block only high threshold (i.e. block less). (Value:
 *        "BLOCK_ONLY_HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_HarmBlockThresholdUnspecified
 *        Unspecified harm block threshold. (Value:
 *        "HARM_BLOCK_THRESHOLD_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSafetySpecSafetySetting_Threshold_Off
 *        Turn off the safety filter. (Value: "OFF")
 */
@property(nonatomic, copy, nullable) NSString *threshold;

@end


/**
 *  Search specification.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpec : GTLRObject

/** Search parameters. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams *searchParams;

/** Search result list. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultList *searchResultList;

@end


/**
 *  Search parameters.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams : GTLRObject

/**
 *  Boost specification to boost certain documents in search results which may
 *  affect the answer query response. For more information on boosting, see
 *  [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpec *boostSpec;

/**
 *  Specs defining dataStores to filter on in a search call and configurations
 *  for those dataStores. This is only considered for engines with multiple
 *  dataStores use case. For single dataStore within an engine, they should use
 *  the specs at the top level.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec *> *dataStoreSpecs;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the documents being filtered. Filter
 *  expression is case-sensitive. This will be used to filter search results
 *  which may affect the Answer response. If this field is unrecognizable, an
 *  `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
 *  mapping the LHS filter key to a key property defined in the Vertex AI Search
 *  backend -- this mapping is defined by the customer in their schema. For
 *  example a media customers might have a field 'name' in their schema. In this
 *  case the filter would look like this: filter --> name:'ANY("king kong")' For
 *  more information about filtering including syntax and filter operators, see
 *  [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Number of search results to return. The default value is 10.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxReturnResults;

/**
 *  The order in which documents are returned. Documents can be ordered by a
 *  field in an Document object. Leave it unset if ordered by relevance.
 *  `order_by` expression is case-sensitive. For more information on ordering,
 *  see [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order)
 *  If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Specifies the search result mode. If unspecified, the search result mode
 *  defaults to `DOCUMENTS`. See [parse and chunk
 *  documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents)
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams_SearchResultMode_Chunks
 *        Returns chunks in the search result. Only available if the
 *        DocumentProcessingConfig.chunking_config is specified. (Value:
 *        "CHUNKS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams_SearchResultMode_Documents
 *        Returns documents in the search result. (Value: "DOCUMENTS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchParams_SearchResultMode_SearchResultModeUnspecified
 *        Default value. (Value: "SEARCH_RESULT_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchResultMode;

@end


/**
 *  Search result list.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultList : GTLRObject

/** Search results. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResult *> *searchResults;

@end


/**
 *  Search result.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResult : GTLRObject

/** Chunk information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo *chunkInfo;

/** Unstructured document information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo *unstructuredDocumentInfo;

@end


/**
 *  Chunk information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo : GTLRObject

/** Chunk resource name. */
@property(nonatomic, copy, nullable) NSString *chunk;

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Metadata of the document from the current chunk. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata *documentMetadata;

@end


/**
 *  Document metadata contains the information of the document of the current
 *  chunk.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata : GTLRObject

/** Title of the document. */
@property(nonatomic, copy, nullable) NSString *title;

/** Uri of the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Unstructured document information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo : GTLRObject

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/**
 *  List of document contexts. The content will be used for Answer Generation.
 *  This is supposed to be the main content of the document that can be long and
 *  comprehensive.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext *> *documentContexts;

/**
 *  Deprecated: This field is deprecated and will have no effect on the Answer
 *  generation. Please use document_contexts and extractive_segments fields.
 *  List of extractive answers.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer *> *extractiveAnswers GTLR_DEPRECATED;

/** List of extractive segments. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment *> *extractiveSegments;

/** Title. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Document context.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext : GTLRObject

/** Document content to be used for answer generation. */
@property(nonatomic, copy, nullable) NSString *content;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

@end


/**
 *  Extractive answer.
 *  [Guide](https://cloud.google.com/generative-ai-app-builder/docs/snippets#get-answers)
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer : GTLRObject

/** Extractive answer content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

@end


/**
 *  Extractive segment.
 *  [Guide](https://cloud.google.com/generative-ai-app-builder/docs/snippets#extractive-segments)
 *  Answer generation will only use it if document_contexts is empty. This is
 *  supposed to be shorter snippets.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment : GTLRObject

/** Extractive segment content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

@end


/**
 *  Response message for ConversationalSearchService.AnswerQuery method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryResponse : GTLRObject

/**
 *  Answer resource object. If
 *  AnswerQueryRequest.QueryUnderstandingSpec.QueryRephraserSpec.max_rephrase_steps
 *  is greater than 1, use Answer.name to fetch answer information using
 *  ConversationalSearchService.GetAnswer API.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer *answer;

/** A global unique ID used for logging. */
@property(nonatomic, copy, nullable) NSString *answerQueryToken;

/**
 *  Session resource object. It will be only available when session field is set
 *  and valid in the AnswerQueryRequest request.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *session;

@end


/**
 *  Query understanding information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfo : GTLRObject

/** Query classification information. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo *> *queryClassificationInfo;

@end


/**
 *  Query classification information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo : GTLRObject

/**
 *  Classification output.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *positive;

/**
 *  Query classification type.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_AdversarialQuery
 *        Adversarial query classification type. (Value: "ADVERSARIAL_QUERY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_JailBreakingQuery
 *        Jail-breaking query classification type. (Value:
 *        "JAIL_BREAKING_QUERY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQuery
 *        Non-answer-seeking query classification type, for chit chat. (Value:
 *        "NON_ANSWER_SEEKING_QUERY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_NonAnswerSeekingQueryV2
 *        Non-answer-seeking query classification type, for no clear intent.
 *        (Value: "NON_ANSWER_SEEKING_QUERY_V2")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryUnderstandingInfoQueryClassificationInfo_Type_TypeUnspecified
 *        Unspecified query classification type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Reference.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReference : GTLRObject

/** Chunk information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfo *chunkInfo;

/** Structured document information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo *structuredDocumentInfo;

/** Unstructured document information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo *unstructuredDocumentInfo;

@end


/**
 *  Chunk information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfo : GTLRObject

/** Chunk resource name. */
@property(nonatomic, copy, nullable) NSString *chunk;

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Document metadata. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata *documentMetadata;

/**
 *  The relevance of the chunk for a given query. Values range from 0.0
 *  (completely irrelevant) to 1.0 (completely relevant). This value is for
 *  informational purpose only. It may change for the same query and chunk at
 *  any time due to a model retraining or change in implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relevanceScore;

@end


/**
 *  Document metadata.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata : GTLRObject

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata_StructData *structData;

/** Title. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceChunkInfoDocumentMetadata_StructData : GTLRObject
@end


/**
 *  Structured search information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo : GTLRObject

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/** Structured search data. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo_StructData *structData;

/** Output only. The title of the document. */
@property(nonatomic, copy, nullable) NSString *title;

/** Output only. The URI of the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Structured search data.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceStructuredDocumentInfo_StructData : GTLRObject
@end


/**
 *  Unstructured document information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo : GTLRObject

/** List of cited chunk contents derived from document content. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfoChunkContent *> *chunkContents;

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo_StructData *structData;

/** Title. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The structured JSON metadata for the document. It is populated from the
 *  struct data from the Chunk in search result.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfo_StructData : GTLRObject
@end


/**
 *  Chunk content.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerReferenceUnstructuredDocumentInfoChunkContent : GTLRObject

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

/**
 *  The relevance of the chunk for a given query. Values range from 0.0
 *  (completely irrelevant) to 1.0 (completely relevant). This value is for
 *  informational purpose only. It may change for the same query and chunk at
 *  any time due to a model retraining or change in implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relevanceScore;

@end


/**
 *  Step information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep : GTLRObject

/** Actions. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepAction *> *actions;

/**
 *  The description of the step.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The state of the step.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_Failed
 *        Step currently failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_InProgress
 *        Step is currently in progress. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_StateUnspecified
 *        Unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStep_State_Succeeded
 *        Step has succeeded. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** The thought of the step. */
@property(nonatomic, copy, nullable) NSString *thought;

@end


/**
 *  Action.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepAction : GTLRObject

/** Observation. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservation *observation;

/** Search action. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionSearchAction *searchAction;

@end


/**
 *  Observation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservation : GTLRObject

/**
 *  Search results observed by the search action, it can be snippets info or
 *  chunk info, depending on the citation type set by the user.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult *> *searchResults;

@end


/**
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult : GTLRObject

/**
 *  If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on, populate
 *  chunk info.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultChunkInfo *> *chunkInfo;

/** Document resource name. */
@property(nonatomic, copy, nullable) NSString *document;

/**
 *  If citation_type is DOCUMENT_LEVEL_CITATION, populate document level
 *  snippets.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultSnippetInfo *> *snippetInfo;

/**
 *  Data representation. The structured JSON data for the document. It's
 *  populated from the struct data from the Document, or the Chunk in search
 *  result.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult_StructData *structData;

/** Title. */
@property(nonatomic, copy, nullable) NSString *title;

/** URI for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Data representation. The structured JSON data for the document. It's
 *  populated from the struct data from the Document, or the Chunk in search
 *  result.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResult_StructData : GTLRObject
@end


/**
 *  Chunk information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultChunkInfo : GTLRObject

/** Chunk resource name. */
@property(nonatomic, copy, nullable) NSString *chunk;

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The relevance of the chunk for a given query. Values range from 0.0
 *  (completely irrelevant) to 1.0 (completely relevant). This value is for
 *  informational purpose only. It may change for the same query and chunk at
 *  any time due to a model retraining or change in implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relevanceScore;

@end


/**
 *  Snippet information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionObservationSearchResultSnippetInfo : GTLRObject

/** Snippet content. */
@property(nonatomic, copy, nullable) NSString *snippet;

/** Status of the snippet defined by the search team. */
@property(nonatomic, copy, nullable) NSString *snippetStatus;

@end


/**
 *  Search action.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerStepActionSearchAction : GTLRObject

/** The query to search. */
@property(nonatomic, copy, nullable) NSString *query;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.BatchCreateTargetSites operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchCreateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for SiteSearchEngineService.BatchCreateTargetSites method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchCreateTargetSitesRequest : GTLRObject

/**
 *  Required. The request message specifying the resources to create. A maximum
 *  of 20 TargetSites can be created in a batch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateTargetSiteRequest *> *requests;

@end


/**
 *  Response message for SiteSearchEngineService.BatchCreateTargetSites method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchCreateTargetSitesResponse : GTLRObject

/** TargetSites created. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *> *targetSites;

@end


/**
 *  Response message for DocumentService.BatchGetDocumentsMetadata method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponse : GTLRObject

/** The metadata of the Documents. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata *> *documentsMetadata;

@end


/**
 *  The metadata of a Document.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata : GTLRObject

/**
 *  The data ingestion source of the Document. Allowed values are: * `batch`:
 *  Data ingested via Batch API, e.g., ImportDocuments. * `streaming` Data
 *  ingested via Streaming API, e.g., FHIR streaming.
 */
@property(nonatomic, copy, nullable) NSString *dataIngestionSource;

/** The timestamp of the last time the Document was last indexed. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastRefreshedTime;

/** The value of the matcher that was used to match the Document. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue *matcherValue;

/**
 *  The state of the document.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_Indexed
 *        The Document is indexed. (Value: "INDEXED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_NotInIndex
 *        The Document is not indexed. (Value: "NOT_IN_INDEX")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_NotInTargetSite
 *        The Document is not indexed because its URI is not in the TargetSite.
 *        (Value: "NOT_IN_TARGET_SITE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadata_State_StateUnspecified
 *        Should never be set. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The value of the matcher that was used to match the Document.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue : GTLRObject

/**
 *  Format:
 *  projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id}
 */
@property(nonatomic, copy, nullable) NSString *fhirResource;

/** If match by URI, the URI of the Document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Request message for SiteSearchEngineService.BatchVerifyTargetSites method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchVerifyTargetSitesRequest : GTLRObject
@end


/**
 *  Configuration data for advance site search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaAdvancedSiteSearchConfig : GTLRObject

/**
 *  If set true, automatic refresh is disabled for the DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAutomaticRefresh;

/**
 *  If set true, initial indexing is disabled for the DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableInitialIndex;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.BatchCreateTargetSites operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBatchCreateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for SiteSearchEngineService.BatchCreateTargetSites method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesResponse : GTLRObject

/** TargetSites created. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite *> *targetSites;

@end


/**
 *  Configurations used to enable CMEK data encryption with Cloud KMS keys.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig : GTLRObject

/**
 *  Output only. The default CmekConfig for the Customer.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDefault;

/**
 *  KMS key resource name which will be used to encrypt resources
 *  `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

/**
 *  KMS key version resource name which will be used to encrypt resources
 *  `/cryptoKeyVersions/{keyVersion}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyVersion;

/**
 *  Output only. The timestamp of the last key rotation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lastRotationTimestampMicros;

/**
 *  Required. The name of the CmekConfig of the form
 *  `projects/{project}/locations/{location}/cmekConfig` or
 *  `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Single-regional CMEKs that are required for some VAIS features.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSingleRegionKey *> *singleRegionKeys;

/**
 *  Output only. The states of the CmekConfig.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Active
 *        The CmekConfig can be used with DataStores. (Value: "ACTIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_ActiveRotating
 *        The KMS key version is being rotated. (Value: "ACTIVE_ROTATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Creating
 *        The CmekConfig is creating. (Value: "CREATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_DeleteFailed
 *        The CmekConfig deletion process failed. (Value: "DELETE_FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Deleting
 *        The CmekConfig is deleting. (Value: "DELETING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_KeyIssue
 *        The CmekConfig is unavailable, most likely due to the KMS Key being
 *        revoked. (Value: "KEY_ISSUE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_StateUnspecified
 *        The CmekConfig state is unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig_State_Unusable
 *        The CmekConfig is not usable, most likely due to some internal issue.
 *        (Value: "UNUSABLE")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Defines circumstances to be checked before allowing a behavior
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCondition : GTLRObject

/**
 *  Range of time(s) specifying when condition is active. Maximum of 10 time
 *  ranges.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConditionTimeRange *> *activeTimeRange;

/**
 *  Optional. Query regex to match the whole search query. Cannot be set when
 *  Condition.query_terms is set. This is currently supporting promotion use
 *  case.
 */
@property(nonatomic, copy, nullable) NSString *queryRegex;

/**
 *  Search only A list of terms to match the query on. Cannot be set when
 *  Condition.query_regex is set. Maximum of 10 query terms.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConditionQueryTerm *> *queryTerms;

@end


/**
 *  Matcher for search request query
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConditionQueryTerm : GTLRObject

/**
 *  Whether the search query needs to exactly match the query term.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullMatch;

/**
 *  The specific query value to match against Must be lowercase, must be UTF-8.
 *  Can have at most 3 space separated terms if full_match is true. Cannot be an
 *  empty string. Maximum length of 5000 characters.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Used for time-dependent conditions.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConditionTimeRange : GTLRObject

/** End of time range. Range is inclusive. Must be in the future. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Start of time range. Range is inclusive. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Defines a conditioned behavior to employ during serving. Must be attached to
 *  a ServingConfig to be considered at serving time. Permitted actions
 *  dependent on `SolutionType`.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl : GTLRObject

/**
 *  Output only. List of all ServingConfig IDs this control is attached to. May
 *  take up to 10 minutes to update after changes.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *associatedServingConfigIds;

/** Defines a boost-type control */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostAction *boostAction;

/**
 *  Determines when the associated action will trigger. Omit to always apply the
 *  action. Currently only a single condition may be specified. Otherwise an
 *  INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCondition *> *conditions;

/**
 *  Required. Human readable name. The identifier used in UI views. Must be
 *  UTF-8 encoded string. Length limit is 128 characters. Otherwise an INVALID
 *  ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Defines a filter-type control Currently not supported by Recommendation */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlFilterAction *filterAction;

/**
 *  Immutable. Fully qualified name `projects/ * /locations/global/dataStore/ *
 *  /controls/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Promote certain links based on predefined trigger queries. This now only
 *  supports basic site search.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlPromoteAction *promoteAction;

/** Defines a redirect-type control. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlRedirectAction *redirectAction;

/**
 *  Required. Immutable. What solution the control belongs to. Must be
 *  compatible with vertical of resource. Otherwise an INVALID ARGUMENT error is
 *  thrown.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeChat
 *        Used for use cases related to the Generative AI agent. (Value:
 *        "SOLUTION_TYPE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeGenerativeChat
 *        Used for use cases related to the Generative Chat agent. It's used for
 *        Generative chat engine only, the associated data stores must enrolled
 *        with `SOLUTION_TYPE_CHAT` solution. (Value:
 *        "SOLUTION_TYPE_GENERATIVE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeRecommendation
 *        Used for Recommendations AI. (Value: "SOLUTION_TYPE_RECOMMENDATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeSearch
 *        Used for Discovery Search. (Value: "SOLUTION_TYPE_SEARCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControl_SolutionType_SolutionTypeUnspecified
 *        Default value. (Value: "SOLUTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *solutionType;

/** Treats a group of terms as synonyms of one another. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlSynonymsAction *synonymsAction;

/**
 *  Specifies the use case for the control. Affects what condition fields can be
 *  set. Only applies to SOLUTION_TYPE_SEARCH. Currently only allow one use case
 *  per control. Must be set when solution_type is
 *  SolutionType.SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *useCases;

@end


/**
 *  Adjusts order of products in returned list.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostAction : GTLRObject

/**
 *  Strength of the boost, which should be in [-1, 1]. Negative boost means
 *  demotion. Default is 0.0 (No-op).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost GTLR_DEPRECATED;

/**
 *  Required. Specifies which data store's documents can be boosted by this
 *  control. Full data store name e.g.
 *  projects/123/locations/global/collections/default_collection/dataStores/default_data_store
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Required. Specifies which products to apply the boost to. If no filter is
 *  provided all products will be boosted (No-op). Syntax documentation:
 *  https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000
 *  characters. Otherwise an INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Strength of the boost, which should be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0 (No-op).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fixedBoost;

/**
 *  Optional. Complex specification for custom ranking based on customer defined
 *  attribute value.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec *interpolationBoostSpec;

@end


/**
 *  Specification for custom ranking based on customer specified attribute
 *  value. It provides more controls for customized ranking than the simple
 *  (condition, boost) combination above.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec : GTLRObject

/**
 *  Optional. The attribute type to be used to determine the boost amount. The
 *  attribute value can be derived from the field value of the specified
 *  field_name. In the case of numerical it is straightforward i.e.
 *  attribute_value = numerical_field_value. In the case of freshness however,
 *  attribute_value = (time.now() - datetime_field_value).
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_AttributeType_AttributeTypeUnspecified
 *        Unspecified AttributeType. (Value: "ATTRIBUTE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_AttributeType_Freshness
 *        For the freshness use case the attribute value will be the duration
 *        between the current time and the date in the datetime field specified.
 *        The value must be formatted as an XSD `dayTimeDuration` value (a
 *        restricted subset of an ISO 8601 duration value). The pattern for this
 *        is: `nDnM]`. For example, `5D`, `3DT12H30M`, `T24H`. (Value:
 *        "FRESHNESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_AttributeType_Numerical
 *        The value of the numerical field will be used to dynamically update
 *        the boost amount. In this case, the attribute_value (the x value) of
 *        the control point will be the actual value of the numerical field for
 *        which the boost_amount is specified. (Value: "NUMERICAL")
 */
@property(nonatomic, copy, nullable) NSString *attributeType;

/**
 *  Optional. The control points used to define the curve. The monotonic
 *  function (defined through the interpolation_type above) passes through the
 *  control points listed here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpecControlPoint *> *controlPoints;

/**
 *  Optional. The name of the field whose value will be used to determine the
 *  boost amount.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  Optional. The interpolation type to be applied to connect the control points
 *  listed below.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_InterpolationType_InterpolationTypeUnspecified
 *        Interpolation type is unspecified. In this case, it defaults to
 *        Linear. (Value: "INTERPOLATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec_InterpolationType_Linear
 *        Piecewise linear interpolation will be applied. (Value: "LINEAR")
 */
@property(nonatomic, copy, nullable) NSString *interpolationType;

@end


/**
 *  The control points used to define the curve. The curve defined through these
 *  control points can only be monotonically increasing or decreasing(constant
 *  values are acceptable).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpecControlPoint : GTLRObject

/**
 *  Optional. Can be one of: 1. The numerical field value. 2. The duration spec
 *  for freshness: The value must be formatted as an XSD `dayTimeDuration` value
 *  (a restricted subset of an ISO 8601 duration value). The pattern for this
 *  is: `nDnM]`.
 */
@property(nonatomic, copy, nullable) NSString *attributeValue;

/**
 *  Optional. The value between -1 to 1 by which to boost the score if the
 *  attribute_value evaluates to the value specified above.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boostAmount;

@end


/**
 *  Specified which products may be included in results. Uses same filter as
 *  boost.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlFilterAction : GTLRObject

/**
 *  Required. Specifies which data store's documents can be filtered by this
 *  control. Full data store name e.g.
 *  projects/123/locations/global/collections/default_collection/dataStores/default_data_store
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Required. A filter to apply on the matching condition results. Required
 *  Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order
 *  Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is
 *  thrown.
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  Promote certain links based on some trigger queries. Example: Promote shoe
 *  store link when searching for `shoe` keyword. The link can be outside of
 *  associated data store.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlPromoteAction : GTLRObject

/** Required. Data store with which this promotion is attached to. */
@property(nonatomic, copy, nullable) NSString *dataStore;

/** Required. Promotion attached to this action. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchLinkPromotion *searchLinkPromotion;

@end


/**
 *  Redirects a shopper to the provided URI.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlRedirectAction : GTLRObject

/**
 *  Required. The URI to which the shopper will be redirected. Required. URI
 *  must have length equal or less than 2000 characters. Otherwise an INVALID
 *  ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *redirectUri;

@end


/**
 *  Creates a set of terms that will act as synonyms of one another. Example:
 *  "happy" will also be considered as "glad", "glad" will also be considered as
 *  "happy".
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaControlSynonymsAction : GTLRObject

/**
 *  Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at
 *  least 2 synonyms. Otherwise an INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

@end


/**
 *  The historical crawl rate timeseries data, used for monitoring.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries : GTLRObject

/** The QPS of the crawl rate. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries *qpsTimeSeries;

@end


/**
 *  Metadata related to the progress of the DataStoreService.CreateDataStore
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCreateDataStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the EngineService.CreateEngine
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCreateEngineMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for EvaluationService.CreateEvaluation method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCreateEvaluationMetadata : GTLRObject
@end


/**
 *  Metadata for Create Schema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.CreateSitemap operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCreateSitemapMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.CreateTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCreateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  DataStore captures global settings and configs at the DataStore level.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore : GTLRObject

/** Optional. Configuration for advanced site search. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaAdvancedSiteSearchConfig *advancedSiteSearchConfig;

/** Output only. Data size estimation for billing. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStoreBillingEstimation *billingEstimation;

/** Output only. CMEK-related information for the DataStore. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCmekConfig *cmekConfig;

/**
 *  Immutable. The content config of the data store. If this field is unset, the
 *  server behavior defaults to ContentConfig.NO_CONTENT.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_ContentConfigUnspecified
 *        Default value. (Value: "CONTENT_CONFIG_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_ContentRequired
 *        Only contains documents with Document.content. (Value:
 *        "CONTENT_REQUIRED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_GoogleWorkspace
 *        The data store is used for workspace search. Details of workspace data
 *        store are specified in the WorkspaceConfig. (Value:
 *        "GOOGLE_WORKSPACE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_NoContent
 *        Only contains documents without any Document.content. (Value:
 *        "NO_CONTENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_ContentConfig_PublicWebsite
 *        The data store is used for public website search. (Value:
 *        "PUBLIC_WEBSITE")
 */
@property(nonatomic, copy, nullable) NSString *contentConfig;

/** Output only. Timestamp the DataStore was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The id of the default Schema associated to this data store.
 */
@property(nonatomic, copy, nullable) NSString *defaultSchemaId;

/**
 *  Required. The data store display name. This field must be a UTF-8 encoded
 *  string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Configuration for Document understanding and enrichment. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig *documentProcessingConfig;

/** Optional. Configuration for `HEALTHCARE_FHIR` vertical. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaHealthcareFhirConfig *healthcareFhirConfig;

/**
 *  Immutable. The fully qualified resource name of the associated
 *  IdentityMappingStore. This field can only be set for acl_enabled DataStores
 *  with `THIRD_PARTY` or `GSUITE` IdP. Format:
 *  `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
 */
@property(nonatomic, copy, nullable) NSString *identityMappingStore;

/**
 *  Immutable. The industry vertical that the data store registers.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_Generic
 *        The generic vertical for documents that are not specific to any
 *        industry vertical. (Value: "GENERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_HealthcareFhir
 *        The healthcare FHIR vertical. (Value: "HEALTHCARE_FHIR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_IndustryVerticalUnspecified
 *        Value used when unset. (Value: "INDUSTRY_VERTICAL_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore_IndustryVertical_Media
 *        The media industry vertical. (Value: "MEDIA")
 */
@property(nonatomic, copy, nullable) NSString *industryVertical;

/**
 *  Optional. If set, this DataStore is an Infobot FAQ DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInfobotFaqDataStore;

/**
 *  Input only. The KMS key to be used to protect this DataStore at creation
 *  time. Must be set for requests that need to comply with CMEK Org Policy
 *  protections. If this field is set and processed successfully, the DataStore
 *  will be protected by the KMS key, as indicated in the cmek_config field.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/** Language info for DataStore. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaLanguageInfo *languageInfo;

/**
 *  Immutable. The full resource name of the data store. Format:
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Configuration for Natural Language Query Understanding. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig *naturalLanguageQueryUnderstandingConfig;

/** Optional. Stores serving config at DataStore level. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStoreServingConfigDataStore *servingConfigDataStore;

/**
 *  The solutions that the data store enrolls. Available solutions for each
 *  industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and
 *  `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is
 *  automatically enrolled. Other solutions cannot be enrolled.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *solutionTypes;

/**
 *  The start schema to use for this DataStore when provisioning it. If unset, a
 *  default vertical specialized schema will be used. This field is only used by
 *  CreateDataStore API, and will be ignored if used in other APIs. This field
 *  will be omitted from all API responses including CreateDataStore API. To
 *  retrieve a schema of a DataStore, use SchemaService.GetSchema API instead.
 *  The provided schema will be validated against certain rules on schema. Learn
 *  more from [this
 *  doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *startingSchema;

/**
 *  Config to store data store type configuration for workspace data. This must
 *  be set when DataStore.content_config is set as
 *  DataStore.ContentConfig.GOOGLE_WORKSPACE.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig *workspaceConfig;

@end


/**
 *  Estimation of data size per data store.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStoreBillingEstimation : GTLRObject

/**
 *  Data size for structured data in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *structuredDataSize;

/** Last updated timestamp for structured data. */
@property(nonatomic, strong, nullable) GTLRDateTime *structuredDataUpdateTime;

/**
 *  Data size for unstructured data in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unstructuredDataSize;

/** Last updated timestamp for unstructured data. */
@property(nonatomic, strong, nullable) GTLRDateTime *unstructuredDataUpdateTime;

/**
 *  Data size for websites in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *websiteDataSize;

/** Last updated timestamp for websites. */
@property(nonatomic, strong, nullable) GTLRDateTime *websiteDataUpdateTime;

@end


/**
 *  Stores information regarding the serving configurations at DataStore level.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStoreServingConfigDataStore : GTLRObject

/**
 *  If set true, the DataStore will not be available for serving search
 *  requests.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabledForServing;

@end


/**
 *  The historical dedicated crawl rate timeseries data, used for monitoring.
 *  Dedicated crawl is used by Vertex AI to crawl the user's website when
 *  dedicate crawl is set.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDedicatedCrawlRateTimeSeries : GTLRObject

/** Vertex AI's error rate time series of auto-refresh dedicated crawl. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries *autoRefreshCrawlErrorRate;

/**
 *  Vertex AI's dedicated crawl rate time series of auto-refresh, which is the
 *  crawl rate of Google-CloudVertexBot when dedicate crawl is set, and the
 *  crawl rate is for best effort use cases like refreshing urls periodically.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries *autoRefreshCrawlRate;

/** Vertex AI's error rate time series of user triggered dedicated crawl. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries *userTriggeredCrawlErrorRate;

/**
 *  Vertex AI's dedicated crawl rate time series of user triggered crawl, which
 *  is the crawl rate of Google-CloudVertexBot when dedicate crawl is set, and
 *  user triggered crawl rate is for deterministic use cases like crawling urls
 *  or sitemaps specified by users.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries *userTriggeredCrawlRate;

@end


/**
 *  Metadata related to the progress of the DataStoreService.DeleteDataStore
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDeleteDataStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the EngineService.DeleteEngine
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDeleteEngineMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  IdentityMappingStoreService.DeleteIdentityMappingStore operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDeleteIdentityMappingStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for DeleteSchema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DeleteSitemap operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDeleteSitemapMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DeleteTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDeleteTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for SiteSearchEngineService.DisableAdvancedSiteSearch
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchResponse : GTLRObject
@end


/**
 *  A singleton resource of DataStore. If it's empty when DataStore is created
 *  and DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED, the
 *  default parser will default to digital parser.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig : GTLRObject

/** Whether chunking mode is enabled. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig *chunkingConfig;

/**
 *  Configurations for default Document parser. If not specified, we will
 *  configure it as default DigitalParsingConfig, and the default parsing config
 *  will be applied to all file types for Document parsing.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig *defaultParsingConfig;

/**
 *  The full resource name of the Document Processing Config. Format: `projects/
 *  * /locations/ * /collections/ * /dataStores/ * /documentProcessingConfig`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Map from file type to override the default parsing configuration based on
 *  the file type. Supported keys: * `pdf`: Override parsing config for PDF
 *  files, either digital parsing, ocr parsing or layout parsing is supported. *
 *  `html`: Override parsing config for HTML files, only digital parsing and
 *  layout parsing are supported. * `docx`: Override parsing config for DOCX
 *  files, only digital parsing and layout parsing are supported. * `pptx`:
 *  Override parsing config for PPTX files, only digital parsing and layout
 *  parsing are supported. * `xlsm`: Override parsing config for XLSM files,
 *  only digital parsing and layout parsing are supported. * `xlsx`: Override
 *  parsing config for XLSX files, only digital parsing and layout parsing are
 *  supported.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig_ParsingConfigOverrides *parsingConfigOverrides;

@end


/**
 *  Map from file type to override the default parsing configuration based on
 *  the file type. Supported keys: * `pdf`: Override parsing config for PDF
 *  files, either digital parsing, ocr parsing or layout parsing is supported. *
 *  `html`: Override parsing config for HTML files, only digital parsing and
 *  layout parsing are supported. * `docx`: Override parsing config for DOCX
 *  files, only digital parsing and layout parsing are supported. * `pptx`:
 *  Override parsing config for PPTX files, only digital parsing and layout
 *  parsing are supported. * `xlsm`: Override parsing config for XLSM files,
 *  only digital parsing and layout parsing are supported. * `xlsx`: Override
 *  parsing config for XLSX files, only digital parsing and layout parsing are
 *  supported.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig_ParsingConfigOverrides : GTLRObject
@end


/**
 *  Configuration for chunking config.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig : GTLRObject

/** Configuration for the layout based chunking. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig *layoutBasedChunkingConfig;

@end


/**
 *  Configuration for the layout based chunking.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig : GTLRObject

/**
 *  The token size limit for each chunk. Supported values: 100-500 (inclusive).
 *  Default value: 500.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *chunkSize;

/**
 *  Whether to include appending different levels of headings to chunks from the
 *  middle of the document to prevent context loss. Default value: False.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeAncestorHeadings;

@end


/**
 *  Related configurations applied to a specific type of document parser.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig : GTLRObject

/** Configurations applied to digital parser. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig *digitalParsingConfig;

/** Configurations applied to layout parser. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig *layoutParsingConfig;

/**
 *  Configurations applied to OCR parser. Currently it only applies to PDFs.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig *ocrParsingConfig;

@end


/**
 *  The digital parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig : GTLRObject
@end


/**
 *  The layout parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig : GTLRObject
@end


/**
 *  The OCR parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig : GTLRObject

/**
 *  [DEPRECATED] This field is deprecated. To use the additional enhanced
 *  document elements processing, please switch to `layout_parsing_config`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *enhancedDocumentElements GTLR_DEPRECATED;

/**
 *  If true, will use native text instead of OCR text on pages containing native
 *  text.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useNativeText;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for SiteSearchEngineService.EnableAdvancedSiteSearch
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchResponse : GTLRObject
@end


/**
 *  Metadata that describes the training and serving parameters of an Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine : GTLRObject

/**
 *  Configurations for the Chat Engine. Only applicable if solution_type is
 *  SOLUTION_TYPE_CHAT.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig *chatEngineConfig;

/**
 *  Output only. Additional information of the Chat Engine. Only applicable if
 *  solution_type is SOLUTION_TYPE_CHAT.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata *chatEngineMetadata;

/** Common config spec that specifies the metadata of the engine. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineCommonConfig *commonConfig;

/** Output only. Timestamp the Recommendation Engine was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and
 *  SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with
 *  at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple
 *  DataStores in the same Collection can be associated here. Note that when
 *  used in CreateEngineRequest, one DataStore id must be provided as the system
 *  will use it for necessary initializations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dataStoreIds;

/**
 *  Optional. Whether to disable analytics for searches performed on this
 *  engine.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAnalytics;

/**
 *  Required. The display name of the engine. Should be human readable. UTF-8
 *  encoded string with limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The industry vertical that the engine registers. The restriction of the
 *  Engine industry vertical is based on DataStore: Vertical on Engine has to
 *  match vertical of the DataStore linked to the engine.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_Generic
 *        The generic vertical for documents that are not specific to any
 *        industry vertical. (Value: "GENERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_HealthcareFhir
 *        The healthcare FHIR vertical. (Value: "HEALTHCARE_FHIR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_IndustryVerticalUnspecified
 *        Value used when unset. (Value: "INDUSTRY_VERTICAL_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_IndustryVertical_Media
 *        The media industry vertical. (Value: "MEDIA")
 */
@property(nonatomic, copy, nullable) NSString *industryVertical;

/**
 *  Immutable. The fully qualified resource name of the engine. This field must
 *  be a UTF-8 encoded string with a length limit of 1024 characters. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
 *  engine should be 1-63 characters, and valid characters are /a-z0-9* /.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Configurations for the Search Engine. Only applicable if solution_type is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig *searchEngineConfig;

/**
 *  Required. The solutions of the engine.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeChat
 *        Used for use cases related to the Generative AI agent. (Value:
 *        "SOLUTION_TYPE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeGenerativeChat
 *        Used for use cases related to the Generative Chat agent. It's used for
 *        Generative chat engine only, the associated data stores must enrolled
 *        with `SOLUTION_TYPE_CHAT` solution. (Value:
 *        "SOLUTION_TYPE_GENERATIVE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeRecommendation
 *        Used for Recommendations AI. (Value: "SOLUTION_TYPE_RECOMMENDATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeSearch
 *        Used for Discovery Search. (Value: "SOLUTION_TYPE_SEARCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine_SolutionType_SolutionTypeUnspecified
 *        Default value. (Value: "SOLUTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *solutionType;

/** Output only. Timestamp the Recommendation Engine was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Configurations for a Chat Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig : GTLRObject

/**
 *  The configurationt generate the Dialogflow agent that is associated to this
 *  Engine. Note that these configurations are one-time consumed by and passed
 *  to Dialogflow service. It means they cannot be retrieved using
 *  EngineService.GetEngine or EngineService.ListEngines API after engine
 *  creation.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig *agentCreationConfig;

/**
 *  Optional. If the flag set to true, we allow the agent and engine are in
 *  different locations, otherwise the agent and engine are required to be in
 *  the same location. The flag is set to false by default. Note that the
 *  `allow_cross_region` are one-time consumed by and passed to
 *  EngineService.CreateEngine. It means they cannot be retrieved using
 *  EngineService.GetEngine or EngineService.ListEngines API after engine
 *  creation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowCrossRegion;

/**
 *  The resource name of an exist Dialogflow agent to link to this Chat Engine.
 *  Customers can either provide `agent_creation_config` to create agent or
 *  provide an agent name that links the agent with the Chat engine. Format:
 *  `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are
 *  one-time consumed by and passed to Dialogflow service. It means they cannot
 *  be retrieved using EngineService.GetEngine or EngineService.ListEngines API
 *  after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
 *  agent association after Engine is created.
 */
@property(nonatomic, copy, nullable) NSString *dialogflowAgentToLink;

@end


/**
 *  Configurations for generating a Dialogflow agent. Note that these
 *  configurations are one-time consumed by and passed to Dialogflow service. It
 *  means they cannot be retrieved using EngineService.GetEngine or
 *  EngineService.ListEngines API after engine creation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig : GTLRObject

/**
 *  Name of the company, organization or other entity that the agent represents.
 *  Used for knowledge connector LLM prompt and for knowledge search.
 */
@property(nonatomic, copy, nullable) NSString *business;

/**
 *  Required. The default language of the agent as a language tag. See [Language
 *  Support](https://cloud.google.com/dialogflow/docs/reference/language) for a
 *  list of the currently supported language codes.
 */
@property(nonatomic, copy, nullable) NSString *defaultLanguageCode;

/**
 *  Agent location for Agent creation, supported values: global/us/eu. If not
 *  provided, us Engine will create Agent using us-central-1 by default; eu
 *  Engine will create Agent using eu-west-1 by default.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Required. The time zone of the agent from the [time zone
 *  database](https://www.iana.org/time-zones), e.g., America/New_York,
 *  Europe/Paris.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  Additional information of a Chat Engine. Fields in this message are output
 *  only.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata : GTLRObject

/**
 *  The resource name of a Dialogflow agent, that this Chat Engine refers to.
 *  Format: `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *dialogflowAgent;

@end


/**
 *  Common configurations for an Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineCommonConfig : GTLRObject

/**
 *  The name of the company, business or entity that is associated with the
 *  engine. Setting this may help improve LLM related features.
 */
@property(nonatomic, copy, nullable) NSString *companyName;

@end


/**
 *  Configurations for a Search Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig : GTLRObject

/** The add-on that this search engine enables. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *searchAddOns;

/**
 *  The search feature tier of this engine. Different tiers might have different
 *  pricing. To learn more, check the pricing documentation. Defaults to
 *  SearchTier.SEARCH_TIER_STANDARD if not specified.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchTier_SearchTierEnterprise
 *        Enterprise tier. (Value: "SEARCH_TIER_ENTERPRISE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchTier_SearchTierStandard
 *        Standard tier. (Value: "SEARCH_TIER_STANDARD")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig_SearchTier_SearchTierUnspecified
 *        Default value when the enum is unspecified. This is invalid to use.
 *        (Value: "SEARCH_TIER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchTier;

@end


/**
 *  An evaluation is a single execution (or run) of an evaluation process. It
 *  encapsulates the state of the evaluation and the resulting data.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation : GTLRObject

/** Output only. Timestamp the Evaluation was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Timestamp the Evaluation was completed at. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. The error that occurred during evaluation. Only populated when
 *  the evaluation's state is FAILED.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Output only. A sample of errors encountered while processing the request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/** Required. The specification of the evaluation. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec *evaluationSpec;

/**
 *  Identifier. The full resource name of the Evaluation, in the format of
 *  `projects/{project}/locations/{location}/evaluations/{evaluation}`. This
 *  field must be a UTF-8 encoded string with a length limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The metrics produced by the evaluation, averaged across all
 *  SampleQuerys in the SampleQuerySet. Only populated when the evaluation's
 *  state is SUCCEEDED.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetrics *qualityMetrics;

/**
 *  Output only. The state of the evaluation.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Failed
 *        The evaluation failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Pending
 *        The service is preparing to run the evaluation. (Value: "PENDING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Running
 *        The evaluation is in progress. (Value: "RUNNING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_StateUnspecified
 *        The evaluation is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluation_State_Succeeded
 *        The evaluation completed successfully. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Describes the specification of the evaluation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec : GTLRObject

/** Required. The specification of the query set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec *querySetSpec;

/**
 *  Required. The search request that is used to perform the evaluation. Only
 *  the following fields within SearchRequest are supported; if any other fields
 *  are provided, an UNSUPPORTED error will be returned: *
 *  SearchRequest.serving_config * SearchRequest.branch *
 *  SearchRequest.canonical_filter * SearchRequest.query_expansion_spec *
 *  SearchRequest.spell_correction_spec * SearchRequest.content_search_spec *
 *  SearchRequest.user_pseudo_id
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest *searchRequest;

@end


/**
 *  Describes the specification of the query set.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec : GTLRObject

/**
 *  Required. The full resource name of the SampleQuerySet used for the
 *  evaluation, in the format of
 *  `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
 */
@property(nonatomic, copy, nullable) NSString *sampleQuerySet;

@end


/**
 *  Config to data store for `HEALTHCARE_FHIR` vertical.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaHealthcareFhirConfig : GTLRObject

/**
 *  Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set
 *  to `true`, the predefined healthcare fhir schema can be extended for more
 *  customized searching and filtering.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableConfigurableSchema;

/**
 *  Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If
 *  set to `true`, the batch ingestion will be processed in a static indexing
 *  mode which is slower but more capable of handling larger volume.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableStaticIndexingForBatchIngestion;

@end


/**
 *  IdentityMappingEntry LongRunningOperation metadata for
 *  IdentityMappingStoreService.ImportIdentityMappings and
 *  IdentityMappingStoreService.PurgeIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaIdentityMappingEntryOperationMetadata : GTLRObject

/**
 *  The number of IdentityMappingEntries that failed to be processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  The number of IdentityMappingEntries that were successfully processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  The total number of IdentityMappingEntries that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

@end


/**
 *  Metadata related to the progress of the ImportCompletionSuggestions
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of CompletionSuggestions that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of CompletionSuggestions successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the CompletionService.ImportCompletionSuggestions method. If the
 *  long running operation is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsResponse : GTLRObject

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportDocuments operation. This is
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Total count of entries that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportDocumentsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig : GTLRObject

/**
 *  Cloud Storage prefix for import errors. This must be an empty, existing
 *  Cloud Storage directory. Import errors are written to sharded files in this
 *  directory, one per line, as a JSON-encoded `google.rpc.Status` message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Response message for IdentityMappingStoreService.ImportIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportIdentityMappingsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportSampleQueries operation. This
 *  will be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportSampleQueriesMetadata : GTLRObject

/** ImportSampleQueries operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of SampleQuerys that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of SampleQuerys successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Total count of SampleQuerys that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

/**
 *  ImportSampleQueries operation last update time. If the operation is done,
 *  this is also the finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the SampleQueryService.ImportSampleQueries method. If the long
 *  running operation is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportSampleQueriesResponse : GTLRObject

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportSuggestionDenyListEntries
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CompletionService.ImportSuggestionDenyListEntries
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of deny list entries that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failedEntriesCount;

/**
 *  Count of deny list entries successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedEntriesCount;

@end


/**
 *  Metadata related to the progress of the Import operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsResponse : GTLRObject

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of user events imported with complete existing Documents.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with Document information not found in
 *  the existing Branch.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  A floating point interval.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaInterval : GTLRObject

/**
 *  Exclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMaximum;

/**
 *  Exclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMinimum;

/**
 *  Inclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximum;

/**
 *  Inclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimum;

@end


/**
 *  Language info for DataStore.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaLanguageInfo : GTLRObject

/**
 *  Output only. Language part of normalized_language_code. E.g.: `en-US` ->
 *  `en`, `zh-Hans-HK` -> `zh`, `en` -> `en`.
 */
@property(nonatomic, copy, nullable) NSString *language;

/** The language code for the DataStore. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Output only. This is the normalized form of language_code. E.g.:
 *  language_code of `en-GB`, `en_GB`, `en-UK` or `en-gb` will have
 *  normalized_language_code of `en-GB`.
 */
@property(nonatomic, copy, nullable) NSString *normalizedLanguageCode;

/**
 *  Output only. Region part of normalized_language_code, if present. E.g.:
 *  `en-US` -> `US`, `zh-Hans-HK` -> `HK`, `en` -> ``.
 */
@property(nonatomic, copy, nullable) NSString *region;

@end


/**
 *  Configuration for Natural Language Query Understanding.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig : GTLRObject

/**
 *  Mode of Natural Language Query Understanding. If this field is unset, the
 *  behavior defaults to NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig_Mode_Disabled
 *        Natural Language Query Understanding is disabled. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig_Mode_Enabled
 *        Natural Language Query Understanding is enabled. (Value: "ENABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig_Mode_ModeUnspecified
 *        Default value. (Value: "MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Response message for CrawlRateManagementService.ObtainCrawlRate method. The
 *  response contains organcic or dedicated crawl rate time series data for
 *  monitoring, depending on whether dedicated crawl rate is set.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse : GTLRObject

/**
 *  The historical dedicated crawl rate timeseries data, used for monitoring.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDedicatedCrawlRateTimeSeries *dedicatedCrawlRateTimeSeries;

/** Errors from service when handling the request. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/** The historical organic crawl rate timeseries data, used for monitoring. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaOrganicCrawlRateTimeSeries *organicCrawlRateTimeSeries;

/**
 *  Output only. The state of the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse_State_Failed
 *        The state is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse_State_StateUnspecified
 *        The state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse_State_Succeeded
 *        The state is successful. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The historical organic crawl rate timeseries data, used for monitoring.
 *  Organic crawl is auto-determined by Google to crawl the user's website when
 *  dedicate crawl is not set. Crawl rate is the QPS of crawl request Google
 *  sends to the user's website.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaOrganicCrawlRateTimeSeries : GTLRObject

/**
 *  Google's organic crawl rate time series, which is the sum of all googlebots'
 *  crawl rate. Please refer to
 *  https://developers.google.com/search/docs/crawling-indexing/overview-google-crawlers
 *  for more details about googlebots.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries *googleOrganicCrawlRate;

/**
 *  Vertex AI's organic crawl rate time series, which is the crawl rate of
 *  Google-CloudVertexBot when dedicate crawl is not set. Please refer to
 *  https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers#google-cloudvertexbot
 *  for more details about Google-CloudVertexBot.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries *vertexAiOrganicCrawlRate;

@end


/**
 *  Metadata and configurations for a Google Cloud project in the service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProject : GTLRObject

/** Output only. The timestamp when this project is created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Full resource name of the project, for example
 *  `projects/{project}`. Note that when making requests, project number and
 *  project id are both acceptable, but the server will always respond in
 *  project number.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The timestamp when this project is successfully provisioned.
 *  Empty value means this project is still provisioning and is not ready for
 *  use.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *provisionCompletionTime;

/**
 *  Output only. A map of terms of services. The key is the `id` of
 *  ServiceTerms.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProject_ServiceTermsMap *serviceTermsMap;

@end


/**
 *  Output only. A map of terms of services. The key is the `id` of
 *  ServiceTerms.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProject_ServiceTermsMap : GTLRObject
@end


/**
 *  Metadata about the terms of service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms : GTLRObject

/** The last time when the project agreed to the terms of service. */
@property(nonatomic, strong, nullable) GTLRDateTime *acceptTime;

/**
 *  The last time when the project declined or revoked the agreement to terms of
 *  service.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *declineTime;

/**
 *  The unique identifier of this terms of service. Available terms: *
 *  `GA_DATA_USE_TERMS`: [Terms for data
 *  use](https://cloud.google.com/retail/data-use-terms). When using this as
 *  `id`, the acceptable version to provide is `2022-11-23`.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Whether the project has accepted/rejected the service terms or it is still
 *  pending.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_StateUnspecified
 *        The default value of the enum. This value is not actually used.
 *        (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_TermsAccepted
 *        The project has given consent to the terms of service. (Value:
 *        "TERMS_ACCEPTED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_TermsDeclined
 *        The project has declined or revoked the agreement to terms of service.
 *        (Value: "TERMS_DECLINED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProjectServiceTerms_State_TermsPending
 *        The project is pending to review and accept the terms of service.
 *        (Value: "TERMS_PENDING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The version string of the terms of service. For acceptable values, see the
 *  comments for id above.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Metadata associated with a project provision operation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaProvisionProjectMetadata : GTLRObject
@end


/**
 *  Metadata related to the progress of the PurgeDocuments operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were ignored as entries were not found.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoredCount;

/**
 *  Count of entries that were deleted successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for DocumentService.PurgeDocuments method. If the long
 *  running operation is successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse : GTLRObject

/**
 *  The total count of documents purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

/**
 *  A sample of document names that will be deleted. Only populated if `force`
 *  is set to false. A max of 100 names will be returned and the names are
 *  chosen at random.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeSample;

@end


/**
 *  Metadata related to the progress of the PurgeSuggestionDenyListEntries
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CompletionService.PurgeSuggestionDenyListEntries
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Number of suggestion deny list entries purged.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

@end


/**
 *  Describes the metrics produced by the evaluation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetrics : GTLRObject

/**
 *  Normalized discounted cumulative gain (NDCG) per document, at various top-k
 *  cutoff levels. NDCG measures the ranking quality, giving higher relevance to
 *  top results. Example (top-3): Suppose SampleQuery with three retrieved
 *  documents (D1, D2, D3) and binary relevance judgements (1 for relevant, 0
 *  for not relevant): Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2
 *  (1), D3 (0)] Calculate NDCG\@3 for each SampleQuery: * DCG\@3: 0/log2(1+1) +
 *  1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG\@3: 1/log2(1+1) + 1/log2(2+1) +
 *  0/log2(3+1) = 1.63 * NDCG\@3: 1.13/1.63 = 0.693
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics *docNdcg;

/**
 *  Precision per document, at various top-k cutoff levels. Precision is the
 *  fraction of retrieved documents that are relevant. Example (top-5): * For a
 *  single SampleQuery, If 4 out of 5 retrieved documents in the top-5 are
 *  relevant, precision\@5 = 4/5 = 0.8
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics *docPrecision;

/**
 *  Recall per document, at various top-k cutoff levels. Recall is the fraction
 *  of relevant documents retrieved out of all relevant documents. Example
 *  (top-5): * For a single SampleQuery, If 3 out of 5 relevant documents are
 *  retrieved in the top-5, recall\@5 = 3/5 = 0.6
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics *docRecall;

/**
 *  Normalized discounted cumulative gain (NDCG) per page, at various top-k
 *  cutoff levels. NDCG measures the ranking quality, giving higher relevance to
 *  top results. Example (top-3): Suppose SampleQuery with three retrieved pages
 *  (P1, P2, P3) and binary relevance judgements (1 for relevant, 0 for not
 *  relevant): Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3
 *  (0)] Calculate NDCG\@3 for SampleQuery: * DCG\@3: 0/log2(1+1) + 1/log2(2+1)
 *  + 1/log2(3+1) = 1.13 * Ideal DCG\@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1)
 *  = 1.63 * NDCG\@3: 1.13/1.63 = 0.693
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics *pageNdcg;

/**
 *  Recall per page, at various top-k cutoff levels. Recall is the fraction of
 *  relevant pages retrieved out of all relevant pages. Example (top-5): * For a
 *  single SampleQuery, if 3 out of 5 relevant pages are retrieved in the top-5,
 *  recall\@5 = 3/5 = 0.6
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics *pageRecall;

@end


/**
 *  Stores the metric values at specific top-k levels.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics : GTLRObject

/**
 *  The top-1 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top1;

/**
 *  The top-10 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top10;

/**
 *  The top-3 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top3;

/**
 *  The top-5 value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *top5;

@end


/**
 *  Metadata related to the progress of the
 *  CrawlRateManagementService.RemoveDedicatedCrawlRate operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CrawlRateManagementService.RemoveDedicatedCrawlRate
 *  method. It simply returns the state of the response, and an error message if
 *  the state is FAILED.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse : GTLRObject

/** Errors from service when handling the request. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Output only. The state of the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse_State_Failed
 *        The state is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse_State_StateUnspecified
 *        The state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse_State_Succeeded
 *        The state is successful. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Defines the structure and layout of a type of document data.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema : GTLRObject

/** The JSON representation of the schema. */
@property(nonatomic, copy, nullable) NSString *jsonSchema;

/**
 *  Immutable. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The structured representation of the schema. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema_StructSchema *structSchema;

@end


/**
 *  The structured representation of the schema.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema_StructSchema : GTLRObject
@end


/**
 *  Promotion proto includes uri and other helping information to display the
 *  promotion.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchLinkPromotion : GTLRObject

/**
 *  Optional. The Promotion description. Maximum length: 200 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. The enabled promotion will be returned for any serving configs
 *  associated with the parent of the control this promotion is attached to.
 *  This flag is used for basic site search only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/** Optional. The promotion thumbnail image url. */
@property(nonatomic, copy, nullable) NSString *imageUri;

/** Required. The title of the promotion. Maximum length: 160 characters. */
@property(nonatomic, copy, nullable) NSString *title;

/** Required. The URL for the page the user wants to promote. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Request message for SearchService.Search method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest : GTLRObject

/**
 *  Boost specification to boost certain documents. For more information on
 *  boosting, see
 *  [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec *boostSpec;

/**
 *  The branch resource name, such as `projects/ *
 *  /locations/global/collections/default_collection/dataStores/default_data_store/branches/0`.
 *  Use `default_branch` as the branch ID or leave this field empty, to search
 *  documents under the default branch.
 */
@property(nonatomic, copy, nullable) NSString *branch;

/**
 *  The default filter that is applied when a user performs a search without
 *  checking any filters on the search page. The filter applied to every search
 *  request when quality improvement such as query expansion is needed. In the
 *  case a query does not have a sufficient amount of results this filter will
 *  be used to determine whether or not to enable the query expansion flow. The
 *  original filter will still be used for the query expanded search. This field
 *  is strongly recommended to achieve high search quality. For more information
 *  about filter syntax, see SearchRequest.filter.
 */
@property(nonatomic, copy, nullable) NSString *canonicalFilter;

/** A specification for configuring the behavior of content search. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec *contentSearchSpec;

/**
 *  Specifications that define the specific [DataStore]s to be searched, along
 *  with configurations for those data stores. This is only considered for
 *  Engines with multiple data stores. For engines with a single data store, the
 *  specs directly under SearchRequest should be used.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec *> *dataStoreSpecs;

/**
 *  Uses the provided embedding to do additional semantic document retrieval.
 *  The retrieval is based on the dot product of
 *  SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document
 *  embedding that is provided in
 *  SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If
 *  SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not provided, it
 *  will use ServingConfig.EmbeddingConfig.field_path.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec *embeddingSpec;

/**
 *  Facet specifications for faceted search. If empty, no facets are returned. A
 *  maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
 *  returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec *> *facetSpecs;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the documents being filtered. Filter
 *  expression is case-sensitive. If this field is unrecognizable, an
 *  `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
 *  mapping the LHS filter key to a key property defined in the Vertex AI Search
 *  backend -- this mapping is defined by the customer in their schema. For
 *  example a media customer might have a field 'name' in their schema. In this
 *  case the filter would look like this: filter --> name:'ANY("king kong")' For
 *  more information about filtering including syntax and filter operators, see
 *  [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Raw image query. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery *imageQuery;

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". For more
 *  information, see [Standard
 *  fields](https://cloud.google.com/apis/design/standard_fields). This field
 *  helps to better interpret the query. If a value isn't specified, the query
 *  language code is automatically detected, which may not be accurate.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  If `naturalLanguageQueryUnderstandingSpec` is not specified, no additional
 *  natural language query understanding will be done.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec *naturalLanguageQueryUnderstandingSpec;

/**
 *  A 0-indexed integer that specifies the current offset (that is, starting
 *  result location, amongst the Documents deemed by the API as relevant) in
 *  search results. This field is only considered if page_token is unset. If
 *  this field is negative, an `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The maximum number of results to return for OneBox. This applies to each
 *  OneBox type individually. Default number is 10.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *oneBoxPageSize;

/**
 *  The order in which documents are returned. Documents can be ordered by a
 *  field in an Document object. Leave it unset if ordered by relevance.
 *  `order_by` expression is case-sensitive. For more information on ordering
 *  the website search results, see [Order web search
 *  results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results).
 *  For more information on ordering the healthcare search results, see [Order
 *  healthcare search
 *  results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results).
 *  If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of Documents to return. The maximum allowed value depends on
 *  the data type. Values above the maximum value are coerced to the maximum
 *  value. * Websites with basic indexing: Default `10`, Maximum `25`. *
 *  Websites with advanced indexing: Default `25`, Maximum `50`. * Other:
 *  Default `50`, Maximum `100`. If this field is negative, an
 *  `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A page token received from a previous SearchService.Search call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to SearchService.Search must match the call that provided the page
 *  token. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Additional search parameters. For public website search only, supported
 *  values are: * `user_country_code`: string. Default empty. If set to
 *  non-empty, results are restricted or boosted based on the location provided.
 *  For example, `user_country_code: "au"` For available codes see [Country
 *  Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
 *  * `search_type`: double. Default empty. Enables non-webpage searching
 *  depending on the value. The only valid non-default value is 1, which enables
 *  image searching. For example, `search_type: 1`
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_Params *params;

/**
 *  The specification for personalization. Notice that if both
 *  ServingConfig.personalization_spec and SearchRequest.personalization_spec
 *  are set, SearchRequest.personalization_spec overrides
 *  ServingConfig.personalization_spec.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec *personalizationSpec;

/** Raw search query. */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  The query expansion specification that specifies the conditions under which
 *  query expansion occurs.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec *queryExpansionSpec;

/**
 *  The ranking expression controls the customized ranking on retrieval
 *  documents. This overrides ServingConfig.ranking_expression. The syntax and
 *  supported features depend on the ranking_expression_backend value. If
 *  ranking_expression_backend is not provided, it defaults to BYOE. === BYOE
 *  === If ranking expression is not provided or set to BYOE, it should be a
 *  single function or multiple functions that are joined by "+". *
 *  ranking_expression = function, { " + ", function }; Supported functions: *
 *  double * relevance_score * double * dotProduct(embedding_field_path)
 *  Function variables: * `relevance_score`: pre-defined keywords, used for
 *  measure relevance between query and document. * `embedding_field_path`: the
 *  document embedding field used with query embedding vector. * `dotProduct`:
 *  embedding function between embedding_field_path and query embedding vector.
 *  Example ranking expression: If document has an embedding field
 *  doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3
 *  * dotProduct(doc_embedding)`. === CLEARBOX === If ranking expression is set
 *  to CLEARBOX, the following expression types (and combinations of those
 *  chained using + or * operators) are supported: * double * signal *
 *  log(signal) * exp(signal) * rr(signal, double > 0) -- reciprocal rank
 *  transformation with second argument being a denominator constant. *
 *  is_nan(signal) -- returns 0 if signal is NaN, 1 otherwise. *
 *  fill_nan(signal1, signal2 | double) -- if signal1 is NaN, returns signal2 |
 *  double, else returns signal1. Examples: * 0.2 * gecko_score + 0.8 *
 *  log(bm25_score) * 0.2 * exp(fill_nan(gecko_score, 0)) + 0.3 *
 *  is_nan(bm25_score) * 0.2 * rr(gecko_score, 16) + 0.8 * rr(bm25_score, 32)
 *  The following signals are supported: * gecko_score -- semantic similarity
 *  adjustment * bm25_score -- keyword match adjustment * jetstream_score --
 *  semantic relevance adjustment * pctr_rank -- predicted conversion rate
 *  adjustment as a rank * freshness_rank -- freshness adjustment as a rank *
 *  base_rank -- the default rank of the result
 */
@property(nonatomic, copy, nullable) NSString *rankingExpression;

/**
 *  Optional. The backend to use for the ranking expression evaluation.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RankingExpressionBackend_Byoe
 *        Bring your own embedding (BYOE), the default way to evaluate the
 *        ranking expression. (Value: "BYOE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RankingExpressionBackend_Clearbox
 *        The expression is compiled into a Clearbox formula. (Value:
 *        "CLEARBOX")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RankingExpressionBackend_Unknown
 *        Default option for unspecified/unknown values. (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *rankingExpressionBackend;

/**
 *  The Unicode country/region code (CLDR) of a location, such as "US" and
 *  "419". For more information, see [Standard
 *  fields](https://cloud.google.com/apis/design/standard_fields). If set, then
 *  results will be boosted based on the region_code provided.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

/** Optional. The specification for returning the relevance score. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestRelevanceScoreSpec *relevanceScoreSpec;

/**
 *  The relevance threshold of the search results. Default to Google defined
 *  threshold, leveraging a balance of precision and recall to deliver both
 *  highly accurate results and comprehensive coverage of relevant information.
 *  This feature is not supported for healthcare search.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_High
 *        High relevance threshold. (Value: "HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_Low
 *        Low relevance threshold. (Value: "LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_Lowest
 *        Lowest relevance threshold. (Value: "LOWEST")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_Medium
 *        Medium relevance threshold. (Value: "MEDIUM")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_RelevanceThreshold_RelevanceThresholdUnspecified
 *        Default value. In this case, server behavior defaults to Google
 *        defined threshold. (Value: "RELEVANCE_THRESHOLD_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *relevanceThreshold;

/**
 *  Whether to turn on safe search. This is only supported for website search.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *safeSearch;

/**
 *  Search as you type configuration. Only supported for the
 *  IndustryVertical.MEDIA vertical.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec *searchAsYouTypeSpec;

/**
 *  Required. The resource name of the Search serving config, such as `projects/
 *  * /locations/global/collections/default_collection/engines/ *
 *  /servingConfigs/default_serving_config`, or `projects/ *
 *  /locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
 *  This field is used to identify the serving configuration name, set of models
 *  used to make the search.
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  The session resource name. Optional. Session allows users to do multi-turn
 *  /search API calls or coordination between /search API calls and /answer API
 *  calls. Example #1 (multi-turn /search API calls): 1. Call /search API with
 *  the auto-session mode (see below). 2. Call /search API with the session ID
 *  generated in the first call. Here, the previous search query gets considered
 *  in query standing. I.e., if the first query is "How did Alphabet do in
 *  2022?" and the current query is "How about 2023?", the current query will be
 *  interpreted as "How did Alphabet do in 2023?". Example #2 (coordination
 *  between /search API calls and /answer API calls): 1. Call /search API with
 *  the auto-session mode (see below). 2. Call /answer API with the session ID
 *  generated in the first call. Here, the answer generation happens in the
 *  context of the search results from the first search call. Auto-session mode:
 *  when `projects/.../sessions/-` is used, a new session gets automatically
 *  created. Otherwise, users can use the create-session API to create a session
 *  manually. Multi-turn Search feature is currently at private GA stage. Please
 *  use v1alpha or v1beta version instead before we launch this feature to
 *  public GA. Or ask for allowlisting through Google Support team.
 */
@property(nonatomic, copy, nullable) NSString *session;

/** Session specification. Can be used only when `session` is set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec *sessionSpec;

/**
 *  The spell correction specification that specifies the mode under which spell
 *  correction takes effect.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec *spellCorrectionSpec;

/**
 *  Information about the end user. Highly recommended for analytics and
 *  personalization. UserInfo.user_agent is used to deduce `device_type` for
 *  analytics.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserInfo *userInfo;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_UserLabels *userLabels;

/**
 *  A unique identifier for tracking visitors. For example, this could be
 *  implemented with an HTTP cookie, which should be able to uniquely identify a
 *  visitor on a single device. This unique identifier should not change if the
 *  visitor logs in or out of the website. This field should NOT have a fixed
 *  value such as `unknown_visitor`. This should be the same identifier as
 *  UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field
 *  must be a UTF-8 encoded string with a length limit of 128 characters.
 *  Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Additional search parameters. For public website search only, supported
 *  values are: * `user_country_code`: string. Default empty. If set to
 *  non-empty, results are restricted or boosted based on the location provided.
 *  For example, `user_country_code: "au"` For available codes see [Country
 *  Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
 *  * `search_type`: double. Default empty. Enables non-webpage searching
 *  depending on the value. The only valid non-default value is 1, which enables
 *  image searching. For example, `search_type: 1`
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_Params : GTLRObject
@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest_UserLabels : GTLRObject
@end


/**
 *  Boost specification to boost certain documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec : GTLRObject

/**
 *  Condition boost specifications. If a document matches multiple conditions in
 *  the specifictions, boost scores from these specifications are all applied
 *  and combined in a non-linear way. Maximum number of specifications is 20.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec *> *conditionBoostSpecs;

@end


/**
 *  Boost applies to documents which match a condition.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec : GTLRObject

/**
 *  Strength of the condition boost, which should be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0. Setting to 1.0 gives the document a big
 *  promotion. However, it does not necessarily mean that the boosted document
 *  will be the top result at all times, nor that other documents will be
 *  excluded. Results could still be shown even when none of them matches the
 *  condition. And results that are significantly more relevant to the search
 *  query can still trump your heavily favored but irrelevant documents. Setting
 *  to -1.0 gives the document a big demotion. However, results that are deeply
 *  relevant might still be shown. The document will have an upstream battle to
 *  get a fairly high ranking, but it is not blocked out completely. Setting to
 *  0.0 means no boost applied. The boosting condition is ignored. Only one of
 *  the (condition, boost) combination or the boost_control_spec below are set.
 *  If both are set then the global boost is ignored and the more fine-grained
 *  boost_control_spec is applied.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost;

/**
 *  Complex specification for custom ranking based on customer defined attribute
 *  value.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec *boostControlSpec;

/**
 *  An expression which specifies a boost condition. The syntax and supported
 *  fields are the same as a filter expression. See SearchRequest.filter for
 *  detail syntax and limitations. Examples: * To boost documents with document
 *  ID "doc_1" or "doc_2", and color "Red" or "Blue": `(document_id:
 *  ANY("doc_1", "doc_2")) AND (color: ANY("Red", "Blue"))`
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  Specification for custom ranking based on customer specified attribute
 *  value. It provides more controls for customized ranking than the simple
 *  (condition, boost) combination above.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec : GTLRObject

/**
 *  The attribute type to be used to determine the boost amount. The attribute
 *  value can be derived from the field value of the specified field_name. In
 *  the case of numerical it is straightforward i.e. attribute_value =
 *  numerical_field_value. In the case of freshness however, attribute_value =
 *  (time.now() - datetime_field_value).
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_AttributeTypeUnspecified
 *        Unspecified AttributeType. (Value: "ATTRIBUTE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Freshness
 *        For the freshness use case the attribute value will be the duration
 *        between the current time and the date in the datetime field specified.
 *        The value must be formatted as an XSD `dayTimeDuration` value (a
 *        restricted subset of an ISO 8601 duration value). The pattern for this
 *        is: `nDnM]`. For example, `5D`, `3DT12H30M`, `T24H`. (Value:
 *        "FRESHNESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Numerical
 *        The value of the numerical field will be used to dynamically update
 *        the boost amount. In this case, the attribute_value (the x value) of
 *        the control point will be the actual value of the numerical field for
 *        which the boost_amount is specified. (Value: "NUMERICAL")
 */
@property(nonatomic, copy, nullable) NSString *attributeType;

/**
 *  The control points used to define the curve. The monotonic function (defined
 *  through the interpolation_type above) passes through the control points
 *  listed here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint *> *controlPoints;

/**
 *  The name of the field whose value will be used to determine the boost
 *  amount.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  The interpolation type to be applied to connect the control points listed
 *  below.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_InterpolationTypeUnspecified
 *        Interpolation type is unspecified. In this case, it defaults to
 *        Linear. (Value: "INTERPOLATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_Linear
 *        Piecewise linear interpolation will be applied. (Value: "LINEAR")
 */
@property(nonatomic, copy, nullable) NSString *interpolationType;

@end


/**
 *  The control points used to define the curve. The curve defined through these
 *  control points can only be monotonically increasing or decreasing(constant
 *  values are acceptable).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint : GTLRObject

/**
 *  Can be one of: 1. The numerical field value. 2. The duration spec for
 *  freshness: The value must be formatted as an XSD `dayTimeDuration` value (a
 *  restricted subset of an ISO 8601 duration value). The pattern for this is:
 *  `nDnM]`.
 */
@property(nonatomic, copy, nullable) NSString *attributeValue;

/**
 *  The value between -1 to 1 by which to boost the score if the attribute_value
 *  evaluates to the value specified above.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boostAmount;

@end


/**
 *  A specification for configuring the behavior of content search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec : GTLRObject

/**
 *  Specifies the chunk spec to be returned from the search response. Only
 *  available if the SearchRequest.ContentSearchSpec.search_result_mode is set
 *  to CHUNKS
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec *chunkSpec;

/**
 *  If there is no extractive_content_spec provided, there will be no extractive
 *  answer in the search response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec *extractiveContentSpec;

/**
 *  Specifies the search result mode. If unspecified, the search result mode
 *  defaults to `DOCUMENTS`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec_SearchResultMode_Chunks
 *        Returns chunks in the search result. Only available if the
 *        DocumentProcessingConfig.chunking_config is specified. (Value:
 *        "CHUNKS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec_SearchResultMode_Documents
 *        Returns documents in the search result. (Value: "DOCUMENTS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec_SearchResultMode_SearchResultModeUnspecified
 *        Default value. (Value: "SEARCH_RESULT_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchResultMode;

/**
 *  If `snippetSpec` is not specified, snippets are not included in the search
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec *snippetSpec;

/**
 *  If `summarySpec` is not specified, summaries are not included in the search
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec *summarySpec;

@end


/**
 *  Specifies the chunk spec to be returned from the search response. Only
 *  available if the SearchRequest.ContentSearchSpec.search_result_mode is set
 *  to CHUNKS
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec : GTLRObject

/**
 *  The number of next chunks to be returned of the current chunk. The maximum
 *  allowed value is 3. If not specified, no next chunks will be returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numNextChunks;

/**
 *  The number of previous chunks to be returned of the current chunk. The
 *  maximum allowed value is 3. If not specified, no previous chunks will be
 *  returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numPreviousChunks;

@end


/**
 *  A specification for configuring the extractive content in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec : GTLRObject

/**
 *  The maximum number of extractive answers returned in each search result. An
 *  extractive answer is a verbatim answer extracted from the original document,
 *  which provides a precise and contextually relevant answer to the search
 *  query. If the number of matching answers is less than the
 *  `max_extractive_answer_count`, return all of the answers. Otherwise, return
 *  the `max_extractive_answer_count`. At most five answers are returned for
 *  each SearchResult.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxExtractiveAnswerCount;

/**
 *  The max number of extractive segments returned in each search result. Only
 *  applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED
 *  or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is
 *  a text segment extracted from the original document that is relevant to the
 *  search query, and, in general, more verbose than an extractive answer. The
 *  segment could then be used as input for LLMs to generate summaries and
 *  answers. If the number of matching segments is less than
 *  `max_extractive_segment_count`, return all of the segments. Otherwise,
 *  return the `max_extractive_segment_count`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxExtractiveSegmentCount;

/**
 *  Return at most `num_next_segments` segments after each selected segments.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numNextSegments;

/**
 *  Specifies whether to also include the adjacent from each selected segments.
 *  Return at most `num_previous_segments` segments before each selected
 *  segments.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numPreviousSegments;

/**
 *  Specifies whether to return the confidence score from the extractive
 *  segments in each search result. This feature is available only for new or
 *  allowlisted data stores. To allowlist your data store, contact your Customer
 *  Engineer. The default value is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnExtractiveSegmentScore;

@end


/**
 *  A specification for configuring snippets in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec : GTLRObject

/**
 *  [DEPRECATED] This field is deprecated. To control snippet return, use
 *  `return_snippet` field. For backwards compatibility, we will return snippet
 *  if max_snippet_count > 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxSnippetCount GTLR_DEPRECATED;

/**
 *  [DEPRECATED] This field is deprecated and will have no affect on the
 *  snippet.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *referenceOnly GTLR_DEPRECATED;

/**
 *  If `true`, then return snippet. If no snippet can be generated, we return
 *  "No snippet is available for this page." A `snippet_status` with `SUCCESS`
 *  or `NO_SNIPPET_AVAILABLE` will also be returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnSnippet;

@end


/**
 *  A specification for configuring a summary returned in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec : GTLRObject

/**
 *  Specifies whether to filter out adversarial queries. The default value is
 *  `false`. Google employs search-query classification to detect adversarial
 *  queries. No summary is returned if the search query is classified as an
 *  adversarial query. For example, a user might ask a question regarding
 *  negative comments about the company or submit a query designed to generate
 *  unsafe, policy-violating output. If this field is set to `true`, we skip
 *  generating summaries for adversarial queries and return fallback messages
 *  instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreAdversarialQuery;

/**
 *  Optional. Specifies whether to filter out jail-breaking queries. The default
 *  value is `false`. Google employs search-query classification to detect
 *  jail-breaking queries. No summary is returned if the search query is
 *  classified as a jail-breaking query. A user might add instructions to the
 *  query to change the tone, style, language, content of the answer, or ask the
 *  model to act as a different entity, e.g. "Reply in the tone of a competing
 *  company's CEO". If this field is set to `true`, we skip generating summaries
 *  for jail-breaking queries and return fallback messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreJailBreakingQuery;

/**
 *  Specifies whether to filter out queries that have low relevance. The default
 *  value is `false`. If this field is set to `false`, all search results are
 *  used regardless of relevance to generate answers. If set to `true`, only
 *  queries with high relevance search results will generate answers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreLowRelevantContent;

/**
 *  Specifies whether to filter out queries that are not summary-seeking. The
 *  default value is `false`. Google employs search-query classification to
 *  detect summary-seeking queries. No summary is returned if the search query
 *  is classified as a non-summary seeking query. For example, `why is the sky
 *  blue` and `Who is the best soccer player in the world?` are summary-seeking
 *  queries, but `SFO airport` and `world cup 2026` are not. They are most
 *  likely navigational queries. If this field is set to `true`, we skip
 *  generating summaries for non-summary seeking queries and return fallback
 *  messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreNonSummarySeekingQuery;

/**
 *  Specifies whether to include citations in the summary. The default value is
 *  `false`. When this field is set to `true`, summaries include in-line
 *  citation numbers. Example summary including citations: BigQuery is Google
 *  Cloud's fully managed and completely serverless enterprise data warehouse
 *  [1]. BigQuery supports all data types, works across clouds, and has built-in
 *  machine learning and business intelligence, all within a unified platform
 *  [2, 3]. The citation numbers refer to the returned search results and are
 *  1-indexed. For example, [1] means that the sentence is attributed to the
 *  first search result. [2, 3] means that the sentence is attributed to both
 *  the second and third search results.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeCitations;

/**
 *  Language code for Summary. Use language tags defined by
 *  [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an
 *  experimental feature.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  If specified, the spec will be used to modify the prompt provided to the
 *  LLM.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec *modelPromptSpec;

/**
 *  If specified, the spec will be used to modify the model specification
 *  provided to the LLM.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec *modelSpec;

/**
 *  The number of top results to generate the summary from. If the number of
 *  results returned is less than `summaryResultCount`, the summary is generated
 *  from all of the results. At most 10 results for documents mode, or 50 for
 *  chunks mode, can be used to generate a summary. The chunks mode is used when
 *  SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *summaryResultCount;

/**
 *  If true, answer will be generated from most relevant chunks from top search
 *  results. This feature will improve summary quality. Note that with this
 *  feature enabled, not all top search results will be referenced and included
 *  in the reference list, so the citation source index only points to the
 *  search results listed in the reference list.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useSemanticChunks;

@end


/**
 *  Specification of the prompt to use with the model.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec : GTLRObject

/**
 *  Text at the beginning of the prompt that instructs the assistant. Examples
 *  are available in the user guide.
 */
@property(nonatomic, copy, nullable) NSString *preamble;

@end


/**
 *  Specification of the model.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec : GTLRObject

/**
 *  The model version used to generate the summary. Supported values are: *
 *  `stable`: string. Default value when no value is specified. Uses a generally
 *  available, fine-tuned model. For more information, see [Answer generation
 *  model versions and
 *  lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
 *  * `preview`: string. (Public preview) Uses a preview model. For more
 *  information, see [Answer generation model versions and
 *  lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  A struct to define data stores to filter on in a search call and
 *  configurations for those data stores. Otherwise, an `INVALID_ARGUMENT` error
 *  is returned.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec : GTLRObject

/**
 *  Optional. Boost specification to boost certain documents. For more
 *  information on boosting, see
 *  [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec *boostSpec;

/**
 *  Required. Full resource name of DataStore, such as
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Optional. Filter specification to filter documents in the data store
 *  specified by data_store field. For more information on filtering, see
 *  [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  The specification that uses customized query embedding vector to do semantic
 *  document retrieval.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec : GTLRObject

/** The embedding vector used for retrieval. Limit to 1. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector *> *embeddingVectors;

@end


/**
 *  Embedding vector.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector : GTLRObject

/** Embedding field path in schema. */
@property(nonatomic, copy, nullable) NSString *fieldPath;

/**
 *  Query embedding vector.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *vector;

@end


/**
 *  A facet specification to perform faceted search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec : GTLRObject

/**
 *  Enables dynamic position for this facet. If set to true, the position of
 *  this facet among all facets in the response is determined automatically. If
 *  dynamic facets are enabled, it is ordered together. If set to false, the
 *  position of this facet in the response is the same as in the request, and it
 *  is ranked before the facets with dynamic position enable and all dynamic
 *  facets. For example, you may always want to have rating facet returned in
 *  the response, but it's not necessarily to always display the rating facet at
 *  the top. In that case, you can set enable_dynamic_position to true so that
 *  the position of rating facet in response is determined automatically.
 *  Another example, assuming you have the following facets in the request: *
 *  "rating", enable_dynamic_position = true * "price", enable_dynamic_position
 *  = false * "brands", enable_dynamic_position = false And also you have a
 *  dynamic facets enabled, which generates a facet `gender`. Then the final
 *  order of the facets in the response can be ("price", "brands", "rating",
 *  "gender") or ("price", "brands", "gender", "rating") depends on how API
 *  orders "gender" and "rating" facets. However, notice that "price" and
 *  "brands" are always ranked at first and second position because their
 *  enable_dynamic_position is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDynamicPosition;

/**
 *  List of keys to exclude when faceting. By default, FacetKey.key is not
 *  excluded from the filter unless it is listed in this field. Listing a facet
 *  key in this field allows its values to appear as facet results, even when
 *  they are filtered out of search results. Using this field does not affect
 *  what search results are returned. For example, suppose there are 100
 *  documents with the color facet "Red" and 200 documents with the color facet
 *  "Blue". A query containing the filter "color:ANY("Red")" and having "color"
 *  as FacetKey.key would by default return only "Red" documents in the search
 *  results, and also return "Red" with count 100 as the only color facet.
 *  Although there are also blue documents available, "Blue" would not be shown
 *  as an available facet value. If "color" is listed in "excludedFilterKeys",
 *  then the query returns the facet values "Red" with count 100 and "Blue" with
 *  count 200, because the "color" key is now excluded from the filter. Because
 *  this field doesn't affect search results, the search results are still
 *  correctly filtered to return only "Red" documents. A maximum of 100 values
 *  are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedFilterKeys;

/** Required. The facet key specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey *facetKey;

/**
 *  Maximum facet values that are returned for this facet. If unspecified,
 *  defaults to 20. The maximum allowed value is 300. Values above 300 are
 *  coerced to 300. For aggregation in healthcare search, when the
 *  [FacetKey.key] is "healthcare_aggregation_key", the limit will be overridden
 *  to 10,000 internally, regardless of the value set here. If this field is
 *  negative, an `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *limit;

@end


/**
 *  Specifies how a facet is computed.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey : GTLRObject

/**
 *  True to make facet keys case insensitive when getting faceting values with
 *  prefixes or contains; false otherwise.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *caseInsensitive;

/**
 *  Only get facet values that contain the given strings. For example, suppose
 *  "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi >
 *  2022". If set "contains" to "2022", the "category" facet only contains
 *  "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields.
 *  Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *contains;

/**
 *  Set only if values should be bucketed into intervals. Must be set for facets
 *  with numerical values. Must not be set for facet with text values. Maximum
 *  number of intervals is 30.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaInterval *> *intervals;

/**
 *  Required. Supported textual and numerical facet keys in Document object,
 *  over which the facet values are computed. Facet key is case-sensitive.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The order in which documents are returned. Allowed values are: * "count
 *  desc", which means order by SearchResponse.Facet.values.count descending. *
 *  "value desc", which means order by SearchResponse.Facet.values.value
 *  descending. Only applies to textual facets. If not set, textual values are
 *  sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order);
 *  numerical intervals are sorted in the order given by
 *  FacetSpec.FacetKey.intervals.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Only get facet values that start with the given string prefix. For example,
 *  suppose "category" has three values "Action > 2022", "Action > 2021" and
 *  "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only
 *  contains "Action > 2022" and "Action > 2021". Only supported on textual
 *  fields. Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *prefixes;

/**
 *  Only get facet for the given restricted values. Only supported on textual
 *  fields. For example, suppose "category" has three values "Action > 2022",
 *  "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action >
 *  2022", the "category" facet only contains "Action > 2022". Only supported on
 *  textual fields. Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedValues;

@end


/**
 *  Specifies the image query input.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery : GTLRObject

/**
 *  Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP.
 */
@property(nonatomic, copy, nullable) NSString *imageBytes;

@end


/**
 *  Specification to enable natural language understanding capabilities for
 *  search requests.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec : GTLRObject

/**
 *  The condition under which filter extraction should occur. Server behavior
 *  defaults to `DISABLED`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_ConditionUnspecified
 *        Server behavior defaults to `DISABLED`. (Value:
 *        "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Disabled
 *        Disables NL filter extraction. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec_FilterExtractionCondition_Enabled
 *        Enables NL filter extraction. (Value: "ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *filterExtractionCondition;

/**
 *  Field names used for location-based filtering, where geolocation filters are
 *  detected in natural language search queries. Only valid when the
 *  FilterExtractionCondition is set to `ENABLED`. If this field is set, it
 *  overrides the field names set in
 *  ServingConfig.geo_search_query_detection_field_names.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *geoSearchQueryDetectionFieldNames;

@end


/**
 *  The specification for personalization.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec : GTLRObject

/**
 *  The personalization mode of the search request. Defaults to Mode.AUTO.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec_Mode_Auto
 *        Personalization is enabled if data quality requirements are met.
 *        (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec_Mode_Disabled
 *        Disable personalization. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec_Mode_ModeUnspecified
 *        Default value. In this case, server behavior defaults to Mode.AUTO.
 *        (Value: "MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Specification to determine under which conditions query expansion should
 *  occur.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec : GTLRObject

/**
 *  The condition under which query expansion should occur. Default to
 *  Condition.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec_Condition_Auto
 *        Automatic query expansion built by the Search API. (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec_Condition_ConditionUnspecified
 *        Unspecified query expansion condition. In this case, server behavior
 *        defaults to Condition.DISABLED. (Value: "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec_Condition_Disabled
 *        Disabled query expansion. Only the exact search query is used, even if
 *        SearchResponse.total_size is zero. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  Whether to pin unexpanded results. If this field is set to true, unexpanded
 *  products are always at the top of the search results, followed by the
 *  expanded results.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pinUnexpandedResults;

@end


/**
 *  The specification for returning the document relevance score.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestRelevanceScoreSpec : GTLRObject

/**
 *  Optional. Whether to return the relevance score for search results. The
 *  higher the score, the more relevant the document is to the query.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnRelevanceScore;

@end


/**
 *  Specification for search as you type in search requests.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec : GTLRObject

/**
 *  The condition under which search as you type should occur. Default to
 *  Condition.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_Auto
 *        Automatic switching between search-as-you-type and standard search
 *        modes, ideal for single-API implementations (e.g., debouncing).
 *        (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_ConditionUnspecified
 *        Server behavior defaults to Condition.DISABLED. (Value:
 *        "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_Disabled
 *        Disables Search As You Type. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec_Condition_Enabled
 *        Enables Search As You Type. (Value: "ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  Session specification. Multi-turn Search feature is currently at private GA
 *  stage. Please use v1alpha or v1beta version instead before we launch this
 *  feature to public GA. Or ask for allowlisting through Google Support team.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec : GTLRObject

/**
 *  If set, the search result gets stored to the "turn" specified by this query
 *  ID. Example: Let's say the session looks like this: session { name:
 *  ".../sessions/xxx" turns { query { text: "What is foo?" query_id:
 *  ".../questions/yyy" } answer: "Foo is ..." } turns { query { text: "How
 *  about bar then?" query_id: ".../questions/zzz" } } } The user can call
 *  /search API with a request like this: session: ".../sessions/xxx"
 *  session_spec { query_id: ".../questions/zzz" } Then, the API stores the
 *  search result, associated with the last turn. The stored search result can
 *  be used by a subsequent /answer API call (with the session ID and the query
 *  ID specified). Also, it is possible to call /search and /answer in parallel
 *  with the same session ID & query ID.
 */
@property(nonatomic, copy, nullable) NSString *queryId;

/**
 *  The number of top search results to persist. The persisted search results
 *  can be used for the subsequent /answer api call. This field is similar to
 *  the `summary_result_count` field in
 *  SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At most 10
 *  results for documents mode, or 50 for chunks mode.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *searchResultPersistenceCount;

@end


/**
 *  The specification for query spell correction.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec : GTLRObject

/**
 *  The mode under which spell correction replaces the original search query.
 *  Defaults to Mode.AUTO.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec_Mode_Auto
 *        Automatic spell correction built by the Search API. Search will be
 *        based on the corrected query if found. (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec_Mode_ModeUnspecified
 *        Unspecified spell correction mode. In this case, server behavior
 *        defaults to Mode.AUTO. (Value: "MODE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec_Mode_SuggestionOnly
 *        Search API tries to find a spelling suggestion. If a suggestion is
 *        found, it is put in the SearchResponse.corrected_query. The spelling
 *        suggestion won't be used as the search query. (Value:
 *        "SUGGESTION_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Metadata related to the progress of the
 *  CrawlRateManagementService.SetDedicatedCrawlRate operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for CrawlRateManagementService.SetDedicatedCrawlRate
 *  method. It simply returns the state of the response, and an error message if
 *  the state is FAILED.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse : GTLRObject

/** Errors from service when handling the request. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Output only. The state of the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse_State_Failed
 *        The state is failed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse_State_StateUnspecified
 *        The state is unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse_State_Succeeded
 *        The state is successful. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for single-regional CMEKs.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSingleRegionKey : GTLRObject

/**
 *  Required. Single-regional kms key resource name which will be used to
 *  encrypt resources
 *  `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

@end


/**
 *  A sitemap for the SiteSearchEngine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSitemap : GTLRObject

/** Output only. The sitemap's creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The fully qualified resource name of the sitemap. `projects/ *
 *  /locations/ * /collections/ * /dataStores/ * /siteSearchEngine/sitemaps/ *`
 *  The `sitemap_id` suffix is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Verification information for target sites in advanced site search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo : GTLRObject

/**
 *  Site verification state indicating the ownership and validity.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_Exempted
 *        Site exempt from verification, e.g., a public website that opens to
 *        all. (Value: "EXEMPTED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_SiteVerificationStateUnspecified
 *        Defaults to VERIFIED. (Value: "SITE_VERIFICATION_STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_Unverified
 *        Site ownership pending verification or verification failed. (Value:
 *        "UNVERIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo_SiteVerificationState_Verified
 *        Site ownership verified. (Value: "VERIFIED")
 */
@property(nonatomic, copy, nullable) NSString *siteVerificationState;

/** Latest site verification time. */
@property(nonatomic, strong, nullable) GTLRDateTime *verifyTime;

@end


/**
 *  A target site for the SiteSearchEngine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite : GTLRObject

/**
 *  Immutable. If set to false, a uri_pattern is generated to include all pages
 *  whose address contains the provided_uri_pattern. If set to true, an
 *  uri_pattern is generated to try to be an exact match of the
 *  provided_uri_pattern or just the specific page if the provided_uri_pattern
 *  is a specific one. provided_uri_pattern is always normalized to generate the
 *  URI pattern to be used by the search engine.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exactMatch;

/** Output only. Failure reason. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason *failureReason;

/**
 *  Output only. This is system-generated based on the provided_uri_pattern.
 */
@property(nonatomic, copy, nullable) NSString *generatedUriPattern;

/**
 *  Output only. Indexing status.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Deleting
 *        The previously indexed target site has been marked to be deleted. This
 *        is a transitioning state which will resulted in either: 1. target site
 *        deleted if unindexing is successful; 2. state reverts to SUCCEEDED if
 *        the unindexing fails. (Value: "DELETING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Failed
 *        The target site fails to be indexed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_IndexingStatusUnspecified
 *        Defaults to SUCCEEDED. (Value: "INDEXING_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Pending
 *        The target site is in the update queue and will be picked up by
 *        indexing pipeline. (Value: "PENDING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_IndexingStatus_Succeeded
 *        The target site has been indexed. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *indexingStatus;

/**
 *  Output only. The fully qualified resource name of the target site.
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
 *  The `target_site_id` is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Input only. The user provided URI pattern from which the
 *  `generated_uri_pattern` is generated.
 */
@property(nonatomic, copy, nullable) NSString *providedUriPattern;

/** Output only. Root domain of the provided_uri_pattern. */
@property(nonatomic, copy, nullable) NSString *rootDomainUri;

/** Output only. Site ownership and validity verification status. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteVerificationInfo *siteVerificationInfo;

/**
 *  The type of the target site, e.g., whether the site is to be included or
 *  excluded.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_Type_Exclude
 *        Exclude the target site. (Value: "EXCLUDE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_Type_Include
 *        Include the target site. (Value: "INCLUDE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite_Type_TypeUnspecified
 *        This value is unused. In this case, server behavior defaults to
 *        Type.INCLUDE. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. The target site's last updated time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Site search indexing failure reasons.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason : GTLRObject

/** Failed due to insufficient quota. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure *quotaFailure;

@end


/**
 *  Failed due to insufficient quota.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure : GTLRObject

/**
 *  This number is an estimation on how much total quota this project needs to
 *  successfully complete indexing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalRequiredQuota;

@end


/**
 *  Metadata related to the progress of the TrainCustomModel operation. This is
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTrainCustomModelMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the TrainCustomModelRequest. This message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the data. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/** The metrics of the trained model. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse_Metrics *metrics;

/** Fully qualified name of the CustomTuningModel. */
@property(nonatomic, copy, nullable) NSString *modelName;

/**
 *  The trained model status. Possible values are: * **bad-data**: The training
 *  data quality is bad. * **no-improvement**: Tuning didn't improve
 *  performance. Won't deploy. * **in-progress**: Model training job creation is
 *  in progress. * **training**: Model is actively training. * **evaluating**:
 *  The model is evaluating trained metrics. * **indexing**: The model trained
 *  metrics are indexing. * **ready**: The model is ready for serving.
 */
@property(nonatomic, copy, nullable) NSString *modelStatus;

@end


/**
 *  The metrics of the trained model.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of doubleValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse_Metrics : GTLRObject
@end


/**
 *  Metadata associated with a tune operation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTuneEngineMetadata : GTLRObject

/**
 *  Required. The resource name of the engine that this tune applies to. Format:
 *  `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
 */
@property(nonatomic, copy, nullable) NSString *engine;

@end


/**
 *  Response associated with a tune operation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTuneEngineResponse : GTLRObject
@end


/**
 *  Metadata for UpdateSchema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.UpdateTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUpdateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Information of an end user.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserInfo : GTLRObject

/**
 *  User agent as included in the HTTP header. The field must be a UTF-8 encoded
 *  string with a length limit of 1,000 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned. This should not be set when using the
 *  client side event reporting with GTM or JavaScript tag in
 *  UserEventService.CollectUserEvent or if UserEvent.direct_user_request is
 *  set.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

/**
 *  Highly recommended for logged-in users. Unique identifier for logged-in
 *  user, such as a user name. Don't set for anonymous users. Always use a
 *  hashed value for this ID. Don't set the field to the same fixed ID for
 *  different users. This mixes the event history of those users together, which
 *  results in degraded model quality. The field must be a UTF-8 encoded string
 *  with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT`
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  Config to store data store type configuration for workspace data
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig : GTLRObject

/** Obfuscated Dasher customer ID. */
@property(nonatomic, copy, nullable) NSString *dasherCustomerId;

/**
 *  Optional. The super admin email address for the workspace that will be used
 *  for access token generation. For now we only use it for Native Google Drive
 *  connector data ingestion.
 */
@property(nonatomic, copy, nullable) NSString *superAdminEmailAddress;

/**
 *  Optional. The super admin service account for the workspace that will be
 *  used for access token generation. For now we only use it for Native Google
 *  Drive connector data ingestion.
 */
@property(nonatomic, copy, nullable) NSString *superAdminServiceAccount;

/**
 *  The Google Workspace data source.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleCalendar
 *        Workspace Data Store contains Calendar data (Value: "GOOGLE_CALENDAR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleChat
 *        Workspace Data Store contains Chat data (Value: "GOOGLE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleDrive
 *        Workspace Data Store contains Drive data (Value: "GOOGLE_DRIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleGroups
 *        Workspace Data Store contains Groups data (Value: "GOOGLE_GROUPS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleKeep
 *        Workspace Data Store contains Keep data (Value: "GOOGLE_KEEP")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleMail
 *        Workspace Data Store contains Mail data (Value: "GOOGLE_MAIL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GooglePeople
 *        Workspace Data Store contains People data (Value: "GOOGLE_PEOPLE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_GoogleSites
 *        Workspace Data Store contains Sites data (Value: "GOOGLE_SITES")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaWorkspaceConfig_Type_TypeUnspecified
 *        Defaults to an unspecified Workspace type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  BigQuery source import data from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigQuerySource : GTLRObject

/**
 *  The schema to use when parsing the data from the source. Supported values
 *  for user event imports: * `user_event` (default): One UserEvent per row.
 *  Supported values for document imports: * `document` (default): One Document
 *  format per row. Each document must have a valid Document.id and one of
 *  Document.json_data or Document.struct_data. * `custom`: One custom data per
 *  row in arbitrary format that conforms to the defined Schema of the data
 *  store. This can only be used by the GENERIC Data Store vertical.
 */
@property(nonatomic, copy, nullable) NSString *dataSchema;

/**
 *  Required. The BigQuery data set to copy the data from with a length limit of
 *  1,024 characters.
 */
@property(nonatomic, copy, nullable) NSString *datasetId;

/**
 *  Intermediate Cloud Storage directory used for the import with a length limit
 *  of 2,000 characters. Can be specified if one wants to have the BigQuery
 *  export to a specific Cloud Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/** BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleTypeDate *partitionDate;

/**
 *  The project ID or the project number that contains the BigQuery source. Has
 *  a length limit of 128 characters. If not specified, inherits the project ID
 *  from the parent request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Required. The BigQuery table to copy the data from with a length limit of
 *  1,024 characters.
 */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  The Bigtable Options object that contains information to support the import.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptions : GTLRObject

/**
 *  The mapping from family names to an object that contains column families
 *  level information for the given column family. If a family is not present in
 *  this map it will be ignored.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptions_Families *families;

/**
 *  The field name used for saving row key value in the document. The name has
 *  to match the pattern `a-zA-Z0-9*`.
 */
@property(nonatomic, copy, nullable) NSString *keyFieldName;

@end


/**
 *  The mapping from family names to an object that contains column families
 *  level information for the given column family. If a family is not present in
 *  this map it will be ignored.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptions_Families : GTLRObject
@end


/**
 *  The column of the Bigtable.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn : GTLRObject

/**
 *  The encoding mode of the values when the type is not `STRING`. Acceptable
 *  encoding values are: * `TEXT`: indicates values are alphanumeric text
 *  strings. * `BINARY`: indicates values are encoded using `HBase
 *  Bytes.toBytes` family of functions. This can be overridden for a specific
 *  column by listing that column in `columns` and specifying an encoding for
 *  it.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Encoding_Binary
 *        Binary encoding. (Value: "BINARY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Encoding_EncodingUnspecified
 *        The encoding is unspecified. (Value: "ENCODING_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Encoding_Text
 *        Text encoding. (Value: "TEXT")
 */
@property(nonatomic, copy, nullable) NSString *encoding;

/**
 *  The field name to use for this column in the document. The name has to match
 *  the pattern `a-zA-Z0-9*`. If not set, it is parsed from the qualifier bytes
 *  with best effort. However, due to different naming patterns, field name
 *  collisions could happen, where parsing behavior is undefined.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  Required. Qualifier of the column. If it cannot be decoded with utf-8, use a
 *  base-64 encoded string instead.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *qualifier;

/**
 *  The type of values in this column family. The values are expected to be
 *  encoded using `HBase Bytes.toBytes` function when the encoding value is set
 *  to `BINARY`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_BigNumeric
 *        BigDecimal type. (Value: "BIG_NUMERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Boolean
 *        Boolean type. (Value: "BOOLEAN")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Integer
 *        Integer type. (Value: "INTEGER")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Json
 *        JSON type. (Value: "JSON")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_Number
 *        Numerical type. (Value: "NUMBER")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_String
 *        String type. (Value: "STRING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_TypeUnspecified
 *        The type is unspecified. (Value: "TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn_Type_VarInteger
 *        Variable length integer type. (Value: "VAR_INTEGER")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The column family of the Bigtable.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily : GTLRObject

/**
 *  The list of objects that contains column level information for each column.
 *  If a column is not present in this list it will be ignored.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumn *> *columns;

/**
 *  The encoding mode of the values when the type is not STRING. Acceptable
 *  encoding values are: * `TEXT`: indicates values are alphanumeric text
 *  strings. * `BINARY`: indicates values are encoded using `HBase
 *  Bytes.toBytes` family of functions. This can be overridden for a specific
 *  column by listing that column in `columns` and specifying an encoding for
 *  it.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Encoding_Binary
 *        Binary encoding. (Value: "BINARY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Encoding_EncodingUnspecified
 *        The encoding is unspecified. (Value: "ENCODING_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Encoding_Text
 *        Text encoding. (Value: "TEXT")
 */
@property(nonatomic, copy, nullable) NSString *encoding;

/**
 *  The field name to use for this column family in the document. The name has
 *  to match the pattern `a-zA-Z0-9*`. If not set, it is parsed from the family
 *  name with best effort. However, due to different naming patterns, field name
 *  collisions could happen, where parsing behavior is undefined.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  The type of values in this column family. The values are expected to be
 *  encoded using `HBase Bytes.toBytes` function when the encoding value is set
 *  to `BINARY`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_BigNumeric
 *        BigDecimal type. (Value: "BIG_NUMERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Boolean
 *        Boolean type. (Value: "BOOLEAN")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Integer
 *        Integer type. (Value: "INTEGER")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Json
 *        JSON type. (Value: "JSON")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_Number
 *        Numerical type. (Value: "NUMBER")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_String
 *        String type. (Value: "STRING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_TypeUnspecified
 *        The type is unspecified. (Value: "TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptionsBigtableColumnFamily_Type_VarInteger
 *        Variable length integer type. (Value: "VAR_INTEGER")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The Cloud Bigtable source for importing data.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableSource : GTLRObject

/**
 *  Required. Bigtable options that contains information needed when parsing
 *  data into typed structures. For example, column type annotations.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableOptions *bigtableOptions;

/**
 *  Required. The instance ID of the Cloud Bigtable that needs to be imported.
 */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  The project ID that contains the Bigtable source. Has a length limit of 128
 *  characters. If not specified, inherits the project ID from the parent
 *  request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Required. The table ID of the Cloud Bigtable that needs to be imported. */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Request message for GroundedGenerationService.CheckGrounding method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingRequest : GTLRObject

/** Answer candidate to check. It can have a maximum length of 4096 tokens. */
@property(nonatomic, copy, nullable) NSString *answerCandidate;

/** List of facts for the grounding check. We support up to 200 facts. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GroundingFact *> *facts;

/** Configuration of the grounding check. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingSpec *groundingSpec;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingRequest_UserLabels *userLabels;

@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingRequest_UserLabels : GTLRObject
@end


/**
 *  Response message for the GroundedGenerationService.CheckGrounding method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponse : GTLRObject

/**
 *  List of facts cited across all claims in the answer candidate. These are
 *  derived from the facts supplied in the request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FactChunk *> *citedChunks;

/**
 *  List of facts cited across all claims in the answer candidate. These are
 *  derived from the facts supplied in the request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponseCheckGroundingFactChunk *> *citedFacts;

/**
 *  Claim texts and citation info across all claims in the answer candidate.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponseClaim *> *claims;

/**
 *  The support score for the input answer candidate. Higher the score, higher
 *  is the fraction of claims that are supported by the provided facts. This is
 *  always set when a response is returned.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportScore;

@end


/**
 *  Fact chunk for grounding check.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponseCheckGroundingFactChunk : GTLRObject

/** Text content of the fact chunk. Can be at most 10K characters long. */
@property(nonatomic, copy, nullable) NSString *chunkText;

@end


/**
 *  Text and citation info for a claim in the answer candidate.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponseClaim : GTLRObject

/**
 *  A list of indices (into 'cited_chunks') specifying the citations associated
 *  with the claim. For instance [1,3,4] means that cited_chunks[1],
 *  cited_chunks[3], cited_chunks[4] are the facts cited supporting for the
 *  claim. A citation to a fact indicates that the claim is supported by the
 *  fact.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *citationIndices;

/**
 *  Text for the claim in the answer candidate. Always provided regardless of
 *  whether citations or anti-citations are found.
 */
@property(nonatomic, copy, nullable) NSString *claimText;

/**
 *  Position indicating the end of the claim in the answer candidate, exclusive,
 *  in bytes. Note that this is not measured in characters and, therefore, must
 *  be rendered as such. For example, if the claim text contains non-ASCII
 *  characters, the start and end positions vary when measured in characters
 *  (programming-language-dependent) and when measured in bytes
 *  (programming-language-independent).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endPos;

/**
 *  Indicates that this claim required grounding check. When the system decided
 *  this claim doesn't require attribution/grounding check, this field will be
 *  set to false. In that case, no grounding check was done for the claim and
 *  therefore citation_indices should not be returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groundingCheckRequired;

/**
 *  Position indicating the start of the claim in the answer candidate, measured
 *  in bytes. Note that this is not measured in characters and, therefore, must
 *  be rendered in the user interface keeping in mind that some characters may
 *  take more than one byte. For example, if the claim text contains non-ASCII
 *  characters, the start and end positions vary when measured in characters
 *  (programming-language-dependent) and when measured in bytes
 *  (programming-language-independent).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startPos;

@end


/**
 *  Specification for the grounding check.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingSpec : GTLRObject

/**
 *  The threshold (in [0,1]) used for determining whether a fact must be cited
 *  for a claim in the answer candidate. Choosing a higher threshold will lead
 *  to fewer but very strong citations, while choosing a lower threshold may
 *  lead to more but somewhat weaker citations. If unset, the threshold will
 *  default to 0.6.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *citationThreshold;

@end


/**
 *  Chunk captures all raw metadata information of items to be recommended or
 *  searched in the chunk mode.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk : GTLRObject

/** Output only. Metadata of the current chunk. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkChunkMetadata *chunkMetadata;

/** Content is a string from a document (parsed content). */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  Output only. This field is OUTPUT_ONLY. It contains derived data that are
 *  not in the original input document.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk_DerivedStructData *derivedStructData;

/** Metadata of the document from the current chunk. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkDocumentMetadata *documentMetadata;

/**
 *  Unique chunk ID of the current chunk.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The full resource name of the chunk. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}/chunks/{chunk_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Page span of the chunk. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkPageSpan *pageSpan;

/**
 *  Output only. Represents the relevance score based on similarity. Higher
 *  score indicates higher chunk relevance. The score is in range [-1.0, 1.0].
 *  Only populated on SearchResponse.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *relevanceScore;

@end


/**
 *  Output only. This field is OUTPUT_ONLY. It contains derived data that are
 *  not in the original input document.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk_DerivedStructData : GTLRObject
@end


/**
 *  Metadata of the current chunk. This field is only populated on
 *  SearchService.Search API.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkChunkMetadata : GTLRObject

/**
 *  The next chunks of the current chunk. The number is controlled by
 *  SearchRequest.ContentSearchSpec.ChunkSpec.num_next_chunks. This field is
 *  only populated on SearchService.Search API.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk *> *nextChunks;

/**
 *  The previous chunks of the current chunk. The number is controlled by
 *  SearchRequest.ContentSearchSpec.ChunkSpec.num_previous_chunks. This field is
 *  only populated on SearchService.Search API.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk *> *previousChunks;

@end


/**
 *  Document metadata contains the information of the document of the current
 *  chunk.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkDocumentMetadata : GTLRObject

/**
 *  Data representation. The structured JSON data for the document. It should
 *  conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkDocumentMetadata_StructData *structData;

/** Title of the document. */
@property(nonatomic, copy, nullable) NSString *title;

/** Uri of the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Data representation. The structured JSON data for the document. It should
 *  conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkDocumentMetadata_StructData : GTLRObject
@end


/**
 *  Page span of the chunk.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ChunkPageSpan : GTLRObject

/**
 *  The end page of the chunk.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageEnd;

/**
 *  The start page of the chunk.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageStart;

@end


/**
 *  Cloud SQL source import data from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CloudSqlSource : GTLRObject

/**
 *  Required. The Cloud SQL database to copy the data from with a length limit
 *  of 256 characters.
 */
@property(nonatomic, copy, nullable) NSString *databaseId;

/**
 *  Intermediate Cloud Storage directory used for the import with a length limit
 *  of 2,000 characters. Can be specified if one wants to have the Cloud SQL
 *  export to a specific Cloud Storage directory. Ensure that the Cloud SQL
 *  service account has the necessary Cloud Storage Admin permissions to access
 *  the specified Cloud Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/**
 *  Required. The Cloud SQL instance to copy the data from with a length limit
 *  of 256 characters.
 */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  Option for serverless export. Enabling this option will incur additional
 *  cost. More info can be found
 *  [here](https://cloud.google.com/sql/pricing#serverless).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offload;

/**
 *  The project ID that contains the Cloud SQL source. Has a length limit of 128
 *  characters. If not specified, inherits the project ID from the parent
 *  request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Required. The Cloud SQL table to copy the data from with a length limit of
 *  256 characters.
 */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Configurations used to enable CMEK data encryption with Cloud KMS keys.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig : GTLRObject

/**
 *  Output only. The default CmekConfig for the Customer.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDefault;

/**
 *  KMS key resource name which will be used to encrypt resources
 *  `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

/**
 *  KMS key version resource name which will be used to encrypt resources
 *  `/cryptoKeyVersions/{keyVersion}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyVersion;

/**
 *  Output only. The timestamp of the last key rotation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lastRotationTimestampMicros;

/**
 *  Required. The name of the CmekConfig of the form
 *  `projects/{project}/locations/{location}/cmekConfig` or
 *  `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Single-regional CMEKs that are required for some VAIS features.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SingleRegionKey *> *singleRegionKeys;

/**
 *  Output only. The states of the CmekConfig.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Active
 *        The CmekConfig can be used with DataStores. (Value: "ACTIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_ActiveRotating
 *        The KMS key version is being rotated. (Value: "ACTIVE_ROTATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Creating
 *        The CmekConfig is creating. (Value: "CREATING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_DeleteFailed
 *        The CmekConfig deletion process failed. (Value: "DELETE_FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Deleting
 *        The CmekConfig is deleting. (Value: "DELETING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_KeyIssue
 *        The CmekConfig is unavailable, most likely due to the KMS Key being
 *        revoked. (Value: "KEY_ISSUE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_StateUnspecified
 *        The CmekConfig state is unknown. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig_State_Unusable
 *        The CmekConfig is not usable, most likely due to some internal issue.
 *        (Value: "UNUSABLE")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Response message for CompletionService.CompleteQuery method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompleteQueryResponse : GTLRObject

/**
 *  Results of the matched query suggestions. The result list is ordered and the
 *  first result is a top suggestion.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompleteQueryResponseQuerySuggestion *> *querySuggestions;

/**
 *  True if the returned suggestions are all tail suggestions. For tail matching
 *  to be triggered, include_tail_suggestions in the request must be true and
 *  there must be no suggestions that match the full query.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tailMatchTriggered;

@end


/**
 *  Suggestions as search queries.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompleteQueryResponseQuerySuggestion : GTLRObject

/**
 *  The unique document field paths that serve as the source of this suggestion
 *  if it was generated from completable fields. This field is only populated
 *  for the document-completable model.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *completableFieldPaths;

/** The suggestion for the query. */
@property(nonatomic, copy, nullable) NSString *suggestion;

@end


/**
 *  Detailed completion information including completion attribution token and
 *  clicked completion info.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompletionInfo : GTLRObject

/**
 *  End user selected CompleteQueryResponse.QuerySuggestion.suggestion position,
 *  starting from 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *selectedPosition;

/** End user selected CompleteQueryResponse.QuerySuggestion.suggestion. */
@property(nonatomic, copy, nullable) NSString *selectedSuggestion;

@end


/**
 *  Autocomplete suggestions that are imported from Customer.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompletionSuggestion : GTLRObject

/** Alternative matching phrases for this suggestion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *alternativePhrases;

/**
 *  Frequency of this suggestion. Will be used to rank suggestions when score is
 *  not available.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *frequency;

/**
 *  Global score of this suggestion. Control how this suggestion would be scored
 *  / ranked.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *globalScore;

/**
 *  If two suggestions have the same groupId, they will not be returned
 *  together. Instead the one ranked higher will be returned. This can be used
 *  to deduplicate semantically identical suggestions.
 */
@property(nonatomic, copy, nullable) NSString *groupId;

/**
 *  The score of this suggestion within its group.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *groupScore;

/** BCP-47 language code of this suggestion. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Required. The suggestion text. */
@property(nonatomic, copy, nullable) NSString *suggestion;

@end


/**
 *  Defines circumstances to be checked before allowing a behavior
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Condition : GTLRObject

/**
 *  Range of time(s) specifying when condition is active. Maximum of 10 time
 *  ranges.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConditionTimeRange *> *activeTimeRange;

/**
 *  Optional. Query regex to match the whole search query. Cannot be set when
 *  Condition.query_terms is set. This is currently supporting promotion use
 *  case.
 */
@property(nonatomic, copy, nullable) NSString *queryRegex;

/**
 *  Search only A list of terms to match the query on. Cannot be set when
 *  Condition.query_regex is set. Maximum of 10 query terms.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConditionQueryTerm *> *queryTerms;

@end


/**
 *  Matcher for search request query
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConditionQueryTerm : GTLRObject

/**
 *  Whether the search query needs to exactly match the query term.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullMatch;

/**
 *  The specific query value to match against Must be lowercase, must be UTF-8.
 *  Can have at most 3 space separated terms if full_match is true. Cannot be an
 *  empty string. Maximum length of 5000 characters.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Used for time-dependent conditions.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConditionTimeRange : GTLRObject

/** End of time range. Range is inclusive. Must be in the future. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Start of time range. Range is inclusive. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Defines a conditioned behavior to employ during serving. Must be attached to
 *  a ServingConfig to be considered at serving time. Permitted actions
 *  dependent on `SolutionType`.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control : GTLRObject

/**
 *  Output only. List of all ServingConfig IDs this control is attached to. May
 *  take up to 10 minutes to update after changes.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *associatedServingConfigIds;

/** Defines a boost-type control */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostAction *boostAction;

/**
 *  Determines when the associated action will trigger. Omit to always apply the
 *  action. Currently only a single condition may be specified. Otherwise an
 *  INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Condition *> *conditions;

/**
 *  Required. Human readable name. The identifier used in UI views. Must be
 *  UTF-8 encoded string. Length limit is 128 characters. Otherwise an INVALID
 *  ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Defines a filter-type control Currently not supported by Recommendation */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlFilterAction *filterAction;

/**
 *  Immutable. Fully qualified name `projects/ * /locations/global/dataStore/ *
 *  /controls/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Promote certain links based on predefined trigger queries. This now only
 *  supports basic site search.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlPromoteAction *promoteAction;

/** Defines a redirect-type control. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlRedirectAction *redirectAction;

/**
 *  Required. Immutable. What solution the control belongs to. Must be
 *  compatible with vertical of resource. Otherwise an INVALID ARGUMENT error is
 *  thrown.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeChat
 *        Used for use cases related to the Generative AI agent. (Value:
 *        "SOLUTION_TYPE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeGenerativeChat
 *        Used for use cases related to the Generative Chat agent. It's used for
 *        Generative chat engine only, the associated data stores must enrolled
 *        with `SOLUTION_TYPE_CHAT` solution. (Value:
 *        "SOLUTION_TYPE_GENERATIVE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeRecommendation
 *        Used for Recommendations AI. (Value: "SOLUTION_TYPE_RECOMMENDATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeSearch
 *        Used for Discovery Search. (Value: "SOLUTION_TYPE_SEARCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control_SolutionType_SolutionTypeUnspecified
 *        Default value. (Value: "SOLUTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *solutionType;

/** Treats a group of terms as synonyms of one another. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlSynonymsAction *synonymsAction;

/**
 *  Specifies the use case for the control. Affects what condition fields can be
 *  set. Only applies to SOLUTION_TYPE_SEARCH. Currently only allow one use case
 *  per control. Must be set when solution_type is
 *  SolutionType.SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *useCases;

@end


/**
 *  Adjusts order of products in returned list.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostAction : GTLRObject

/**
 *  Strength of the boost, which should be in [-1, 1]. Negative boost means
 *  demotion. Default is 0.0 (No-op).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost GTLR_DEPRECATED;

/**
 *  Required. Specifies which data store's documents can be boosted by this
 *  control. Full data store name e.g.
 *  projects/123/locations/global/collections/default_collection/dataStores/default_data_store
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Required. Specifies which products to apply the boost to. If no filter is
 *  provided all products will be boosted (No-op). Syntax documentation:
 *  https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000
 *  characters. Otherwise an INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Strength of the boost, which should be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0 (No-op).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fixedBoost;

/**
 *  Optional. Complex specification for custom ranking based on customer defined
 *  attribute value.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec *interpolationBoostSpec;

@end


/**
 *  Specification for custom ranking based on customer specified attribute
 *  value. It provides more controls for customized ranking than the simple
 *  (condition, boost) combination above.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec : GTLRObject

/**
 *  Optional. The attribute type to be used to determine the boost amount. The
 *  attribute value can be derived from the field value of the specified
 *  field_name. In the case of numerical it is straightforward i.e.
 *  attribute_value = numerical_field_value. In the case of freshness however,
 *  attribute_value = (time.now() - datetime_field_value).
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_AttributeType_AttributeTypeUnspecified
 *        Unspecified AttributeType. (Value: "ATTRIBUTE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_AttributeType_Freshness
 *        For the freshness use case the attribute value will be the duration
 *        between the current time and the date in the datetime field specified.
 *        The value must be formatted as an XSD `dayTimeDuration` value (a
 *        restricted subset of an ISO 8601 duration value). The pattern for this
 *        is: `nDnM]`. For example, `5D`, `3DT12H30M`, `T24H`. (Value:
 *        "FRESHNESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_AttributeType_Numerical
 *        The value of the numerical field will be used to dynamically update
 *        the boost amount. In this case, the attribute_value (the x value) of
 *        the control point will be the actual value of the numerical field for
 *        which the boost_amount is specified. (Value: "NUMERICAL")
 */
@property(nonatomic, copy, nullable) NSString *attributeType;

/**
 *  Optional. The control points used to define the curve. The monotonic
 *  function (defined through the interpolation_type above) passes through the
 *  control points listed here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint *> *controlPoints;

/**
 *  Optional. The name of the field whose value will be used to determine the
 *  boost amount.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  Optional. The interpolation type to be applied to connect the control points
 *  listed below.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_InterpolationType_InterpolationTypeUnspecified
 *        Interpolation type is unspecified. In this case, it defaults to
 *        Linear. (Value: "INTERPOLATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec_InterpolationType_Linear
 *        Piecewise linear interpolation will be applied. (Value: "LINEAR")
 */
@property(nonatomic, copy, nullable) NSString *interpolationType;

@end


/**
 *  The control points used to define the curve. The curve defined through these
 *  control points can only be monotonically increasing or decreasing(constant
 *  values are acceptable).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint : GTLRObject

/**
 *  Optional. Can be one of: 1. The numerical field value. 2. The duration spec
 *  for freshness: The value must be formatted as an XSD `dayTimeDuration` value
 *  (a restricted subset of an ISO 8601 duration value). The pattern for this
 *  is: `nDnM]`.
 */
@property(nonatomic, copy, nullable) NSString *attributeValue;

/**
 *  Optional. The value between -1 to 1 by which to boost the score if the
 *  attribute_value evaluates to the value specified above.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boostAmount;

@end


/**
 *  Specified which products may be included in results. Uses same filter as
 *  boost.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlFilterAction : GTLRObject

/**
 *  Required. Specifies which data store's documents can be filtered by this
 *  control. Full data store name e.g.
 *  projects/123/locations/global/collections/default_collection/dataStores/default_data_store
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Required. A filter to apply on the matching condition results. Required
 *  Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order
 *  Maximum length is 5000 characters. Otherwise an INVALID ARGUMENT error is
 *  thrown.
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  Promote certain links based on some trigger queries. Example: Promote shoe
 *  store link when searching for `shoe` keyword. The link can be outside of
 *  associated data store.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlPromoteAction : GTLRObject

/** Required. Data store with which this promotion is attached to. */
@property(nonatomic, copy, nullable) NSString *dataStore;

/** Required. Promotion attached to this action. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchLinkPromotion *searchLinkPromotion;

@end


/**
 *  Redirects a shopper to the provided URI.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlRedirectAction : GTLRObject

/**
 *  Required. The URI to which the shopper will be redirected. Required. URI
 *  must have length equal or less than 2000 characters. Otherwise an INVALID
 *  ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *redirectUri;

@end


/**
 *  Creates a set of terms that will act as synonyms of one another. Example:
 *  "happy" will also be considered as "glad", "glad" will also be considered as
 *  "happy".
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ControlSynonymsAction : GTLRObject

/**
 *  Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at
 *  least 2 synonyms. Otherwise an INVALID ARGUMENT error is thrown.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

@end


/**
 *  External conversation proto definition.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation : GTLRObject

/** Output only. The time the conversation finished. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Conversation messages. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConversationMessage *> *messages;

/**
 *  Immutable. Fully qualified name
 *  `projects/{project}/locations/global/collections/{collection}/dataStore/ *
 *  /conversations/ *` or
 *  `projects/{project}/locations/global/collections/{collection}/engines/ *
 *  /conversations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The time the conversation started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The state of the Conversation.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation_State_Completed
 *        Conversation has been completed. (Value: "COMPLETED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation_State_InProgress
 *        Conversation is currently open. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation_State_StateUnspecified
 *        Unknown. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** A unique identifier for tracking users. */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Defines context of the conversation
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConversationContext : GTLRObject

/**
 *  The current active document the user opened. It contains the document
 *  resource reference.
 */
@property(nonatomic, copy, nullable) NSString *activeDocument;

/**
 *  The current list of documents the user is seeing. It contains the document
 *  resource references.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *contextDocuments;

@end


/**
 *  Defines a conversation message.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConversationMessage : GTLRObject

/** Output only. Message creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Search reply. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Reply *reply;

/** User text input. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TextInput *userInput;

@end


/**
 *  Request message for ConversationalSearchService.ConverseConversation method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationRequest : GTLRObject

/**
 *  Boost specification to boost certain documents in search results which may
 *  affect the converse response. For more information on boosting, see
 *  [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpec *boostSpec;

/**
 *  The conversation to be used by auto session only. The name field will be
 *  ignored as we automatically assign new name for the conversation in auto
 *  session.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *conversation;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the documents being filtered. Filter
 *  expression is case-sensitive. This will be used to filter search results
 *  which may affect the summary response. If this field is unrecognizable, an
 *  `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
 *  mapping the LHS filter key to a key property defined in the Vertex AI Search
 *  backend -- this mapping is defined by the customer in their schema. For
 *  example a media customer might have a field 'name' in their schema. In this
 *  case the filter would look like this: filter --> name:'ANY("king kong")' For
 *  more information about filtering including syntax and filter operators, see
 *  [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Required. Current user input. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TextInput *query;

/**
 *  Whether to turn on safe search.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *safeSearch;

/**
 *  The resource name of the Serving Config to use. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}`
 *  If this is not set, the default serving config will be used.
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/** A specification for configuring the summary returned in the response. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec *summarySpec;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationRequest_UserLabels *userLabels;

@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationRequest_UserLabels : GTLRObject
@end


/**
 *  Response message for ConversationalSearchService.ConverseConversation
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationResponse : GTLRObject

/** Updated conversation including the answer. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *conversation;

/** Answer to the current query. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Reply *reply;

/** Search Results. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSearchResult *> *searchResults;

@end


/**
 *  Metadata related to the progress of the DataStoreService.CreateDataStore
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateDataStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the EngineService.CreateEngine
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateEngineMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for Create Schema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.CreateSitemap operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateSitemapMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.CreateTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for SiteSearchEngineService.CreateTargetSite method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CreateTargetSiteRequest : GTLRObject

/**
 *  Required. Parent resource name of TargetSite, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The TargetSite to create. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *targetSite;

@end


/**
 *  A custom attribute that is not explicitly modeled in a resource, e.g.
 *  UserEvent.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomAttribute : GTLRObject

/**
 *  The numerical values of this custom attribute. For example, `[2.3, 15.4]`
 *  when the key is "lengths_cm". Exactly one of CustomAttribute.text or
 *  CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT`
 *  error is returned.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *numbers;

/**
 *  The textual values of this custom attribute. For example, `["yellow",
 *  "green"]` when the key is "color". Empty string is not allowed. Otherwise,
 *  an `INVALID_ARGUMENT` error is returned. Exactly one of CustomAttribute.text
 *  or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT`
 *  error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *text;

@end


/**
 *  Metadata that describes a custom tuned model.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel : GTLRObject

/** Deprecated: Timestamp the Model was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime GTLR_DEPRECATED;

/** The display name of the model. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Currently this is only populated if the model state is
 *  `INPUT_VALIDATION_FAILED`.
 */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/** The metrics of the trained model. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_Metrics *metrics;

/**
 *  The state that the model is in (e.g.`TRAINING` or `TRAINING_FAILED`).
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_InputValidationFailed
 *        Input data validation failed. Model training didn't start. (Value:
 *        "INPUT_VALIDATION_FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_ModelStateUnspecified
 *        Default value. (Value: "MODEL_STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_NoImprovement
 *        The model training finished successfully but metrics did not improve.
 *        (Value: "NO_IMPROVEMENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_ReadyForServing
 *        The model is ready for serving. (Value: "READY_FOR_SERVING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_Training
 *        The model is currently training. (Value: "TRAINING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_TrainingComplete
 *        The model has successfully completed training. (Value:
 *        "TRAINING_COMPLETE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_TrainingFailed
 *        The model training failed. (Value: "TRAINING_FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_ModelState_TrainingPaused
 *        The model is in a paused training state. (Value: "TRAINING_PAUSED")
 */
@property(nonatomic, copy, nullable) NSString *modelState;

/**
 *  The version of the model.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *modelVersion;

/**
 *  Required. The fully qualified resource name of the model. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/customTuningModels/{custom_tuning_model}`.
 *  Model must be an alpha-numerical string with limit of 40 characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Timestamp the model training was initiated. */
@property(nonatomic, strong, nullable) GTLRDateTime *trainingStartTime;

@end


/**
 *  The metrics of the trained model.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of doubleValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel_Metrics : GTLRObject
@end


/**
 *  DataStore captures global settings and configs at the DataStore level.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore : GTLRObject

/** Optional. Configuration for advanced site search. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AdvancedSiteSearchConfig *advancedSiteSearchConfig;

/** Output only. Data size estimation for billing. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStoreBillingEstimation *billingEstimation;

/** Output only. CMEK-related information for the DataStore. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig *cmekConfig;

/**
 *  Immutable. The content config of the data store. If this field is unset, the
 *  server behavior defaults to ContentConfig.NO_CONTENT.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_ContentConfigUnspecified
 *        Default value. (Value: "CONTENT_CONFIG_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_ContentRequired
 *        Only contains documents with Document.content. (Value:
 *        "CONTENT_REQUIRED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_GoogleWorkspace
 *        The data store is used for workspace search. Details of workspace data
 *        store are specified in the WorkspaceConfig. (Value:
 *        "GOOGLE_WORKSPACE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_NoContent
 *        Only contains documents without any Document.content. (Value:
 *        "NO_CONTENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_ContentConfig_PublicWebsite
 *        The data store is used for public website search. (Value:
 *        "PUBLIC_WEBSITE")
 */
@property(nonatomic, copy, nullable) NSString *contentConfig;

/** Output only. Timestamp the DataStore was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The id of the default Schema associated to this data store.
 */
@property(nonatomic, copy, nullable) NSString *defaultSchemaId;

/**
 *  Required. The data store display name. This field must be a UTF-8 encoded
 *  string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Configuration for Document understanding and enrichment. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfig *documentProcessingConfig;

/** Optional. Configuration for `HEALTHCARE_FHIR` vertical. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1HealthcareFhirConfig *healthcareFhirConfig;

/**
 *  Immutable. The fully qualified resource name of the associated
 *  IdentityMappingStore. This field can only be set for acl_enabled DataStores
 *  with `THIRD_PARTY` or `GSUITE` IdP. Format:
 *  `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
 */
@property(nonatomic, copy, nullable) NSString *identityMappingStore;

/**
 *  Immutable. The industry vertical that the data store registers.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_Generic
 *        The generic vertical for documents that are not specific to any
 *        industry vertical. (Value: "GENERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_HealthcareFhir
 *        The healthcare FHIR vertical. (Value: "HEALTHCARE_FHIR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_IndustryVerticalUnspecified
 *        Value used when unset. (Value: "INDUSTRY_VERTICAL_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore_IndustryVertical_Media
 *        The media industry vertical. (Value: "MEDIA")
 */
@property(nonatomic, copy, nullable) NSString *industryVertical;

/**
 *  Optional. If set, this DataStore is an Infobot FAQ DataStore.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInfobotFaqDataStore;

/**
 *  Input only. The KMS key to be used to protect this DataStore at creation
 *  time. Must be set for requests that need to comply with CMEK Org Policy
 *  protections. If this field is set and processed successfully, the DataStore
 *  will be protected by the KMS key, as indicated in the cmek_config field.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/**
 *  Immutable. The full resource name of the data store. Format:
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Stores serving config at DataStore level. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStoreServingConfigDataStore *servingConfigDataStore;

/**
 *  The solutions that the data store enrolls. Available solutions for each
 *  industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and
 *  `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is
 *  automatically enrolled. Other solutions cannot be enrolled.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *solutionTypes;

/**
 *  The start schema to use for this DataStore when provisioning it. If unset, a
 *  default vertical specialized schema will be used. This field is only used by
 *  CreateDataStore API, and will be ignored if used in other APIs. This field
 *  will be omitted from all API responses including CreateDataStore API. To
 *  retrieve a schema of a DataStore, use SchemaService.GetSchema API instead.
 *  The provided schema will be validated against certain rules on schema. Learn
 *  more from [this
 *  doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema *startingSchema;

/**
 *  Config to store data store type configuration for workspace data. This must
 *  be set when DataStore.content_config is set as
 *  DataStore.ContentConfig.GOOGLE_WORKSPACE.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig *workspaceConfig;

@end


/**
 *  Estimation of data size per data store.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStoreBillingEstimation : GTLRObject

/**
 *  Data size for structured data in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *structuredDataSize;

/** Last updated timestamp for structured data. */
@property(nonatomic, strong, nullable) GTLRDateTime *structuredDataUpdateTime;

/**
 *  Data size for unstructured data in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unstructuredDataSize;

/** Last updated timestamp for unstructured data. */
@property(nonatomic, strong, nullable) GTLRDateTime *unstructuredDataUpdateTime;

/**
 *  Data size for websites in terms of bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *websiteDataSize;

/** Last updated timestamp for websites. */
@property(nonatomic, strong, nullable) GTLRDateTime *websiteDataUpdateTime;

@end


/**
 *  Stores information regarding the serving configurations at DataStore level.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStoreServingConfigDataStore : GTLRObject

/**
 *  If set true, the DataStore will not be available for serving search
 *  requests.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabledForServing;

@end


/**
 *  Metadata related to the progress of the CmekConfigService.DeleteCmekConfig
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DeleteCmekConfigMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the DataStoreService.DeleteDataStore
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DeleteDataStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the EngineService.DeleteEngine
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DeleteEngineMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  IdentityMappingStoreService.DeleteIdentityMappingStore operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DeleteIdentityMappingStoreMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for DeleteSchema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DeleteSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DeleteSitemap operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DeleteSitemapMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DeleteTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DeleteTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for SiteSearchEngineService.DisableAdvancedSiteSearch
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchRequest : GTLRObject
@end


/**
 *  Response message for SiteSearchEngineService.DisableAdvancedSiteSearch
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchResponse : GTLRObject
@end


/**
 *  Document captures all raw metadata information of items to be recommended or
 *  searched.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document : GTLRObject

/**
 *  The unstructured data linked to this document. Content must be set if this
 *  document is under a `CONTENT_REQUIRED` data store.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentContent *content;

/**
 *  Output only. This field is OUTPUT_ONLY. It contains derived data that are
 *  not in the original input document.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document_DerivedStructData *derivedStructData;

/**
 *  Immutable. The identifier of the document. Id should conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 128 characters.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Output only. The index status of the document. * If document is indexed
 *  successfully, the index_time field is populated. * Otherwise, if document is
 *  not indexed due to errors, the error_samples field is populated. *
 *  Otherwise, if document's index is in progress, the pending_message field is
 *  populated.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentIndexStatus *indexStatus;

/**
 *  Output only. The last time the document was indexed. If this field is set,
 *  the document could be returned in search results. This field is OUTPUT_ONLY.
 *  If this field is not populated, it means the document has never been
 *  indexed.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *indexTime;

/**
 *  The JSON string representation of the document. It should conform to the
 *  registered Schema or an `INVALID_ARGUMENT` error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *jsonData;

/**
 *  Immutable. The full resource name of the document. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The identifier of the parent document. Currently supports at most two level
 *  document hierarchy. Id should conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 63 characters.
 */
@property(nonatomic, copy, nullable) NSString *parentDocumentId;

/** The identifier of the schema located in the same data store. */
@property(nonatomic, copy, nullable) NSString *schemaId;

/**
 *  The structured JSON data for the document. It should conform to the
 *  registered Schema or an `INVALID_ARGUMENT` error is thrown.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document_StructData *structData;

@end


/**
 *  Output only. This field is OUTPUT_ONLY. It contains derived data that are
 *  not in the original input document.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document_DerivedStructData : GTLRObject
@end


/**
 *  The structured JSON data for the document. It should conform to the
 *  registered Schema or an `INVALID_ARGUMENT` error is thrown.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document_StructData : GTLRObject
@end


/**
 *  Unstructured data linked to this document.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentContent : GTLRObject

/**
 *  The MIME type of the content. Supported types: * `application/pdf` (PDF,
 *  only native PDFs are supported for now) * `text/html` (HTML) *
 *  `application/vnd.openxmlformats-officedocument.wordprocessingml.document`
 *  (DOCX) *
 *  `application/vnd.openxmlformats-officedocument.presentationml.presentation`
 *  (PPTX) * `text/plain` (TXT) See
 *  https://www.iana.org/assignments/media-types/media-types.xhtml.
 */
@property(nonatomic, copy, nullable) NSString *mimeType;

/**
 *  The content represented as a stream of bytes. The maximum length is
 *  1,000,000 bytes (1 MB / ~0.95 MiB). Note: As with all `bytes` fields, this
 *  field is represented as pure binary in Protocol Buffers and base64-encoded
 *  string in JSON. For example, `abc123!?$*&()'-=\@~` should be represented as
 *  `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See
 *  https://developers.google.com/protocol-buffers/docs/proto3#json.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *rawBytes;

/**
 *  The URI of the content. Only Cloud Storage URIs (e.g.
 *  `gs://bucket-name/path/to/file`) are supported. The maximum file size is 2.5
 *  MB for text-based formats, 200 MB for other formats.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Index status of the document.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentIndexStatus : GTLRObject

/**
 *  A sample of errors encountered while indexing the document. If this field is
 *  populated, the document is not indexed due to errors.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  The time when the document was indexed. If this field is populated, it means
 *  the document has been indexed.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *indexTime;

/**
 *  Immutable. The message indicates the document index is in progress. If this
 *  field is populated, the document index is pending.
 */
@property(nonatomic, copy, nullable) NSString *pendingMessage;

@end


/**
 *  Detailed document information associated with a user event.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentInfo : GTLRObject

/**
 *  Optional. The conversion value associated with this Document. Must be set if
 *  UserEvent.event_type is "conversion". For example, a value of 1000 signifies
 *  that 1000 seconds were spent viewing a Document for the `watch` conversion
 *  type.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversionValue;

/**
 *  The Document resource ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Output only. Whether the referenced Document can be found in the data store.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joined;

/**
 *  The Document resource full name, of the form:
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The promotion IDs associated with this Document. Currently, this field is
 *  restricted to at most one ID.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *promotionIds;

/**
 *  Quantity of the Document associated with the user event. Defaults to 1. For
 *  example, this field is 2 if two quantities of the same Document are involved
 *  in a `add-to-cart` event. Required for events of the following event types:
 *  * `add-to-cart` * `purchase`
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/** The Document URI - only allowed for website data stores. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A singleton resource of DataStore. If it's empty when DataStore is created
 *  and DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED, the
 *  default parser will default to digital parser.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfig : GTLRObject

/** Whether chunking mode is enabled. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig *chunkingConfig;

/**
 *  Configurations for default Document parser. If not specified, we will
 *  configure it as default DigitalParsingConfig, and the default parsing config
 *  will be applied to all file types for Document parsing.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig *defaultParsingConfig;

/**
 *  The full resource name of the Document Processing Config. Format: `projects/
 *  * /locations/ * /collections/ * /dataStores/ * /documentProcessingConfig`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Map from file type to override the default parsing configuration based on
 *  the file type. Supported keys: * `pdf`: Override parsing config for PDF
 *  files, either digital parsing, ocr parsing or layout parsing is supported. *
 *  `html`: Override parsing config for HTML files, only digital parsing and
 *  layout parsing are supported. * `docx`: Override parsing config for DOCX
 *  files, only digital parsing and layout parsing are supported. * `pptx`:
 *  Override parsing config for PPTX files, only digital parsing and layout
 *  parsing are supported. * `xlsm`: Override parsing config for XLSM files,
 *  only digital parsing and layout parsing are supported. * `xlsx`: Override
 *  parsing config for XLSX files, only digital parsing and layout parsing are
 *  supported.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfig_ParsingConfigOverrides *parsingConfigOverrides;

@end


/**
 *  Map from file type to override the default parsing configuration based on
 *  the file type. Supported keys: * `pdf`: Override parsing config for PDF
 *  files, either digital parsing, ocr parsing or layout parsing is supported. *
 *  `html`: Override parsing config for HTML files, only digital parsing and
 *  layout parsing are supported. * `docx`: Override parsing config for DOCX
 *  files, only digital parsing and layout parsing are supported. * `pptx`:
 *  Override parsing config for PPTX files, only digital parsing and layout
 *  parsing are supported. * `xlsm`: Override parsing config for XLSM files,
 *  only digital parsing and layout parsing are supported. * `xlsx`: Override
 *  parsing config for XLSX files, only digital parsing and layout parsing are
 *  supported.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfig_ParsingConfigOverrides : GTLRObject
@end


/**
 *  Configuration for chunking config.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig : GTLRObject

/** Configuration for the layout based chunking. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig *layoutBasedChunkingConfig;

@end


/**
 *  Configuration for the layout based chunking.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig : GTLRObject

/**
 *  The token size limit for each chunk. Supported values: 100-500 (inclusive).
 *  Default value: 500.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *chunkSize;

/**
 *  Whether to include appending different levels of headings to chunks from the
 *  middle of the document to prevent context loss. Default value: False.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeAncestorHeadings;

@end


/**
 *  Related configurations applied to a specific type of document parser.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig : GTLRObject

/** Configurations applied to digital parser. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig *digitalParsingConfig;

/** Configurations applied to layout parser. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig *layoutParsingConfig;

/**
 *  Configurations applied to OCR parser. Currently it only applies to PDFs.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig *ocrParsingConfig;

@end


/**
 *  The digital parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig : GTLRObject
@end


/**
 *  The layout parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig : GTLRObject
@end


/**
 *  The OCR parsing configurations for documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig : GTLRObject

/**
 *  [DEPRECATED] This field is deprecated. To use the additional enhanced
 *  document elements processing, please switch to `layout_parsing_config`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *enhancedDocumentElements GTLR_DEPRECATED;

/**
 *  If true, will use native text instead of OCR text on pages containing native
 *  text.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useNativeText;

@end


/**
 *  Double list.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DoubleList : GTLRObject

/**
 *  Double values.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *values;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for SiteSearchEngineService.EnableAdvancedSiteSearch method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchRequest : GTLRObject
@end


/**
 *  Response message for SiteSearchEngineService.EnableAdvancedSiteSearch
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchResponse : GTLRObject
@end


/**
 *  Metadata that describes the training and serving parameters of an Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine : GTLRObject

/**
 *  Configurations for the Chat Engine. Only applicable if solution_type is
 *  SOLUTION_TYPE_CHAT.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineConfig *chatEngineConfig;

/**
 *  Output only. Additional information of the Chat Engine. Only applicable if
 *  solution_type is SOLUTION_TYPE_CHAT.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineMetadata *chatEngineMetadata;

/** Common config spec that specifies the metadata of the engine. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineCommonConfig *commonConfig;

/** Output only. Timestamp the Recommendation Engine was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and
 *  SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with
 *  at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple
 *  DataStores in the same Collection can be associated here. Note that when
 *  used in CreateEngineRequest, one DataStore id must be provided as the system
 *  will use it for necessary initializations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dataStoreIds;

/**
 *  Optional. Whether to disable analytics for searches performed on this
 *  engine.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableAnalytics;

/**
 *  Required. The display name of the engine. Should be human readable. UTF-8
 *  encoded string with limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The industry vertical that the engine registers. The restriction of the
 *  Engine industry vertical is based on DataStore: Vertical on Engine has to
 *  match vertical of the DataStore linked to the engine.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_Generic
 *        The generic vertical for documents that are not specific to any
 *        industry vertical. (Value: "GENERIC")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_HealthcareFhir
 *        The healthcare FHIR vertical. (Value: "HEALTHCARE_FHIR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_IndustryVerticalUnspecified
 *        Value used when unset. (Value: "INDUSTRY_VERTICAL_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_IndustryVertical_Media
 *        The media industry vertical. (Value: "MEDIA")
 */
@property(nonatomic, copy, nullable) NSString *industryVertical;

/**
 *  Immutable. The fully qualified resource name of the engine. This field must
 *  be a UTF-8 encoded string with a length limit of 1024 characters. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
 *  engine should be 1-63 characters, and valid characters are /a-z0-9* /.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Configurations for the Search Engine. Only applicable if solution_type is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig *searchEngineConfig;

/**
 *  Required. The solutions of the engine.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeChat
 *        Used for use cases related to the Generative AI agent. (Value:
 *        "SOLUTION_TYPE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeGenerativeChat
 *        Used for use cases related to the Generative Chat agent. It's used for
 *        Generative chat engine only, the associated data stores must enrolled
 *        with `SOLUTION_TYPE_CHAT` solution. (Value:
 *        "SOLUTION_TYPE_GENERATIVE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeRecommendation
 *        Used for Recommendations AI. (Value: "SOLUTION_TYPE_RECOMMENDATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeSearch
 *        Used for Discovery Search. (Value: "SOLUTION_TYPE_SEARCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine_SolutionType_SolutionTypeUnspecified
 *        Default value. (Value: "SOLUTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *solutionType;

/** Output only. Timestamp the Recommendation Engine was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Configurations for a Chat Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineConfig : GTLRObject

/**
 *  The configurationt generate the Dialogflow agent that is associated to this
 *  Engine. Note that these configurations are one-time consumed by and passed
 *  to Dialogflow service. It means they cannot be retrieved using
 *  EngineService.GetEngine or EngineService.ListEngines API after engine
 *  creation.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig *agentCreationConfig;

/**
 *  Optional. If the flag set to true, we allow the agent and engine are in
 *  different locations, otherwise the agent and engine are required to be in
 *  the same location. The flag is set to false by default. Note that the
 *  `allow_cross_region` are one-time consumed by and passed to
 *  EngineService.CreateEngine. It means they cannot be retrieved using
 *  EngineService.GetEngine or EngineService.ListEngines API after engine
 *  creation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowCrossRegion;

/**
 *  The resource name of an exist Dialogflow agent to link to this Chat Engine.
 *  Customers can either provide `agent_creation_config` to create agent or
 *  provide an agent name that links the agent with the Chat engine. Format:
 *  `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are
 *  one-time consumed by and passed to Dialogflow service. It means they cannot
 *  be retrieved using EngineService.GetEngine or EngineService.ListEngines API
 *  after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
 *  agent association after Engine is created.
 */
@property(nonatomic, copy, nullable) NSString *dialogflowAgentToLink;

@end


/**
 *  Configurations for generating a Dialogflow agent. Note that these
 *  configurations are one-time consumed by and passed to Dialogflow service. It
 *  means they cannot be retrieved using EngineService.GetEngine or
 *  EngineService.ListEngines API after engine creation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig : GTLRObject

/**
 *  Name of the company, organization or other entity that the agent represents.
 *  Used for knowledge connector LLM prompt and for knowledge search.
 */
@property(nonatomic, copy, nullable) NSString *business;

/**
 *  Required. The default language of the agent as a language tag. See [Language
 *  Support](https://cloud.google.com/dialogflow/docs/reference/language) for a
 *  list of the currently supported language codes.
 */
@property(nonatomic, copy, nullable) NSString *defaultLanguageCode;

/**
 *  Agent location for Agent creation, supported values: global/us/eu. If not
 *  provided, us Engine will create Agent using us-central-1 by default; eu
 *  Engine will create Agent using eu-west-1 by default.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Required. The time zone of the agent from the [time zone
 *  database](https://www.iana.org/time-zones), e.g., America/New_York,
 *  Europe/Paris.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  Additional information of a Chat Engine. Fields in this message are output
 *  only.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineChatEngineMetadata : GTLRObject

/**
 *  The resource name of a Dialogflow agent, that this Chat Engine refers to.
 *  Format: `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *dialogflowAgent;

@end


/**
 *  Common configurations for an Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineCommonConfig : GTLRObject

/**
 *  The name of the company, business or entity that is associated with the
 *  engine. Setting this may help improve LLM related features.
 */
@property(nonatomic, copy, nullable) NSString *companyName;

@end


/**
 *  Configurations for a Search Engine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig : GTLRObject

/** The add-on that this search engine enables. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *searchAddOns;

/**
 *  The search feature tier of this engine. Different tiers might have different
 *  pricing. To learn more, check the pricing documentation. Defaults to
 *  SearchTier.SEARCH_TIER_STANDARD if not specified.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchTier_SearchTierEnterprise
 *        Enterprise tier. (Value: "SEARCH_TIER_ENTERPRISE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchTier_SearchTierStandard
 *        Standard tier. (Value: "SEARCH_TIER_STANDARD")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EngineSearchEngineConfig_SearchTier_SearchTierUnspecified
 *        Default value when the enum is unspecified. This is invalid to use.
 *        (Value: "SEARCH_TIER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchTier;

@end


/**
 *  Fact Chunk.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FactChunk : GTLRObject

/** Text content of the fact chunk. Can be at most 10K characters long. */
@property(nonatomic, copy, nullable) NSString *chunkText;

/**
 *  The index of this chunk. Currently, only used for the streaming mode.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *index;

/**
 *  Source from which this fact chunk was retrieved. If it was retrieved from
 *  the GroundingFacts provided in the request then this field will contain the
 *  index of the specific fact from which this chunk was retrieved.
 */
@property(nonatomic, copy, nullable) NSString *source;

/** More fine-grained information for the source reference. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FactChunk_SourceMetadata *sourceMetadata;

@end


/**
 *  More fine-grained information for the source reference.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FactChunk_SourceMetadata : GTLRObject
@end


/**
 *  Response message for SiteSearchEngineService.FetchDomainVerificationStatus
 *  method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "targetSites" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FetchDomainVerificationStatusResponse : GTLRCollectionObject

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of TargetSites containing the site verification status.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *> *targetSites;

/**
 *  The total number of items matching the request. This will always be
 *  populated in the response.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Response message for SiteSearchEngineService.FetchSitemaps method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FetchSitemapsResponse : GTLRObject

/** List of Sitemaps fetched. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FetchSitemapsResponseSitemapMetadata *> *sitemapsMetadata;

@end


/**
 *  Contains a Sitemap and its metadata.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FetchSitemapsResponseSitemapMetadata : GTLRObject

/** The Sitemap. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Sitemap *sitemap;

@end


/**
 *  Cloud FhirStore source import data from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FhirStoreSource : GTLRObject

/**
 *  Required. The full resource name of the FHIR store to import data from, in
 *  the format of
 *  `projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}`.
 */
@property(nonatomic, copy, nullable) NSString *fhirStore;

/**
 *  Intermediate Cloud Storage directory used for the import with a length limit
 *  of 2,000 characters. Can be specified if one wants to have the FhirStore
 *  export to a specific Cloud Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/**
 *  The FHIR resource types to import. The resource types should be a subset of
 *  all [supported FHIR resource
 *  types](https://cloud.google.com/generative-ai-app-builder/docs/fhir-schema-reference#resource-level-specification).
 *  Default to all supported FHIR resource types if empty.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceTypes;

/**
 *  Optional. Whether to update the DataStore schema to the latest predefined
 *  schema. If true, the DataStore schema will be updated to include any FHIR
 *  fields or resource types that have been added since the last import and
 *  corresponding FHIR resources will be imported from the FHIR store. Note this
 *  field cannot be used in conjunction with `resource_types`. It should be used
 *  after initial import.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *updateFromLatestPredefinedSchema;

@end


/**
 *  Firestore source import data from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FirestoreSource : GTLRObject

/**
 *  Required. The Firestore collection (or entity) to copy the data from with a
 *  length limit of 1,500 characters.
 */
@property(nonatomic, copy, nullable) NSString *collectionId;

/**
 *  Required. The Firestore database to copy the data from with a length limit
 *  of 256 characters.
 */
@property(nonatomic, copy, nullable) NSString *databaseId;

/**
 *  Intermediate Cloud Storage directory used for the import with a length limit
 *  of 2,000 characters. Can be specified if one wants to have the Firestore
 *  export to a specific Cloud Storage directory. Ensure that the Firestore
 *  service account has the necessary Cloud Storage Admin permissions to access
 *  the specified Cloud Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/**
 *  The project ID that the Cloud SQL source is in with a length limit of 128
 *  characters. If not specified, inherits the project ID from the parent
 *  request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

@end


/**
 *  Cloud Storage location for input content.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GcsSource : GTLRObject

/**
 *  The schema to use when parsing the data from the source. Supported values
 *  for document imports: * `document` (default): One JSON Document per line.
 *  Each document must have a valid Document.id. * `content`: Unstructured data
 *  (e.g. PDF, HTML). Each file matched by `input_uris` becomes a document, with
 *  the ID set to the first 128 bits of SHA256(URI) encoded as a hex string. *
 *  `custom`: One custom data JSON per row in arbitrary format that conforms to
 *  the defined Schema of the data store. This can only be used by the GENERIC
 *  Data Store vertical. * `csv`: A CSV file with header conforming to the
 *  defined Schema of the data store. Each entry after the header is imported as
 *  a Document. This can only be used by the GENERIC Data Store vertical.
 *  Supported values for user event imports: * `user_event` (default): One JSON
 *  UserEvent per line.
 */
@property(nonatomic, copy, nullable) NSString *dataSchema;

/**
 *  Required. Cloud Storage URIs to input files. Each URI can be up to 2000
 *  characters long. URIs can match the full object path (for example,
 *  `gs://bucket/directory/object.json`) or a pattern matching one or more
 *  files, such as `gs://bucket/directory/ *.json`. A request can contain at
 *  most 100 files (or 100,000 files if `data_schema` is `content`). Each file
 *  can be up to 2 GB (or 100 MB if `data_schema` is `content`).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inputUris;

@end


/**
 *  Grounding Fact.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GroundingFact : GTLRObject

/**
 *  Attributes associated with the fact. Common attributes include `source`
 *  (indicating where the fact was sourced from), `author` (indicating the
 *  author of the fact), and so on.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GroundingFact_Attributes *attributes;

/** Text content of the fact. Can be at most 10K characters long. */
@property(nonatomic, copy, nullable) NSString *factText;

@end


/**
 *  Attributes associated with the fact. Common attributes include `source`
 *  (indicating where the fact was sourced from), `author` (indicating the
 *  author of the fact), and so on.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GroundingFact_Attributes : GTLRObject
@end


/**
 *  Config to data store for `HEALTHCARE_FHIR` vertical.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1HealthcareFhirConfig : GTLRObject

/**
 *  Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set
 *  to `true`, the predefined healthcare fhir schema can be extended for more
 *  customized searching and filtering.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableConfigurableSchema;

/**
 *  Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If
 *  set to `true`, the batch ingestion will be processed in a static indexing
 *  mode which is slower but more capable of handling larger volume.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableStaticIndexingForBatchIngestion;

@end


/**
 *  Identity Mapping Entry that maps an external identity to an internal
 *  identity.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingEntry : GTLRObject

/**
 *  Required. Identity outside the customer identity provider. The length limit
 *  of external identity will be of 100 characters.
 */
@property(nonatomic, copy, nullable) NSString *externalIdentity;

/**
 *  Group identifier. For Google Workspace user account, group_id should be the
 *  google workspace group email. For non-google identity provider, group_id is
 *  the mapped group identifier configured during the workforcepool config.
 */
@property(nonatomic, copy, nullable) NSString *groupId;

/**
 *  User identifier. For Google Workspace user account, user_id should be the
 *  google workspace user email. For non-google identity provider, user_id is
 *  the mapped user identifier configured during the workforcepool config.
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  IdentityMappingEntry LongRunningOperation metadata for
 *  IdentityMappingStoreService.ImportIdentityMappings and
 *  IdentityMappingStoreService.PurgeIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingEntryOperationMetadata : GTLRObject

/**
 *  The number of IdentityMappingEntries that failed to be processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  The number of IdentityMappingEntries that were successfully processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  The total number of IdentityMappingEntries that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

@end


/**
 *  Identity Mapping Store which contains Identity Mapping Entries.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingStore : GTLRObject

/** Output only. CMEK-related information for the Identity Mapping Store. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CmekConfig *cmekConfig;

/**
 *  Input only. The KMS key to be used to protect this Identity Mapping Store at
 *  creation time. Must be set for requests that need to comply with CMEK Org
 *  Policy protections. If this field is set and processed successfully, the
 *  Identity Mapping Store will be protected by the KMS key, as indicated in the
 *  cmek_config field.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/**
 *  Immutable. The full resource name of the identity mapping store. Format:
 *  `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Metadata related to the progress of the ImportCompletionSuggestions
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of CompletionSuggestions that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of CompletionSuggestions successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for CompletionService.ImportCompletionSuggestions method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequest : GTLRObject

/** BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigQuerySource *bigquerySource;

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GcsSource *gcsSource;

/** The Inline source for suggestion entries. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequestInlineSource *inlineSource;

@end


/**
 *  The inline source for CompletionSuggestions.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequestInlineSource : GTLRObject

/** Required. A list of all denylist entries to import. Max of 1000 items. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompletionSuggestion *> *suggestions;

@end


/**
 *  Response of the CompletionService.ImportCompletionSuggestions method. If the
 *  long running operation is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsResponse : GTLRObject

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportDocuments operation. This is
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Total count of entries that were processed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for Import methods.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest : GTLRObject

/** AlloyDB input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AlloyDbSource *alloyDbSource;

/**
 *  Whether to automatically generate IDs for the documents if absent. If set to
 *  `true`, Document.ids are automatically generated based on the hash of the
 *  payload, where IDs may not be consistent during multiple imports. In which
 *  case ReconciliationMode.FULL is highly recommended to avoid duplicate
 *  contents. If unset or set to `false`, Document.ids have to be specified
 *  using id_field, otherwise, documents without IDs fail to be imported.
 *  Supported data sources: * GcsSource. GcsSource.data_schema must be `custom`
 *  or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown. * BigQuerySource.
 *  BigQuerySource.data_schema must be `custom` or `csv`. Otherwise, an
 *  INVALID_ARGUMENT error is thrown. * SpannerSource. * CloudSqlSource. *
 *  FirestoreSource. * BigtableSource.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoGenerateIds;

/** BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigQuerySource *bigquerySource;

/** Cloud Bigtable input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigtableSource *bigtableSource;

/** Cloud SQL input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CloudSqlSource *cloudSqlSource;

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** FhirStore input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FhirStoreSource *fhirStoreSource;

/** Firestore input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FirestoreSource *firestoreSource;

/**
 *  Optional. Whether to force refresh the unstructured content of the
 *  documents. If set to `true`, the content part of the documents will be
 *  refreshed regardless of the update status of the referencing content.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *forceRefreshContent;

/** Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GcsSource *gcsSource;

/**
 *  The field indicates the ID field or column to be used as unique IDs of the
 *  documents. For GcsSource it is the key of the JSON field. For instance,
 *  `my_id` for JSON `{"my_id": "some_uuid"}`. For others, it may be the column
 *  name of the table where the unique ids are stored. The values of the JSON
 *  field or the table column are used as the Document.ids. The JSON field or
 *  the table column must be of string type, and the values must be set as valid
 *  strings conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) with 1-63
 *  characters. Otherwise, documents without valid IDs fail to be imported. Only
 *  set this field when auto_generate_ids is unset or set as `false`. Otherwise,
 *  an INVALID_ARGUMENT error is thrown. If it is unset, a default value `_id`
 *  is used when importing from the allowed data sources. Supported data
 *  sources: * GcsSource. GcsSource.data_schema must be `custom` or `csv`.
 *  Otherwise, an INVALID_ARGUMENT error is thrown. * BigQuerySource.
 *  BigQuerySource.data_schema must be `custom` or `csv`. Otherwise, an
 *  INVALID_ARGUMENT error is thrown. * SpannerSource. * CloudSqlSource. *
 *  FirestoreSource. * BigtableSource.
 */
@property(nonatomic, copy, nullable) NSString *idField;

/** The Inline source for the input content for documents. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequestInlineSource *inlineSource;

/**
 *  The mode of reconciliation between existing documents and the documents to
 *  be imported. Defaults to ReconciliationMode.INCREMENTAL.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest_ReconciliationMode_Full
 *        Calculates diff and replaces the entire document dataset. Existing
 *        documents may be deleted if they are not present in the source
 *        location. (Value: "FULL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest_ReconciliationMode_Incremental
 *        Inserts new documents or updates existing documents. (Value:
 *        "INCREMENTAL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest_ReconciliationMode_ReconciliationModeUnspecified
 *        Defaults to `INCREMENTAL`. (Value: "RECONCILIATION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reconciliationMode;

/** Spanner input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SpannerSource *spannerSource;

/**
 *  Indicates which fields in the provided imported documents to update. If not
 *  set, the default is to update all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  The inline source for the input config for ImportDocuments method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequestInlineSource : GTLRObject

/**
 *  Required. A list of documents to update/create. Each document must have a
 *  valid Document.id. Recommended max of 100 items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *> *documents;

@end


/**
 *  Response of the ImportDocumentsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig : GTLRObject

/**
 *  Cloud Storage prefix for import errors. This must be an empty, existing
 *  Cloud Storage directory. Import errors are written to sharded files in this
 *  directory, one per line, as a JSON-encoded `google.rpc.Status` message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Request message for IdentityMappingStoreService.ImportIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportIdentityMappingsRequest : GTLRObject

/** The inline source to import identity mapping entries from. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportIdentityMappingsRequestInlineSource *inlineSource;

@end


/**
 *  The inline source to import identity mapping entries from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportIdentityMappingsRequestInlineSource : GTLRObject

/** A maximum of 10000 entries can be imported at one time */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingEntry *> *identityMappingEntries;

@end


/**
 *  Response message for IdentityMappingStoreService.ImportIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportIdentityMappingsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Metadata related to the progress of the ImportSuggestionDenyListEntries
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for CompletionService.ImportSuggestionDenyListEntries
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequest : GTLRObject

/**
 *  Cloud Storage location for the input content. Only 1 file can be specified
 *  that contains all entries to import. Supported values `gcs_source.schema`
 *  for autocomplete suggestion deny list entry imports: *
 *  `suggestion_deny_list` (default): One JSON [SuggestionDenyListEntry] per
 *  line.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GcsSource *gcsSource;

/**
 *  The Inline source for the input content for suggestion deny list entries.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequestInlineSource *inlineSource;

@end


/**
 *  The inline source for SuggestionDenyListEntry.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequestInlineSource : GTLRObject

/** Required. A list of all denylist entries to import. Max of 1000 items. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry *> *entries;

@end


/**
 *  Response message for CompletionService.ImportSuggestionDenyListEntries
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of deny list entries that failed to be imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failedEntriesCount;

/**
 *  Count of deny list entries successfully imported.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importedEntriesCount;

@end


/**
 *  Metadata related to the progress of the Import operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for the ImportUserEvents request.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsRequest : GTLRObject

/** BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BigQuerySource *bigquerySource;

/**
 *  The desired location of errors incurred during the Import. Cannot be set for
 *  inline user event imports.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GcsSource *gcsSource;

/** The Inline source for the input content for UserEvents. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsRequestInlineSource *inlineSource;

@end


/**
 *  The inline source for the input config for ImportUserEvents method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsRequestInlineSource : GTLRObject

/**
 *  Required. A list of user events to import. Recommended max of 10k items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent *> *userEvents;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsResponse : GTLRObject

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Count of user events imported with complete existing Documents.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with Document information not found in
 *  the existing Branch.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  A floating point interval.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Interval : GTLRObject

/**
 *  Exclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMaximum;

/**
 *  Exclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMinimum;

/**
 *  Inclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximum;

/**
 *  Inclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimum;

@end


/**
 *  Response for ListControls method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "controls" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListControlsResponse : GTLRCollectionObject

/**
 *  All the Controls for a given data store.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control *> *controls;

/** Pagination token, if not returned indicates the last page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response for ListConversations method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "conversations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListConversationsResponse : GTLRCollectionObject

/**
 *  All the Conversations for a given data store.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *> *conversations;

/** Pagination token, if not returned indicates the last page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for SearchTuningService.ListCustomModels method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListCustomModelsResponse : GTLRObject

/** List of custom tuning models. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomTuningModel *> *models;

@end


/**
 *  Response message for DataStoreService.ListDataStores method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dataStores" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListDataStoresResponse : GTLRCollectionObject

/**
 *  All the customer's DataStores.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore *> *dataStores;

/**
 *  A token that can be sent as ListDataStoresRequest.page_token to retrieve the
 *  next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for DocumentService.ListDocuments method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "documents" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListDocumentsResponse : GTLRCollectionObject

/**
 *  The Documents.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *> *documents;

/**
 *  A token that can be sent as ListDocumentsRequest.page_token to retrieve the
 *  next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for EngineService.ListEngines method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "engines" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListEnginesResponse : GTLRCollectionObject

/**
 *  All the customer's Engines.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine *> *engines;

/** Not supported. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for IdentityMappingStoreService.ListIdentityMappings
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "identityMappingEntries" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListIdentityMappingsResponse : GTLRCollectionObject

/**
 *  The Identity Mapping Entries.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingEntry *> *identityMappingEntries;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for IdentityMappingStoreService.ListIdentityMappingStores
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "identityMappingStores" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListIdentityMappingStoresResponse : GTLRCollectionObject

/**
 *  The Identity Mapping Stores.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingStore *> *identityMappingStores;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for SchemaService.ListSchemas method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "schemas" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListSchemasResponse : GTLRCollectionObject

/**
 *  A token that can be sent as ListSchemasRequest.page_token to retrieve the
 *  next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The Schemas.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema *> *schemas;

@end


/**
 *  Response for ListSessions method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sessions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListSessionsResponse : GTLRCollectionObject

/** Pagination token, if not returned indicates the last page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  All the Sessions for a given data store.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *> *sessions;

@end


/**
 *  Response message for SiteSearchEngineService.ListTargetSites method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "targetSites" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListTargetSitesResponse : GTLRCollectionObject

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of TargetSites.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *> *targetSites;

/**
 *  The total number of items matching the request. This will always be
 *  populated in the response.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Media-specific user event information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1MediaInfo : GTLRObject

/**
 *  The media progress time in seconds, if applicable. For example, if the end
 *  user has finished 90 seconds of a playback video, then
 *  MediaInfo.media_progress_duration.seconds should be set to 90.
 */
@property(nonatomic, strong, nullable) GTLRDuration *mediaProgressDuration;

/**
 *  Media progress should be computed using only the media_progress_duration
 *  relative to the media total length. This value must be between `[0, 1.0]`
 *  inclusive. If this is not a playback or the progress cannot be computed
 *  (e.g. ongoing livestream), this field should be unset.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mediaProgressPercentage;

@end


/**
 *  Detailed page information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PageInfo : GTLRObject

/**
 *  The most specific category associated with a category page. To represent
 *  full path of category, use '>' sign to separate different hierarchies. If
 *  '>' is part of the category name, replace it with other character(s).
 *  Category pages include special pages such as sales or promotions. For
 *  instance, a special sale page may have the category hierarchy:
 *  `"pageCategory" : "Sales > 2017 Black Friday Deals"`. Required for
 *  `view-category-page` events. Other event types should not set this field.
 *  Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageCategory;

/**
 *  A unique ID of a web page view. This should be kept the same for all user
 *  events triggered from the same pageview. For example, an item detail page
 *  view could trigger multiple events as the user is browsing the page. The
 *  `pageview_id` property should be kept the same for all these events so that
 *  they can be grouped together properly. When using the client side event
 *  reporting with JavaScript pixel and Google Tag Manager, this value is filled
 *  in automatically.
 */
@property(nonatomic, copy, nullable) NSString *pageviewId;

/**
 *  The referrer URL of the current page. When using the client side event
 *  reporting with JavaScript pixel and Google Tag Manager, this value is filled
 *  in automatically. However, some browser privacy restrictions may cause this
 *  field to be empty.
 */
@property(nonatomic, copy, nullable) NSString *referrerUri;

/**
 *  Complete URL (window.location.href) of the user's current page. When using
 *  the client side event reporting with JavaScript pixel and Google Tag
 *  Manager, this value is filled in automatically. Maximum length 5,000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Detailed panel information associated with a user event.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PanelInfo : GTLRObject

/** The display name of the panel. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Optional. The document IDs associated with this panel. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentInfo *> *documents;

/** Required. The panel ID. */
@property(nonatomic, copy, nullable) NSString *panelId;

/**
 *  The ordered position of the panel, if shown to the user with other panels.
 *  If set, then total_panels must also be set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *panelPosition;

/**
 *  The total number of panels, including this one, shown to the user. Must be
 *  set if panel_position is set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalPanels;

@end


/**
 *  Metadata and configurations for a Google Cloud project in the service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Project : GTLRObject

/** Output only. The timestamp when this project is created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Full resource name of the project, for example
 *  `projects/{project}`. Note that when making requests, project number and
 *  project id are both acceptable, but the server will always respond in
 *  project number.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The timestamp when this project is successfully provisioned.
 *  Empty value means this project is still provisioning and is not ready for
 *  use.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *provisionCompletionTime;

/**
 *  Output only. A map of terms of services. The key is the `id` of
 *  ServiceTerms.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Project_ServiceTermsMap *serviceTermsMap;

@end


/**
 *  Output only. A map of terms of services. The key is the `id` of
 *  ServiceTerms.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Project_ServiceTermsMap : GTLRObject
@end


/**
 *  Metadata about the terms of service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms : GTLRObject

/** The last time when the project agreed to the terms of service. */
@property(nonatomic, strong, nullable) GTLRDateTime *acceptTime;

/**
 *  The last time when the project declined or revoked the agreement to terms of
 *  service.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *declineTime;

/**
 *  The unique identifier of this terms of service. Available terms: *
 *  `GA_DATA_USE_TERMS`: [Terms for data
 *  use](https://cloud.google.com/retail/data-use-terms). When using this as
 *  `id`, the acceptable version to provide is `2022-11-23`.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Whether the project has accepted/rejected the service terms or it is still
 *  pending.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_StateUnspecified
 *        The default value of the enum. This value is not actually used.
 *        (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_TermsAccepted
 *        The project has given consent to the terms of service. (Value:
 *        "TERMS_ACCEPTED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_TermsDeclined
 *        The project has declined or revoked the agreement to terms of service.
 *        (Value: "TERMS_DECLINED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProjectServiceTerms_State_TermsPending
 *        The project is pending to review and accept the terms of service.
 *        (Value: "TERMS_PENDING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The version string of the terms of service. For acceptable values, see the
 *  comments for id above.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Metadata associated with a project provision operation.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProvisionProjectMetadata : GTLRObject
@end


/**
 *  Request for ProjectService.ProvisionProject method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProvisionProjectRequest : GTLRObject

/**
 *  Required. Set to `true` to specify that caller has read and would like to
 *  give consent to the [Terms for data
 *  use](https://cloud.google.com/retail/data-use-terms).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *acceptDataUseTerms;

/**
 *  Required. The version of the [Terms for data
 *  use](https://cloud.google.com/retail/data-use-terms) that caller has read
 *  and would like to give consent to. Acceptable version is `2022-11-23`, and
 *  this may change over time.
 */
@property(nonatomic, copy, nullable) NSString *dataUseTermsVersion;

@end


/**
 *  Metadata related to the progress of the PurgeCompletionSuggestions
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for CompletionService.PurgeCompletionSuggestions method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsRequest : GTLRObject
@end


/**
 *  Response message for CompletionService.PurgeCompletionSuggestions method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Whether the completion suggestions were successfully purged.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeSucceeded;

@end


/**
 *  Metadata related to the progress of the PurgeDocuments operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were ignored as entries were not found.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoredCount;

/**
 *  Count of entries that were deleted successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for DocumentService.PurgeDocuments method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsRequest : GTLRObject

/** The desired location of errors incurred during the purge. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeErrorConfig *errorConfig;

/**
 *  Required. Filter matching documents to purge. Only currently supported value
 *  is `*` (all items).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Actually performs the purge. If `force` is set to false, return the expected
 *  purge count without deleting any documents.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

/**
 *  Cloud Storage location for the input content. Supported `data_schema`: *
 *  `document_id`: One valid Document.id per line.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1GcsSource *gcsSource;

/** Inline source for the input content for purge. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsRequestInlineSource *inlineSource;

@end


/**
 *  The inline source for the input config for DocumentService.PurgeDocuments
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsRequestInlineSource : GTLRObject

/**
 *  Required. A list of full resource name of documents to purge. In the format
 *  `projects/ * /locations/ * /collections/ * /dataStores/ * /branches/ *
 *  /documents/ *`. Recommended max of 100 items.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *documents;

@end


/**
 *  Response message for DocumentService.PurgeDocuments method. If the long
 *  running operation is successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsResponse : GTLRObject

/**
 *  The total count of documents purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

/**
 *  A sample of document names that will be deleted. Only populated if `force`
 *  is set to false. A max of 100 names will be returned and the names are
 *  chosen at random.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeSample;

@end


/**
 *  Configuration of destination for Purge related errors.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeErrorConfig : GTLRObject

/**
 *  Cloud Storage prefix for purge errors. This must be an empty, existing Cloud
 *  Storage directory. Purge errors are written to sharded files in this
 *  directory, one per line, as a JSON-encoded `google.rpc.Status` message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Request message for IdentityMappingStoreService.PurgeIdentityMappings
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeIdentityMappingsRequest : GTLRObject

/**
 *  Filter matching identity mappings to purge. The eligible field for filtering
 *  is: * `update_time`: in ISO 8601 "zulu" format. * `external_id` Examples: *
 *  Deleting all identity mappings updated in a time range: `update_time >
 *  "2012-04-23T18:25:43.511Z" AND update_time < "2012-04-23T18:30:43.511Z"` *
 *  Deleting all identity mappings for a given external_id: `external_id =
 *  "id1"` * Deleting all identity mappings inside an identity mapping store:
 *  `*` The filtering fields are assumed to have an implicit AND. Should not be
 *  used with source. An error will be thrown, if both are provided.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Actually performs the purge. If `force` is set to false, return the expected
 *  purge count without deleting any identity mappings. This field is only
 *  supported for purge with filter. For input source this field is ignored and
 *  data will be purged regardless of the value of this field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

/** The inline source to purge identity mapping entries from. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeIdentityMappingsRequestInlineSource *inlineSource;

@end


/**
 *  The inline source to purge identity mapping entries from.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeIdentityMappingsRequestInlineSource : GTLRObject

/** A maximum of 10000 entries can be purged at one time */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1IdentityMappingEntry *> *identityMappingEntries;

@end


/**
 *  Metadata related to the progress of the PurgeSuggestionDenyListEntries
 *  operation. This is returned by the google.longrunning.Operation.metadata
 *  field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for CompletionService.PurgeSuggestionDenyListEntries method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesRequest : GTLRObject
@end


/**
 *  Response message for CompletionService.PurgeSuggestionDenyListEntries
 *  method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/**
 *  Number of suggestion deny list entries purged.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

@end


/**
 *  Request message for PurgeUserEvents method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeUserEventsRequest : GTLRObject

/**
 *  Required. The filter string to specify the events to be deleted with a
 *  length limit of 5,000 characters. The eligible fields for filtering are: *
 *  `eventType`: Double quoted UserEvent.event_type string. * `eventTime`: in
 *  ISO 8601 "zulu" format. * `userPseudoId`: Double quoted string. Specifying
 *  this will delete all events associated with a visitor. * `userId`: Double
 *  quoted string. Specifying this will delete all events associated with a
 *  user. Note: This API only supports purging a max range of 30 days. Examples:
 *  * Deleting all events in a time range: `eventTime >
 *  "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` *
 *  Deleting specific eventType in a time range: `eventTime >
 *  "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z" eventType
 *  = "search"` * Deleting all events for a specific visitor in a time range:
 *  `eventTime > "2012-04-23T18:25:43.511Z" eventTime <
 *  "2012-04-23T18:30:43.511Z" userPseudoId = "visitor1024"` * Deleting the past
 *  30 days of events inside a DataStore: `*` The filtering fields are assumed
 *  to have an implicit AND.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The `force` field is currently not supported. Purge user event requests will
 *  permanently delete all purgeable events. Once the development is complete:
 *  If `force` is set to false, the method will return the expected purge count
 *  without deleting any user events. This field will default to false if not
 *  included in the request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

@end


/**
 *  Defines a user inputed query.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Query : GTLRObject

/** Unique Id for the query. */
@property(nonatomic, copy, nullable) NSString *queryId;

/** Plain text. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Record message for RankService.Rank method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankingRecord : GTLRObject

/**
 *  The content of the record. Empty by default. At least one of title or
 *  content should be set otherwise an INVALID_ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The unique ID to represent the record.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The score of this record based on the given query and selected model. The
 *  score will be rounded to 2 decimal places. If the score is close to 0, it
 *  will be rounded to 0.0001 to avoid returning unset.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

/**
 *  The title of the record. Empty by default. At least one of title or content
 *  should be set otherwise an INVALID_ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Request message for RankService.Rank method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankRequest : GTLRObject

/**
 *  If true, the response will contain only record ID and score. By default, it
 *  is false, the response will contain record details.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreRecordDetailsInResponse;

/**
 *  The identifier of the model to use. It is one of: *
 *  `semantic-ranker-512\@latest`: Semantic ranking model with maximum input
 *  token size 512. It is set to `semantic-ranker-512\@latest` by default if
 *  unspecified.
 */
@property(nonatomic, copy, nullable) NSString *model;

/** The query to use. */
@property(nonatomic, copy, nullable) NSString *query;

/** Required. A list of records to rank. At most 200 records to rank. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankingRecord *> *records;

/**
 *  The number of results to return. If this is unset or no bigger than zero,
 *  returns all results.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topN;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankRequest_UserLabels *userLabels;

@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankRequest_UserLabels : GTLRObject
@end


/**
 *  Response message for RankService.Rank method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankResponse : GTLRObject

/** A list of records sorted by descending score. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankingRecord *> *records;

@end


/**
 *  Request message for Recommend method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest : GTLRObject

/**
 *  Filter for restricting recommendation results with a length limit of 5,000
 *  characters. Currently, only filter expressions on the `filter_tags`
 *  attribute is supported. Examples: * `(filter_tags: ANY("Red", "Blue") OR
 *  filter_tags: ANY("Hot", "Cold"))` * `(filter_tags: ANY("Red", "Blue")) AND
 *  NOT (filter_tags: ANY("Green"))` If `attributeFilteringSyntax` is set to
 *  true under the `params` field, then attribute-based expressions are expected
 *  instead of the above described tag-based syntax. Examples: * (language:
 *  ANY("en", "es")) AND NOT (categories: ANY("Movie")) * (available: true) AND
 *  (language: ANY("en", "es")) OR (categories: ANY("Movie")) If your filter
 *  blocks all results, the API returns generic (unfiltered) popular Documents.
 *  If you only want results strictly matching the filters, set
 *  `strictFiltering` to `true` in RecommendRequest.params to receive empty
 *  results instead. Note that the API never returns Documents with
 *  `storageStatus` as `EXPIRED` or `DELETED` regardless of filter choices.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of results to return. Set this property to the number of
 *  recommendation results needed. If zero, the service chooses a reasonable
 *  default. The maximum allowed value is 100. Values above 100 are set to 100.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Additional domain specific parameters for the recommendations. Allowed
 *  values: * `returnDocument`: Boolean. If set to `true`, the associated
 *  Document object is returned in
 *  RecommendResponse.RecommendationResult.document. * `returnScore`: Boolean.
 *  If set to true, the recommendation score corresponding to each returned
 *  Document is set in RecommendResponse.RecommendationResult.metadata. The
 *  given score indicates the probability of a Document conversion given the
 *  user's context and history. * `strictFiltering`: Boolean. True by default.
 *  If set to `false`, the service returns generic (unfiltered) popular
 *  Documents instead of empty if your filter blocks all recommendation results.
 *  * `diversityLevel`: String. Default empty. If set to be non-empty, then it
 *  needs to be one of: * `no-diversity` * `low-diversity` * `medium-diversity`
 *  * `high-diversity` * `auto-diversity` This gives request-level control and
 *  adjusts recommendation results based on Document category. *
 *  `attributeFilteringSyntax`: Boolean. False by default. If set to true, the
 *  `filter` field is interpreted according to the new, attribute-based syntax.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest_Params *params;

/**
 *  Required. Context about the user, what they are looking at and what action
 *  they took to trigger the Recommend request. Note that this user event detail
 *  won't be ingested to userEvent logs. Thus, a separate userEvent write
 *  request is required for event logging. Don't set UserEvent.user_pseudo_id or
 *  UserEvent.user_info.user_id to the same fixed ID for different users. If you
 *  are trying to receive non-personalized recommendations (not recommended;
 *  this can negatively impact model performance), instead set
 *  UserEvent.user_pseudo_id to a random unique ID and leave
 *  UserEvent.user_info.user_id unset.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent *userEvent;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Requirements for
 *  labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest_UserLabels *userLabels;

/**
 *  Use validate only mode for this recommendation query. If set to `true`, a
 *  fake model is used that returns arbitrary Document IDs. Note that the
 *  validate only mode should only be used for testing the API, or if the model
 *  is not ready.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Additional domain specific parameters for the recommendations. Allowed
 *  values: * `returnDocument`: Boolean. If set to `true`, the associated
 *  Document object is returned in
 *  RecommendResponse.RecommendationResult.document. * `returnScore`: Boolean.
 *  If set to true, the recommendation score corresponding to each returned
 *  Document is set in RecommendResponse.RecommendationResult.metadata. The
 *  given score indicates the probability of a Document conversion given the
 *  user's context and history. * `strictFiltering`: Boolean. True by default.
 *  If set to `false`, the service returns generic (unfiltered) popular
 *  Documents instead of empty if your filter blocks all recommendation results.
 *  * `diversityLevel`: String. Default empty. If set to be non-empty, then it
 *  needs to be one of: * `no-diversity` * `low-diversity` * `medium-diversity`
 *  * `high-diversity` * `auto-diversity` This gives request-level control and
 *  adjusts recommendation results based on Document category. *
 *  `attributeFilteringSyntax`: Boolean. False by default. If set to true, the
 *  `filter` field is interpreted according to the new, attribute-based syntax.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest_Params : GTLRObject
@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Requirements for
 *  labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest_UserLabels : GTLRObject
@end


/**
 *  Response message for Recommend method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponse : GTLRObject

/**
 *  A unique attribution token. This should be included in the UserEvent logs
 *  resulting from this recommendation, which enables accurate attribution of
 *  recommendation model performance.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  IDs of documents in the request that were missing from the default Branch
 *  associated with the requested ServingConfig.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *missingIds;

/**
 *  A list of recommended Documents. The order represents the ranking (from the
 *  most relevant Document to the least).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult *> *results;

/**
 *  True if RecommendRequest.validate_only was set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  RecommendationResult represents a generic recommendation result with
 *  associated metadata.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult : GTLRObject

/** Set if `returnDocument` is set to true in RecommendRequest.params. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *document;

/**
 *  Resource ID of the recommended Document.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Additional Document metadata or annotations. Possible values: * `score`:
 *  Recommendation score in double value. Is set if `returnScore` is set to true
 *  in RecommendRequest.params.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult_Metadata *metadata;

@end


/**
 *  Additional Document metadata or annotations. Possible values: * `score`:
 *  Recommendation score in double value. Is set if `returnScore` is set to true
 *  in RecommendRequest.params.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponseRecommendationResult_Metadata : GTLRObject
@end


/**
 *  Request message for SiteSearchEngineService.RecrawlUris method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecrawlUrisRequest : GTLRObject

/** Optional. Credential id to use for crawling. */
@property(nonatomic, copy, nullable) NSString *siteCredential;

/**
 *  Required. List of URIs to crawl. At most 10K URIs are supported, otherwise
 *  an INVALID_ARGUMENT error is thrown. Each URI should match at least one
 *  TargetSite in `site_search_engine`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uris;

@end


/**
 *  Defines a reply message to user.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Reply : GTLRObject

/** Summary based on search results. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary *summary;

@end


/**
 *  Safety rating corresponding to the generated content.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating : GTLRObject

/**
 *  Output only. Indicates whether the content was filtered out because of this
 *  rating.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *blocked;

/**
 *  Output only. Harm category.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryCivicIntegrity
 *        The harm category is civic integrity. (Value:
 *        "HARM_CATEGORY_CIVIC_INTEGRITY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryDangerousContent
 *        The harm category is dangerous content. (Value:
 *        "HARM_CATEGORY_DANGEROUS_CONTENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryHarassment
 *        The harm category is harassment. (Value: "HARM_CATEGORY_HARASSMENT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryHateSpeech
 *        The harm category is hate speech. (Value: "HARM_CATEGORY_HATE_SPEECH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategorySexuallyExplicit
 *        The harm category is sexually explicit content. (Value:
 *        "HARM_CATEGORY_SEXUALLY_EXPLICIT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Category_HarmCategoryUnspecified
 *        The harm category is unspecified. (Value: "HARM_CATEGORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *category;

/**
 *  Output only. Harm probability levels in the content.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_HarmProbabilityUnspecified
 *        Harm probability unspecified. (Value: "HARM_PROBABILITY_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_High
 *        High level of harm. (Value: "HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_Low
 *        Low level of harm. (Value: "LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_Medium
 *        Medium level of harm. (Value: "MEDIUM")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Probability_Negligible
 *        Negligible level of harm. (Value: "NEGLIGIBLE")
 */
@property(nonatomic, copy, nullable) NSString *probability;

/**
 *  Output only. Harm probability score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *probabilityScore;

/**
 *  Output only. Harm severity levels in the content.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityHigh
 *        High level of harm severity. (Value: "HARM_SEVERITY_HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityLow
 *        Low level of harm severity. (Value: "HARM_SEVERITY_LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityMedium
 *        Medium level of harm severity. (Value: "HARM_SEVERITY_MEDIUM")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityNegligible
 *        Negligible level of harm severity. (Value: "HARM_SEVERITY_NEGLIGIBLE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SafetyRating_Severity_HarmSeverityUnspecified
 *        Harm severity unspecified. (Value: "HARM_SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Output only. Harm severity score.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *severityScore;

@end


/**
 *  Defines the structure and layout of a type of document data.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema : GTLRObject

/** The JSON representation of the schema. */
@property(nonatomic, copy, nullable) NSString *jsonSchema;

/**
 *  Immutable. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The structured representation of the schema. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema_StructSchema *structSchema;

@end


/**
 *  The structured representation of the schema.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema_StructSchema : GTLRObject
@end


/**
 *  Detailed search information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchInfo : GTLRObject

/**
 *  An integer that specifies the current offset for pagination (the 0-indexed
 *  starting location, amongst the products deemed by the API as relevant). See
 *  SearchRequest.offset for definition. If this field is negative, an
 *  `INVALID_ARGUMENT` is returned. This can only be set for `search` events.
 *  Other event types should not set this field. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The order in which products are returned, if applicable. See
 *  SearchRequest.order_by for definition and syntax. The value must be a UTF-8
 *  encoded string with a length limit of 1,000 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned. This can only be set for `search`
 *  events. Other event types should not set this field. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The user's search query. See SearchRequest.query for definition. The value
 *  must be a UTF-8 encoded string with a length limit of 5,000 characters.
 *  Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of
 *  search_query or PageInfo.page_category is required for `search` events.
 *  Other event types should not set this field. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *searchQuery;

@end


/**
 *  Promotion proto includes uri and other helping information to display the
 *  promotion.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchLinkPromotion : GTLRObject

/**
 *  Optional. The Promotion description. Maximum length: 200 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. The enabled promotion will be returned for any serving configs
 *  associated with the parent of the control this promotion is attached to.
 *  This flag is used for basic site search only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/** Optional. The promotion thumbnail image url. */
@property(nonatomic, copy, nullable) NSString *imageUri;

/** Required. The title of the promotion. Maximum length: 160 characters. */
@property(nonatomic, copy, nullable) NSString *title;

/** Required. The URL for the page the user wants to promote. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Request message for SearchService.Search method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest : GTLRObject

/**
 *  Boost specification to boost certain documents. For more information on
 *  boosting, see
 *  [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpec *boostSpec;

/**
 *  The branch resource name, such as `projects/ *
 *  /locations/global/collections/default_collection/dataStores/default_data_store/branches/0`.
 *  Use `default_branch` as the branch ID or leave this field empty, to search
 *  documents under the default branch.
 */
@property(nonatomic, copy, nullable) NSString *branch;

/**
 *  The default filter that is applied when a user performs a search without
 *  checking any filters on the search page. The filter applied to every search
 *  request when quality improvement such as query expansion is needed. In the
 *  case a query does not have a sufficient amount of results this filter will
 *  be used to determine whether or not to enable the query expansion flow. The
 *  original filter will still be used for the query expanded search. This field
 *  is strongly recommended to achieve high search quality. For more information
 *  about filter syntax, see SearchRequest.filter.
 */
@property(nonatomic, copy, nullable) NSString *canonicalFilter;

/** A specification for configuring the behavior of content search. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec *contentSearchSpec;

/**
 *  Specifications that define the specific [DataStore]s to be searched, along
 *  with configurations for those data stores. This is only considered for
 *  Engines with multiple data stores. For engines with a single data store, the
 *  specs directly under SearchRequest should be used.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec *> *dataStoreSpecs;

/**
 *  Facet specifications for faceted search. If empty, no facets are returned. A
 *  maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
 *  returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestFacetSpec *> *facetSpecs;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the documents being filtered. Filter
 *  expression is case-sensitive. If this field is unrecognizable, an
 *  `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by
 *  mapping the LHS filter key to a key property defined in the Vertex AI Search
 *  backend -- this mapping is defined by the customer in their schema. For
 *  example a media customer might have a field 'name' in their schema. In this
 *  case the filter would look like this: filter --> name:'ANY("king kong")' For
 *  more information about filtering including syntax and filter operators, see
 *  [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Raw image query. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestImageQuery *imageQuery;

/**
 *  The BCP-47 language code, such as "en-US" or "sr-Latn". For more
 *  information, see [Standard
 *  fields](https://cloud.google.com/apis/design/standard_fields). This field
 *  helps to better interpret the query. If a value isn't specified, the query
 *  language code is automatically detected, which may not be accurate.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  A 0-indexed integer that specifies the current offset (that is, starting
 *  result location, amongst the Documents deemed by the API as relevant) in
 *  search results. This field is only considered if page_token is unset. If
 *  this field is negative, an `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The maximum number of results to return for OneBox. This applies to each
 *  OneBox type individually. Default number is 10.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *oneBoxPageSize;

/**
 *  The order in which documents are returned. Documents can be ordered by a
 *  field in an Document object. Leave it unset if ordered by relevance.
 *  `order_by` expression is case-sensitive. For more information on ordering
 *  the website search results, see [Order web search
 *  results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results).
 *  For more information on ordering the healthcare search results, see [Order
 *  healthcare search
 *  results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results).
 *  If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of Documents to return. The maximum allowed value depends on
 *  the data type. Values above the maximum value are coerced to the maximum
 *  value. * Websites with basic indexing: Default `10`, Maximum `25`. *
 *  Websites with advanced indexing: Default `25`, Maximum `50`. * Other:
 *  Default `50`, Maximum `100`. If this field is negative, an
 *  `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A page token received from a previous SearchService.Search call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to SearchService.Search must match the call that provided the page
 *  token. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Additional search parameters. For public website search only, supported
 *  values are: * `user_country_code`: string. Default empty. If set to
 *  non-empty, results are restricted or boosted based on the location provided.
 *  For example, `user_country_code: "au"` For available codes see [Country
 *  Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
 *  * `search_type`: double. Default empty. Enables non-webpage searching
 *  depending on the value. The only valid non-default value is 1, which enables
 *  image searching. For example, `search_type: 1`
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_Params *params;

/** Raw search query. */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  The query expansion specification that specifies the conditions under which
 *  query expansion occurs.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec *queryExpansionSpec;

/** Optional. The specification for returning the relevance score. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestRelevanceScoreSpec *relevanceScoreSpec;

/**
 *  The relevance threshold of the search results. Default to Google defined
 *  threshold, leveraging a balance of precision and recall to deliver both
 *  highly accurate results and comprehensive coverage of relevant information.
 *  This feature is not supported for healthcare search.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_High
 *        High relevance threshold. (Value: "HIGH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_Low
 *        Low relevance threshold. (Value: "LOW")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_Lowest
 *        Lowest relevance threshold. (Value: "LOWEST")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_Medium
 *        Medium relevance threshold. (Value: "MEDIUM")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_RelevanceThreshold_RelevanceThresholdUnspecified
 *        Default value. In this case, server behavior defaults to Google
 *        defined threshold. (Value: "RELEVANCE_THRESHOLD_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *relevanceThreshold;

/**
 *  Whether to turn on safe search. This is only supported for website search.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *safeSearch;

/**
 *  Search as you type configuration. Only supported for the
 *  IndustryVertical.MEDIA vertical.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec *searchAsYouTypeSpec;

/**
 *  The session resource name. Optional. Session allows users to do multi-turn
 *  /search API calls or coordination between /search API calls and /answer API
 *  calls. Example #1 (multi-turn /search API calls): 1. Call /search API with
 *  the auto-session mode (see below). 2. Call /search API with the session ID
 *  generated in the first call. Here, the previous search query gets considered
 *  in query standing. I.e., if the first query is "How did Alphabet do in
 *  2022?" and the current query is "How about 2023?", the current query will be
 *  interpreted as "How did Alphabet do in 2023?". Example #2 (coordination
 *  between /search API calls and /answer API calls): 1. Call /search API with
 *  the auto-session mode (see below). 2. Call /answer API with the session ID
 *  generated in the first call. Here, the answer generation happens in the
 *  context of the search results from the first search call. Auto-session mode:
 *  when `projects/.../sessions/-` is used, a new session gets automatically
 *  created. Otherwise, users can use the create-session API to create a session
 *  manually. Multi-turn Search feature is currently at private GA stage. Please
 *  use v1alpha or v1beta version instead before we launch this feature to
 *  public GA. Or ask for allowlisting through Google Support team.
 */
@property(nonatomic, copy, nullable) NSString *session;

/** Session specification. Can be used only when `session` is set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSessionSpec *sessionSpec;

/**
 *  The spell correction specification that specifies the mode under which spell
 *  correction takes effect.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec *spellCorrectionSpec;

/**
 *  Information about the end user. Highly recommended for analytics and
 *  personalization. UserInfo.user_agent is used to deduce `device_type` for
 *  analytics.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserInfo *userInfo;

/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_UserLabels *userLabels;

/**
 *  A unique identifier for tracking visitors. For example, this could be
 *  implemented with an HTTP cookie, which should be able to uniquely identify a
 *  visitor on a single device. This unique identifier should not change if the
 *  visitor logs in or out of the website. This field should NOT have a fixed
 *  value such as `unknown_visitor`. This should be the same identifier as
 *  UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field
 *  must be a UTF-8 encoded string with a length limit of 128 characters.
 *  Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Additional search parameters. For public website search only, supported
 *  values are: * `user_country_code`: string. Default empty. If set to
 *  non-empty, results are restricted or boosted based on the location provided.
 *  For example, `user_country_code: "au"` For available codes see [Country
 *  Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes)
 *  * `search_type`: double. Default empty. Enables non-webpage searching
 *  depending on the value. The only valid non-default value is 1, which enables
 *  image searching. For example, `search_type: 1`
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_Params : GTLRObject
@end


/**
 *  The user labels applied to a resource must meet the following requirements:
 *  * Each resource can have multiple labels, up to a maximum of 64. * Each
 *  label must be a key-value pair. * Keys have a minimum length of 1 character
 *  and a maximum length of 63 characters and cannot be empty. Values can be
 *  empty and have a maximum length of 63 characters. * Keys and values can
 *  contain only lowercase letters, numeric characters, underscores, and dashes.
 *  All characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest_UserLabels : GTLRObject
@end


/**
 *  Boost specification to boost certain documents.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpec : GTLRObject

/**
 *  Condition boost specifications. If a document matches multiple conditions in
 *  the specifictions, boost scores from these specifications are all applied
 *  and combined in a non-linear way. Maximum number of specifications is 20.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpec *> *conditionBoostSpecs;

@end


/**
 *  Boost applies to documents which match a condition.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpec : GTLRObject

/**
 *  Strength of the condition boost, which should be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0. Setting to 1.0 gives the document a big
 *  promotion. However, it does not necessarily mean that the boosted document
 *  will be the top result at all times, nor that other documents will be
 *  excluded. Results could still be shown even when none of them matches the
 *  condition. And results that are significantly more relevant to the search
 *  query can still trump your heavily favored but irrelevant documents. Setting
 *  to -1.0 gives the document a big demotion. However, results that are deeply
 *  relevant might still be shown. The document will have an upstream battle to
 *  get a fairly high ranking, but it is not blocked out completely. Setting to
 *  0.0 means no boost applied. The boosting condition is ignored. Only one of
 *  the (condition, boost) combination or the boost_control_spec below are set.
 *  If both are set then the global boost is ignored and the more fine-grained
 *  boost_control_spec is applied.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost;

/**
 *  Complex specification for custom ranking based on customer defined attribute
 *  value.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec *boostControlSpec;

/**
 *  An expression which specifies a boost condition. The syntax and supported
 *  fields are the same as a filter expression. See SearchRequest.filter for
 *  detail syntax and limitations. Examples: * To boost documents with document
 *  ID "doc_1" or "doc_2", and color "Red" or "Blue": `(document_id:
 *  ANY("doc_1", "doc_2")) AND (color: ANY("Red", "Blue"))`
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  Specification for custom ranking based on customer specified attribute
 *  value. It provides more controls for customized ranking than the simple
 *  (condition, boost) combination above.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec : GTLRObject

/**
 *  The attribute type to be used to determine the boost amount. The attribute
 *  value can be derived from the field value of the specified field_name. In
 *  the case of numerical it is straightforward i.e. attribute_value =
 *  numerical_field_value. In the case of freshness however, attribute_value =
 *  (time.now() - datetime_field_value).
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_AttributeTypeUnspecified
 *        Unspecified AttributeType. (Value: "ATTRIBUTE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Freshness
 *        For the freshness use case the attribute value will be the duration
 *        between the current time and the date in the datetime field specified.
 *        The value must be formatted as an XSD `dayTimeDuration` value (a
 *        restricted subset of an ISO 8601 duration value). The pattern for this
 *        is: `nDnM]`. For example, `5D`, `3DT12H30M`, `T24H`. (Value:
 *        "FRESHNESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_AttributeType_Numerical
 *        The value of the numerical field will be used to dynamically update
 *        the boost amount. In this case, the attribute_value (the x value) of
 *        the control point will be the actual value of the numerical field for
 *        which the boost_amount is specified. (Value: "NUMERICAL")
 */
@property(nonatomic, copy, nullable) NSString *attributeType;

/**
 *  The control points used to define the curve. The monotonic function (defined
 *  through the interpolation_type above) passes through the control points
 *  listed here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint *> *controlPoints;

/**
 *  The name of the field whose value will be used to determine the boost
 *  amount.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  The interpolation type to be applied to connect the control points listed
 *  below.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_InterpolationTypeUnspecified
 *        Interpolation type is unspecified. In this case, it defaults to
 *        Linear. (Value: "INTERPOLATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpec_InterpolationType_Linear
 *        Piecewise linear interpolation will be applied. (Value: "LINEAR")
 */
@property(nonatomic, copy, nullable) NSString *interpolationType;

@end


/**
 *  The control points used to define the curve. The curve defined through these
 *  control points can only be monotonically increasing or decreasing(constant
 *  values are acceptable).
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint : GTLRObject

/**
 *  Can be one of: 1. The numerical field value. 2. The duration spec for
 *  freshness: The value must be formatted as an XSD `dayTimeDuration` value (a
 *  restricted subset of an ISO 8601 duration value). The pattern for this is:
 *  `nDnM]`.
 */
@property(nonatomic, copy, nullable) NSString *attributeValue;

/**
 *  The value between -1 to 1 by which to boost the score if the attribute_value
 *  evaluates to the value specified above.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boostAmount;

@end


/**
 *  A specification for configuring the behavior of content search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec : GTLRObject

/**
 *  Specifies the chunk spec to be returned from the search response. Only
 *  available if the SearchRequest.ContentSearchSpec.search_result_mode is set
 *  to CHUNKS
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec *chunkSpec;

/**
 *  If there is no extractive_content_spec provided, there will be no extractive
 *  answer in the search response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec *extractiveContentSpec;

/**
 *  Specifies the search result mode. If unspecified, the search result mode
 *  defaults to `DOCUMENTS`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec_SearchResultMode_Chunks
 *        Returns chunks in the search result. Only available if the
 *        DocumentProcessingConfig.chunking_config is specified. (Value:
 *        "CHUNKS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec_SearchResultMode_Documents
 *        Returns documents in the search result. (Value: "DOCUMENTS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec_SearchResultMode_SearchResultModeUnspecified
 *        Default value. (Value: "SEARCH_RESULT_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchResultMode;

/**
 *  If `snippetSpec` is not specified, snippets are not included in the search
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec *snippetSpec;

/**
 *  If `summarySpec` is not specified, summaries are not included in the search
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec *summarySpec;

@end


/**
 *  Specifies the chunk spec to be returned from the search response. Only
 *  available if the SearchRequest.ContentSearchSpec.search_result_mode is set
 *  to CHUNKS
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec : GTLRObject

/**
 *  The number of next chunks to be returned of the current chunk. The maximum
 *  allowed value is 3. If not specified, no next chunks will be returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numNextChunks;

/**
 *  The number of previous chunks to be returned of the current chunk. The
 *  maximum allowed value is 3. If not specified, no previous chunks will be
 *  returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numPreviousChunks;

@end


/**
 *  A specification for configuring the extractive content in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec : GTLRObject

/**
 *  The maximum number of extractive answers returned in each search result. An
 *  extractive answer is a verbatim answer extracted from the original document,
 *  which provides a precise and contextually relevant answer to the search
 *  query. If the number of matching answers is less than the
 *  `max_extractive_answer_count`, return all of the answers. Otherwise, return
 *  the `max_extractive_answer_count`. At most five answers are returned for
 *  each SearchResult.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxExtractiveAnswerCount;

/**
 *  The max number of extractive segments returned in each search result. Only
 *  applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED
 *  or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is
 *  a text segment extracted from the original document that is relevant to the
 *  search query, and, in general, more verbose than an extractive answer. The
 *  segment could then be used as input for LLMs to generate summaries and
 *  answers. If the number of matching segments is less than
 *  `max_extractive_segment_count`, return all of the segments. Otherwise,
 *  return the `max_extractive_segment_count`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxExtractiveSegmentCount;

/**
 *  Return at most `num_next_segments` segments after each selected segments.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numNextSegments;

/**
 *  Specifies whether to also include the adjacent from each selected segments.
 *  Return at most `num_previous_segments` segments before each selected
 *  segments.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numPreviousSegments;

/**
 *  Specifies whether to return the confidence score from the extractive
 *  segments in each search result. This feature is available only for new or
 *  allowlisted data stores. To allowlist your data store, contact your Customer
 *  Engineer. The default value is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnExtractiveSegmentScore;

@end


/**
 *  A specification for configuring snippets in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec : GTLRObject

/**
 *  [DEPRECATED] This field is deprecated. To control snippet return, use
 *  `return_snippet` field. For backwards compatibility, we will return snippet
 *  if max_snippet_count > 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxSnippetCount GTLR_DEPRECATED;

/**
 *  [DEPRECATED] This field is deprecated and will have no affect on the
 *  snippet.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *referenceOnly GTLR_DEPRECATED;

/**
 *  If `true`, then return snippet. If no snippet can be generated, we return
 *  "No snippet is available for this page." A `snippet_status` with `SUCCESS`
 *  or `NO_SNIPPET_AVAILABLE` will also be returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnSnippet;

@end


/**
 *  A specification for configuring a summary returned in a search response.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec : GTLRObject

/**
 *  Specifies whether to filter out adversarial queries. The default value is
 *  `false`. Google employs search-query classification to detect adversarial
 *  queries. No summary is returned if the search query is classified as an
 *  adversarial query. For example, a user might ask a question regarding
 *  negative comments about the company or submit a query designed to generate
 *  unsafe, policy-violating output. If this field is set to `true`, we skip
 *  generating summaries for adversarial queries and return fallback messages
 *  instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreAdversarialQuery;

/**
 *  Optional. Specifies whether to filter out jail-breaking queries. The default
 *  value is `false`. Google employs search-query classification to detect
 *  jail-breaking queries. No summary is returned if the search query is
 *  classified as a jail-breaking query. A user might add instructions to the
 *  query to change the tone, style, language, content of the answer, or ask the
 *  model to act as a different entity, e.g. "Reply in the tone of a competing
 *  company's CEO". If this field is set to `true`, we skip generating summaries
 *  for jail-breaking queries and return fallback messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreJailBreakingQuery;

/**
 *  Specifies whether to filter out queries that have low relevance. The default
 *  value is `false`. If this field is set to `false`, all search results are
 *  used regardless of relevance to generate answers. If set to `true`, only
 *  queries with high relevance search results will generate answers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreLowRelevantContent;

/**
 *  Specifies whether to filter out queries that are not summary-seeking. The
 *  default value is `false`. Google employs search-query classification to
 *  detect summary-seeking queries. No summary is returned if the search query
 *  is classified as a non-summary seeking query. For example, `why is the sky
 *  blue` and `Who is the best soccer player in the world?` are summary-seeking
 *  queries, but `SFO airport` and `world cup 2026` are not. They are most
 *  likely navigational queries. If this field is set to `true`, we skip
 *  generating summaries for non-summary seeking queries and return fallback
 *  messages instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreNonSummarySeekingQuery;

/**
 *  Specifies whether to include citations in the summary. The default value is
 *  `false`. When this field is set to `true`, summaries include in-line
 *  citation numbers. Example summary including citations: BigQuery is Google
 *  Cloud's fully managed and completely serverless enterprise data warehouse
 *  [1]. BigQuery supports all data types, works across clouds, and has built-in
 *  machine learning and business intelligence, all within a unified platform
 *  [2, 3]. The citation numbers refer to the returned search results and are
 *  1-indexed. For example, [1] means that the sentence is attributed to the
 *  first search result. [2, 3] means that the sentence is attributed to both
 *  the second and third search results.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeCitations;

/**
 *  Language code for Summary. Use language tags defined by
 *  [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an
 *  experimental feature.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  If specified, the spec will be used to modify the prompt provided to the
 *  LLM.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec *modelPromptSpec;

/**
 *  If specified, the spec will be used to modify the model specification
 *  provided to the LLM.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec *modelSpec;

/**
 *  The number of top results to generate the summary from. If the number of
 *  results returned is less than `summaryResultCount`, the summary is generated
 *  from all of the results. At most 10 results for documents mode, or 50 for
 *  chunks mode, can be used to generate a summary. The chunks mode is used when
 *  SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *summaryResultCount;

/**
 *  If true, answer will be generated from most relevant chunks from top search
 *  results. This feature will improve summary quality. Note that with this
 *  feature enabled, not all top search results will be referenced and included
 *  in the reference list, so the citation source index only points to the
 *  search results listed in the reference list.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useSemanticChunks;

@end


/**
 *  Specification of the prompt to use with the model.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec : GTLRObject

/**
 *  Text at the beginning of the prompt that instructs the assistant. Examples
 *  are available in the user guide.
 */
@property(nonatomic, copy, nullable) NSString *preamble;

@end


/**
 *  Specification of the model.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec : GTLRObject

/**
 *  The model version used to generate the summary. Supported values are: *
 *  `stable`: string. Default value when no value is specified. Uses a generally
 *  available, fine-tuned model. For more information, see [Answer generation
 *  model versions and
 *  lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
 *  * `preview`: string. (Public preview) Uses a preview model. For more
 *  information, see [Answer generation model versions and
 *  lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  A struct to define data stores to filter on in a search call and
 *  configurations for those data stores. Otherwise, an `INVALID_ARGUMENT` error
 *  is returned.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestDataStoreSpec : GTLRObject

/**
 *  Optional. Boost specification to boost certain documents. For more
 *  information on boosting, see
 *  [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestBoostSpec *boostSpec;

/**
 *  Required. Full resource name of DataStore, such as
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Optional. Filter specification to filter documents in the data store
 *  specified by data_store field. For more information on filtering, see
 *  [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  A facet specification to perform faceted search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestFacetSpec : GTLRObject

/**
 *  Enables dynamic position for this facet. If set to true, the position of
 *  this facet among all facets in the response is determined automatically. If
 *  dynamic facets are enabled, it is ordered together. If set to false, the
 *  position of this facet in the response is the same as in the request, and it
 *  is ranked before the facets with dynamic position enable and all dynamic
 *  facets. For example, you may always want to have rating facet returned in
 *  the response, but it's not necessarily to always display the rating facet at
 *  the top. In that case, you can set enable_dynamic_position to true so that
 *  the position of rating facet in response is determined automatically.
 *  Another example, assuming you have the following facets in the request: *
 *  "rating", enable_dynamic_position = true * "price", enable_dynamic_position
 *  = false * "brands", enable_dynamic_position = false And also you have a
 *  dynamic facets enabled, which generates a facet `gender`. Then the final
 *  order of the facets in the response can be ("price", "brands", "rating",
 *  "gender") or ("price", "brands", "gender", "rating") depends on how API
 *  orders "gender" and "rating" facets. However, notice that "price" and
 *  "brands" are always ranked at first and second position because their
 *  enable_dynamic_position is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDynamicPosition;

/**
 *  List of keys to exclude when faceting. By default, FacetKey.key is not
 *  excluded from the filter unless it is listed in this field. Listing a facet
 *  key in this field allows its values to appear as facet results, even when
 *  they are filtered out of search results. Using this field does not affect
 *  what search results are returned. For example, suppose there are 100
 *  documents with the color facet "Red" and 200 documents with the color facet
 *  "Blue". A query containing the filter "color:ANY("Red")" and having "color"
 *  as FacetKey.key would by default return only "Red" documents in the search
 *  results, and also return "Red" with count 100 as the only color facet.
 *  Although there are also blue documents available, "Blue" would not be shown
 *  as an available facet value. If "color" is listed in "excludedFilterKeys",
 *  then the query returns the facet values "Red" with count 100 and "Blue" with
 *  count 200, because the "color" key is now excluded from the filter. Because
 *  this field doesn't affect search results, the search results are still
 *  correctly filtered to return only "Red" documents. A maximum of 100 values
 *  are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedFilterKeys;

/** Required. The facet key specification. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestFacetSpecFacetKey *facetKey;

/**
 *  Maximum facet values that are returned for this facet. If unspecified,
 *  defaults to 20. The maximum allowed value is 300. Values above 300 are
 *  coerced to 300. For aggregation in healthcare search, when the
 *  [FacetKey.key] is "healthcare_aggregation_key", the limit will be overridden
 *  to 10,000 internally, regardless of the value set here. If this field is
 *  negative, an `INVALID_ARGUMENT` is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *limit;

@end


/**
 *  Specifies how a facet is computed.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestFacetSpecFacetKey : GTLRObject

/**
 *  True to make facet keys case insensitive when getting faceting values with
 *  prefixes or contains; false otherwise.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *caseInsensitive;

/**
 *  Only get facet values that contain the given strings. For example, suppose
 *  "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi >
 *  2022". If set "contains" to "2022", the "category" facet only contains
 *  "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields.
 *  Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *contains;

/**
 *  Set only if values should be bucketed into intervals. Must be set for facets
 *  with numerical values. Must not be set for facet with text values. Maximum
 *  number of intervals is 30.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Interval *> *intervals;

/**
 *  Required. Supported textual and numerical facet keys in Document object,
 *  over which the facet values are computed. Facet key is case-sensitive.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The order in which documents are returned. Allowed values are: * "count
 *  desc", which means order by SearchResponse.Facet.values.count descending. *
 *  "value desc", which means order by SearchResponse.Facet.values.value
 *  descending. Only applies to textual facets. If not set, textual values are
 *  sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order);
 *  numerical intervals are sorted in the order given by
 *  FacetSpec.FacetKey.intervals.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Only get facet values that start with the given string prefix. For example,
 *  suppose "category" has three values "Action > 2022", "Action > 2021" and
 *  "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only
 *  contains "Action > 2022" and "Action > 2021". Only supported on textual
 *  fields. Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *prefixes;

/**
 *  Only get facet for the given restricted values. Only supported on textual
 *  fields. For example, suppose "category" has three values "Action > 2022",
 *  "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action >
 *  2022", the "category" facet only contains "Action > 2022". Only supported on
 *  textual fields. Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedValues;

@end


/**
 *  Specifies the image query input.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestImageQuery : GTLRObject

/**
 *  Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP.
 */
@property(nonatomic, copy, nullable) NSString *imageBytes;

@end


/**
 *  Specification to determine under which conditions query expansion should
 *  occur.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec : GTLRObject

/**
 *  The condition under which query expansion should occur. Default to
 *  Condition.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec_Condition_Auto
 *        Automatic query expansion built by the Search API. (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec_Condition_ConditionUnspecified
 *        Unspecified query expansion condition. In this case, server behavior
 *        defaults to Condition.DISABLED. (Value: "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestQueryExpansionSpec_Condition_Disabled
 *        Disabled query expansion. Only the exact search query is used, even if
 *        SearchResponse.total_size is zero. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  Whether to pin unexpanded results. If this field is set to true, unexpanded
 *  products are always at the top of the search results, followed by the
 *  expanded results.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pinUnexpandedResults;

@end


/**
 *  The specification for returning the document relevance score.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestRelevanceScoreSpec : GTLRObject

/**
 *  Optional. Whether to return the relevance score for search results. The
 *  higher the score, the more relevant the document is to the query.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnRelevanceScore;

@end


/**
 *  Specification for search as you type in search requests.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec : GTLRObject

/**
 *  The condition under which search as you type should occur. Default to
 *  Condition.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_Auto
 *        Automatic switching between search-as-you-type and standard search
 *        modes, ideal for single-API implementations (e.g., debouncing).
 *        (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_ConditionUnspecified
 *        Server behavior defaults to Condition.DISABLED. (Value:
 *        "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_Disabled
 *        Disables Search As You Type. (Value: "DISABLED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSearchAsYouTypeSpec_Condition_Enabled
 *        Enables Search As You Type. (Value: "ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  Session specification. Multi-turn Search feature is currently at private GA
 *  stage. Please use v1alpha or v1beta version instead before we launch this
 *  feature to public GA. Or ask for allowlisting through Google Support team.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSessionSpec : GTLRObject

/**
 *  If set, the search result gets stored to the "turn" specified by this query
 *  ID. Example: Let's say the session looks like this: session { name:
 *  ".../sessions/xxx" turns { query { text: "What is foo?" query_id:
 *  ".../questions/yyy" } answer: "Foo is ..." } turns { query { text: "How
 *  about bar then?" query_id: ".../questions/zzz" } } } The user can call
 *  /search API with a request like this: session: ".../sessions/xxx"
 *  session_spec { query_id: ".../questions/zzz" } Then, the API stores the
 *  search result, associated with the last turn. The stored search result can
 *  be used by a subsequent /answer API call (with the session ID and the query
 *  ID specified). Also, it is possible to call /search and /answer in parallel
 *  with the same session ID & query ID.
 */
@property(nonatomic, copy, nullable) NSString *queryId;

/**
 *  The number of top search results to persist. The persisted search results
 *  can be used for the subsequent /answer api call. This field is similar to
 *  the `summary_result_count` field in
 *  SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At most 10
 *  results for documents mode, or 50 for chunks mode.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *searchResultPersistenceCount;

@end


/**
 *  The specification for query spell correction.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec : GTLRObject

/**
 *  The mode under which spell correction replaces the original search query.
 *  Defaults to Mode.AUTO.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec_Mode_Auto
 *        Automatic spell correction built by the Search API. Search will be
 *        based on the corrected query if found. (Value: "AUTO")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec_Mode_ModeUnspecified
 *        Unspecified spell correction mode. In this case, server behavior
 *        defaults to Mode.AUTO. (Value: "MODE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestSpellCorrectionSpec_Mode_SuggestionOnly
 *        Search API tries to find a spelling suggestion. If a suggestion is
 *        found, it is put in the SearchResponse.corrected_query. The spelling
 *        suggestion won't be used as the search query. (Value:
 *        "SUGGESTION_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Response message for SearchService.Search method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponse : GTLRObject

/**
 *  A unique search token. This should be included in the UserEvent logs
 *  resulting from this search, which enables accurate attribution of search
 *  model performance. This also helps to identify a request during the customer
 *  support scenarios.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  Contains the spell corrected query, if found. If the spell correction type
 *  is AUTOMATIC, then the search results are based on corrected_query.
 *  Otherwise the original query is used for search.
 */
@property(nonatomic, copy, nullable) NSString *correctedQuery;

/** Results of facets requested by user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseFacet *> *facets;

/**
 *  A token that can be sent as SearchRequest.page_token to retrieve the next
 *  page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Query expansion information for the returned results. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseQueryExpansionInfo *queryExpansionInfo;

/**
 *  The URI of a customer-defined redirect page. If redirect action is
 *  triggered, no search is performed, and only redirect_uri and
 *  attribution_token are set in the response.
 */
@property(nonatomic, copy, nullable) NSString *redirectUri;

/** A list of matched documents. The order represents the ranking. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSearchResult *> *results;

/** Promotions for site search. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchLinkPromotion *> *searchLinkPromotions;

/**
 *  Session information. Only set if SearchRequest.session is provided. See its
 *  description for more details.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSessionInfo *sessionInfo;

/**
 *  A summary as part of the search results. This field is only returned if
 *  SearchRequest.ContentSearchSpec.summary_spec is set.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary *summary;

/**
 *  The estimated total count of matched items irrespective of pagination. The
 *  count of results returned by pagination may be less than the total_size that
 *  matches.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  A facet result.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseFacet : GTLRObject

/**
 *  Whether the facet is dynamically generated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dynamicFacet;

/**
 *  The key for this facet. For example, `"colors"` or `"price"`. It matches
 *  SearchRequest.FacetSpec.FacetKey.key.
 */
@property(nonatomic, copy, nullable) NSString *key;

/** The facet values for this field. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseFacetFacetValue *> *values;

@end


/**
 *  A facet value which contains value names and their count.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseFacetFacetValue : GTLRObject

/**
 *  Number of items that have this facet value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  Interval value for a facet, such as 10, 20) for facet "price". It matches
 *  [SearchRequest.FacetSpec.FacetKey.intervals.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Interval *interval;

/** Text value of a facet, such as "Black" for facet "colors". */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Information describing query expansion including whether expansion has
 *  occurred.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseQueryExpansionInfo : GTLRObject

/**
 *  Bool describing whether query expansion has occurred.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expandedQuery;

/**
 *  Number of pinned results. This field will only be set when expansion happens
 *  and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pinnedResultCount;

@end


/**
 *  Represents the search results.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSearchResult : GTLRObject

/**
 *  The chunk data in the search response if the
 *  SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Chunk *chunk;

/**
 *  The document data snippet in the search response. Only fields that are
 *  marked as `retrievable` are populated.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *document;

/**
 *  Document.id of the searched Document.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Output only. Google provided available scores. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSearchResult_ModelScores *modelScores;

@end


/**
 *  Output only. Google provided available scores.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DoubleList. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSearchResult_ModelScores : GTLRObject
@end


/**
 *  Information about the session.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSessionInfo : GTLRObject

/**
 *  Name of the session. If the auto-session mode is used (when
 *  SearchRequest.session ends with "-"), this field holds the newly generated
 *  session name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Query ID that corresponds to this search API call. One session can have
 *  multiple turns, each with a unique query ID. By specifying the session name
 *  and this query ID in the Answer API call, the answer generation happens in
 *  the context of the search results from this search call.
 */
@property(nonatomic, copy, nullable) NSString *queryId;

@end


/**
 *  Summary of the top N search results specified by the summary spec.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummary : GTLRObject

/**
 *  A collection of Safety Attribute categories and their associated confidence
 *  scores.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummarySafetyAttributes *safetyAttributes;

/**
 *  Additional summary-skipped reasons. This provides the reason for ignored
 *  cases. If nothing is skipped, this field is not set.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *summarySkippedReasons;

/** The summary content. */
@property(nonatomic, copy, nullable) NSString *summaryText;

/** Summary with metadata information. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummarySummaryWithMetadata *summaryWithMetadata;

@end


/**
 *  Citation info for a segment.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitation : GTLRObject

/**
 *  End of the attributed segment, exclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endIndex;

/** Citation sources for the attributed segment. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationSource *> *sources;

/**
 *  Index indicates the start of the segment, measured in bytes/unicode.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startIndex;

@end


/**
 *  Citation metadata.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationMetadata : GTLRObject

/** Citations for segments. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitation *> *citations;

@end


/**
 *  Citation source.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationSource : GTLRObject

/**
 *  Document reference index from SummaryWithMetadata.references. It is
 *  0-indexed and the value will be zero if the reference_index is not set
 *  explicitly.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *referenceIndex;

@end


/**
 *  Document reference.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryReference : GTLRObject

/** List of cited chunk contents derived from document content. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryReferenceChunkContent *> *chunkContents;

/**
 *  Required. Document.name of the document. Full resource name of the
 *  referenced document, in the format `projects/ * /locations/ * /collections/
 *  * /dataStores/ * /branches/ * /documents/ *`.
 */
@property(nonatomic, copy, nullable) NSString *document;

/** Title of the document. */
@property(nonatomic, copy, nullable) NSString *title;

/** Cloud Storage or HTTP uri for the document. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Chunk content.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryReferenceChunkContent : GTLRObject

/** Chunk textual content. */
@property(nonatomic, copy, nullable) NSString *content;

/** Page identifier. */
@property(nonatomic, copy, nullable) NSString *pageIdentifier;

@end


/**
 *  Safety Attribute categories and their associated confidence scores.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummarySafetyAttributes : GTLRObject

/**
 *  The display names of Safety Attribute categories associated with the
 *  generated content. Order matches the Scores.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

/**
 *  The confidence scores of the each category, higher value means higher
 *  confidence. Order matches the Categories.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *scores;

@end


/**
 *  Summary with metadata information.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummarySummaryWithMetadata : GTLRObject

/** Citation metadata for given summary. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryCitationMetadata *citationMetadata;

/** Document References. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponseSummaryReference *> *references;

/** Summary text with no citation information. */
@property(nonatomic, copy, nullable) NSString *summary;

@end


/**
 *  Configures metadata that is used to generate serving time results (e.g.
 *  search results or recommendation predictions). The ServingConfig is passed
 *  in the search and predict request and generates results.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig : GTLRObject

/**
 *  Boost controls to use in serving path. All triggered boost controls will be
 *  applied. Boost controls must be in the same data store as the serving
 *  config. Maximum of 20 boost controls.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *boostControlIds;

/** Output only. ServingConfig created timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The human readable serving config display name. Used in Discovery
 *  UI. This field must be a UTF-8 encoded string with a length limit of 128
 *  characters. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Condition do not associate specifications. If multiple do not associate
 *  conditions match, all matching do not associate controls in the list will
 *  execute. Order does not matter. Maximum number of specifications is 100. Can
 *  only be set if SolutionType is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dissociateControlIds;

/**
 *  How much diversity to use in recommendation model results e.g.
 *  `medium-diversity` or `high-diversity`. Currently supported values: *
 *  `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` *
 *  `auto-diversity` If not specified, we choose default based on recommendation
 *  model type. Default value: `no-diversity`. Can only be set if SolutionType
 *  is SOLUTION_TYPE_RECOMMENDATION.
 */
@property(nonatomic, copy, nullable) NSString *diversityLevel;

/**
 *  Filter controls to use in serving path. All triggered filter controls will
 *  be applied. Filter controls must be in the same data store as the serving
 *  config. Maximum of 20 filter controls.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filterControlIds;

/** The GenericConfig of the serving configuration. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfigGenericConfig *genericConfig;

/**
 *  Condition ignore specifications. If multiple ignore conditions match, all
 *  matching ignore controls in the list will execute. Order does not matter.
 *  Maximum number of specifications is 100.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ignoreControlIds;

/** The MediaConfig of the serving configuration. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfigMediaConfig *mediaConfig;

/**
 *  The id of the model to use at serving time. Currently only
 *  RecommendationModels are supported. Can be changed but only to a compatible
 *  model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required
 *  when SolutionType is SOLUTION_TYPE_RECOMMENDATION.
 */
@property(nonatomic, copy, nullable) NSString *modelId;

/**
 *  Immutable. Fully qualified name
 *  `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Condition oneway synonyms specifications. If multiple oneway synonyms
 *  conditions match, all matching oneway synonyms controls in the list will
 *  execute. Maximum number of specifications is 100. Can only be set if
 *  SolutionType is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *onewaySynonymsControlIds;

/**
 *  Condition promote specifications. Maximum number of specifications is 100.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *promoteControlIds;

/**
 *  The ranking expression controls the customized ranking on retrieval
 *  documents. To leverage this, document embedding is required. The ranking
 *  expression setting in ServingConfig applies to all search requests served by
 *  the serving config. However, if `SearchRequest.ranking_expression` is
 *  specified, it overrides the ServingConfig ranking expression. The ranking
 *  expression is a single function or multiple functions that are joined by
 *  "+". * ranking_expression = function, { " + ", function }; Supported
 *  functions: * double * relevance_score * double *
 *  dotProduct(embedding_field_path) Function variables: * `relevance_score`:
 *  pre-defined keywords, used for measure relevance between query and document.
 *  * `embedding_field_path`: the document embedding field used with query
 *  embedding vector. * `dotProduct`: embedding function between
 *  embedding_field_path and query embedding vector. Example ranking expression:
 *  If document has an embedding field doc_embedding, the ranking expression
 *  could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
 */
@property(nonatomic, copy, nullable) NSString *rankingExpression;

/**
 *  IDs of the redirect controls. Only the first triggered redirect action is
 *  applied, even if multiple apply. Maximum number of specifications is 100.
 *  Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *redirectControlIds;

/**
 *  Condition replacement specifications. Applied according to the order in the
 *  list. A previously replaced term can not be re-replaced. Maximum number of
 *  specifications is 100. Can only be set if SolutionType is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *replacementControlIds;

/**
 *  Required. Immutable. Specifies the solution type that a serving config can
 *  be associated with.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeChat
 *        Used for use cases related to the Generative AI agent. (Value:
 *        "SOLUTION_TYPE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeGenerativeChat
 *        Used for use cases related to the Generative Chat agent. It's used for
 *        Generative chat engine only, the associated data stores must enrolled
 *        with `SOLUTION_TYPE_CHAT` solution. (Value:
 *        "SOLUTION_TYPE_GENERATIVE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeRecommendation
 *        Used for Recommendations AI. (Value: "SOLUTION_TYPE_RECOMMENDATION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeSearch
 *        Used for Discovery Search. (Value: "SOLUTION_TYPE_SEARCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfig_SolutionType_SolutionTypeUnspecified
 *        Default value. (Value: "SOLUTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *solutionType;

/**
 *  Condition synonyms specifications. If multiple synonyms conditions match,
 *  all matching synonyms controls in the list will execute. Maximum number of
 *  specifications is 100. Can only be set if SolutionType is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonymsControlIds;

/** Output only. ServingConfig updated timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Specifies the configurations needed for Generic Discovery.Currently we
 *  support: * `content_search_spec`: configuration for generic content search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfigGenericConfig : GTLRObject

/**
 *  Specifies the expected behavior of content search. Only valid for
 *  content-search enabled data store.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec *contentSearchSpec;

@end


/**
 *  Specifies the configurations needed for Media Discovery. Currently we
 *  support: * `demote_content_watched`: Threshold for watched content demotion.
 *  Customers can specify if using watched content demotion or use viewed detail
 *  page. Using the content watched demotion, customers need to specify the
 *  watched minutes or percentage exceeds the threshold, the content will be
 *  demoted in the recommendation result. * `promote_fresh_content`: cutoff days
 *  for fresh content promotion. Customers can specify if using content
 *  freshness promotion. If the content was published within the cutoff days,
 *  the content will be promoted in the recommendation result. Can only be set
 *  if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ServingConfigMediaConfig : GTLRObject

/**
 *  Specifies the content freshness used for recommendation result. Contents
 *  will be demoted if contents were published for more than content freshness
 *  cutoff days.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contentFreshnessCutoffDays;

/**
 *  Specifies the content watched percentage threshold for demotion. Threshold
 *  value must be between [0, 1.0] inclusive.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contentWatchedPercentageThreshold;

/**
 *  Specifies the content watched minutes threshold for demotion.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contentWatchedSecondsThreshold;

/**
 *  Optional. Specifies the number of days to look back for demoting watched
 *  content. If set to zero or unset, defaults to the maximum of 365 days.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *demoteContentWatchedPastDays;

/**
 *  Specifies the event type used for demoting recommendation result. Currently
 *  supported values: * `view-item`: Item viewed. * `media-play`: Start/resume
 *  watching a video, playing a song, etc. * `media-complete`: Finished or
 *  stopped midway through a video, song, etc. If unset, watch history demotion
 *  will not be applied. Content freshness demotion will still be applied.
 */
@property(nonatomic, copy, nullable) NSString *demotionEventType;

@end


/**
 *  External session proto definition.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session : GTLRObject

/**
 *  Optional. The display name of the session. This field is used to identify
 *  the session in the UI. By default, the display name is the first turn query
 *  text in the session.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The time the session finished. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Optional. Whether the session is pinned, pinned session will be displayed on
 *  the top of the session list.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPinned;

/**
 *  Immutable. Fully qualified name
 *  `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/
 *  *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The time the session started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The state of the session.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session_State_InProgress
 *        The session is currently open. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session_State_StateUnspecified
 *        State is unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Turns. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SessionTurn *> *turns;

/** A unique identifier for tracking users. */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Represents a turn, including a query from the user and a answer from
 *  service.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SessionTurn : GTLRObject

/**
 *  The resource name of the answer to the user query. Only set if the answer
 *  generation (/answer API call) happened in this turn.
 */
@property(nonatomic, copy, nullable) NSString *answer;

/**
 *  Output only. In ConversationalSearchService.GetSession API, if
 *  GetSessionRequest.include_answer_details is set to true, this field will be
 *  populated when getting answer query session.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer *detailedAnswer;

/** The user query. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Query *query;

@end


/**
 *  Metadata for single-regional CMEKs.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SingleRegionKey : GTLRObject

/**
 *  Required. Single-regional kms key resource name which will be used to
 *  encrypt resources
 *  `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

@end


/**
 *  A sitemap for the SiteSearchEngine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Sitemap : GTLRObject

/** Output only. The sitemap's creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The fully qualified resource name of the sitemap. `projects/ *
 *  /locations/ * /collections/ * /dataStores/ * /siteSearchEngine/sitemaps/ *`
 *  The `sitemap_id` suffix is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  SiteSearchEngine captures DataStore level site search persisting
 *  configurations. It is a singleton value per data store.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteSearchEngine : GTLRObject

/**
 *  The fully qualified resource name of the site search engine. Format:
 *  `projects/ * /locations/ * /dataStores/ * /siteSearchEngine`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Verification information for target sites in advanced site search.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo : GTLRObject

/**
 *  Site verification state indicating the ownership and validity.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_Exempted
 *        Site exempt from verification, e.g., a public website that opens to
 *        all. (Value: "EXEMPTED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_SiteVerificationStateUnspecified
 *        Defaults to VERIFIED. (Value: "SITE_VERIFICATION_STATE_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_Unverified
 *        Site ownership pending verification or verification failed. (Value:
 *        "UNVERIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo_SiteVerificationState_Verified
 *        Site ownership verified. (Value: "VERIFIED")
 */
@property(nonatomic, copy, nullable) NSString *siteVerificationState;

/** Latest site verification time. */
@property(nonatomic, strong, nullable) GTLRDateTime *verifyTime;

@end


/**
 *  The Spanner source for importing data
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SpannerSource : GTLRObject

/** Required. The database ID of the source Spanner table. */
@property(nonatomic, copy, nullable) NSString *databaseId;

/**
 *  Whether to apply data boost on Spanner export. Enabling this option will
 *  incur additional cost. More info can be found
 *  [here](https://cloud.google.com/spanner/docs/databoost/databoost-overview#billing_and_quotas).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDataBoost;

/** Required. The instance ID of the source Spanner table. */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  The project ID that contains the Spanner source. Has a length limit of 128
 *  characters. If not specified, inherits the project ID from the parent
 *  request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Required. The table name of the Spanner database that needs to be imported.
 */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Suggestion deny list entry identifying the phrase to block from suggestions
 *  and the applied operation for the phrase.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry : GTLRObject

/**
 *  Required. Phrase to block from suggestions served. Can be maximum 125
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *blockPhrase;

/**
 *  Required. The match operator to apply for this phrase. Whether to block the
 *  exact phrase, or block any suggestions containing this phrase.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry_MatchOperator_Contains
 *        If the suggestion contains the block_phrase, then block it. (Value:
 *        "CONTAINS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry_MatchOperator_ExactMatch
 *        If the suggestion is an exact match to the block_phrase, then block
 *        it. (Value: "EXACT_MATCH")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SuggestionDenyListEntry_MatchOperator_MatchOperatorUnspecified
 *        Default value. Should not be used (Value:
 *        "MATCH_OPERATOR_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *matchOperator;

@end


/**
 *  A target site for the SiteSearchEngine.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite : GTLRObject

/**
 *  Immutable. If set to false, a uri_pattern is generated to include all pages
 *  whose address contains the provided_uri_pattern. If set to true, an
 *  uri_pattern is generated to try to be an exact match of the
 *  provided_uri_pattern or just the specific page if the provided_uri_pattern
 *  is a specific one. provided_uri_pattern is always normalized to generate the
 *  URI pattern to be used by the search engine.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exactMatch;

/** Output only. Failure reason. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSiteFailureReason *failureReason;

/**
 *  Output only. This is system-generated based on the provided_uri_pattern.
 */
@property(nonatomic, copy, nullable) NSString *generatedUriPattern;

/**
 *  Output only. Indexing status.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Deleting
 *        The previously indexed target site has been marked to be deleted. This
 *        is a transitioning state which will resulted in either: 1. target site
 *        deleted if unindexing is successful; 2. state reverts to SUCCEEDED if
 *        the unindexing fails. (Value: "DELETING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Failed
 *        The target site fails to be indexed. (Value: "FAILED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_IndexingStatusUnspecified
 *        Defaults to SUCCEEDED. (Value: "INDEXING_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Pending
 *        The target site is in the update queue and will be picked up by
 *        indexing pipeline. (Value: "PENDING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_IndexingStatus_Succeeded
 *        The target site has been indexed. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *indexingStatus;

/**
 *  Output only. The fully qualified resource name of the target site.
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
 *  The `target_site_id` is system-generated.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Input only. The user provided URI pattern from which the
 *  `generated_uri_pattern` is generated.
 */
@property(nonatomic, copy, nullable) NSString *providedUriPattern;

/** Output only. Root domain of the provided_uri_pattern. */
@property(nonatomic, copy, nullable) NSString *rootDomainUri;

/** Output only. Site ownership and validity verification status. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteVerificationInfo *siteVerificationInfo;

/**
 *  The type of the target site, e.g., whether the site is to be included or
 *  excluded.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_Type_Exclude
 *        Exclude the target site. (Value: "EXCLUDE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_Type_Include
 *        Include the target site. (Value: "INCLUDE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite_Type_TypeUnspecified
 *        This value is unused. In this case, server behavior defaults to
 *        Type.INCLUDE. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. The target site's last updated time. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Site search indexing failure reasons.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSiteFailureReason : GTLRObject

/** Failed due to insufficient quota. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure *quotaFailure;

@end


/**
 *  Failed due to insufficient quota.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure : GTLRObject

/**
 *  This number is an estimation on how much total quota this project needs to
 *  successfully complete indexing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalRequiredQuota;

@end


/**
 *  Defines text input.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TextInput : GTLRObject

/** Conversation context of the input. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConversationContext *context;

/** Text input. */
@property(nonatomic, copy, nullable) NSString *input;

@end


/**
 *  Metadata related to the progress of the TrainCustomModel operation. This is
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for SearchTuningService.TrainCustomModel method.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelRequest : GTLRObject

/**
 *  The desired location of errors incurred during the data ingestion and
 *  training.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** Cloud Storage training input. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelRequestGcsTrainingInput *gcsTrainingInput;

/** If not provided, a UUID will be generated. */
@property(nonatomic, copy, nullable) NSString *modelId;

/**
 *  Model to be trained. Supported values are: * **search-tuning**: Fine tuning
 *  the search system based on data provided.
 */
@property(nonatomic, copy, nullable) NSString *modelType;

@end


/**
 *  Cloud Storage training data input.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelRequestGcsTrainingInput : GTLRObject

/**
 *  The Cloud Storage corpus data which could be associated in train data. The
 *  data path format is `gs:///`. A newline delimited jsonl/ndjson file. For
 *  search-tuning model, each line should have the _id, title and text. Example:
 *  `{"_id": "doc1", title: "relevant doc", "text": "relevant text"}`
 */
@property(nonatomic, copy, nullable) NSString *corpusDataPath;

/**
 *  The gcs query data which could be associated in train data. The data path
 *  format is `gs:///`. A newline delimited jsonl/ndjson file. For search-tuning
 *  model, each line should have the _id and text. Example: {"_id": "query1",
 *  "text": "example query"}
 */
@property(nonatomic, copy, nullable) NSString *queryDataPath;

/**
 *  Cloud Storage test data. Same format as train_data_path. If not provided, a
 *  random 80/20 train/test split will be performed on train_data_path.
 */
@property(nonatomic, copy, nullable) NSString *testDataPath;

/**
 *  Cloud Storage training data path whose format should be `gs:///`. The file
 *  should be in tsv format. Each line should have the doc_id and query_id and
 *  score (number). For search-tuning model, it should have the query-id
 *  corpus-id score as tsv file header. The score should be a number in `[0,
 *  inf+)`. The larger the number is, the more relevant the pair is. Example: *
 *  `query-id\\tcorpus-id\\tscore` * `query1\\tdoc1\\t1`
 */
@property(nonatomic, copy, nullable) NSString *trainDataPath;

@end


/**
 *  Response of the TrainCustomModelRequest. This message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelResponse : GTLRObject

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportErrorConfig *errorConfig;

/** A sample of errors encountered while processing the data. */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus *> *errorSamples;

/** The metrics of the trained model. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelResponse_Metrics *metrics;

/** Fully qualified name of the CustomTuningModel. */
@property(nonatomic, copy, nullable) NSString *modelName;

/**
 *  The trained model status. Possible values are: * **bad-data**: The training
 *  data quality is bad. * **no-improvement**: Tuning didn't improve
 *  performance. Won't deploy. * **in-progress**: Model training job creation is
 *  in progress. * **training**: Model is actively training. * **evaluating**:
 *  The model is evaluating trained metrics. * **indexing**: The model trained
 *  metrics are indexing. * **ready**: The model is ready for serving.
 */
@property(nonatomic, copy, nullable) NSString *modelStatus;

@end


/**
 *  The metrics of the trained model.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of doubleValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelResponse_Metrics : GTLRObject
@end


/**
 *  A transaction represents the entire purchase transaction.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TransactionInfo : GTLRObject

/**
 *  All the costs associated with the products. These can be manufacturing
 *  costs, shipping expenses not borne by the end user, or any other costs, such
 *  that: * Profit = value - tax - cost
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cost;

/** Required. Currency code. Use three-character ISO-4217 code. */
@property(nonatomic, copy, nullable) NSString *currency;

/**
 *  The total discount(s) value applied to this transaction. This figure should
 *  be excluded from TransactionInfo.value For example, if a user paid
 *  TransactionInfo.value amount, then nominal (pre-discount) value of the
 *  transaction is the sum of TransactionInfo.value and
 *  TransactionInfo.discount_value This means that profit is calculated the same
 *  way, regardless of the discount value, and that
 *  TransactionInfo.discount_value can be larger than TransactionInfo.value: *
 *  Profit = value - tax - cost
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *discountValue;

/**
 *  All the taxes associated with the transaction.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tax;

/** The transaction ID with a length limit of 128 characters. */
@property(nonatomic, copy, nullable) NSString *transactionId;

/**
 *  Required. Total non-zero value associated with the transaction. This value
 *  may include shipping, tax, or other adjustments to the total value that you
 *  want to include.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Metadata related to the progress of the CmekConfigService.UpdateCmekConfig
 *  operation. This will be returned by the
 *  google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UpdateCmekConfigMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata for UpdateSchema LRO.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UpdateSchemaMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Metadata related to the progress of the
 *  SiteSearchEngineService.UpdateTargetSite operation. This will be returned by
 *  the google.longrunning.Operation.metadata field.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UpdateTargetSiteMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  UserEvent captures all metadata information Discovery Engine API needs to
 *  know about how end users interact with your website.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent : GTLRObject

/**
 *  Extra user event features to include in the recommendation model. These
 *  attributes must NOT contain data that needs to be parsed or processed
 *  further, e.g. JSON or other encodings. If you provide custom attributes for
 *  ingested user events, also include them in the user events that you
 *  associate with prediction requests. Custom attribute formatting must be
 *  consistent between imported events and events provided with prediction
 *  requests. This lets the Discovery Engine API use those custom attributes
 *  when training models and serving predictions, which helps improve
 *  recommendation quality. This field needs to pass all below criteria,
 *  otherwise an `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8
 *  encoded string with a length limit of 5,000 characters. * For text
 *  attributes, at most 400 values are allowed. Empty values are not allowed.
 *  Each value must be a UTF-8 encoded string with a length limit of 256
 *  characters. * For number attributes, at most 400 values are allowed. For
 *  product recommendations, an example of extra user information is
 *  `traffic_channel`, which is how a user arrives at the site. Users can arrive
 *  at the site by coming to the site directly, coming through Google search, or
 *  in other ways.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent_Attributes *attributes;

/**
 *  Token to attribute an API response to user action(s) to trigger the event.
 *  Highly recommended for user events that are the result of
 *  RecommendationService.Recommend. This field enables accurate attribution of
 *  recommendation model performance. The value must be one of: *
 *  RecommendResponse.attribution_token for events that are the result of
 *  RecommendationService.Recommend. * SearchResponse.attribution_token for
 *  events that are the result of SearchService.Search. This token enables us to
 *  accurately attribute page view or conversion completion back to the event
 *  and the particular predict response containing this clicked/purchased
 *  product. If user clicks on product K in the recommendation results, pass
 *  RecommendResponse.attribution_token as a URL parameter to product K's page.
 *  When recording events on product K's page, log the
 *  RecommendResponse.attribution_token to this field.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  CompletionService.CompleteQuery details related to the event. This field
 *  should be set for `search` event when autocomplete function is enabled and
 *  the user clicks a suggestion for search.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompletionInfo *completionInfo;

/**
 *  Optional. Conversion type. Required if UserEvent.event_type is `conversion`.
 *  This is a customer-defined conversion name in lowercase letters or numbers
 *  separated by "-", such as "watch", "good-visit" etc. Do not set the field if
 *  UserEvent.event_type is not `conversion`. This mixes the custom conversion
 *  event with predefined events like `search`, `view-item` etc.
 */
@property(nonatomic, copy, nullable) NSString *conversionType;

/**
 *  The DataStore resource full name, of the form
 *  `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
 *  Optional. Only required for user events whose data store can't by determined
 *  by UserEvent.engine or UserEvent.documents. If data store is set in the
 *  parent of write/import/collect user event requests, this field can be
 *  omitted.
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Should set to true if the request is made directly from the end user, in
 *  which case the UserEvent.user_info.user_agent can be populated from the HTTP
 *  request. This flag should be set only if the API request is made directly
 *  from the end user such as a mobile app (and not if a gateway or a server is
 *  processing and pushing the user events). This should not be set when using
 *  the JavaScript tag in UserEventService.CollectUserEvent.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *directUserRequest;

/**
 *  List of Documents associated with this user event. This field is optional
 *  except for the following event types: * `view-item` * `add-to-cart` *
 *  `purchase` * `media-play` * `media-complete` In a `search` event, this field
 *  represents the documents returned to the end user on the current page (the
 *  end user may have not finished browsing the whole page yet). When a new page
 *  is returned to the end user, after pagination/filtering/ordering even for
 *  the same query, a new `search` event with different UserEvent.documents is
 *  desired.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DocumentInfo *> *documents;

/**
 *  The Engine resource name, in the form of
 *  `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
 *  Optional. Only required for Engine produced user events. For example, user
 *  events from blended search.
 */
@property(nonatomic, copy, nullable) NSString *engine;

/**
 *  Only required for UserEventService.ImportUserEvents method. Timestamp of
 *  when the user event happened.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  Required. User event type. Allowed values are: Generic values: * `search`:
 *  Search for Documents. * `view-item`: Detailed page view of a Document. *
 *  `view-item-list`: View of a panel or ordered list of Documents. *
 *  `view-home-page`: View of the home page. * `view-category-page`: View of a
 *  category page, e.g. Home > Men > Jeans * `add-feedback`: Add a user
 *  feedback. Retail-related values: * `add-to-cart`: Add an item(s) to cart,
 *  e.g. in Retail online shopping * `purchase`: Purchase an item(s)
 *  Media-related values: * `media-play`: Start/resume watching a video, playing
 *  a song, etc. * `media-complete`: Finished or stopped midway through a video,
 *  song, etc. Custom conversion value: * `conversion`: Customer defined
 *  conversion event.
 */
@property(nonatomic, copy, nullable) NSString *eventType;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the documents being filtered. One
 *  example is for `search` events, the associated SearchRequest may contain a
 *  filter expression in SearchRequest.filter conforming to
 *  https://google.aip.dev/160#filtering. Similarly, for `view-item-list` events
 *  that are generated from a RecommendRequest, this field may be populated
 *  directly from RecommendRequest.filter conforming to
 *  https://google.aip.dev/160#filtering. The value must be a UTF-8 encoded
 *  string with a length limit of 1,000 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Media-specific info. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1MediaInfo *mediaInfo;

/**
 *  Page metadata such as categories and other critical information for certain
 *  event types such as `view-category-page`.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PageInfo *pageInfo;

/** Panel metadata associated with this user event. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PanelInfo *panel;

/**
 *  Optional. List of panels associated with this event. Used for page-level
 *  impression data.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PanelInfo *> *panels;

/**
 *  The promotion IDs if this is an event associated with promotions. Currently,
 *  this field is restricted to at most one ID.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *promotionIds;

/**
 *  SearchService.Search details related to the event. This field should be set
 *  for `search` event.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchInfo *searchInfo;

/**
 *  A unique identifier for tracking a visitor session with a length limit of
 *  128 bytes. A session is an aggregation of an end user behavior in a time
 *  span. A general guideline to populate the session_id: 1. If user has no
 *  activity for 30 min, a new session_id should be assigned. 2. The session_id
 *  should be unique across users, suggest use uuid or add
 *  UserEvent.user_pseudo_id as prefix.
 */
@property(nonatomic, copy, nullable) NSString *sessionId;

/**
 *  A list of identifiers for the independent experiment groups this user event
 *  belongs to. This is used to distinguish between user events associated with
 *  different experiment setups.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tagIds;

/** The transaction metadata (if any) associated with this user event. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TransactionInfo *transactionInfo;

/** Information about the end user. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserInfo *userInfo;

/**
 *  Required. A unique identifier for tracking visitors. For example, this could
 *  be implemented with an HTTP cookie, which should be able to uniquely
 *  identify a visitor on a single device. This unique identifier should not
 *  change if the visitor log in/out of the website. Do not set the field to the
 *  same fixed ID for different users. This mixes the event history of those
 *  users together, which results in degraded model quality. The field must be a
 *  UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned. The field should not contain PII or
 *  user-data. We recommend to use Google Analytics [Client
 *  ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId)
 *  for this field.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

@end


/**
 *  Extra user event features to include in the recommendation model. These
 *  attributes must NOT contain data that needs to be parsed or processed
 *  further, e.g. JSON or other encodings. If you provide custom attributes for
 *  ingested user events, also include them in the user events that you
 *  associate with prediction requests. Custom attribute formatting must be
 *  consistent between imported events and events provided with prediction
 *  requests. This lets the Discovery Engine API use those custom attributes
 *  when training models and serving predictions, which helps improve
 *  recommendation quality. This field needs to pass all below criteria,
 *  otherwise an `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8
 *  encoded string with a length limit of 5,000 characters. * For text
 *  attributes, at most 400 values are allowed. Empty values are not allowed.
 *  Each value must be a UTF-8 encoded string with a length limit of 256
 *  characters. * For number attributes, at most 400 values are allowed. For
 *  product recommendations, an example of extra user information is
 *  `traffic_channel`, which is how a user arrives at the site. Users can arrive
 *  at the site by coming to the site directly, coming through Google search, or
 *  in other ways.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CustomAttribute. Use
 *        @c -additionalJSONKeys and @c -additionalPropertyForName: to get the
 *        list of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent_Attributes : GTLRObject
@end


/**
 *  Information of an end user.
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserInfo : GTLRObject

/**
 *  User agent as included in the HTTP header. The field must be a UTF-8 encoded
 *  string with a length limit of 1,000 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned. This should not be set when using the
 *  client side event reporting with GTM or JavaScript tag in
 *  UserEventService.CollectUserEvent or if UserEvent.direct_user_request is
 *  set.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

/**
 *  Highly recommended for logged-in users. Unique identifier for logged-in
 *  user, such as a user name. Don't set for anonymous users. Always use a
 *  hashed value for this ID. Don't set the field to the same fixed ID for
 *  different users. This mixes the event history of those users together, which
 *  results in degraded model quality. The field must be a UTF-8 encoded string
 *  with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT`
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  Config to store data store type configuration for workspace data
 */
@interface GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig : GTLRObject

/** Obfuscated Dasher customer ID. */
@property(nonatomic, copy, nullable) NSString *dasherCustomerId;

/**
 *  Optional. The super admin email address for the workspace that will be used
 *  for access token generation. For now we only use it for Native Google Drive
 *  connector data ingestion.
 */
@property(nonatomic, copy, nullable) NSString *superAdminEmailAddress;

/**
 *  Optional. The super admin service account for the workspace that will be
 *  used for access token generation. For now we only use it for Native Google
 *  Drive connector data ingestion.
 */
@property(nonatomic, copy, nullable) NSString *superAdminServiceAccount;

/**
 *  The Google Workspace data source.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleCalendar
 *        Workspace Data Store contains Calendar data (Value: "GOOGLE_CALENDAR")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleChat
 *        Workspace Data Store contains Chat data (Value: "GOOGLE_CHAT")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleDrive
 *        Workspace Data Store contains Drive data (Value: "GOOGLE_DRIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleGroups
 *        Workspace Data Store contains Groups data (Value: "GOOGLE_GROUPS")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleKeep
 *        Workspace Data Store contains Keep data (Value: "GOOGLE_KEEP")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleMail
 *        Workspace Data Store contains Mail data (Value: "GOOGLE_MAIL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GooglePeople
 *        Workspace Data Store contains People data (Value: "GOOGLE_PEOPLE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_GoogleSites
 *        Workspace Data Store contains Sites data (Value: "GOOGLE_SITES")
 *    @arg @c kGTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1WorkspaceConfig_Type_TypeUnspecified
 *        Defaults to an unspecified Workspace type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningCancelOperationRequest : GTLRObject
@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A single data point in a time series.
 */
@interface GTLRDiscoveryEngine_GoogleMonitoringV3Point : GTLRObject

/**
 *  The time interval to which the data point applies. For `GAUGE` metrics, the
 *  start time is optional, but if it is supplied, it must equal the end time.
 *  For `DELTA` metrics, the start and end time should specify a non-zero
 *  interval, with subsequent points specifying contiguous and non-overlapping
 *  intervals. For `CUMULATIVE` metrics, the start and end time should specify a
 *  non-zero interval, with subsequent points specifying the same start time and
 *  increasing end times, until an event resets the cumulative value to zero and
 *  sets a new start time for the following points.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleMonitoringV3TimeInterval *interval;

/** The value of the data point. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleMonitoringV3TypedValue *value;

@end


/**
 *  A time interval extending just after a start time through an end time. If
 *  the start time is the same as the end time, then the interval represents a
 *  single point in time.
 */
@interface GTLRDiscoveryEngine_GoogleMonitoringV3TimeInterval : GTLRObject

/** Required. The end of the time interval. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Optional. The beginning of the time interval. The default value for the
 *  start time is the end time. The start time must not be later than the end
 *  time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  A collection of data points that describes the time-varying values of a
 *  metric. A time series is identified by a combination of a fully-specified
 *  monitored resource and a fully-specified metric. This type is used for both
 *  listing and creating time series.
 */
@interface GTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries : GTLRObject

/**
 *  Input only. A detailed description of the time series that will be
 *  associated with the google.api.MetricDescriptor for the metric. Once set,
 *  this field cannot be changed through CreateTimeSeries.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. The associated monitored resource metadata. When reading a time
 *  series, this field will include metadata labels that are explicitly named in
 *  the reduction. When creating a time series, this field is ignored.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiMonitoredResourceMetadata *metadata;

/**
 *  The associated metric. A fully-specified metric used to identify the time
 *  series.
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiMetric *metric;

/**
 *  The metric kind of the time series. When listing time series, this metric
 *  kind might be different from the metric kind of the associated metric if
 *  this time series is an alignment or reduction of other time series. When
 *  creating a time series, this field is optional. If present, it must be the
 *  same as the metric kind of the associated metric. If the associated metric's
 *  descriptor must be auto-created, then this field specifies the metric kind
 *  of the new descriptor and must be either `GAUGE` (the default) or
 *  `CUMULATIVE`.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_Cumulative
 *        A value accumulated over a time interval. Cumulative measurements in a
 *        time series should have the same start time and increasing end times,
 *        until an event resets the cumulative value to zero and sets a new
 *        start time for the following points. (Value: "CUMULATIVE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_Delta
 *        The change in a value during a time interval. (Value: "DELTA")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_Gauge
 *        An instantaneous measurement of a value. (Value: "GAUGE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_MetricKind_MetricKindUnspecified
 *        Do not use this default value. (Value: "METRIC_KIND_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *metricKind;

/**
 *  The data points of this time series. When listing time series, points are
 *  returned in reverse time order. When creating a time series, this field must
 *  contain exactly one point and the point's type must be the same as the value
 *  type of the associated metric. If the associated metric's descriptor must be
 *  auto-created, then the value type of the descriptor is determined by the
 *  point's type, which must be `BOOL`, `INT64`, `DOUBLE`, or `DISTRIBUTION`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleMonitoringV3Point *> *points;

/**
 *  The associated monitored resource. Custom metrics can use only certain
 *  monitored resource types in their time series data. For more information,
 *  see [Monitored resources for custom
 *  metrics](https://cloud.google.com/monitoring/custom-metrics/creating-metrics#custom-metric-resources).
 */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiMonitoredResource *resource;

/**
 *  The units in which the metric value is reported. It is only applicable if
 *  the `value_type` is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The `unit` defines
 *  the representation of the stored metric values. This field can only be
 *  changed through CreateTimeSeries when it is empty.
 */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  The value type of the time series. When listing time series, this value type
 *  might be different from the value type of the associated metric if this time
 *  series is an alignment or reduction of other time series. When creating a
 *  time series, this field is optional. If present, it must be the same as the
 *  type of the data in the `points` field.
 *
 *  Likely values:
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Bool
 *        The value is a boolean. This value type can be used only if the metric
 *        kind is `GAUGE`. (Value: "BOOL")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Distribution
 *        The value is a `Distribution`. (Value: "DISTRIBUTION")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Double
 *        The value is a double precision floating point number. (Value:
 *        "DOUBLE")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Int64
 *        The value is a signed 64-bit integer. (Value: "INT64")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_Money
 *        The value is money. (Value: "MONEY")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_String
 *        The value is a text string. This value type can be used only if the
 *        metric kind is `GAUGE`. (Value: "STRING")
 *    @arg @c kGTLRDiscoveryEngine_GoogleMonitoringV3TimeSeries_ValueType_ValueTypeUnspecified
 *        Do not use this default value. (Value: "VALUE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *valueType;

@end


/**
 *  A single strongly-typed value.
 */
@interface GTLRDiscoveryEngine_GoogleMonitoringV3TypedValue : GTLRObject

/**
 *  A Boolean value: `true` or `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/** A distribution value. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleApiDistribution *distributionValue;

/**
 *  A 64-bit double-precision floating-point number. Its magnitude is
 *  approximately ±10±300 and it has 16 significant digits of precision.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *doubleValue;

/**
 *  A 64-bit integer. Its range is approximately ±9.2x1018.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *int64Value;

/** A variable-length string value. */
@property(nonatomic, copy, nullable) NSString *stringValue;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRDiscoveryEngine_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRDiscoveryEngine_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDiscoveryEngine_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRDiscoveryEngine_GoogleTypeDate : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Represents civil time (or occasionally physical time). This type can
 *  represent a civil time in one of a few possible ways: * When utc_offset is
 *  set and time_zone is unset: a civil time on a calendar day with a particular
 *  offset from UTC. * When time_zone is set and utc_offset is unset: a civil
 *  time on a calendar day in a particular time zone. * When neither time_zone
 *  nor utc_offset is set: a civil time on a calendar day in local time. The
 *  date is relative to the Proleptic Gregorian Calendar. If year, month, or day
 *  are 0, the DateTime is considered not to have a specific year, month, or day
 *  respectively. This type may also be used to represent a physical time if all
 *  the date and time fields are set and either case of the `time_offset` oneof
 *  is set. Consider using `Timestamp` message for physical time instead. If
 *  your use case also would like to store the user's timezone, that can be done
 *  in another field. This type is more flexible than some applications may
 *  want. Make sure to document and validate your application's limitations.
 */
@interface GTLRDiscoveryEngine_GoogleTypeDateTime : GTLRObject

/**
 *  Optional. Day of month. Must be from 1 to 31 and valid for the year and
 *  month, or 0 if specifying a datetime without a day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults
 *  to 0 (midnight). An API may choose to allow the value "24:00:00" for
 *  scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime
 *  without a month.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Optional. Fractions of seconds in nanoseconds. Must be from 0 to
 *  999,999,999, defaults to 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Optional. Seconds of minutes of the time. Must normally be from 0 to 59,
 *  defaults to 0. An API may allow the value 60 if it allows leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

/** Time zone. */
@property(nonatomic, strong, nullable) GTLRDiscoveryEngine_GoogleTypeTimeZone *timeZone;

/**
 *  UTC offset. Must be whole seconds, between -18 hours and +18 hours. For
 *  example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
 */
@property(nonatomic, strong, nullable) GTLRDuration *utcOffset;

/**
 *  Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a
 *  datetime without a year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Represents a time zone from the [IANA Time Zone
 *  Database](https://www.iana.org/time-zones).
 */
@interface GTLRDiscoveryEngine_GoogleTypeTimeZone : GTLRObject

/**
 *  IANA Time Zone Database time zone. For example "America/New_York".
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Optional. IANA Time Zone Database version number. For example "2019a". */
@property(nonatomic, copy, nullable) NSString *version;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
