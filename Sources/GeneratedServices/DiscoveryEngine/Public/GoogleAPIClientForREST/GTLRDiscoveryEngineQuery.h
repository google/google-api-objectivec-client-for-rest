// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Discovery Engine API (discoveryengine/v1beta)
// Description:
//   Discovery Engine API.
// Documentation:
//   https://cloud.google.com/discovery-engine/docs

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDiscoveryEngineObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Discovery Engine query classes.
 */
@interface GTLRDiscoveryEngineQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a Document.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.documents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsCreate : GTLRDiscoveryEngineQuery

/**
 *  Required. The ID to use for the Document, which will become the final
 *  component of the Document.name. If the caller does not have permission to
 *  create the Document, regardless of whether or not it exists, a
 *  `PERMISSION_DENIED` error is returned. This field must be unique among all
 *  Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is
 *  returned. This field must conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *documentId;

/**
 *  Required. The parent resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument.
 *
 *  Creates a Document.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument to include in
 *    the query.
 *  @param parent Required. The parent resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsCreate
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Document.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.documents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsDelete : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of Document, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *  If the caller does not have permission to delete the Document, regardless of
 *  whether or not it exists, a `PERMISSION_DENIED` error is returned. If the
 *  Document to delete does not exist, a `NOT_FOUND` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleProtobufEmpty.
 *
 *  Deletes a Document.
 *
 *  @param name Required. Full resource name of Document, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *    If the caller does not have permission to delete the Document, regardless
 *    of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
 *    the Document to delete does not exist, a `NOT_FOUND` error is returned.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Document.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.documents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsGet : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of Document, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *  If the caller does not have permission to access the Document, regardless of
 *  whether or not it exists, a `PERMISSION_DENIED` error is returned. If the
 *  requested Document does not exist, a `NOT_FOUND` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument.
 *
 *  Gets a Document.
 *
 *  @param name Required. Full resource name of Document, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *    If the caller does not have permission to access the Document, regardless
 *    of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
 *    the requested Document does not exist, a `NOT_FOUND` error is returned.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Bulk import of multiple Documents. Request processing may be synchronous.
 *  Non-existing items will be created. Note: It is possible for a subset of the
 *  Documents to be successfully updated.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.documents.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsImport : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent branch resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *  Requires create/update permission.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Bulk import of multiple Documents. Request processing may be synchronous.
 *  Non-existing items will be created. Note: It is possible for a subset of the
 *  Documents to be successfully updated.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest
 *    to include in the query.
 *  @param parent Required. The parent branch resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *    Requires create/update permission.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsImport
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a list of Documents.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.documents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsList : GTLRDiscoveryEngineQuery

/**
 *  Maximum number of Documents to return. If unspecified, defaults to 100. The
 *  maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
 *  this field is negative, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token ListDocumentsResponse.next_page_token, received from a previous
 *  DocumentService.ListDocuments call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  DocumentService.ListDocuments must match the call that provided the page
 *  token. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent branch resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *  Use `default_branch` as the branch ID, to list documents under the default
 *  branch. If the caller does not have permission to list Documents under this
 *  branch, regardless of whether or not this branch exists, a
 *  `PERMISSION_DENIED` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListDocumentsResponse.
 *
 *  Gets a list of Documents.
 *
 *  @param parent Required. The parent branch resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *    Use `default_branch` as the branch ID, to list documents under the default
 *    branch. If the caller does not have permission to list Documents under
 *    this branch, regardless of whether or not this branch exists, a
 *    `PERMISSION_DENIED` error is returned.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Document.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.documents.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPatch : GTLRDiscoveryEngineQuery

/**
 *  If set to true, and the Document is not found, a new Document will be
 *  created.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. The full resource name of the document. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument.
 *
 *  Updates a Document.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument to include in
 *    the query.
 *  @param name Immutable. The full resource name of the document. Format:
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
 *    This field must be a UTF-8 encoded string with a length limit of 1024
 *    characters.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPatch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                           name:(NSString *)name;

@end

/**
 *  Permanently deletes all selected Documents in a branch. This process is
 *  asynchronous. Depending on the number of Documents to be deleted, this
 *  operation can take hours to complete. Before the delete operation completes,
 *  some Documents might still be returned by DocumentService.GetDocument or
 *  DocumentService.ListDocuments. To get a list of the Documents to be deleted,
 *  set PurgeDocumentsRequest.force to false.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.documents.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPurge : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Permanently deletes all selected Documents in a branch. This process is
 *  asynchronous. Depending on the number of Documents to be deleted, this
 *  operation can take hours to complete. Before the delete operation completes,
 *  some Documents might still be returned by DocumentService.GetDocument or
 *  DocumentService.ListDocuments. To get a list of the Documents to be deleted,
 *  set PurgeDocumentsRequest.force to false.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest
 *    to include in the query.
 *  @param parent Required. The parent resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPurge
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.branches.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Completes the specified user input with keyword suggestions.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.completeQuery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompleteQuery : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent data store resource name for which the completion is
 *  performed, such as `projects/ *
 *  /locations/global/collections/default_collection/dataStores/default_data_store`.
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Indicates if tail suggestions should be returned if there are no suggestions
 *  that match the full query. Even if set to true, if there are suggestions
 *  that match the full query, those are returned and no tail suggestions are
 *  returned.
 */
@property(nonatomic, assign) BOOL includeTailSuggestions;

/**
 *  Required. The typeahead input used to fetch suggestions. Maximum length is
 *  128 characters.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Selects data model of query suggestions for serving. Currently supported
 *  values: * `document` - Using suggestions generated from user-imported
 *  documents. * `search-history` - Using suggestions generated from the past
 *  history of SearchService.Search API calls. Do not use it when there is no
 *  traffic for Search API. * `user-event` - Using suggestions generated from
 *  user-imported search events. * `document-completable` - Using suggestions
 *  taken directly from user-imported document fields marked as completable.
 *  Default values: * `document` is the default model for regular dataStores. *
 *  `search-history` is the default model for IndustryVertical.SITE_SEARCH
 *  dataStores.
 */
@property(nonatomic, copy, nullable) NSString *queryModel;

/**
 *  A unique identifier for tracking visitors. For example, this could be
 *  implemented with an HTTP cookie, which should be able to uniquely identify a
 *  visitor on a single device. This unique identifier should not change if the
 *  visitor logs in or out of the website. This field should NOT have a fixed
 *  value such as `unknown_visitor`. This should be the same identifier as
 *  UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be
 *  a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCompleteQueryResponse.
 *
 *  Completes the specified user input with keyword suggestions.
 *
 *  @param dataStore Required. The parent data store resource name for which the
 *    completion is performed, such as `projects/ *
 *    /locations/global/collections/default_collection/dataStores/default_data_store`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompleteQuery
 */
+ (instancetype)queryWithDataStore:(NSString *)dataStore;

@end

/**
 *  Converses a conversation.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.conversations.converse
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsConverse : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Conversation to get. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
 *  Use
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
 *  to activate auto session mode, which automatically creates a new
 *  conversation inside a ConverseConversation session.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
 *
 *  Converses a conversation.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationRequest
 *    to include in the query.
 *  @param name Required. The resource name of the Conversation to get. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
 *    Use
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
 *    to activate auto session mode, which automatically creates a new
 *    conversation inside a ConverseConversation session.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsConverse
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Conversation. If the Conversation to create already exists, an
 *  ALREADY_EXISTS error is returned.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.conversations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsCreate : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of parent data store. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation.
 *
 *  Creates a Conversation. If the Conversation to create already exists, an
 *  ALREADY_EXISTS error is returned.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation to
 *    include in the query.
 *  @param parent Required. Full resource name of parent data store. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsCreate
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Conversation. If the Conversation to delete does not exist, a
 *  NOT_FOUND error is returned.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.conversations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsDelete : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Conversation to delete. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleProtobufEmpty.
 *
 *  Deletes a Conversation. If the Conversation to delete does not exist, a
 *  NOT_FOUND error is returned.
 *
 *  @param name Required. The resource name of the Conversation to delete.
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Conversation.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.conversations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsGet : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Conversation to get. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation.
 *
 *  Gets a Conversation.
 *
 *  @param name Required. The resource name of the Conversation to get. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all Conversations by their parent DataStore.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.conversations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsList : GTLRDiscoveryEngineQuery

/**
 *  A filter to apply on the list results. The supported features are:
 *  user_pseudo_id, state. Example: "user_pseudo_id = some_id"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `update_time`
 *  * `create_time` * `conversation_name` Example: "update_time desc"
 *  "create_time"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of results to return. If unspecified, defaults to 50. Max
 *  allowed value is 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListConversations` call. Provide
 *  this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The data store resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListConversationsResponse.
 *
 *  Lists all Conversations by their parent DataStore.
 *
 *  @param parent Required. The data store resource name. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Conversation. Conversation action type cannot be changed. If the
 *  Conversation to update does not exist, a NOT_FOUND error is returned.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.conversations.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsPatch : GTLRDiscoveryEngineQuery

/**
 *  Immutable. Fully qualified name `project/ *
 *  /locations/global/collections/{collection}/dataStore/ * /conversations/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided Conversation to update. The following
 *  are NOT supported: * conversation.name If not set or empty, all supported
 *  fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation.
 *
 *  Updates a Conversation. Conversation action type cannot be changed. If the
 *  Conversation to update does not exist, a NOT_FOUND error is returned.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation to
 *    include in the query.
 *  @param name Immutable. Fully qualified name `project/ *
 *    /locations/global/collections/{collection}/dataStore/ * /conversations/ *`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsPatch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.models.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.models.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a Schema.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.schemas.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasCreate : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent data store resource name, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the Schema, which will become the final
 *  component of the Schema.name. This field should conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 63 characters.
 */
@property(nonatomic, copy, nullable) NSString *schemaId;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Creates a Schema.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema to include in
 *    the query.
 *  @param parent Required. The parent data store resource name, in the format
 *    of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasCreate
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Schema.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.schemas.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasDelete : GTLRDiscoveryEngineQuery

/**
 *  Required. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Deletes a Schema.
 *
 *  @param name Required. The full resource name of the schema, in the format of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Schema.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.schemas.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasGet : GTLRDiscoveryEngineQuery

/**
 *  Required. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema.
 *
 *  Gets a Schema.
 *
 *  @param name Required. The full resource name of the schema, in the format of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a list of Schemas.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.schemas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasList : GTLRDiscoveryEngineQuery

/**
 *  The maximum number of Schemas to return. The service may return fewer than
 *  this value. If unspecified, at most 100 Schemas will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous SchemaService.ListSchemas call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to SchemaService.ListSchemas must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent data store resource name, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListSchemasResponse.
 *
 *  Gets a list of Schemas.
 *
 *  @param parent Required. The parent data store resource name, in the format
 *    of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.schemas.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.schemas.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a Schema.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.schemas.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasPatch : GTLRDiscoveryEngineQuery

/**
 *  If set to true, and the Schema is not found, a new Schema will be created.
 *  In this situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Updates a Schema.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema to include in
 *    the query.
 *  @param name Immutable. The full resource name of the schema, in the format
 *    of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *    This field must be a UTF-8 encoded string with a length limit of 1024
 *    characters.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasPatch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                           name:(NSString *)name;

@end

/**
 *  Makes a recommendation, which requires a contextual user event.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.servingConfigs.recommend
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsRecommend : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of the format: `projects/ *
 *  /locations/global/collections/ * /dataStores/ * /servingConfigs/ *` Before
 *  you can request recommendations from your model, you must create at least
 *  one serving config for it.
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponse.
 *
 *  Makes a recommendation, which requires a contextual user event.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest to
 *    include in the query.
 *  @param servingConfig Required. Full resource name of the format: `projects/
 *    * /locations/global/collections/ * /dataStores/ * /servingConfigs/ *`
 *    Before you can request recommendations from your model, you must create at
 *    least one serving config for it.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsRecommend
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest *)object
                  servingConfig:(NSString *)servingConfig;

@end

/**
 *  Performs a search.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.servingConfigs.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsSearch : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Search serving config, such as `projects/
 *  *
 *  /locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
 *  This field is used to identify the serving configuration name, set of models
 *  used to make the search.
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchResponse.
 *
 *  Performs a search.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest to
 *    include in the query.
 *  @param servingConfig Required. The resource name of the Search serving
 *    config, such as `projects/ *
 *    /locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
 *    This field is used to identify the serving configuration name, set of
 *    models used to make the search.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsSearch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest *)object
                  servingConfig:(NSString *)servingConfig;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a third-party domain. This method is
 *  used only by the Discovery Engine API JavaScript pixel and Google Tag
 *  Manager. Users should not call this method directly.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.userEvents.collect
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsCollect : GTLRDiscoveryEngineQuery

/**
 *  The event timestamp in milliseconds. This prevents browser caching of
 *  otherwise identical get requests. The name is abbreviated to reduce the
 *  payload bytes.
 */
@property(nonatomic, assign) long long ets;

/**
 *  Required. The parent DataStore resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The URL including cgi-parameters but excluding the hash fragment with a
 *  length limit of 5,000 characters. This is often more useful than the referer
 *  URL, because many browsers only send the domain for third-party requests.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Required. URL encoded UserEvent proto with a length limit of 2,000,000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *userEvent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleApiHttpBody.
 *
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a third-party domain. This method is
 *  used only by the Discovery Engine API JavaScript pixel and Google Tag
 *  Manager. Users should not call this method directly.
 *
 *  @param parent Required. The parent DataStore resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsCollect
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.userEvents.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsImport : GTLRDiscoveryEngineQuery

/**
 *  Required. Parent DataStore resource name, of the form
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequest
 *    to include in the query.
 *  @param parent Required. Parent DataStore resource name, of the form
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsImport
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Writes a single user event.
 *
 *  Method: discoveryengine.projects.locations.collections.dataStores.userEvents.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsWrite : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent DataStore resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent.
 *
 *  Writes a single user event.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent to include
 *    in the query.
 *  @param parent Required. The parent DataStore resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsWrite
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.engines.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.engines.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.collections.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.collections.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a Document.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.documents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsCreate : GTLRDiscoveryEngineQuery

/**
 *  Required. The ID to use for the Document, which will become the final
 *  component of the Document.name. If the caller does not have permission to
 *  create the Document, regardless of whether or not it exists, a
 *  `PERMISSION_DENIED` error is returned. This field must be unique among all
 *  Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is
 *  returned. This field must conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *documentId;

/**
 *  Required. The parent resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument.
 *
 *  Creates a Document.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument to include in
 *    the query.
 *  @param parent Required. The parent resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsCreate
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Document.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.documents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsDelete : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of Document, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *  If the caller does not have permission to delete the Document, regardless of
 *  whether or not it exists, a `PERMISSION_DENIED` error is returned. If the
 *  Document to delete does not exist, a `NOT_FOUND` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleProtobufEmpty.
 *
 *  Deletes a Document.
 *
 *  @param name Required. Full resource name of Document, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *    If the caller does not have permission to delete the Document, regardless
 *    of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
 *    the Document to delete does not exist, a `NOT_FOUND` error is returned.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Document.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.documents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsGet : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of Document, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *  If the caller does not have permission to access the Document, regardless of
 *  whether or not it exists, a `PERMISSION_DENIED` error is returned. If the
 *  requested Document does not exist, a `NOT_FOUND` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument.
 *
 *  Gets a Document.
 *
 *  @param name Required. Full resource name of Document, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
 *    If the caller does not have permission to access the Document, regardless
 *    of whether or not it exists, a `PERMISSION_DENIED` error is returned. If
 *    the requested Document does not exist, a `NOT_FOUND` error is returned.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Bulk import of multiple Documents. Request processing may be synchronous.
 *  Non-existing items will be created. Note: It is possible for a subset of the
 *  Documents to be successfully updated.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.documents.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsImport : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent branch resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *  Requires create/update permission.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Bulk import of multiple Documents. Request processing may be synchronous.
 *  Non-existing items will be created. Note: It is possible for a subset of the
 *  Documents to be successfully updated.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest
 *    to include in the query.
 *  @param parent Required. The parent branch resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *    Requires create/update permission.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsImport
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a list of Documents.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.documents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsList : GTLRDiscoveryEngineQuery

/**
 *  Maximum number of Documents to return. If unspecified, defaults to 100. The
 *  maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
 *  this field is negative, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token ListDocumentsResponse.next_page_token, received from a previous
 *  DocumentService.ListDocuments call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  DocumentService.ListDocuments must match the call that provided the page
 *  token. Otherwise, an `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent branch resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *  Use `default_branch` as the branch ID, to list documents under the default
 *  branch. If the caller does not have permission to list Documents under this
 *  branch, regardless of whether or not this branch exists, a
 *  `PERMISSION_DENIED` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListDocumentsResponse.
 *
 *  Gets a list of Documents.
 *
 *  @param parent Required. The parent branch resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *    Use `default_branch` as the branch ID, to list documents under the default
 *    branch. If the caller does not have permission to list Documents under
 *    this branch, regardless of whether or not this branch exists, a
 *    `PERMISSION_DENIED` error is returned.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Document.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.documents.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPatch : GTLRDiscoveryEngineQuery

/**
 *  If set to true, and the Document is not found, a new Document will be
 *  created.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. The full resource name of the document. Format:
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument.
 *
 *  Updates a Document.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument to include in
 *    the query.
 *  @param name Immutable. The full resource name of the document. Format:
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
 *    This field must be a UTF-8 encoded string with a length limit of 1024
 *    characters.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPatch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                           name:(NSString *)name;

@end

/**
 *  Permanently deletes all selected Documents in a branch. This process is
 *  asynchronous. Depending on the number of Documents to be deleted, this
 *  operation can take hours to complete. Before the delete operation completes,
 *  some Documents might still be returned by DocumentService.GetDocument or
 *  DocumentService.ListDocuments. To get a list of the Documents to be deleted,
 *  set PurgeDocumentsRequest.force to false.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.documents.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPurge : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Permanently deletes all selected Documents in a branch. This process is
 *  asynchronous. Depending on the number of Documents to be deleted, this
 *  operation can take hours to complete. Before the delete operation completes,
 *  some Documents might still be returned by DocumentService.GetDocument or
 *  DocumentService.ListDocuments. To get a list of the Documents to be deleted,
 *  set PurgeDocumentsRequest.force to false.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest
 *    to include in the query.
 *  @param parent Required. The parent resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPurge
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.dataStores.branches.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Completes the specified user input with keyword suggestions.
 *
 *  Method: discoveryengine.projects.locations.dataStores.completeQuery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompleteQuery : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent data store resource name for which the completion is
 *  performed, such as `projects/ *
 *  /locations/global/collections/default_collection/dataStores/default_data_store`.
 */
@property(nonatomic, copy, nullable) NSString *dataStore;

/**
 *  Indicates if tail suggestions should be returned if there are no suggestions
 *  that match the full query. Even if set to true, if there are suggestions
 *  that match the full query, those are returned and no tail suggestions are
 *  returned.
 */
@property(nonatomic, assign) BOOL includeTailSuggestions;

/**
 *  Required. The typeahead input used to fetch suggestions. Maximum length is
 *  128 characters.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Selects data model of query suggestions for serving. Currently supported
 *  values: * `document` - Using suggestions generated from user-imported
 *  documents. * `search-history` - Using suggestions generated from the past
 *  history of SearchService.Search API calls. Do not use it when there is no
 *  traffic for Search API. * `user-event` - Using suggestions generated from
 *  user-imported search events. * `document-completable` - Using suggestions
 *  taken directly from user-imported document fields marked as completable.
 *  Default values: * `document` is the default model for regular dataStores. *
 *  `search-history` is the default model for IndustryVertical.SITE_SEARCH
 *  dataStores.
 */
@property(nonatomic, copy, nullable) NSString *queryModel;

/**
 *  A unique identifier for tracking visitors. For example, this could be
 *  implemented with an HTTP cookie, which should be able to uniquely identify a
 *  visitor on a single device. This unique identifier should not change if the
 *  visitor logs in or out of the website. This field should NOT have a fixed
 *  value such as `unknown_visitor`. This should be the same identifier as
 *  UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be
 *  a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  `INVALID_ARGUMENT` error is returned.
 */
@property(nonatomic, copy, nullable) NSString *userPseudoId;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCompleteQueryResponse.
 *
 *  Completes the specified user input with keyword suggestions.
 *
 *  @param dataStore Required. The parent data store resource name for which the
 *    completion is performed, such as `projects/ *
 *    /locations/global/collections/default_collection/dataStores/default_data_store`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompleteQuery
 */
+ (instancetype)queryWithDataStore:(NSString *)dataStore;

@end

/**
 *  Converses a conversation.
 *
 *  Method: discoveryengine.projects.locations.dataStores.conversations.converse
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsConverse : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Conversation to get. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
 *  Use
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
 *  to activate auto session mode, which automatically creates a new
 *  conversation inside a ConverseConversation session.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationResponse.
 *
 *  Converses a conversation.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationRequest
 *    to include in the query.
 *  @param name Required. The resource name of the Conversation to get. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
 *    Use
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
 *    to activate auto session mode, which automatically creates a new
 *    conversation inside a ConverseConversation session.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsConverse
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Conversation. If the Conversation to create already exists, an
 *  ALREADY_EXISTS error is returned.
 *
 *  Method: discoveryengine.projects.locations.dataStores.conversations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsCreate : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of parent data store. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation.
 *
 *  Creates a Conversation. If the Conversation to create already exists, an
 *  ALREADY_EXISTS error is returned.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation to
 *    include in the query.
 *  @param parent Required. Full resource name of parent data store. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsCreate
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Conversation. If the Conversation to delete does not exist, a
 *  NOT_FOUND error is returned.
 *
 *  Method: discoveryengine.projects.locations.dataStores.conversations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsDelete : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Conversation to delete. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleProtobufEmpty.
 *
 *  Deletes a Conversation. If the Conversation to delete does not exist, a
 *  NOT_FOUND error is returned.
 *
 *  @param name Required. The resource name of the Conversation to delete.
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Conversation.
 *
 *  Method: discoveryengine.projects.locations.dataStores.conversations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsGet : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Conversation to get. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation.
 *
 *  Gets a Conversation.
 *
 *  @param name Required. The resource name of the Conversation to get. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all Conversations by their parent DataStore.
 *
 *  Method: discoveryengine.projects.locations.dataStores.conversations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsList : GTLRDiscoveryEngineQuery

/**
 *  A filter to apply on the list results. The supported features are:
 *  user_pseudo_id, state. Example: "user_pseudo_id = some_id"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  A comma-separated list of fields to order by, sorted in ascending order. Use
 *  "desc" after a field name for descending. Supported fields: * `update_time`
 *  * `create_time` * `conversation_name` Example: "update_time desc"
 *  "create_time"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Maximum number of results to return. If unspecified, defaults to 50. Max
 *  allowed value is 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListConversations` call. Provide
 *  this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The data store resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListConversationsResponse.
 *
 *  Lists all Conversations by their parent DataStore.
 *
 *  @param parent Required. The data store resource name. Format:
 *    `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Conversation. Conversation action type cannot be changed. If the
 *  Conversation to update does not exist, a NOT_FOUND error is returned.
 *
 *  Method: discoveryengine.projects.locations.dataStores.conversations.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsPatch : GTLRDiscoveryEngineQuery

/**
 *  Immutable. Fully qualified name `project/ *
 *  /locations/global/collections/{collection}/dataStore/ * /conversations/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided Conversation to update. The following
 *  are NOT supported: * conversation.name If not set or empty, all supported
 *  fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation.
 *
 *  Updates a Conversation. Conversation action type cannot be changed. If the
 *  Conversation to update does not exist, a NOT_FOUND error is returned.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation to
 *    include in the query.
 *  @param name Immutable. Fully qualified name `project/ *
 *    /locations/global/collections/{collection}/dataStore/ * /conversations/ *`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsPatch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.dataStores.models.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.dataStores.models.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.dataStores.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.dataStores.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a Schema.
 *
 *  Method: discoveryengine.projects.locations.dataStores.schemas.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasCreate : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent data store resource name, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the Schema, which will become the final
 *  component of the Schema.name. This field should conform to
 *  [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit
 *  of 63 characters.
 */
@property(nonatomic, copy, nullable) NSString *schemaId;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Creates a Schema.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema to include in
 *    the query.
 *  @param parent Required. The parent data store resource name, in the format
 *    of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasCreate
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Schema.
 *
 *  Method: discoveryengine.projects.locations.dataStores.schemas.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasDelete : GTLRDiscoveryEngineQuery

/**
 *  Required. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Deletes a Schema.
 *
 *  @param name Required. The full resource name of the schema, in the format of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Schema.
 *
 *  Method: discoveryengine.projects.locations.dataStores.schemas.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasGet : GTLRDiscoveryEngineQuery

/**
 *  Required. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema.
 *
 *  Gets a Schema.
 *
 *  @param name Required. The full resource name of the schema, in the format of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a list of Schemas.
 *
 *  Method: discoveryengine.projects.locations.dataStores.schemas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasList : GTLRDiscoveryEngineQuery

/**
 *  The maximum number of Schemas to return. The service may return fewer than
 *  this value. If unspecified, at most 100 Schemas will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous SchemaService.ListSchemas call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to SchemaService.ListSchemas must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent data store resource name, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListSchemasResponse.
 *
 *  Gets a list of Schemas.
 *
 *  @param parent Required. The parent data store resource name, in the format
 *    of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Schema.
 *
 *  Method: discoveryengine.projects.locations.dataStores.schemas.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasPatch : GTLRDiscoveryEngineQuery

/**
 *  If set to true, and the Schema is not found, a new Schema will be created.
 *  In this situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. The full resource name of the schema, in the format of
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *  This field must be a UTF-8 encoded string with a length limit of 1024
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Updates a Schema.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema to include in
 *    the query.
 *  @param name Immutable. The full resource name of the schema, in the format
 *    of
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
 *    This field must be a UTF-8 encoded string with a length limit of 1024
 *    characters.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasPatch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                           name:(NSString *)name;

@end

/**
 *  Makes a recommendation, which requires a contextual user event.
 *
 *  Method: discoveryengine.projects.locations.dataStores.servingConfigs.recommend
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsRecommend : GTLRDiscoveryEngineQuery

/**
 *  Required. Full resource name of the format: `projects/ *
 *  /locations/global/collections/ * /dataStores/ * /servingConfigs/ *` Before
 *  you can request recommendations from your model, you must create at least
 *  one serving config for it.
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponse.
 *
 *  Makes a recommendation, which requires a contextual user event.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest to
 *    include in the query.
 *  @param servingConfig Required. Full resource name of the format: `projects/
 *    * /locations/global/collections/ * /dataStores/ * /servingConfigs/ *`
 *    Before you can request recommendations from your model, you must create at
 *    least one serving config for it.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsRecommend
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest *)object
                  servingConfig:(NSString *)servingConfig;

@end

/**
 *  Performs a search.
 *
 *  Method: discoveryengine.projects.locations.dataStores.servingConfigs.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsSearch : GTLRDiscoveryEngineQuery

/**
 *  Required. The resource name of the Search serving config, such as `projects/
 *  *
 *  /locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
 *  This field is used to identify the serving configuration name, set of models
 *  used to make the search.
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  Fetches a @c
 *  GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchResponse.
 *
 *  Performs a search.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest to
 *    include in the query.
 *  @param servingConfig Required. The resource name of the Search serving
 *    config, such as `projects/ *
 *    /locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
 *    This field is used to identify the serving configuration name, set of
 *    models used to make the search.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsSearch
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest *)object
                  servingConfig:(NSString *)servingConfig;

@end

/**
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a third-party domain. This method is
 *  used only by the Discovery Engine API JavaScript pixel and Google Tag
 *  Manager. Users should not call this method directly.
 *
 *  Method: discoveryengine.projects.locations.dataStores.userEvents.collect
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsCollect : GTLRDiscoveryEngineQuery

/**
 *  The event timestamp in milliseconds. This prevents browser caching of
 *  otherwise identical get requests. The name is abbreviated to reduce the
 *  payload bytes.
 */
@property(nonatomic, assign) long long ets;

/**
 *  Required. The parent DataStore resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The URL including cgi-parameters but excluding the hash fragment with a
 *  length limit of 5,000 characters. This is often more useful than the referer
 *  URL, because many browsers only send the domain for third-party requests.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Required. URL encoded UserEvent proto with a length limit of 2,000,000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *userEvent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleApiHttpBody.
 *
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a third-party domain. This method is
 *  used only by the Discovery Engine API JavaScript pixel and Google Tag
 *  Manager. Users should not call this method directly.
 *
 *  @param parent Required. The parent DataStore resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsCollect
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  Method: discoveryengine.projects.locations.dataStores.userEvents.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsImport : GTLRDiscoveryEngineQuery

/**
 *  Required. Parent DataStore resource name, of the form
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. Operation.response is of type ImportResponse. Note that it is
 *  possible for a subset of the items to be successfully inserted.
 *  Operation.metadata is of type ImportMetadata.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequest
 *    to include in the query.
 *  @param parent Required. Parent DataStore resource name, of the form
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsImport
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Writes a single user event.
 *
 *  Method: discoveryengine.projects.locations.dataStores.userEvents.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsWrite : GTLRDiscoveryEngineQuery

/**
 *  Required. The parent DataStore resource name, such as
 *  `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent.
 *
 *  Writes a single user event.
 *
 *  @param object The @c
 *    GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent to include
 *    in the query.
 *  @param parent Required. The parent DataStore resource name, such as
 *    `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsWrite
 */
+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: discoveryengine.projects.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsOperationsGet : GTLRDiscoveryEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: discoveryengine.projects.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDiscoveryEngineCloudPlatform
 */
@interface GTLRDiscoveryEngineQuery_ProjectsOperationsList : GTLRDiscoveryEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDiscoveryEngineQuery_ProjectsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
