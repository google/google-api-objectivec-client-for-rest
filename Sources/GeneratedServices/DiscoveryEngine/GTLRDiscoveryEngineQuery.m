// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Discovery Engine API (discoveryengine/v1beta)
// Description:
//   Discovery Engine API.
// Documentation:
//   https://cloud.google.com/discovery-engine/docs

#import <GoogleAPIClientForREST/GTLRDiscoveryEngineQuery.h>

@implementation GTLRDiscoveryEngineQuery

@dynamic fields;

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataConnector.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataConnector.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsCreate

@dynamic documentId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListDocumentsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPatch

@dynamic allowMissing, name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompleteQuery

@dynamic dataStore, includeTailSuggestions, query, queryModel, userPseudoId;

+ (instancetype)queryWithDataStore:(NSString *)dataStore {
  NSArray *pathParams = @[ @"dataStore" ];
  NSString *pathURITemplate = @"v1beta/{+dataStore}:completeQuery";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompleteQuery *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.dataStore = dataStore;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCompleteQueryResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.completeQuery";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsConverse

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}:converse";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsConverse *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.converse";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListConversationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCreate

@dynamic createAdvancedSiteSearch, dataStoreId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGetSiteSearchEngine

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGetSiteSearchEngine *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteSearchEngine class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.getSiteSearchEngine";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListDataStoresResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.models.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.models.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasCreate

@dynamic parent, schemaId;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListSchemasResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasPatch

@dynamic allowMissing, name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsRecommend

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1beta/{+servingConfig}:recommend";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsRecommend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.servingConfigs.recommend";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsSearch

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1beta/{+servingConfig}:search";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.servingConfigs.search";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}:batchVerifyTargetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.batchVerifyTargetSites";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineDisableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1beta/{+siteSearchEngine}:disableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineDisableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.disableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineEnableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1beta/{+siteSearchEngine}:enableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineEnableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.enableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus

@dynamic pageSize, pageToken, siteSearchEngine;

+ (instancetype)queryWithSiteSearchEngine:(NSString *)siteSearchEngine {
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1beta/{+siteSearchEngine}:fetchDomainVerificationStatus";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaFetchDomainVerificationStatusResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.fetchDomainVerificationStatus";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineRecrawlUris

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1beta/{+siteSearchEngine}:recrawlUris";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineRecrawlUris *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.recrawlUris";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/targetSites:batchCreate";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.batchCreate";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListTargetSitesResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/suggestionDenyListEntries:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.suggestionDenyListEntries.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/suggestionDenyListEntries:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.suggestionDenyListEntries.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsCollect

@dynamic ets, parent, uri, userEvent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/userEvents:collect";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsCollect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleApiHttpBody class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.userEvents.collect";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/userEvents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.userEvents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsWrite

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/userEvents:write";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.userEvents.write";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsConverse

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}:converse";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsConverse *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.converse";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListConversationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesCreate

@dynamic engineId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/engines";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/engines";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListEnginesResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEngine class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsRecommend

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1beta/{+servingConfig}:recommend";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsRecommend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.servingConfigs.recommend";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsSearch

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1beta/{+servingConfig}:search";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.servingConfigs.search";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsCreate

@dynamic documentId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListDocumentsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPatch

@dynamic allowMissing, name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDocument class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/documents:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompleteQuery

@dynamic dataStore, includeTailSuggestions, query, queryModel, userPseudoId;

+ (instancetype)queryWithDataStore:(NSString *)dataStore {
  NSArray *pathParams = @[ @"dataStore" ];
  NSString *pathURITemplate = @"v1beta/{+dataStore}:completeQuery";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompleteQuery *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.dataStore = dataStore;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaCompleteQueryResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.completeQuery";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsConverse

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}:converse";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsConverse *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConverseConversationResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.converse";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListConversationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaConversation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCreate

@dynamic createAdvancedSiteSearch, dataStoreId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGetSiteSearchEngine

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGetSiteSearchEngine *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSiteSearchEngine class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.getSiteSearchEngine";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListDataStoresResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.models.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.models.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDataStore class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasCreate

@dynamic parent, schemaId;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListSchemasResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasPatch

@dynamic allowMissing, name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSchema *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsRecommend

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1beta/{+servingConfig}:recommend";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsRecommend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecommendResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.servingConfigs.recommend";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsSearch

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1beta/{+servingConfig}:search";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaSearchResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.servingConfigs.search";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1beta/{+siteSearchEngine}:disableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.disableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1beta/{+siteSearchEngine}:enableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.enableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineRecrawlUris

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1beta/{+siteSearchEngine}:recrawlUris";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineRecrawlUris *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.recrawlUris";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/targetSites:batchCreate";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.batchCreate";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaListTargetSitesResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaTargetSite *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/suggestionDenyListEntries:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/suggestionDenyListEntries:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsCollect

@dynamic ets, parent, uri, userEvent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/userEvents:collect";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsCollect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleApiHttpBody class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.userEvents.collect";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaImportUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/userEvents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.userEvents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsWrite

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta/{+parent}/userEvents:write";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1betaUserEvent class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.userEvents.write";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.operations.list";
  return query;
}

@end
