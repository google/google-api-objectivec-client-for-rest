// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Discovery Engine API (discoveryengine/v1)
// Description:
//   Discovery Engine API.
// Documentation:
//   https://cloud.google.com/generative-ai-app-builder/docs/

#import <GoogleAPIClientForREST/GTLRDiscoveryEngineQuery.h>

@implementation GTLRDiscoveryEngineQuery

@dynamic fields;

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataConnector.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataConnectorOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataConnector.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesBatchGetDocumentsMetadata

@dynamic matcherFhirMatcherFhirResources, matcherUrisMatcherUris, parent;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"matcherFhirMatcherFhirResources" : @"matcher.fhirMatcher.fhirResources",
    @"matcherUrisMatcherUris" : @"matcher.urisMatcher.uris"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"matcher.fhirMatcher.fhirResources" : [NSString class],
    @"matcher.urisMatcher.uris" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/batchGetDocumentsMetadata";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesBatchGetDocumentsMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.batchGetDocumentsMetadata";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsCreate

@dynamic documentId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListDocumentsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPatch

@dynamic allowMissing, name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesDocumentsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.documents.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.operations.cancel";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresBranchesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.branches.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompleteQuery

@dynamic dataStore, includeTailSuggestions, query, queryModel, userPseudoId;

+ (instancetype)queryWithDataStore:(NSString *)dataStore {
  NSArray *pathParams = @[ @"dataStore" ];
  NSString *pathURITemplate = @"v1/{+dataStore}:completeQuery";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompleteQuery *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.dataStore = dataStore;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompleteQueryResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.completeQuery";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompletionSuggestionsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/completionSuggestions:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompletionSuggestionsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.completionSuggestions.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompletionSuggestionsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/completionSuggestions:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCompletionSuggestionsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.completionSuggestions.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsCreate

@dynamic controlId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/controls";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.controls.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.controls.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.controls.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/controls";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListControlsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.controls.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresControlsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.controls.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsConverse

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:converse";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsConverse *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.converse";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListConversationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresConversationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.conversations.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCreate

@dynamic createAdvancedSiteSearch, dataStoreId, parent,
         skipDefaultSchemaCreation;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCustomModelsList

@dynamic dataStore;

+ (instancetype)queryWithDataStore:(NSString *)dataStore {
  NSArray *pathParams = @[ @"dataStore" ];
  NSString *pathURITemplate = @"v1/{+dataStore}/customModels";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresCustomModelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.dataStore = dataStore;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListCustomModelsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.customModels.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGetSiteSearchEngine

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresGetSiteSearchEngine *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteSearchEngine class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.getSiteSearchEngine";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListDataStoresResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.models.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresModelsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.models.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasCreate

@dynamic parent, schemaId;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListSchemasResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasPatch

@dynamic allowMissing, name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSchemasPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.schemas.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsAnswer

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:answer";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsAnswer *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.servingConfigs.answer";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsRecommend

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:recommend";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsRecommend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.servingConfigs.recommend";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsSearch

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:search";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresServingConfigsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.servingConfigs.search";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsAnswersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsAnswersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.sessions.answers.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sessions";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.sessions.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.sessions.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.sessions.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sessions";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListSessionsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.sessions.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSessionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.sessions.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchVerifyTargetSitesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:batchVerifyTargetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineBatchVerifyTargetSites *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.batchVerifyTargetSites";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineDisableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1/{+siteSearchEngine}:disableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineDisableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.disableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineEnableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1/{+siteSearchEngine}:enableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineEnableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.enableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus

@dynamic pageSize, pageToken, siteSearchEngine;

+ (instancetype)queryWithSiteSearchEngine:(NSString *)siteSearchEngine {
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1/{+siteSearchEngine}:fetchDomainVerificationStatus";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineFetchDomainVerificationStatus *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1FetchDomainVerificationStatusResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.fetchDomainVerificationStatus";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineRecrawlUris

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecrawlUrisRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1/{+siteSearchEngine}:recrawlUris";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineRecrawlUris *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.recrawlUris";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchCreateTargetSitesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetSites:batchCreate";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.batchCreate";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListTargetSitesResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSiteSearchEngineTargetSitesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/suggestionDenyListEntries:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.suggestionDenyListEntries.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/suggestionDenyListEntries:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresSuggestionDenyListEntriesPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.suggestionDenyListEntries.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresTrainCustomModel

@dynamic dataStore;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TrainCustomModelRequest *)object
                      dataStore:(NSString *)dataStore {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"dataStore" ];
  NSString *pathURITemplate = @"v1/{+dataStore}:trainCustomModel";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresTrainCustomModel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.dataStore = dataStore;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.trainCustomModel";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsCollect

@dynamic ets, parent, uri, userEvent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:collect";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsCollect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleApiHttpBody class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.userEvents.collect";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.userEvents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.userEvents.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsWrite

@dynamic parent, writeAsync;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:write";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsDataStoresUserEventsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent class];
  query.loggingName = @"discoveryengine.projects.locations.collections.dataStores.userEvents.write";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsCreate

@dynamic controlId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/controls";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.controls.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.controls.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.controls.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/controls";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListControlsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.controls.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesControlsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.controls.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsConverse

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:converse";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsConverse *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.converse";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListConversationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesConversationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.conversations.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesCreate

@dynamic engineId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/engines";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/engines";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListEnginesResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Engine class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsAnswer

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:answer";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsAnswer *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.servingConfigs.answer";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsRecommend

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:recommend";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsRecommend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.servingConfigs.recommend";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsSearch

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:search";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesServingConfigsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.servingConfigs.search";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsAnswersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsAnswersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.sessions.answers.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sessions";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.sessions.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.sessions.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.sessions.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sessions";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListSessionsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.sessions.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsEnginesSessionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.collections.engines.sessions.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.collections.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsCollectionsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.collections.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesBatchGetDocumentsMetadata

@dynamic matcherFhirMatcherFhirResources, matcherUrisMatcherUris, parent;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"matcherFhirMatcherFhirResources" : @"matcher.fhirMatcher.fhirResources",
    @"matcherUrisMatcherUris" : @"matcher.urisMatcher.uris"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"matcher.fhirMatcher.fhirResources" : [NSString class],
    @"matcher.urisMatcher.uris" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/batchGetDocumentsMetadata";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesBatchGetDocumentsMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchGetDocumentsMetadataResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.batchGetDocumentsMetadata";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsCreate

@dynamic documentId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListDocumentsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPatch

@dynamic allowMissing, name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Document class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeDocumentsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/documents:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesDocumentsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.documents.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.operations.cancel";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresBranchesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.branches.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompleteQuery

@dynamic dataStore, includeTailSuggestions, query, queryModel, userPseudoId;

+ (instancetype)queryWithDataStore:(NSString *)dataStore {
  NSArray *pathParams = @[ @"dataStore" ];
  NSString *pathURITemplate = @"v1/{+dataStore}:completeQuery";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompleteQuery *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.dataStore = dataStore;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CompleteQueryResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.completeQuery";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompletionSuggestionsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/completionSuggestions:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompletionSuggestionsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.completionSuggestions.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompletionSuggestionsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/completionSuggestions:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCompletionSuggestionsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.completionSuggestions.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsCreate

@dynamic controlId, parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/controls";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.controls.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.controls.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.controls.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/controls";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListControlsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.controls.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresControlsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Control class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.controls.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsConverse

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:converse";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsConverse *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ConverseConversationResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.converse";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListConversationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresConversationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Conversation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.conversations.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCreate

@dynamic createAdvancedSiteSearch, dataStoreId, parent,
         skipDefaultSchemaCreation;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGetSiteSearchEngine

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresGetSiteSearchEngine *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SiteSearchEngine class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.getSiteSearchEngine";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/dataStores";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListDataStoresResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.models.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresModelsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.models.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DataStore class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasCreate

@dynamic parent, schemaId;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/schemas";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListSchemasResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasPatch

@dynamic allowMissing, name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Schema *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSchemasPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.schemas.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsAnswer

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:answer";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsAnswer *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1AnswerQueryResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.servingConfigs.answer";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsRecommend

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:recommend";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsRecommend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecommendResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.servingConfigs.recommend";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsSearch

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v1/{+servingConfig}:search";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresServingConfigsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1SearchResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.servingConfigs.search";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsAnswersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsAnswersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Answer class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.sessions.answers.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sessions";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.sessions.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.sessions.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.sessions.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sessions";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListSessionsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.sessions.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSessionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1Session class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.sessions.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1/{+siteSearchEngine}:disableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineDisableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.disableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1/{+siteSearchEngine}:enableAdvancedSiteSearch";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineEnableAdvancedSiteSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.enableAdvancedSiteSearch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineRecrawlUris

@dynamic siteSearchEngine;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RecrawlUrisRequest *)object
               siteSearchEngine:(NSString *)siteSearchEngine {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"siteSearchEngine" ];
  NSString *pathURITemplate = @"v1/{+siteSearchEngine}:recrawlUris";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineRecrawlUris *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.siteSearchEngine = siteSearchEngine;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.recrawlUris";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1BatchCreateTargetSitesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetSites:batchCreate";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.batchCreate";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.create";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.delete";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/targetSites";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ListTargetSitesResponse class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1TargetSite *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSiteSearchEngineTargetSitesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.patch";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/suggestionDenyListEntries:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/suggestionDenyListEntries:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresSuggestionDenyListEntriesPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsCollect

@dynamic ets, parent, uri, userEvent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:collect";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsCollect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleApiHttpBody class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.userEvents.collect";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ImportUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:import";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.userEvents.import";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1PurgeUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:purge";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.userEvents.purge";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsWrite

@dynamic parent, writeAsync;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:write";
  GTLRDiscoveryEngineQuery_ProjectsLocationsDataStoresUserEventsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent class];
  query.loggingName = @"discoveryengine.projects.locations.dataStores.userEvents.write";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsGroundingConfigsCheck

@dynamic groundingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingRequest *)object
                groundingConfig:(NSString *)groundingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"groundingConfig" ];
  NSString *pathURITemplate = @"v1/{+groundingConfig}:check";
  GTLRDiscoveryEngineQuery_ProjectsLocationsGroundingConfigsCheck *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.groundingConfig = groundingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1CheckGroundingResponse class];
  query.loggingName = @"discoveryengine.projects.locations.groundingConfigs.check";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsIdentityMappingStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsIdentityMappingStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.identity_mapping_stores.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsIdentityMappingStoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsIdentityMappingStoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.identity_mapping_stores.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsRankingConfigsRank

@dynamic rankingConfig;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankRequest *)object
                  rankingConfig:(NSString *)rankingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"rankingConfig" ];
  NSString *pathURITemplate = @"v1/{+rankingConfig}:rank";
  GTLRDiscoveryEngineQuery_ProjectsLocationsRankingConfigsRank *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.rankingConfig = rankingConfig;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1RankResponse class];
  query.loggingName = @"discoveryengine.projects.locations.rankingConfigs.rank";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsUserEventsCollect

@dynamic ets, parent, uri, userEvent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:collect";
  GTLRDiscoveryEngineQuery_ProjectsLocationsUserEventsCollect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleApiHttpBody class];
  query.loggingName = @"discoveryengine.projects.locations.userEvents.collect";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsLocationsUserEventsWrite

@dynamic parent, writeAsync;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/userEvents:write";
  GTLRDiscoveryEngineQuery_ProjectsLocationsUserEventsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1UserEvent class];
  query.loggingName = @"discoveryengine.projects.locations.userEvents.write";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRDiscoveryEngineQuery_ProjectsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleProtobufEmpty class];
  query.loggingName = @"discoveryengine.projects.operations.cancel";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDiscoveryEngineQuery_ProjectsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.operations.get";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDiscoveryEngineQuery_ProjectsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"discoveryengine.projects.operations.list";
  return query;
}

@end

@implementation GTLRDiscoveryEngineQuery_ProjectsProvision

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDiscoveryEngine_GoogleCloudDiscoveryengineV1ProvisionProjectRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:provision";
  GTLRDiscoveryEngineQuery_ProjectsProvision *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDiscoveryEngine_GoogleLongrunningOperation class];
  query.loggingName = @"discoveryengine.projects.provision";
  return query;
}

@end
