// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Data Labeling API (datalabeling/v1beta1)
// Description:
//   Public API for Google Cloud AI Data Labeling Service.
// Documentation:
//   https://cloud.google.com/data-labeling/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDataLabelingObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Data Labeling query classes.
 */
@interface GTLRDataLabelingQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates an annotation spec set by providing a set of labels.
 *
 *  Method: datalabeling.projects.annotationSpecSets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsCreate : GTLRDataLabelingQuery

/**
 *  Required. AnnotationSpecSet resource parent, format: projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
 *
 *  Creates an annotation spec set by providing a set of labels.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest
 *    to include in the query.
 *  @param parent Required. AnnotationSpecSet resource parent, format:
 *    projects/{project_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an annotation spec set by resource name.
 *
 *  Method: datalabeling.projects.annotationSpecSets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsDelete : GTLRDataLabelingQuery

/**
 *  Required. AnnotationSpec resource name, format:
 *  `projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Deletes an annotation spec set by resource name.
 *
 *  @param name Required. AnnotationSpec resource name, format:
 *    `projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}`.
 *
 *  @return GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an annotation spec set by resource name.
 *
 *  Method: datalabeling.projects.annotationSpecSets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsGet : GTLRDataLabelingQuery

/**
 *  Required. AnnotationSpecSet resource name, format:
 *  projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1AnnotationSpecSet.
 *
 *  Gets an annotation spec set by resource name.
 *
 *  @param name Required. AnnotationSpecSet resource name, format:
 *    projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists annotation spec sets for a project. Pagination is supported.
 *
 *  Method: datalabeling.projects.annotationSpecSets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsList : GTLRDataLabelingQuery

/** Optional. Filter is not supported at this moment. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListAnnotationSpecSetsResponse.next_page_token of the
 *  previous [DataLabelingService.ListAnnotationSpecSets] call. Return first
 *  page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Parent of AnnotationSpecSet resource, format:
 *  projects/{project_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse.
 *
 *  Lists annotation spec sets for a project. Pagination is supported.
 *
 *  @param parent Required. Parent of AnnotationSpecSet resource, format:
 *    projects/{project_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsAnnotationSpecSetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a data item in a dataset by resource name. This API can be called after
 *  data are imported into dataset.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.dataItems.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsDataItemsGet : GTLRDataLabelingQuery

/**
 *  Required. The name of the data item to get, format:
 *  projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1DataItem.
 *
 *  Gets a data item in a dataset by resource name. This API can be called after
 *  data are imported into dataset.
 *
 *  @param name Required. The name of the data item to get, format:
 *    projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsDataItemsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists data items in a dataset. This API can be called after data are
 *  imported into dataset. Pagination is supported.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.dataItems.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsDataItemsList : GTLRDataLabelingQuery

/** Optional. Filter is not supported at this moment. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListDataItemsResponse.next_page_token of the previous
 *  [DataLabelingService.ListDataItems] call. Return first page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the dataset to list data items, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListDataItemsResponse.
 *
 *  Lists data items in a dataset. This API can be called after data are
 *  imported into dataset. Pagination is supported.
 *
 *  @param parent Required. Name of the dataset to list data items, format:
 *    projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsDataItemsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes an annotated dataset by resource name.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsDelete : GTLRDataLabelingQuery

/**
 *  Required. Name of the annotated dataset to delete, format:
 *  projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
 *  {annotated_dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Deletes an annotated dataset by resource name.
 *
 *  @param name Required. Name of the annotated dataset to delete, format:
 *    projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
 *    {annotated_dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an example by resource name, including both data and annotation.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.examples.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsExamplesGet : GTLRDataLabelingQuery

/**
 *  Optional. An expression for filtering Examples. Filter by
 *  annotation_spec.display_name is supported. Format
 *  "annotation_spec.display_name = {display_name}"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Required. Name of example, format:
 *  projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
 *  {annotated_dataset_id}/examples/{example_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1Example.
 *
 *  Gets an example by resource name, including both data and annotation.
 *
 *  @param name Required. Name of example, format:
 *    projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
 *    {annotated_dataset_id}/examples/{example_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsExamplesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists examples in an annotated dataset. Pagination is supported.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.examples.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsExamplesList : GTLRDataLabelingQuery

/**
 *  Optional. An expression for filtering Examples. For annotated datasets that
 *  have annotation spec set, filter by annotation_spec.display_name is
 *  supported. Format "annotation_spec.display_name = {display_name}"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListExamplesResponse.next_page_token of the previous
 *  [DataLabelingService.ListExamples] call. Return first page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Example resource parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListExamplesResponse.
 *
 *  Lists examples in an annotated dataset. Pagination is supported.
 *
 *  @param parent Required. Example resource parent.
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsExamplesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Delete a FeedbackThread.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsDelete : GTLRDataLabelingQuery

/**
 *  Required. Name of the FeedbackThread that is going to be deleted. Format:
 *  'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Delete a FeedbackThread.
 *
 *  @param name Required. Name of the FeedbackThread that is going to be
 *    deleted. Format:
 *    'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'.
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Create a FeedbackMessage object.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesCreate : GTLRDataLabelingQuery

/**
 *  Required. FeedbackMessage resource parent, format:
 *  projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Create a FeedbackMessage object.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1FeedbackMessage to include
 *    in the query.
 *  @param parent Required. FeedbackMessage resource parent, format:
 *    projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}.
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1FeedbackMessage *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a FeedbackMessage.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesDelete : GTLRDataLabelingQuery

/**
 *  Required. Name of the FeedbackMessage that is going to be deleted. Format:
 *  'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Delete a FeedbackMessage.
 *
 *  @param name Required. Name of the FeedbackMessage that is going to be
 *    deleted. Format:
 *    'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'.
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get a FeedbackMessage object.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesGet : GTLRDataLabelingQuery

/**
 *  Required. Name of the feedback. Format:
 *  'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1FeedbackMessage.
 *
 *  Get a FeedbackMessage object.
 *
 *  @param name Required. Name of the feedback. Format:
 *    'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'.
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List FeedbackMessages with pagination.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesList : GTLRDataLabelingQuery

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListFeedbackMessages.next_page_token of the previous
 *  [DataLabelingService.ListFeedbackMessages] call. Return first page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. FeedbackMessage resource parent. Format:
 *  "projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse.
 *
 *  List FeedbackMessages with pagination.
 *
 *  @param parent Required. FeedbackMessage resource parent. Format:
 *    "projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsFeedbackMessagesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Get a FeedbackThread object.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsGet : GTLRDataLabelingQuery

/**
 *  Required. Name of the feedback. Format:
 *  'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1FeedbackThread.
 *
 *  Get a FeedbackThread object.
 *
 *  @param name Required. Name of the feedback. Format:
 *    'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'.
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List FeedbackThreads with pagination.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsList : GTLRDataLabelingQuery

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListFeedbackThreads.next_page_token of the previous
 *  [DataLabelingService.ListFeedbackThreads] call. Return first page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. FeedbackThread resource parent. Format:
 *  "projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse.
 *
 *  List FeedbackThreads with pagination.
 *
 *  @param parent Required. FeedbackThread resource parent. Format:
 *    "projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsFeedbackThreadsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets an annotated dataset by resource name.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsGet : GTLRDataLabelingQuery

/**
 *  Required. Name of the annotated dataset to get, format:
 *  projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
 *  {annotated_dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1AnnotatedDataset.
 *
 *  Gets an annotated dataset by resource name.
 *
 *  @param name Required. Name of the annotated dataset to get, format:
 *    projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
 *    {annotated_dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists annotated datasets for a dataset. Pagination is supported.
 *
 *  Method: datalabeling.projects.datasets.annotatedDatasets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsList : GTLRDataLabelingQuery

/** Optional. Filter is not supported at this moment. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListAnnotatedDatasetsResponse.next_page_token of the
 *  previous [DataLabelingService.ListAnnotatedDatasets] call. Return first page
 *  if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the dataset to list annotated datasets, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse.
 *
 *  Lists annotated datasets for a dataset. Pagination is supported.
 *
 *  @param parent Required. Name of the dataset to list annotated datasets,
 *    format: projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsAnnotatedDatasetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates dataset. If success return a Dataset resource.
 *
 *  Method: datalabeling.projects.datasets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsCreate : GTLRDataLabelingQuery

/** Required. Dataset resource parent, format: projects/{project_id} */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1Dataset.
 *
 *  Creates dataset. If success return a Dataset resource.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateDatasetRequest to
 *    include in the query.
 *  @param parent Required. Dataset resource parent, format:
 *    projects/{project_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateDatasetRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a data item in a dataset by resource name. This API can be called after
 *  data are imported into dataset.
 *
 *  Method: datalabeling.projects.datasets.dataItems.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsDataItemsGet : GTLRDataLabelingQuery

/**
 *  Required. The name of the data item to get, format:
 *  projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1DataItem.
 *
 *  Gets a data item in a dataset by resource name. This API can be called after
 *  data are imported into dataset.
 *
 *  @param name Required. The name of the data item to get, format:
 *    projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsDataItemsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists data items in a dataset. This API can be called after data are
 *  imported into dataset. Pagination is supported.
 *
 *  Method: datalabeling.projects.datasets.dataItems.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsDataItemsList : GTLRDataLabelingQuery

/** Optional. Filter is not supported at this moment. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListDataItemsResponse.next_page_token of the previous
 *  [DataLabelingService.ListDataItems] call. Return first page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the dataset to list data items, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListDataItemsResponse.
 *
 *  Lists data items in a dataset. This API can be called after data are
 *  imported into dataset. Pagination is supported.
 *
 *  @param parent Required. Name of the dataset to list data items, format:
 *    projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsDataItemsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a dataset by resource name.
 *
 *  Method: datalabeling.projects.datasets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsDelete : GTLRDataLabelingQuery

/**
 *  Required. Dataset resource name, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Deletes a dataset by resource name.
 *
 *  @param name Required. Dataset resource name, format:
 *    projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Searches example comparisons from an evaluation. The return format is a list
 *  of example comparisons that show ground truth and prediction(s) for a single
 *  input. Search by providing an evaluation ID.
 *
 *  Method: datalabeling.projects.datasets.evaluations.exampleComparisons.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsEvaluationsExampleComparisonsSearch : GTLRDataLabelingQuery

/**
 *  Required. Name of the Evaluation resource to search for example comparisons
 *  from. Format: "projects/{project_id}/datasets/{dataset_id}/evaluations/
 *  {evaluation_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse.
 *
 *  Searches example comparisons from an evaluation. The return format is a list
 *  of example comparisons that show ground truth and prediction(s) for a single
 *  input. Search by providing an evaluation ID.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest
 *    to include in the query.
 *  @param parent Required. Name of the Evaluation resource to search for
 *    example comparisons from. Format:
 *    "projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsEvaluationsExampleComparisonsSearch
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets an evaluation by resource name (to search, use
 *  projects.evaluations.search).
 *
 *  Method: datalabeling.projects.datasets.evaluations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsEvaluationsGet : GTLRDataLabelingQuery

/**
 *  Required. Name of the evaluation. Format: "projects/{project_id}/datasets/
 *  {dataset_id}/evaluations/{evaluation_id}'
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1Evaluation.
 *
 *  Gets an evaluation by resource name (to search, use
 *  projects.evaluations.search).
 *
 *  @param name Required. Name of the evaluation. Format:
 *    "projects/{project_id}/datasets/ {dataset_id}/evaluations/{evaluation_id}'
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsEvaluationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Exports data and annotations from dataset.
 *
 *  Method: datalabeling.projects.datasets.exportData
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsExportData : GTLRDataLabelingQuery

/**
 *  Required. Dataset resource name, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Exports data and annotations from dataset.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ExportDataRequest to
 *    include in the query.
 *  @param name Required. Dataset resource name, format:
 *    projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsExportData
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ExportDataRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets dataset by resource name.
 *
 *  Method: datalabeling.projects.datasets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsGet : GTLRDataLabelingQuery

/**
 *  Required. Dataset resource name, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1Dataset.
 *
 *  Gets dataset by resource name.
 *
 *  @param name Required. Dataset resource name, format:
 *    projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts a labeling task for image. The type of image labeling task is
 *  configured by feature in the request.
 *
 *  Method: datalabeling.projects.datasets.image.label
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsImageLabel : GTLRDataLabelingQuery

/**
 *  Required. Name of the dataset to request labeling task, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Starts a labeling task for image. The type of image labeling task is
 *  configured by feature in the request.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1LabelImageRequest to
 *    include in the query.
 *  @param parent Required. Name of the dataset to request labeling task,
 *    format: projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsImageLabel
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1LabelImageRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Imports data into dataset based on source locations defined in request. It
 *  can be called multiple times for the same dataset. Each dataset can only
 *  have one long running operation running on it. For example, no labeling task
 *  (also long running operation) can be started while importing is still
 *  ongoing. Vice versa.
 *
 *  Method: datalabeling.projects.datasets.importData
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsImportData : GTLRDataLabelingQuery

/**
 *  Required. Dataset resource name, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Imports data into dataset based on source locations defined in request. It
 *  can be called multiple times for the same dataset. Each dataset can only
 *  have one long running operation running on it. For example, no labeling task
 *  (also long running operation) can be started while importing is still
 *  ongoing. Vice versa.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ImportDataRequest to
 *    include in the query.
 *  @param name Required. Dataset resource name, format:
 *    projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsImportData
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ImportDataRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists datasets under a project. Pagination is supported.
 *
 *  Method: datalabeling.projects.datasets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsList : GTLRDataLabelingQuery

/** Optional. Filter on dataset is not supported at this moment. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListDatasetsResponse.next_page_token of the previous
 *  [DataLabelingService.ListDatasets] call. Returns the first page if empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Dataset resource parent, format: projects/{project_id} */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListDatasetsResponse.
 *
 *  Lists datasets under a project. Pagination is supported.
 *
 *  @param parent Required. Dataset resource parent, format:
 *    projects/{project_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts a labeling task for text. The type of text labeling task is
 *  configured by feature in the request.
 *
 *  Method: datalabeling.projects.datasets.text.label
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsTextLabel : GTLRDataLabelingQuery

/**
 *  Required. Name of the data set to request labeling task, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Starts a labeling task for text. The type of text labeling task is
 *  configured by feature in the request.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1LabelTextRequest to include
 *    in the query.
 *  @param parent Required. Name of the data set to request labeling task,
 *    format: projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsTextLabel
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1LabelTextRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Starts a labeling task for video. The type of video labeling task is
 *  configured by feature in the request.
 *
 *  Method: datalabeling.projects.datasets.video.label
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsDatasetsVideoLabel : GTLRDataLabelingQuery

/**
 *  Required. Name of the dataset to request labeling task, format:
 *  projects/{project_id}/datasets/{dataset_id}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Starts a labeling task for video. The type of video labeling task is
 *  configured by feature in the request.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1LabelVideoRequest to
 *    include in the query.
 *  @param parent Required. Name of the dataset to request labeling task,
 *    format: projects/{project_id}/datasets/{dataset_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsDatasetsVideoLabel
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1LabelVideoRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates an evaluation job.
 *
 *  Method: datalabeling.projects.evaluationJobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationJobsCreate : GTLRDataLabelingQuery

/**
 *  Required. Evaluation job resource parent. Format: "projects/{project_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1EvaluationJob.
 *
 *  Creates an evaluation job.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest
 *    to include in the query.
 *  @param parent Required. Evaluation job resource parent. Format:
 *    "projects/{project_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Stops and deletes an evaluation job.
 *
 *  Method: datalabeling.projects.evaluationJobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationJobsDelete : GTLRDataLabelingQuery

/**
 *  Required. Name of the evaluation job that is going to be deleted. Format:
 *  "projects/{project_id}/evaluationJobs/{evaluation_job_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Stops and deletes an evaluation job.
 *
 *  @param name Required. Name of the evaluation job that is going to be
 *    deleted. Format:
 *    "projects/{project_id}/evaluationJobs/{evaluation_job_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an evaluation job by resource name.
 *
 *  Method: datalabeling.projects.evaluationJobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationJobsGet : GTLRDataLabelingQuery

/**
 *  Required. Name of the evaluation job. Format: "projects/{project_id}
 *  /evaluationJobs/{evaluation_job_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1EvaluationJob.
 *
 *  Gets an evaluation job by resource name.
 *
 *  @param name Required. Name of the evaluation job. Format:
 *    "projects/{project_id} /evaluationJobs/{evaluation_job_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all evaluation jobs within a project with possible filters. Pagination
 *  is supported.
 *
 *  Method: datalabeling.projects.evaluationJobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationJobsList : GTLRDataLabelingQuery

/**
 *  Optional. You can filter the jobs to list by model_id (also known as
 *  model_name, as described in EvaluationJob.modelVersion) or by evaluation job
 *  state (as described in EvaluationJob.state). To filter by both criteria, use
 *  the `AND` operator or the `OR` operator. For example, you can use the
 *  following string for your filter: "evaluation_job.model_id = {model_name}
 *  AND evaluation_job.state = {evaluation_job_state}"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by the nextPageToken in the response to the previous
 *  request. The request returns the first page if this is empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Evaluation job resource parent. Format: "projects/{project_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse.
 *
 *  Lists all evaluation jobs within a project with possible filters. Pagination
 *  is supported.
 *
 *  @param parent Required. Evaluation job resource parent. Format:
 *    "projects/{project_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an evaluation job. You can only update certain fields of the job's
 *  EvaluationJobConfig: `humanAnnotationConfig.instruction`, `exampleCount`,
 *  and `exampleSamplePercentage`. If you want to change any other aspect of the
 *  evaluation job, you must delete the job and create a new one.
 *
 *  Method: datalabeling.projects.evaluationJobs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationJobsPatch : GTLRDataLabelingQuery

/**
 *  Output only. After you create a job, Data Labeling Service assigns a name to
 *  the job with the following format: "projects/{project_id}/evaluationJobs/
 *  {evaluation_job_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Mask for which fields to update. You can only provide the
 *  following fields: * `evaluationJobConfig.humanAnnotationConfig.instruction`
 *  * `evaluationJobConfig.exampleCount` *
 *  `evaluationJobConfig.exampleSamplePercentage` You can provide more than one
 *  of these fields by separating them with commas.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1EvaluationJob.
 *
 *  Updates an evaluation job. You can only update certain fields of the job's
 *  EvaluationJobConfig: `humanAnnotationConfig.instruction`, `exampleCount`,
 *  and `exampleSamplePercentage`. If you want to change any other aspect of the
 *  evaluation job, you must delete the job and create a new one.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1EvaluationJob to include in
 *    the query.
 *  @param name Output only. After you create a job, Data Labeling Service
 *    assigns a name to the job with the following format:
 *    "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationJobsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1EvaluationJob *)object
                           name:(NSString *)name;

@end

/**
 *  Pauses an evaluation job. Pausing an evaluation job that is already in a
 *  `PAUSED` state is a no-op.
 *
 *  Method: datalabeling.projects.evaluationJobs.pause
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationJobsPause : GTLRDataLabelingQuery

/**
 *  Required. Name of the evaluation job that is going to be paused. Format:
 *  "projects/{project_id}/evaluationJobs/{evaluation_job_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Pauses an evaluation job. Pausing an evaluation job that is already in a
 *  `PAUSED` state is a no-op.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest
 *    to include in the query.
 *  @param name Required. Name of the evaluation job that is going to be paused.
 *    Format: "projects/{project_id}/evaluationJobs/{evaluation_job_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationJobsPause
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
 *  Resuming a running or scheduled evaluation job is a no-op.
 *
 *  Method: datalabeling.projects.evaluationJobs.resume
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationJobsResume : GTLRDataLabelingQuery

/**
 *  Required. Name of the evaluation job that is going to be resumed. Format:
 *  "projects/{project_id}/evaluationJobs/{evaluation_job_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
 *  Resuming a running or scheduled evaluation job is a no-op.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest
 *    to include in the query.
 *  @param name Required. Name of the evaluation job that is going to be
 *    resumed. Format:
 *    "projects/{project_id}/evaluationJobs/{evaluation_job_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationJobsResume
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Searches evaluations within a project.
 *
 *  Method: datalabeling.projects.evaluations.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsEvaluationsSearch : GTLRDataLabelingQuery

/**
 *  Optional. To search evaluations, you can filter by the following: *
 *  evaluation_job.evaluation_job_id (the last part of EvaluationJob.name) *
 *  evaluation_job.model_id (the {model_name} portion of
 *  EvaluationJob.modelVersion) * evaluation_job.evaluation_job_run_time_start
 *  (Minimum threshold for the evaluationJobRunTime that created the evaluation)
 *  * evaluation_job.evaluation_job_run_time_end (Maximum threshold for the
 *  evaluationJobRunTime that created the evaluation) * evaluation_job.job_state
 *  (EvaluationJob.state) * annotation_spec.display_name (the Evaluation
 *  contains a metric for the annotation spec with this displayName) To filter
 *  by multiple critiera, use the `AND` operator or the `OR` operator. The
 *  following examples shows a string that filters by several critiera:
 *  "evaluation_job.evaluation_job_id = {evaluation_job_id} AND
 *  evaluation_job.model_id = {model_name} AND
 *  evaluation_job.evaluation_job_run_time_start = {timestamp_1} AND
 *  evaluation_job.evaluation_job_run_time_end = {timestamp_2} AND
 *  annotation_spec.display_name = {display_name}"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by the nextPageToken of the response to a previous search
 *  request. If you don't specify this field, the API call requests the first
 *  page of the search.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Evaluation search parent (project ID). Format: "projects/
 *  {project_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse.
 *
 *  Searches evaluations within a project.
 *
 *  @param parent Required. Evaluation search parent (project ID). Format:
 *    "projects/ {project_id}"
 *
 *  @return GTLRDataLabelingQuery_ProjectsEvaluationsSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates an instruction for how data should be labeled.
 *
 *  Method: datalabeling.projects.instructions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsInstructionsCreate : GTLRDataLabelingQuery

/** Required. Instruction resource parent, format: projects/{project_id} */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Creates an instruction for how data should be labeled.
 *
 *  @param object The @c
 *    GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateInstructionRequest to
 *    include in the query.
 *  @param parent Required. Instruction resource parent, format:
 *    projects/{project_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsInstructionsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataLabeling_GoogleCloudDatalabelingV1beta1CreateInstructionRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an instruction object by resource name.
 *
 *  Method: datalabeling.projects.instructions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsInstructionsDelete : GTLRDataLabelingQuery

/**
 *  Required. Instruction resource name, format:
 *  projects/{project_id}/instructions/{instruction_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Deletes an instruction object by resource name.
 *
 *  @param name Required. Instruction resource name, format:
 *    projects/{project_id}/instructions/{instruction_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsInstructionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an instruction by resource name.
 *
 *  Method: datalabeling.projects.instructions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsInstructionsGet : GTLRDataLabelingQuery

/**
 *  Required. Instruction resource name, format:
 *  projects/{project_id}/instructions/{instruction_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleCloudDatalabelingV1beta1Instruction.
 *
 *  Gets an instruction by resource name.
 *
 *  @param name Required. Instruction resource name, format:
 *    projects/{project_id}/instructions/{instruction_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsInstructionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists instructions for a project. Pagination is supported.
 *
 *  Method: datalabeling.projects.instructions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsInstructionsList : GTLRDataLabelingQuery

/** Optional. Filter is not supported at this moment. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Requested page size. Server may return fewer results than
 *  requested. Default value is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results for the server to return.
 *  Typically obtained by ListInstructionsResponse.next_page_token of the
 *  previous [DataLabelingService.ListInstructions] call. Return first page if
 *  empty.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Instruction resource parent, format: projects/{project_id} */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataLabeling_GoogleCloudDatalabelingV1beta1ListInstructionsResponse.
 *
 *  Lists instructions for a project. Pagination is supported.
 *
 *  @param parent Required. Instruction resource parent, format:
 *    projects/{project_id}
 *
 *  @return GTLRDataLabelingQuery_ProjectsInstructionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: datalabeling.projects.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsOperationsCancel : GTLRDataLabelingQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRDataLabelingQuery_ProjectsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: datalabeling.projects.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsOperationsDelete : GTLRDataLabelingQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRDataLabelingQuery_ProjectsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: datalabeling.projects.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsOperationsGet : GTLRDataLabelingQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDataLabelingQuery_ProjectsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: datalabeling.projects.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataLabelingCloudPlatform
 */
@interface GTLRDataLabelingQuery_ProjectsOperationsList : GTLRDataLabelingQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDataLabeling_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDataLabelingQuery_ProjectsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
