// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Workflow Executions API (workflowexecutions/v1)
// Description:
//   Execute workflows created with Workflows API.
// Documentation:
//   https://cloud.google.com/workflows

#import <GoogleAPIClientForREST/GTLRWorkflowExecutionsObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRWorkflowExecutions_Execution.callLogLevel
NSString * const kGTLRWorkflowExecutions_Execution_CallLogLevel_CallLogLevelUnspecified = @"CALL_LOG_LEVEL_UNSPECIFIED";
NSString * const kGTLRWorkflowExecutions_Execution_CallLogLevel_LogAllCalls = @"LOG_ALL_CALLS";
NSString * const kGTLRWorkflowExecutions_Execution_CallLogLevel_LogErrorsOnly = @"LOG_ERRORS_ONLY";
NSString * const kGTLRWorkflowExecutions_Execution_CallLogLevel_LogNone = @"LOG_NONE";

// GTLRWorkflowExecutions_Execution.executionHistoryLevel
NSString * const kGTLRWorkflowExecutions_Execution_ExecutionHistoryLevel_ExecutionHistoryBasic = @"EXECUTION_HISTORY_BASIC";
NSString * const kGTLRWorkflowExecutions_Execution_ExecutionHistoryLevel_ExecutionHistoryDetailed = @"EXECUTION_HISTORY_DETAILED";
NSString * const kGTLRWorkflowExecutions_Execution_ExecutionHistoryLevel_ExecutionHistoryLevelUnspecified = @"EXECUTION_HISTORY_LEVEL_UNSPECIFIED";

// GTLRWorkflowExecutions_Execution.state
NSString * const kGTLRWorkflowExecutions_Execution_State_Active = @"ACTIVE";
NSString * const kGTLRWorkflowExecutions_Execution_State_Cancelled = @"CANCELLED";
NSString * const kGTLRWorkflowExecutions_Execution_State_Failed = @"FAILED";
NSString * const kGTLRWorkflowExecutions_Execution_State_Queued = @"QUEUED";
NSString * const kGTLRWorkflowExecutions_Execution_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRWorkflowExecutions_Execution_State_Succeeded = @"SUCCEEDED";
NSString * const kGTLRWorkflowExecutions_Execution_State_Unavailable = @"UNAVAILABLE";

// GTLRWorkflowExecutions_StateError.type
NSString * const kGTLRWorkflowExecutions_StateError_Type_KmsError = @"KMS_ERROR";
NSString * const kGTLRWorkflowExecutions_StateError_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRWorkflowExecutions_StepEntry.state
NSString * const kGTLRWorkflowExecutions_StepEntry_State_StateCancelled = @"STATE_CANCELLED";
NSString * const kGTLRWorkflowExecutions_StepEntry_State_StateFailed = @"STATE_FAILED";
NSString * const kGTLRWorkflowExecutions_StepEntry_State_StateInProgress = @"STATE_IN_PROGRESS";
NSString * const kGTLRWorkflowExecutions_StepEntry_State_StateSucceeded = @"STATE_SUCCEEDED";
NSString * const kGTLRWorkflowExecutions_StepEntry_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWorkflowExecutions_StepEntry.stepType
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepAssign = @"STEP_ASSIGN";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepCall = @"STEP_CALL";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepCondition = @"STEP_CONDITION";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepConnectorCall = @"STEP_CONNECTOR_CALL";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepExcept = @"STEP_EXCEPT";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepFor = @"STEP_FOR";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepForIteration = @"STEP_FOR_ITERATION";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepGoto = @"STEP_GOTO";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepParallelBranch = @"STEP_PARALLEL_BRANCH";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepParallelBranchEntry = @"STEP_PARALLEL_BRANCH_ENTRY";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepParallelFor = @"STEP_PARALLEL_FOR";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepRaise = @"STEP_RAISE";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepRetry = @"STEP_RETRY";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepReturn = @"STEP_RETURN";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepStdLibCall = @"STEP_STD_LIB_CALL";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepSubworkflowCall = @"STEP_SUBWORKFLOW_CALL";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepSwitch = @"STEP_SWITCH";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepTry = @"STEP_TRY";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepTryRetryExcept = @"STEP_TRY_RETRY_EXCEPT";
NSString * const kGTLRWorkflowExecutions_StepEntry_StepType_StepTypeUnspecified = @"STEP_TYPE_UNSPECIFIED";

// GTLRWorkflowExecutions_StepEntryMetadata.progressType
NSString * const kGTLRWorkflowExecutions_StepEntryMetadata_ProgressType_ProgressTypeFor = @"PROGRESS_TYPE_FOR";
NSString * const kGTLRWorkflowExecutions_StepEntryMetadata_ProgressType_ProgressTypeParallelBranch = @"PROGRESS_TYPE_PARALLEL_BRANCH";
NSString * const kGTLRWorkflowExecutions_StepEntryMetadata_ProgressType_ProgressTypeParallelFor = @"PROGRESS_TYPE_PARALLEL_FOR";
NSString * const kGTLRWorkflowExecutions_StepEntryMetadata_ProgressType_ProgressTypeRetry = @"PROGRESS_TYPE_RETRY";
NSString * const kGTLRWorkflowExecutions_StepEntryMetadata_ProgressType_ProgressTypeSwitch = @"PROGRESS_TYPE_SWITCH";
NSString * const kGTLRWorkflowExecutions_StepEntryMetadata_ProgressType_ProgressTypeUnspecified = @"PROGRESS_TYPE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Callback
//

@implementation GTLRWorkflowExecutions_Callback
@dynamic availablePayloads, method, name, waiters;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"availablePayloads" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_CancelExecutionRequest
//

@implementation GTLRWorkflowExecutions_CancelExecutionRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_DeleteExecutionHistoryRequest
//

@implementation GTLRWorkflowExecutions_DeleteExecutionHistoryRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Empty
//

@implementation GTLRWorkflowExecutions_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Error
//

@implementation GTLRWorkflowExecutions_Error
@dynamic context, payload, stackTrace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Exception
//

@implementation GTLRWorkflowExecutions_Exception
@dynamic payload;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Execution
//

@implementation GTLRWorkflowExecutions_Execution
@dynamic argument, callLogLevel, createTime,
         disableConcurrencyQuotaOverflowBuffering, duration, endTime, error,
         executionHistoryLevel, labels, name, result, startTime, state,
         stateError, status, workflowRevisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Execution_Labels
//

@implementation GTLRWorkflowExecutions_Execution_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_ExportDataResponse
//

@implementation GTLRWorkflowExecutions_ExportDataResponse
@dynamic data;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_ListCallbacksResponse
//

@implementation GTLRWorkflowExecutions_ListCallbacksResponse
@dynamic callbacks, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"callbacks" : [GTLRWorkflowExecutions_Callback class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"callbacks";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_ListExecutionsResponse
//

@implementation GTLRWorkflowExecutions_ListExecutionsResponse
@dynamic executions, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"executions" : [GTLRWorkflowExecutions_Execution class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"executions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_ListStepEntriesResponse
//

@implementation GTLRWorkflowExecutions_ListStepEntriesResponse
@dynamic nextPageToken, stepEntries, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"stepEntries" : [GTLRWorkflowExecutions_StepEntry class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"stepEntries";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_NavigationInfo
//

@implementation GTLRWorkflowExecutions_NavigationInfo
@dynamic children, next, parent, previous;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"children" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Position
//

@implementation GTLRWorkflowExecutions_Position
@dynamic column, length, line;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_PubsubMessage
//

@implementation GTLRWorkflowExecutions_PubsubMessage
@dynamic attributes, data, messageId, orderingKey, publishTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_PubsubMessage_Attributes
//

@implementation GTLRWorkflowExecutions_PubsubMessage_Attributes

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_StackTrace
//

@implementation GTLRWorkflowExecutions_StackTrace
@dynamic elements;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"elements" : [GTLRWorkflowExecutions_StackTraceElement class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_StackTraceElement
//

@implementation GTLRWorkflowExecutions_StackTraceElement
@dynamic position, routine, step;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_StateError
//

@implementation GTLRWorkflowExecutions_StateError
@dynamic details, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Status
//

@implementation GTLRWorkflowExecutions_Status
@dynamic currentSteps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"currentSteps" : [GTLRWorkflowExecutions_Step class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_Step
//

@implementation GTLRWorkflowExecutions_Step
@dynamic routine, step;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_StepEntry
//

@implementation GTLRWorkflowExecutions_StepEntry
@dynamic createTime, entryId, exception, name, navigationInfo, routine, state,
         step, stepEntryMetadata, stepType, updateTime, variableData;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_StepEntryMetadata
//

@implementation GTLRWorkflowExecutions_StepEntryMetadata
@dynamic expectedIteration, progressNumber, progressType, threadId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_TriggerPubsubExecutionRequest
//

@implementation GTLRWorkflowExecutions_TriggerPubsubExecutionRequest
@dynamic deliveryAttempt, GCPCloudEventsMode, message, subscription;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_VariableData
//

@implementation GTLRWorkflowExecutions_VariableData
@dynamic variables;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWorkflowExecutions_VariableData_Variables
//

@implementation GTLRWorkflowExecutions_VariableData_Variables

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end
