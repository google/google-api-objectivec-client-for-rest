// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Display & Video 360 API (displayvideo/v2)
// Description:
//   Display & Video 360 API allows users to automate complex Display & Video
//   360 workflows, such as creating insertion orders and setting targeting
//   options for individual line items.
// Documentation:
//   https://developers.google.com/display-video/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig;
@class GTLRDisplayVideo_Adloox;
@class GTLRDisplayVideo_Advertiser;
@class GTLRDisplayVideo_AdvertiserAdServerConfig;
@class GTLRDisplayVideo_AdvertiserBillingConfig;
@class GTLRDisplayVideo_AdvertiserCreativeConfig;
@class GTLRDisplayVideo_AdvertiserDataAccessConfig;
@class GTLRDisplayVideo_AdvertiserGeneralConfig;
@class GTLRDisplayVideo_AdvertiserSdfConfig;
@class GTLRDisplayVideo_AdvertiserTargetingConfig;
@class GTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_AgeRangeTargetingOptionDetails;
@class GTLRDisplayVideo_AppAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_AppCategoryAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_AppCategoryTargetingOptionDetails;
@class GTLRDisplayVideo_Asset;
@class GTLRDisplayVideo_AssetAssociation;
@class GTLRDisplayVideo_AssignedInventorySource;
@class GTLRDisplayVideo_AssignedLocation;
@class GTLRDisplayVideo_AssignedTargetingOption;
@class GTLRDisplayVideo_AssignedUserRole;
@class GTLRDisplayVideo_AudienceGroupAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_AudioContentTypeTargetingOptionDetails;
@class GTLRDisplayVideo_AudioVideoOffset;
@class GTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails;
@class GTLRDisplayVideo_BiddingStrategy;
@class GTLRDisplayVideo_BrowserAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_BrowserTargetingOptionDetails;
@class GTLRDisplayVideo_BudgetSummary;
@class GTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_BusinessChainSearchTerms;
@class GTLRDisplayVideo_BusinessChainTargetingOptionDetails;
@class GTLRDisplayVideo_Campaign;
@class GTLRDisplayVideo_CampaignBudget;
@class GTLRDisplayVideo_CampaignFlight;
@class GTLRDisplayVideo_CampaignGoal;
@class GTLRDisplayVideo_CarrierAndIspAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_CarrierAndIspTargetingOptionDetails;
@class GTLRDisplayVideo_CategoryAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_CategoryTargetingOptionDetails;
@class GTLRDisplayVideo_Channel;
@class GTLRDisplayVideo_ChannelAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_CmHybridConfig;
@class GTLRDisplayVideo_CmTrackingAd;
@class GTLRDisplayVideo_CombinedAudience;
@class GTLRDisplayVideo_CombinedAudienceGroup;
@class GTLRDisplayVideo_CombinedAudienceTargetingSetting;
@class GTLRDisplayVideo_ContactInfo;
@class GTLRDisplayVideo_ContactInfoList;
@class GTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ContentDurationTargetingOptionDetails;
@class GTLRDisplayVideo_ContentGenreAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ContentGenreTargetingOptionDetails;
@class GTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails;
@class GTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails;
@class GTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails;
@class GTLRDisplayVideo_ConversionCountingConfig;
@class GTLRDisplayVideo_CounterEvent;
@class GTLRDisplayVideo_CreateAssignedTargetingOptionsRequest;
@class GTLRDisplayVideo_Creative;
@class GTLRDisplayVideo_CreativeConfig;
@class GTLRDisplayVideo_CustomBiddingAlgorithm;
@class GTLRDisplayVideo_CustomBiddingModelDetails;
@class GTLRDisplayVideo_CustomBiddingScript;
@class GTLRDisplayVideo_CustomBiddingScriptRef;
@class GTLRDisplayVideo_CustomList;
@class GTLRDisplayVideo_CustomListGroup;
@class GTLRDisplayVideo_CustomListTargetingSetting;
@class GTLRDisplayVideo_Date;
@class GTLRDisplayVideo_DateRange;
@class GTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest;
@class GTLRDisplayVideo_DeviceMakeModelAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_DeviceMakeModelTargetingOptionDetails;
@class GTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_DeviceTypeTargetingOptionDetails;
@class GTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails;
@class GTLRDisplayVideo_Dimensions;
@class GTLRDisplayVideo_DoubleVerify;
@class GTLRDisplayVideo_DoubleVerifyAppStarRating;
@class GTLRDisplayVideo_DoubleVerifyBrandSafetyCategories;
@class GTLRDisplayVideo_DoubleVerifyDisplayViewability;
@class GTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic;
@class GTLRDisplayVideo_DoubleVerifyVideoViewability;
@class GTLRDisplayVideo_EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate;
@class GTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_EnvironmentTargetingOptionDetails;
@class GTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ExchangeConfig;
@class GTLRDisplayVideo_ExchangeConfigEnabledExchange;
@class GTLRDisplayVideo_ExchangeReviewStatus;
@class GTLRDisplayVideo_ExchangeTargetingOptionDetails;
@class GTLRDisplayVideo_ExitEvent;
@class GTLRDisplayVideo_FirstAndThirdPartyAudience;
@class GTLRDisplayVideo_FirstAndThirdPartyAudienceGroup;
@class GTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting;
@class GTLRDisplayVideo_FixedBidStrategy;
@class GTLRDisplayVideo_FloodlightGroup_CustomVariables;
@class GTLRDisplayVideo_FrequencyCap;
@class GTLRDisplayVideo_GenderAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_GenderTargetingOptionDetails;
@class GTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_GeoRegionSearchTerms;
@class GTLRDisplayVideo_GeoRegionTargetingOptionDetails;
@class GTLRDisplayVideo_GoogleAudience;
@class GTLRDisplayVideo_GoogleAudienceGroup;
@class GTLRDisplayVideo_GoogleAudienceTargetingSetting;
@class GTLRDisplayVideo_GuaranteedOrder;
@class GTLRDisplayVideo_GuaranteedOrderStatus;
@class GTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails;
@class GTLRDisplayVideo_IdFilter;
@class GTLRDisplayVideo_InsertionOrder;
@class GTLRDisplayVideo_InsertionOrderBudget;
@class GTLRDisplayVideo_InsertionOrderBudgetSegment;
@class GTLRDisplayVideo_IntegralAdScience;
@class GTLRDisplayVideo_IntegrationDetails;
@class GTLRDisplayVideo_InventorySource;
@class GTLRDisplayVideo_InventorySourceAccessors;
@class GTLRDisplayVideo_InventorySourceAccessorsAdvertiserAccessors;
@class GTLRDisplayVideo_InventorySourceAccessorsPartnerAccessor;
@class GTLRDisplayVideo_InventorySourceAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_InventorySourceDisplayCreativeConfig;
@class GTLRDisplayVideo_InventorySourceFilter;
@class GTLRDisplayVideo_InventorySourceGroup;
@class GTLRDisplayVideo_InventorySourceGroupAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_InventorySourceStatus;
@class GTLRDisplayVideo_InventorySourceVideoCreativeConfig;
@class GTLRDisplayVideo_Invoice;
@class GTLRDisplayVideo_KeywordAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_LanguageAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_LanguageTargetingOptionDetails;
@class GTLRDisplayVideo_LineItem;
@class GTLRDisplayVideo_LineItemAssignedTargetingOption;
@class GTLRDisplayVideo_LineItemBudget;
@class GTLRDisplayVideo_LineItemFlight;
@class GTLRDisplayVideo_LocationList;
@class GTLRDisplayVideo_LookbackWindow;
@class GTLRDisplayVideo_ManualTrigger;
@class GTLRDisplayVideo_MaximizeSpendBidStrategy;
@class GTLRDisplayVideo_MeasurementConfig;
@class GTLRDisplayVideo_MobileApp;
@class GTLRDisplayVideo_MobileDeviceIdList;
@class GTLRDisplayVideo_Money;
@class GTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_NativeContentPositionTargetingOptionDetails;
@class GTLRDisplayVideo_NegativeKeyword;
@class GTLRDisplayVideo_NegativeKeywordList;
@class GTLRDisplayVideo_NegativeKeywordListAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ObaIcon;
@class GTLRDisplayVideo_OmidAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_OmidTargetingOptionDetails;
@class GTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_OnScreenPositionTargetingOptionDetails;
@class GTLRDisplayVideo_OperatingSystemAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_OperatingSystemTargetingOptionDetails;
@class GTLRDisplayVideo_Operation_Metadata;
@class GTLRDisplayVideo_Operation_Response;
@class GTLRDisplayVideo_Pacing;
@class GTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ParentalStatusTargetingOptionDetails;
@class GTLRDisplayVideo_ParentEntityFilter;
@class GTLRDisplayVideo_Partner;
@class GTLRDisplayVideo_PartnerAdServerConfig;
@class GTLRDisplayVideo_PartnerCost;
@class GTLRDisplayVideo_PartnerDataAccessConfig;
@class GTLRDisplayVideo_PartnerGeneralConfig;
@class GTLRDisplayVideo_PartnerRevenueModel;
@class GTLRDisplayVideo_PerformanceGoal;
@class GTLRDisplayVideo_PerformanceGoalBidStrategy;
@class GTLRDisplayVideo_PoiAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_PoiSearchTerms;
@class GTLRDisplayVideo_PoiTargetingOptionDetails;
@class GTLRDisplayVideo_PrismaConfig;
@class GTLRDisplayVideo_PrismaCpeCode;
@class GTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_PublisherReviewStatus;
@class GTLRDisplayVideo_RateDetails;
@class GTLRDisplayVideo_RegionalLocationListAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ReviewStatusInfo;
@class GTLRDisplayVideo_ScriptError;
@class GTLRDisplayVideo_SdfConfig;
@class GTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails;
@class GTLRDisplayVideo_Site;
@class GTLRDisplayVideo_Status;
@class GTLRDisplayVideo_Status_Details_Item;
@class GTLRDisplayVideo_SubExchangeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_SubExchangeTargetingOptionDetails;
@class GTLRDisplayVideo_TargetingExpansionConfig;
@class GTLRDisplayVideo_TargetingOption;
@class GTLRDisplayVideo_ThirdPartyOnlyConfig;
@class GTLRDisplayVideo_ThirdPartyUrl;
@class GTLRDisplayVideo_ThirdPartyVendorConfig;
@class GTLRDisplayVideo_ThirdPartyVerifierAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_TimeRange;
@class GTLRDisplayVideo_TimerEvent;
@class GTLRDisplayVideo_TrackingFloodlightActivityConfig;
@class GTLRDisplayVideo_Transcode;
@class GTLRDisplayVideo_UniversalAdId;
@class GTLRDisplayVideo_UrlAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_User;
@class GTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_UserRewardedContentTargetingOptionDetails;
@class GTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails;
@class GTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails;
@class GTLRDisplayVideo_ViewabilityTargetingOptionDetails;
@class GTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy;
@class GTLRDisplayVideo_YoutubeAndPartnersInventorySourceConfig;
@class GTLRDisplayVideo_YoutubeAndPartnersSettings;
@class GTLRDisplayVideo_YoutubeAndPartnersThirdPartyMeasurementSettings;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig.minimumDuration

/**
 *  0 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds0;
/**
 *  1 second.
 *
 *  Value: "VIDEO_DURATION_SECONDS_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds1;
/**
 *  10 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_10"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds10;
/**
 *  11 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_11"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds11;
/**
 *  12 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_12"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds12;
/**
 *  13 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_13"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds13;
/**
 *  14 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_14"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds14;
/**
 *  15 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_15"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds15;
/**
 *  2 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds2;
/**
 *  3 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds3;
/**
 *  30 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_30"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds30;
/**
 *  4 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds4;
/**
 *  45 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_45"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds45;
/**
 *  5 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds5;
/**
 *  6 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_6"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds6;
/**
 *  60 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_60"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds60;
/**
 *  7 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_7"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds7;
/**
 *  8 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds8;
/**
 *  9 seconds.
 *
 *  Value: "VIDEO_DURATION_SECONDS_9"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds9;
/**
 *  No duration value.
 *
 *  Value: "VIDEO_DURATION_SECONDS_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSecondsNone;
/**
 *  Value is not specified or is unknown in this version.
 *
 *  Value: "VIDEO_DURATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig.minimumQuartile

/**
 *  First quartile.
 *
 *  Value: "VIDEO_DURATION_QUARTILE_FIRST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileFirst;
/**
 *  Fourth quartile (completion).
 *
 *  Value: "VIDEO_DURATION_QUARTILE_FOURTH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileFourth;
/**
 *  No quartile value.
 *
 *  Value: "VIDEO_DURATION_QUARTILE_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileNone;
/**
 *  Second quartile (midpoint).
 *
 *  Value: "VIDEO_DURATION_QUARTILE_SECOND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileSecond;
/**
 *  Third quartile.
 *
 *  Value: "VIDEO_DURATION_QUARTILE_THIRD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileThird;
/**
 *  Value is not specified or is unknown in this version.
 *
 *  Value: "VIDEO_DURATION_QUARTILE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig.minimumViewability

/**
 *  0% viewable.
 *
 *  Value: "VIEWABILITY_PERCENT_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent0;
/**
 *  100% viewable.
 *
 *  Value: "VIEWABILITY_PERCENT_100"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent100;
/**
 *  25% viewable.
 *
 *  Value: "VIEWABILITY_PERCENT_25"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent25;
/**
 *  50% viewable.
 *
 *  Value: "VIEWABILITY_PERCENT_50"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent50;
/**
 *  75% viewable.
 *
 *  Value: "VIEWABILITY_PERCENT_75"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent75;
/**
 *  Value is not specified or is unknown in this version.
 *
 *  Value: "VIEWABILITY_PERCENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercentUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig.minimumVolume

/**
 *  0% volume.
 *
 *  Value: "VIDEO_VOLUME_PERCENT_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumVolume_VideoVolumePercent0;
/**
 *  10% volume.
 *
 *  Value: "VIDEO_VOLUME_PERCENT_10"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumVolume_VideoVolumePercent10;
/**
 *  Value is not specified or is unknown in this version.
 *
 *  Value: "VIDEO_VOLUME_PERCENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumVolume_VideoVolumePercentUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Adloox.excludedAdlooxCategories

/**
 *  This enum is only a placeholder and it doesn't specify any Adloox option.
 *
 *  Value: "ADLOOX_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_AdlooxUnspecified;
/**
 *  Adult content (hard).
 *
 *  Value: "ADULT_CONTENT_HARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_AdultContentHard;
/**
 *  Adult content (soft).
 *
 *  Value: "ADULT_CONTENT_SOFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_AdultContentSoft;
/**
 *  Borderline content.
 *
 *  Value: "BORDERLINE_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_BorderlineContent;
/**
 *  Discriminatory content.
 *
 *  Value: "DISCRIMINATORY_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_DiscriminatoryContent;
/**
 *  Fraud.
 *
 *  Value: "FRAUD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_Fraud;
/**
 *  Illegal content.
 *
 *  Value: "ILLEGAL_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_IllegalContent;
/**
 *  Low viewability domains.
 *
 *  Value: "LOW_VIEWABILITY_DOMAINS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_LowViewabilityDomains;
/**
 *  Violent content & weapons.
 *
 *  Value: "VIOLENT_CONTENT_WEAPONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Adloox_ExcludedAdlooxCategories_ViolentContentWeapons;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Advertiser.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails.ageRange

/**
 *  The age range of the audience is 18 to 20, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_18_20"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange1820;
/**
 *  The age range of the audience is 18 to 24.
 *
 *  Value: "AGE_RANGE_18_24"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange1824;
/**
 *  The age range of the audience is 21 to 24, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_21_24"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange2124;
/**
 *  The age range of the audience is 25 to 29, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_25_29"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange2529;
/**
 *  The age range of the audience is 25 to 34.
 *
 *  Value: "AGE_RANGE_25_34"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange2534;
/**
 *  The age range of the audience is 30 to 34, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_30_34"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange3034;
/**
 *  The age range of the audience is 35 to 39, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_35_39"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange3539;
/**
 *  The age range of the audience is 35 to 44.
 *
 *  Value: "AGE_RANGE_35_44"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange3544;
/**
 *  The age range of the audience is 40 to 44, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_40_44"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange4044;
/**
 *  The age range of the audience is 45 to 49, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_45_49"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange4549;
/**
 *  The age range of the audience is 45 to 54.
 *
 *  Value: "AGE_RANGE_45_54"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange4554;
/**
 *  The age range of the audience is 50 to 54, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_50_54"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange5054;
/**
 *  The age range of the audience is 55 to 59, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_55_59"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange5559;
/**
 *  The age range of the audience is 55 to 64.
 *
 *  Value: "AGE_RANGE_55_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange5564;
/**
 *  The age range of the audience is 60 to 64, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_60_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange6064;
/**
 *  The age range of the audience is 65 and up.
 *
 *  Value: "AGE_RANGE_65_PLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange65Plus;
/**
 *  The age range of the audience is unknown.
 *
 *  Value: "AGE_RANGE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRangeUnknown;
/**
 *  Default value when age range is not specified in this version. This enum is
 *  a placeholder for default value and does not represent a real age range
 *  option.
 *
 *  Value: "AGE_RANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRangeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AgeRangeTargetingOptionDetails.ageRange

/**
 *  The age range of the audience is 18 to 20, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_18_20"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange1820;
/**
 *  The age range of the audience is 18 to 24.
 *
 *  Value: "AGE_RANGE_18_24"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange1824;
/**
 *  The age range of the audience is 21 to 24, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_21_24"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange2124;
/**
 *  The age range of the audience is 25 to 29, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_25_29"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange2529;
/**
 *  The age range of the audience is 25 to 34.
 *
 *  Value: "AGE_RANGE_25_34"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange2534;
/**
 *  The age range of the audience is 30 to 34, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_30_34"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange3034;
/**
 *  The age range of the audience is 35 to 39, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_35_39"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange3539;
/**
 *  The age range of the audience is 35 to 44.
 *
 *  Value: "AGE_RANGE_35_44"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange3544;
/**
 *  The age range of the audience is 40 to 44, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_40_44"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange4044;
/**
 *  The age range of the audience is 45 to 49, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_45_49"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange4549;
/**
 *  The age range of the audience is 45 to 54.
 *
 *  Value: "AGE_RANGE_45_54"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange4554;
/**
 *  The age range of the audience is 50 to 54, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_50_54"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange5054;
/**
 *  The age range of the audience is 55 to 59, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_55_59"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange5559;
/**
 *  The age range of the audience is 55 to 64.
 *
 *  Value: "AGE_RANGE_55_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange5564;
/**
 *  The age range of the audience is 60 to 64, only supported for the AdGroup of
 *  YouTube Programmatic Reservation line item.
 *
 *  Value: "AGE_RANGE_60_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange6064;
/**
 *  The age range of the audience is 65 and up.
 *
 *  Value: "AGE_RANGE_65_PLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange65Plus;
/**
 *  The age range of the audience is unknown.
 *
 *  Value: "AGE_RANGE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRangeUnknown;
/**
 *  Default value when age range is not specified in this version. This enum is
 *  a placeholder for default value and does not represent a real age range
 *  option.
 *
 *  Value: "AGE_RANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRangeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AppAssignedTargetingOptionDetails.appPlatform

/**
 *  The app platform is Amazon FireTV.
 *
 *  Value: "APP_PLATFORM_AMAZON_FIRETV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAmazonFiretv;
/**
 *  The app platform is Android.
 *
 *  Value: "APP_PLATFORM_ANDROID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAndroid;
/**
 *  The app platform is Android TV.
 *
 *  Value: "APP_PLATFORM_ANDROID_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAndroidTv;
/**
 *  The app platform is Apple TV.
 *
 *  Value: "APP_PLATFORM_APPLE_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAppleTv;
/**
 *  The app platform is a CTV platform that is not explicitly listed elsewhere.
 *
 *  Value: "APP_PLATFORM_GENERIC_CTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformGenericCtv;
/**
 *  The app platform is iOS.
 *
 *  Value: "APP_PLATFORM_IOS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformIos;
/**
 *  The app platform is Playstation.
 *
 *  Value: "APP_PLATFORM_PLAYSTATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformPlaystation;
/**
 *  The app platform is Roku.
 *
 *  Value: "APP_PLATFORM_ROKU"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformRoku;
/**
 *  The app platform is Samsung TV.
 *
 *  Value: "APP_PLATFORM_SAMSUNG_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformSamsungTv;
/**
 *  Default value when app platform is not specified in this version. This enum
 *  is a placeholder for default value and does not represent a real platform
 *  option.
 *
 *  Value: "APP_PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformUnspecified;
/**
 *  The app platform is Xbox.
 *
 *  Value: "APP_PLATFORM_XBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformXbox;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AssetAssociation.role

/**
 *  The text that identifies the advertiser or brand name. The content must be
 *  UTF-8 encoded with a length of no more than 25 characters. This role is only
 *  supported in following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 *
 *  Value: "ASSET_ROLE_ADVERTISER_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleAdvertiserName;
/**
 *  The ID of an Android app in the Google play store. You can find this ID in
 *  the App’s Google Play Store URL after ‘id’. For example, in
 *  https://play.google.com/store/apps/details?id=com.company.appname the
 *  identifier is com.company.appname. This role is only supported in following
 *  creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`
 *
 *  Value: "ASSET_ROLE_ANDROID_APP_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleAndroidAppId;
/**
 *  The asset is a backup asset of the creative.
 *
 *  Value: "ASSET_ROLE_BACKUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleBackup;
/**
 *  Body text of a native creative. The content must be UTF-8 encoded with a
 *  length of no more than 90 characters. This role is only supported in
 *  following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 *
 *  Value: "ASSET_ROLE_BODY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleBody;
/**
 *  The text to use on the call-to-action button of a native creative. The
 *  content must be UTF-8 encoded with a length of no more than 15 characters.
 *  This role is only supported in following creative_type: *
 *  `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 *
 *  Value: "ASSET_ROLE_CALL_TO_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleCallToAction;
/**
 *  A short, friendly version of the landing page URL to show in the creative.
 *  This URL gives people an idea of where they'll arrive after they click on
 *  the creative. The content must be UTF-8 encoded with a length of no more
 *  than 30 characters. For example, if the landing page URL is
 *  'http://www.example.com/page', the caption URL can be 'example.com'. The
 *  protocol (http://) is optional, but the URL can't contain spaces or special
 *  characters. This role is only supported in following creative_type: *
 *  `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 *
 *  Value: "ASSET_ROLE_CAPTION_URL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleCaptionUrl;
/**
 *  The cover image of a native video creative. This role is only supported and
 *  required in following creative_type: * `CREATIVE_TYPE_VIDEO`
 *
 *  Value: "ASSET_ROLE_COVER_IMAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleCoverImage;
/**
 *  Headline of a native creative. The content must be UTF-8 encoded with a
 *  length of no more than 25 characters. This role is only supported in
 *  following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 *
 *  Value: "ASSET_ROLE_HEADLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleHeadline;
/**
 *  The icon of a creative. This role is only supported and required in
 *  following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`
 *
 *  Value: "ASSET_ROLE_ICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleIcon;
/**
 *  The ID of an iOS app in the Apple app store. This ID number can be found in
 *  the Apple App Store URL as the string of numbers directly after "id". For
 *  example, in https://apps.apple.com/us/app/gmail-email-by-google/id422689480
 *  the ID is 422689480. This role is only supported in following creative_type:
 *  * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`
 *
 *  Value: "ASSET_ROLE_IOS_APP_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleIosAppId;
/**
 *  Long body text of a native creative. The content must be UTF-8 encoded with
 *  a length of no more than 150 characters. This role is only supported in
 *  following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 *
 *  Value: "ASSET_ROLE_LONG_BODY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleLongBody;
/**
 *  Long headline of a native creative. The content must be UTF-8 encoded with a
 *  length of no more than 50 characters. This role is only supported in
 *  following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 *
 *  Value: "ASSET_ROLE_LONG_HEADLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleLongHeadline;
/**
 *  The asset is the main asset of the creative.
 *
 *  Value: "ASSET_ROLE_MAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleMain;
/**
 *  The asset is a polite load asset of the creative.
 *
 *  Value: "ASSET_ROLE_POLITE_LOAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRolePoliteLoad;
/**
 *  The purchase price of your app in the Google play store or iOS app store
 *  (for example, $5.99). Note that this value is not automatically synced with
 *  the actual value listed in the store. It will always be the one provided
 *  when save the creative. The content must be UTF-8 encoded with a length of
 *  no more than 15 characters. This role is only supported in following
 *  creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`
 *
 *  Value: "ASSET_ROLE_PRICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRolePrice;
/**
 *  The rating of an app in the Google play store or iOS app store. Note that
 *  this value is not automatically synced with the actual rating in the store.
 *  It will always be the one provided when save the creative. This role is only
 *  supported in following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE`
 *
 *  Value: "ASSET_ROLE_RATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleRating;
/**
 *  Asset role is not specified or is unknown in this version.
 *
 *  Value: "ASSET_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AssignedTargetingOption.inheritance

/**
 *  The inheritance is unspecified or unknown.
 *
 *  Value: "INHERITANCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_InheritanceUnspecified;
/**
 *  The assigned targeting option is inherited from advertiser targeting
 *  settings.
 *
 *  Value: "INHERITED_FROM_ADVERTISER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_InheritedFromAdvertiser;
/**
 *  The assigned targeting option is inherited from partner targeting settings.
 *
 *  Value: "INHERITED_FROM_PARTNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_InheritedFromPartner;
/**
 *  The assigned targeting option is not inherited from higher level entity.
 *
 *  Value: "NOT_INHERITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_NotInherited;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AssignedTargetingOption.targetingType

/**
 *  Target ads to a specific age range (for example, 18-24).
 *
 *  Value: "TARGETING_TYPE_AGE_RANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAgeRange;
/**
 *  Target a specific app (for example, Angry Birds).
 *
 *  Value: "TARGETING_TYPE_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeApp;
/**
 *  Target an app category (for example, education or puzzle games).
 *
 *  Value: "TARGETING_TYPE_APP_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAppCategory;
/**
 *  Target ads to an audience or groups of audiences. Singleton field, at most
 *  one can exist on a single Lineitem at a time.
 *
 *  Value: "TARGETING_TYPE_AUDIENCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAudienceGroup;
/**
 *  Target ads to a specific audio content type.
 *
 *  Value: "TARGETING_TYPE_AUDIO_CONTENT_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAudioContentType;
/**
 *  Target ads to ads.txt authorized sellers.
 *
 *  Value: "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAuthorizedSellerStatus;
/**
 *  Target ads to specific web browsers (for example, Chrome).
 *
 *  Value: "TARGETING_TYPE_BROWSER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeBrowser;
/**
 *  Target ads around locations of a business chain within a specific geo
 *  region.
 *
 *  Value: "TARGETING_TYPE_BUSINESS_CHAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeBusinessChain;
/**
 *  Target ads to a specific network carrier or internet service provider (ISP)
 *  (for example, Comcast or Orange).
 *
 *  Value: "TARGETING_TYPE_CARRIER_AND_ISP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeCarrierAndIsp;
/**
 *  Target ads to a specific content category (for example, arts &
 *  entertainment).
 *
 *  Value: "TARGETING_TYPE_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeCategory;
/**
 *  Target a channel (a custom group of related websites or apps).
 *
 *  Value: "TARGETING_TYPE_CHANNEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeChannel;
/**
 *  Target ads to a specific video content duration.
 *
 *  Value: "TARGETING_TYPE_CONTENT_DURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentDuration;
/**
 *  Target ads to a specific content genre.
 *
 *  Value: "TARGETING_TYPE_CONTENT_GENRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentGenre;
/**
 *  Target video or audio ads in a specific content instream position (for
 *  example, pre-roll, mid-roll, or post-roll).
 *
 *  Value: "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentInstreamPosition;
/**
 *  Target ads in a specific content outstream position.
 *
 *  Value: "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentOutstreamPosition;
/**
 *  Target ads to a specific video content stream type.
 *
 *  Value: "TARGETING_TYPE_CONTENT_STREAM_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentStreamType;
/**
 *  Target ads during a chosen time period on a specific day.
 *
 *  Value: "TARGETING_TYPE_DAY_AND_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDayAndTime;
/**
 *  Target ads to a specific device make or model (for example, Roku or
 *  Samsung).
 *
 *  Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDeviceMakeModel;
/**
 *  Target ads to a specific device type (for example, tablet or connected TV).
 *
 *  Value: "TARGETING_TYPE_DEVICE_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDeviceType;
/**
 *  Filter web sites by specific digital content label ratings (for example,
 *  DL-MA: suitable only for mature audiences).
 *
 *  Value: "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDigitalContentLabelExclusion;
/**
 *  Target ads to a specific environment (for example, web or app).
 *
 *  Value: "TARGETING_TYPE_ENVIRONMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeEnvironment;
/**
 *  Purchase impressions from specific exchanges.
 *
 *  Value: "TARGETING_TYPE_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeExchange;
/**
 *  Target ads to a specific gender (for example, female or male).
 *
 *  Value: "TARGETING_TYPE_GENDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeGender;
/**
 *  Target ads to a specific regional location (for example, a city or state).
 *
 *  Value: "TARGETING_TYPE_GEO_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeGeoRegion;
/**
 *  Target ads to a specific household income range (for example, top 10%).
 *
 *  Value: "TARGETING_TYPE_HOUSEHOLD_INCOME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeHouseholdIncome;
/**
 *  Purchase impressions from specific deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeInventorySource;
/**
 *  Purchase impressions from a group of deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeInventorySourceGroup;
/**
 *  Target ads to a specific keyword (for example, dog or retriever).
 *
 *  Value: "TARGETING_TYPE_KEYWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeKeyword;
/**
 *  Target ads to a specific language (for example, English or Japanese).
 *
 *  Value: "TARGETING_TYPE_LANGUAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeLanguage;
/**
 *  Target ads to a specific native content position.
 *
 *  Value: "TARGETING_TYPE_NATIVE_CONTENT_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeNativeContentPosition;
/**
 *  Target ads to a specific negative keyword list.
 *
 *  Value: "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeNegativeKeywordList;
/**
 *  Target ads in an Open Measurement enabled inventory.
 *
 *  Value: "TARGETING_TYPE_OMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeOmid;
/**
 *  Target ads in a specific on screen position.
 *
 *  Value: "TARGETING_TYPE_ON_SCREEN_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeOnScreenPosition;
/**
 *  Target ads to a specific operating system (for example, macOS).
 *
 *  Value: "TARGETING_TYPE_OPERATING_SYSTEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeOperatingSystem;
/**
 *  Target ads to a specific parental status (for example, parent or not a
 *  parent).
 *
 *  Value: "TARGETING_TYPE_PARENTAL_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeParentalStatus;
/**
 *  Target ads around a specific point of interest, such as a notable building,
 *  a street address, or latitude/longitude coordinates.
 *
 *  Value: "TARGETING_TYPE_POI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypePoi;
/**
 *  Target ads to the specified points of interest on a proximity location list.
 *
 *  Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeProximityLocationList;
/**
 *  Target ads to the specified regions on a regional location list.
 *
 *  Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeRegionalLocationList;
/**
 *  Filter website content by sensitive categories (for example, adult).
 *
 *  Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeSensitiveCategoryExclusion;
/**
 *  Purchase impressions from specific sub-exchanges.
 *
 *  Value: "TARGETING_TYPE_SUB_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeSubExchange;
/**
 *  Filter web sites through third party verification (for example, IAS or
 *  DoubleVerify).
 *
 *  Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeThirdPartyVerifier;
/**
 *  Default value when type is not specified or is unknown in this version.
 *
 *  Value: "TARGETING_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeUnspecified;
/**
 *  Target a specific url (for example, quora.com).
 *
 *  Value: "TARGETING_TYPE_URL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeUrl;
/**
 *  Target user rewarded content for video ads.
 *
 *  Value: "TARGETING_TYPE_USER_REWARDED_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeUserRewardedContent;
/**
 *  Target a specific video player size for video ads.
 *
 *  Value: "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeVideoPlayerSize;
/**
 *  Target ads to a specific viewability (for example, 80% viewable).
 *
 *  Value: "TARGETING_TYPE_VIEWABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeViewability;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AssignedUserRole.userRole

/**
 *  The user can manage campaigns, creatives, insertion orders, line items, and
 *  reports for the entity. They can view and edit billing information, create
 *  or modify users, and enable or disable exchanges. This role can only be
 *  assigned for a partner entity.
 *
 *  Value: "ADMIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_Admin;
/**
 *  The user can manage campaigns, creatives, insertion orders, line items, and
 *  reports for the entity. They can create and modify other
 *  `ADMIN_PARTNER_CLIENT` users and view billing information. They cannot view
 *  revenue models, markups, or any other reseller-sensitive fields. This role
 *  can only be assigned for a partner entity.
 *
 *  Value: "ADMIN_PARTNER_CLIENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_AdminPartnerClient;
/**
 *  The user can view media plan information they need to collaborate, but can't
 *  view cost-related data or Marketplace.
 *
 *  Value: "CREATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_Creative;
/**
 *  The user can view media plan information they need to collaborate, but can't
 *  view cost-related data or Marketplace. In addition, they can add other
 *  creative admins or creative users to the entity.
 *
 *  Value: "CREATIVE_ADMIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_CreativeAdmin;
/**
 *  The user can only create and manage the following client-safe reports:
 *  General, Audience Performance, Cross-Partner, Keyword, Order ID, Category,
 *  and Third-Party Data Provider.
 *
 *  Value: "LIMITED_REPORTING_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_LimitedReportingOnly;
/**
 *  The user can only build reports and view data for the entity.
 *
 *  Value: "READ_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_ReadOnly;
/**
 *  The user can only create and manage reports.
 *
 *  Value: "REPORTING_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_ReportingOnly;
/**
 *  The user can manage campaigns, creatives, insertion orders, line items, and
 *  reports for the entity. They cannot create and modify users or view billing
 *  information.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_Standard;
/**
 *  The user can manage campaigns, creatives, insertion orders, line items, and
 *  reports for the entity. They cannot create or modify other users or view
 *  billing information. They cannot view revenue models, markups, or any other
 *  reseller-sensitive fields. This role can only be assigned for an advertiser
 *  entity.
 *
 *  Value: "STANDARD_PARTNER_CLIENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_StandardPartnerClient;
/**
 *  The user can view all campaigns, creatives, insertion orders, line items,
 *  and reports for the entity, including all cost data. They can create and
 *  modify planning-related features, including plans and inventory.
 *
 *  Value: "STANDARD_PLANNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_StandardPlanner;
/**
 *  The user can view all campaigns, creatives, insertion orders, line items,
 *  and reports for the entity. They can create or modify planning-related
 *  features, including plans and inventory. They have no access to cost data
 *  and cannot start, accept, or negotiate deals.
 *
 *  Value: "STANDARD_PLANNER_LIMITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_StandardPlannerLimited;
/**
 *  Default value when the user role is not specified or is unknown in this
 *  version.
 *
 *  Value: "USER_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AssignedUserRole_UserRole_UserRoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails.audioContentType

/**
 *  The audio content type is broadcast.
 *
 *  Value: "AUDIO_CONTENT_TYPE_BROADCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeBroadcast;
/**
 *  The audio content type is music.
 *
 *  Value: "AUDIO_CONTENT_TYPE_MUSIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeMusic;
/**
 *  The audio content type is podcast.
 *
 *  Value: "AUDIO_CONTENT_TYPE_PODCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypePodcast;
/**
 *  The audio content type is unknown.
 *
 *  Value: "AUDIO_CONTENT_TYPE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeUnknown;
/**
 *  Audio content type is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real content stream
 *  type.
 *
 *  Value: "AUDIO_CONTENT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AudioContentTypeTargetingOptionDetails.audioContentType

/**
 *  The audio content type is broadcast.
 *
 *  Value: "AUDIO_CONTENT_TYPE_BROADCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeBroadcast;
/**
 *  The audio content type is music.
 *
 *  Value: "AUDIO_CONTENT_TYPE_MUSIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeMusic;
/**
 *  The audio content type is podcast.
 *
 *  Value: "AUDIO_CONTENT_TYPE_PODCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypePodcast;
/**
 *  The audio content type is unknown.
 *
 *  Value: "AUDIO_CONTENT_TYPE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeUnknown;
/**
 *  Audio content type is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real content stream
 *  type.
 *
 *  Value: "AUDIO_CONTENT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails.authorizedSellerStatus

/**
 *  All authorized sellers, including publishers that have not posted an ads.txt
 *  file. Display & Video 360 automatically disallows unauthorized sellers.
 *
 *  Value: "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedAndNonParticipatingPublishers;
/**
 *  Only authorized sellers that directly own the inventory being monetized, as
 *  indicated by a DIRECT declaration in the ads.txt file.
 *
 *  Value: "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedDirectSellersOnly;
/**
 *  Default value when authorized seller status is not specified in this
 *  version. This enum is a placeholder for default value and does not represent
 *  a real authorized seller status option.
 *
 *  Value: "AUTHORIZED_SELLER_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails.authorizedSellerStatus

/**
 *  All authorized sellers, including publishers that have not posted an ads.txt
 *  file. Display & Video 360 automatically disallows unauthorized sellers.
 *
 *  Value: "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedAndNonParticipatingPublishers;
/**
 *  Only authorized sellers that directly own the inventory being monetized, as
 *  indicated by a DIRECT declaration in the ads.txt file.
 *
 *  Value: "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedDirectSellersOnly;
/**
 *  Default value when authorized seller status is not specified in this
 *  version. This enum is a placeholder for default value and does not represent
 *  a real authorized seller status option.
 *
 *  Value: "AUTHORIZED_SELLER_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails.proximityRadiusUnit

/**
 *  Kilometers.
 *
 *  Value: "DISTANCE_UNIT_KILOMETERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitKilometers;
/**
 *  Miles.
 *
 *  Value: "DISTANCE_UNIT_MILES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitMiles;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "DISTANCE_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_BusinessChainTargetingOptionDetails.geoRegionType

/**
 *  The geographic region is an airport.
 *
 *  Value: "GEO_REGION_TYPE_AIRPORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeAirport;
/**
 *  The geographic region is an arrondissement.
 *
 *  Value: "GEO_REGION_TYPE_ARRONDISSEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeArrondissement;
/**
 *  The geographic region is an autonomous community.
 *
 *  Value: "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeAutonomousCommunity;
/**
 *  The geographic region is a borough.
 *
 *  Value: "GEO_REGION_TYPE_BOROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeBorough;
/**
 *  The geographic region is a canton.
 *
 *  Value: "GEO_REGION_TYPE_CANTON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCanton;
/**
 *  The geographic region is a city.
 *
 *  Value: "GEO_REGION_TYPE_CITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCity;
/**
 *  The geographic region is a city region.
 *
 *  Value: "GEO_REGION_TYPE_CITY_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCityRegion;
/**
 *  The geographic region is a congressional district.
 *
 *  Value: "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCongressionalDistrict;
/**
 *  The geographic region is a country.
 *
 *  Value: "GEO_REGION_TYPE_COUNTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCountry;
/**
 *  The geographic region is a county.
 *
 *  Value: "GEO_REGION_TYPE_COUNTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCounty;
/**
 *  The geographic region targeting type is department.
 *
 *  Value: "GEO_REGION_TYPE_DEPARTMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeDepartment;
/**
 *  The geographic region is a district.
 *
 *  Value: "GEO_REGION_TYPE_DISTRICT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeDistrict;
/**
 *  The geographic region is a designated market area (DMA) region.
 *
 *  Value: "GEO_REGION_TYPE_DMA_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeDmaRegion;
/**
 *  The geographic region is a governorate.
 *
 *  Value: "GEO_REGION_TYPE_GOVERNORATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeGovernorate;
/**
 *  The geographic region type is metro.
 *
 *  Value: "GEO_REGION_TYPE_METRO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeMetro;
/**
 *  The geographic region is a municipality.
 *
 *  Value: "GEO_REGION_TYPE_MUNICIPALITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeMunicipality;
/**
 *  The geographic region is a neighborhood.
 *
 *  Value: "GEO_REGION_TYPE_NEIGHBORHOOD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeNeighborhood;
/**
 *  The geographic region is an okrug.
 *
 *  Value: "GEO_REGION_TYPE_OKRUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeOkrug;
/**
 *  The geographic region type is other.
 *
 *  Value: "GEO_REGION_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeOther;
/**
 *  The geographic region targeting type is postal code.
 *
 *  Value: "GEO_REGION_TYPE_POSTAL_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypePostalCode;
/**
 *  The geographic region is a prefecture.
 *
 *  Value: "GEO_REGION_TYPE_PREFECTURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypePrefecture;
/**
 *  The geographic region is a province.
 *
 *  Value: "GEO_REGION_TYPE_PROVINCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeProvince;
/**
 *  The geographic region type is region.
 *
 *  Value: "GEO_REGION_TYPE_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeRegion;
/**
 *  The geographic region is a state.
 *
 *  Value: "GEO_REGION_TYPE_STATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeState;
/**
 *  The geographic region is a territory.
 *
 *  Value: "GEO_REGION_TYPE_TERRITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeTerritory;
/**
 *  The geographic region is a TV region.
 *
 *  Value: "GEO_REGION_TYPE_TV_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeTvRegion;
/**
 *  The geographic region is a union territory.
 *
 *  Value: "GEO_REGION_TYPE_UNION_TERRITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnionTerritory;
/**
 *  The geographic region is a university.
 *
 *  Value: "GEO_REGION_TYPE_UNIVERSITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeUniversity;
/**
 *  The geographic region type is unknown.
 *
 *  Value: "GEO_REGION_TYPE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnknown;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Campaign.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CampaignBudget.budgetUnit

/**
 *  Budgeting in currency amounts.
 *
 *  Value: "BUDGET_UNIT_CURRENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignBudget_BudgetUnit_BudgetUnitCurrency;
/**
 *  Budgeting in impression amounts.
 *
 *  Value: "BUDGET_UNIT_IMPRESSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignBudget_BudgetUnit_BudgetUnitImpressions;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "BUDGET_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignBudget_BudgetUnit_BudgetUnitUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CampaignBudget.externalBudgetSource

/**
 *  Budget source is Mediaocean.
 *
 *  Value: "EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignBudget_ExternalBudgetSource_ExternalBudgetSourceMediaOcean;
/**
 *  Budget has no external source.
 *
 *  Value: "EXTERNAL_BUDGET_SOURCE_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignBudget_ExternalBudgetSource_ExternalBudgetSourceNone;
/**
 *  External budget source value is not specified or unknown in this version.
 *
 *  Value: "EXTERNAL_BUDGET_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignBudget_ExternalBudgetSource_ExternalBudgetSourceUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CampaignGoal.campaignGoalType

/**
 *  Drive app installs or engagements.
 *
 *  Value: "CAMPAIGN_GOAL_TYPE_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeAppInstall;
/**
 *  Raise awareness of a brand or product.
 *
 *  Value: "CAMPAIGN_GOAL_TYPE_BRAND_AWARENESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeBrandAwareness;
/**
 *  Drive offline or in-store sales.
 *
 *  Value: "CAMPAIGN_GOAL_TYPE_OFFLINE_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeOfflineAction;
/**
 *  Drive online action or visits.
 *
 *  Value: "CAMPAIGN_GOAL_TYPE_ONLINE_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeOnlineAction;
/**
 *  Goal value is not specified or unknown in this version.
 *
 *  Value: "CAMPAIGN_GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CarrierAndIspTargetingOptionDetails.type

/**
 *  Indicates this targeting resource refers to a mobile carrier.
 *
 *  Value: "CARRIER_AND_ISP_TYPE_CARRIER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CarrierAndIspTargetingOptionDetails_Type_CarrierAndIspTypeCarrier;
/**
 *  Indicates this targeting resource refers to an ISP.
 *
 *  Value: "CARRIER_AND_ISP_TYPE_ISP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CarrierAndIspTargetingOptionDetails_Type_CarrierAndIspTypeIsp;
/**
 *  Default value when type is not specified or is unknown in this version.
 *
 *  Value: "CARRIER_AND_ISP_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CarrierAndIspTargetingOptionDetails_Type_CarrierAndIspTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails.contentDuration

/**
 *  Content is 0-1 minute long.
 *
 *  Value: "CONTENT_DURATION_0_TO_1_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration0To1Min;
/**
 *  Content is 15-30 minutes long.
 *
 *  Value: "CONTENT_DURATION_15_TO_30_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration15To30Min;
/**
 *  Content is 1-5 minutes long.
 *
 *  Value: "CONTENT_DURATION_1_TO_5_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration1To5Min;
/**
 *  Content is 30-60 minutes long.
 *
 *  Value: "CONTENT_DURATION_30_TO_60_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration30To60Min;
/**
 *  Content is 5-15 minutes long.
 *
 *  Value: "CONTENT_DURATION_5_TO_15_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration5To15Min;
/**
 *  Content is over 60 minutes long.
 *
 *  Value: "CONTENT_DURATION_OVER_60_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDurationOver60Min;
/**
 *  The content duration is unknown.
 *
 *  Value: "CONTENT_DURATION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDurationUnknown;
/**
 *  Content duration is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real content duration.
 *
 *  Value: "CONTENT_DURATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDurationUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentDurationTargetingOptionDetails.contentDuration

/**
 *  Content is 0-1 minute long.
 *
 *  Value: "CONTENT_DURATION_0_TO_1_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration0To1Min;
/**
 *  Content is 15-30 minutes long.
 *
 *  Value: "CONTENT_DURATION_15_TO_30_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration15To30Min;
/**
 *  Content is 1-5 minutes long.
 *
 *  Value: "CONTENT_DURATION_1_TO_5_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration1To5Min;
/**
 *  Content is 30-60 minutes long.
 *
 *  Value: "CONTENT_DURATION_30_TO_60_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration30To60Min;
/**
 *  Content is 5-15 minutes long.
 *
 *  Value: "CONTENT_DURATION_5_TO_15_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration5To15Min;
/**
 *  Content is over 60 minutes long.
 *
 *  Value: "CONTENT_DURATION_OVER_60_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDurationOver60Min;
/**
 *  The content duration is unknown.
 *
 *  Value: "CONTENT_DURATION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDurationUnknown;
/**
 *  Content duration is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real content duration.
 *
 *  Value: "CONTENT_DURATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDurationUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails.adType

/**
 *  Audio creatives, e.g. audio ads that play during audio content.
 *
 *  Value: "AD_TYPE_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeAudio;
/**
 *  Display creatives, e.g. image and HTML5.
 *
 *  Value: "AD_TYPE_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeDisplay;
/**
 *  Ad type is not specified or is unknown in this version.
 *
 *  Value: "AD_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeUnspecified;
/**
 *  Video creatives, e.g. video ads that play during streaming content in video
 *  players.
 *
 *  Value: "AD_TYPE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeVideo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails.contentInstreamPosition

/**
 *  Ads that play between the beginning and end of streaming content.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_MID_ROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionMidRoll;
/**
 *  Ads that play at the end of streaming content.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_POST_ROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPostRoll;
/**
 *  Ads that play before streaming content.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_PRE_ROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPreRoll;
/**
 *  Ads instream position is unknown.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnknown;
/**
 *  Content instream position is not specified in this version. This enum is a
 *  place holder for a default value and does not represent a real in stream ad
 *  position.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails.contentInstreamPosition

/**
 *  Ads that play between the beginning and end of streaming content.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_MID_ROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionMidRoll;
/**
 *  Ads that play at the end of streaming content.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_POST_ROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPostRoll;
/**
 *  Ads that play before streaming content.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_PRE_ROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPreRoll;
/**
 *  Ads instream position is unknown.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnknown;
/**
 *  Content instream position is not specified in this version. This enum is a
 *  place holder for a default value and does not represent a real in stream ad
 *  position.
 *
 *  Value: "CONTENT_INSTREAM_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails.adType

/**
 *  Audio creatives, e.g. audio ads that play during audio content.
 *
 *  Value: "AD_TYPE_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeAudio;
/**
 *  Display creatives, e.g. image and HTML5.
 *
 *  Value: "AD_TYPE_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeDisplay;
/**
 *  Ad type is not specified or is unknown in this version.
 *
 *  Value: "AD_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeUnspecified;
/**
 *  Video creatives, e.g. video ads that play during streaming content in video
 *  players.
 *
 *  Value: "AD_TYPE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeVideo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails.contentOutstreamPosition

/**
 *  Ads that appear between the paragraphs of your pages.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInArticle;
/**
 *  Ads that display on the top and the sides of a page.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_IN_BANNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInBanner;
/**
 *  Ads that appear in a scrollable stream of content. A feed is typically
 *  editorial (e.g. a list of articles or news) or listings (e.g. a list of
 *  products or services).
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_IN_FEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInFeed;
/**
 *  Ads shown before or between content loads.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInterstitial;
/**
 *  The ad position is unknown in the content outstream.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnknown;
/**
 *  Content outstream position is not specified in this version. This enum is a
 *  place holder for a default value and does not represent a real content
 *  outstream position.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails.contentOutstreamPosition

/**
 *  Ads that appear between the paragraphs of your pages.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInArticle;
/**
 *  Ads that display on the top and the sides of a page.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_IN_BANNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInBanner;
/**
 *  Ads that appear in a scrollable stream of content. A feed is typically
 *  editorial (e.g. a list of articles or news) or listings (e.g. a list of
 *  products or services).
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_IN_FEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInFeed;
/**
 *  Ads shown before or between content loads.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInterstitial;
/**
 *  The ad position is unknown in the content outstream.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnknown;
/**
 *  Content outstream position is not specified in this version. This enum is a
 *  place holder for a default value and does not represent a real content
 *  outstream position.
 *
 *  Value: "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails.contentStreamType

/**
 *  The content is being live-streamed.
 *
 *  Value: "CONTENT_LIVE_STREAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails_ContentStreamType_ContentLiveStream;
/**
 *  The content is viewed on-demand.
 *
 *  Value: "CONTENT_ON_DEMAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails_ContentStreamType_ContentOnDemand;
/**
 *  Content stream type is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real content stream
 *  type.
 *
 *  Value: "CONTENT_STREAM_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails_ContentStreamType_ContentStreamTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails.contentStreamType

/**
 *  The content is being live-streamed.
 *
 *  Value: "CONTENT_LIVE_STREAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails_ContentStreamType_ContentLiveStream;
/**
 *  The content is viewed on-demand.
 *
 *  Value: "CONTENT_ON_DEMAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails_ContentStreamType_ContentOnDemand;
/**
 *  Content stream type is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real content stream
 *  type.
 *
 *  Value: "CONTENT_STREAM_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails_ContentStreamType_ContentStreamTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CreateAssignedTargetingOptionsRequest.targetingType

/**
 *  Target ads to a specific age range (for example, 18-24).
 *
 *  Value: "TARGETING_TYPE_AGE_RANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAgeRange;
/**
 *  Target a specific app (for example, Angry Birds).
 *
 *  Value: "TARGETING_TYPE_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeApp;
/**
 *  Target an app category (for example, education or puzzle games).
 *
 *  Value: "TARGETING_TYPE_APP_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAppCategory;
/**
 *  Target ads to an audience or groups of audiences. Singleton field, at most
 *  one can exist on a single Lineitem at a time.
 *
 *  Value: "TARGETING_TYPE_AUDIENCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudienceGroup;
/**
 *  Target ads to a specific audio content type.
 *
 *  Value: "TARGETING_TYPE_AUDIO_CONTENT_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudioContentType;
/**
 *  Target ads to ads.txt authorized sellers.
 *
 *  Value: "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAuthorizedSellerStatus;
/**
 *  Target ads to specific web browsers (for example, Chrome).
 *
 *  Value: "TARGETING_TYPE_BROWSER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBrowser;
/**
 *  Target ads around locations of a business chain within a specific geo
 *  region.
 *
 *  Value: "TARGETING_TYPE_BUSINESS_CHAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBusinessChain;
/**
 *  Target ads to a specific network carrier or internet service provider (ISP)
 *  (for example, Comcast or Orange).
 *
 *  Value: "TARGETING_TYPE_CARRIER_AND_ISP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCarrierAndIsp;
/**
 *  Target ads to a specific content category (for example, arts &
 *  entertainment).
 *
 *  Value: "TARGETING_TYPE_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCategory;
/**
 *  Target a channel (a custom group of related websites or apps).
 *
 *  Value: "TARGETING_TYPE_CHANNEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeChannel;
/**
 *  Target ads to a specific video content duration.
 *
 *  Value: "TARGETING_TYPE_CONTENT_DURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentDuration;
/**
 *  Target ads to a specific content genre.
 *
 *  Value: "TARGETING_TYPE_CONTENT_GENRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentGenre;
/**
 *  Target video or audio ads in a specific content instream position (for
 *  example, pre-roll, mid-roll, or post-roll).
 *
 *  Value: "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentInstreamPosition;
/**
 *  Target ads in a specific content outstream position.
 *
 *  Value: "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentOutstreamPosition;
/**
 *  Target ads to a specific video content stream type.
 *
 *  Value: "TARGETING_TYPE_CONTENT_STREAM_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentStreamType;
/**
 *  Target ads during a chosen time period on a specific day.
 *
 *  Value: "TARGETING_TYPE_DAY_AND_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDayAndTime;
/**
 *  Target ads to a specific device make or model (for example, Roku or
 *  Samsung).
 *
 *  Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceMakeModel;
/**
 *  Target ads to a specific device type (for example, tablet or connected TV).
 *
 *  Value: "TARGETING_TYPE_DEVICE_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceType;
/**
 *  Filter web sites by specific digital content label ratings (for example,
 *  DL-MA: suitable only for mature audiences).
 *
 *  Value: "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDigitalContentLabelExclusion;
/**
 *  Target ads to a specific environment (for example, web or app).
 *
 *  Value: "TARGETING_TYPE_ENVIRONMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeEnvironment;
/**
 *  Purchase impressions from specific exchanges.
 *
 *  Value: "TARGETING_TYPE_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeExchange;
/**
 *  Target ads to a specific gender (for example, female or male).
 *
 *  Value: "TARGETING_TYPE_GENDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGender;
/**
 *  Target ads to a specific regional location (for example, a city or state).
 *
 *  Value: "TARGETING_TYPE_GEO_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGeoRegion;
/**
 *  Target ads to a specific household income range (for example, top 10%).
 *
 *  Value: "TARGETING_TYPE_HOUSEHOLD_INCOME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeHouseholdIncome;
/**
 *  Purchase impressions from specific deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySource;
/**
 *  Purchase impressions from a group of deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySourceGroup;
/**
 *  Target ads to a specific keyword (for example, dog or retriever).
 *
 *  Value: "TARGETING_TYPE_KEYWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeKeyword;
/**
 *  Target ads to a specific language (for example, English or Japanese).
 *
 *  Value: "TARGETING_TYPE_LANGUAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeLanguage;
/**
 *  Target ads to a specific native content position.
 *
 *  Value: "TARGETING_TYPE_NATIVE_CONTENT_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNativeContentPosition;
/**
 *  Target ads to a specific negative keyword list.
 *
 *  Value: "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNegativeKeywordList;
/**
 *  Target ads in an Open Measurement enabled inventory.
 *
 *  Value: "TARGETING_TYPE_OMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOmid;
/**
 *  Target ads in a specific on screen position.
 *
 *  Value: "TARGETING_TYPE_ON_SCREEN_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOnScreenPosition;
/**
 *  Target ads to a specific operating system (for example, macOS).
 *
 *  Value: "TARGETING_TYPE_OPERATING_SYSTEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOperatingSystem;
/**
 *  Target ads to a specific parental status (for example, parent or not a
 *  parent).
 *
 *  Value: "TARGETING_TYPE_PARENTAL_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeParentalStatus;
/**
 *  Target ads around a specific point of interest, such as a notable building,
 *  a street address, or latitude/longitude coordinates.
 *
 *  Value: "TARGETING_TYPE_POI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypePoi;
/**
 *  Target ads to the specified points of interest on a proximity location list.
 *
 *  Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeProximityLocationList;
/**
 *  Target ads to the specified regions on a regional location list.
 *
 *  Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeRegionalLocationList;
/**
 *  Filter website content by sensitive categories (for example, adult).
 *
 *  Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSensitiveCategoryExclusion;
/**
 *  Purchase impressions from specific sub-exchanges.
 *
 *  Value: "TARGETING_TYPE_SUB_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSubExchange;
/**
 *  Filter web sites through third party verification (for example, IAS or
 *  DoubleVerify).
 *
 *  Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeThirdPartyVerifier;
/**
 *  Default value when type is not specified or is unknown in this version.
 *
 *  Value: "TARGETING_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUnspecified;
/**
 *  Target a specific url (for example, quora.com).
 *
 *  Value: "TARGETING_TYPE_URL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUrl;
/**
 *  Target user rewarded content for video ads.
 *
 *  Value: "TARGETING_TYPE_USER_REWARDED_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUserRewardedContent;
/**
 *  Target a specific video player size for video ads.
 *
 *  Value: "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeVideoPlayerSize;
/**
 *  Target ads to a specific viewability (for example, 80% viewable).
 *
 *  Value: "TARGETING_TYPE_VIEWABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeViewability;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CreateSdfDownloadTaskRequest.version

/**
 *  SDF version 3.1
 *
 *  Value: "SDF_VERSION_3_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion31;
/**
 *  SDF version 4
 *
 *  Value: "SDF_VERSION_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion4;
/**
 *  SDF version 4.1
 *
 *  Value: "SDF_VERSION_4_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion41;
/**
 *  SDF version 4.2
 *
 *  Value: "SDF_VERSION_4_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion42;
/**
 *  SDF version 5.
 *
 *  Value: "SDF_VERSION_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion5;
/**
 *  SDF version 5.1
 *
 *  Value: "SDF_VERSION_5_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion51;
/**
 *  SDF version 5.2
 *
 *  Value: "SDF_VERSION_5_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion52;
/**
 *  SDF version 5.3
 *
 *  Value: "SDF_VERSION_5_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion53;
/**
 *  SDF version 5.4
 *
 *  Value: "SDF_VERSION_5_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion54;
/**
 *  SDF version 5.5
 *
 *  Value: "SDF_VERSION_5_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion55;
/**
 *  SDF version value is not specified or is unknown in this version.
 *
 *  Value: "SDF_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Creative.creativeAttributes

/**
 *  The creative attribute is not specified or is unknown in this version.
 *
 *  Value: "CREATIVE_ATTRIBUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeAttributes_CreativeAttributeUnspecified;
/**
 *  The creative is a VAST creative.
 *
 *  Value: "CREATIVE_ATTRIBUTE_VAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeAttributes_CreativeAttributeVast;
/**
 *  The creative is a linear VPAID creative.
 *
 *  Value: "CREATIVE_ATTRIBUTE_VPAID_LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeAttributes_CreativeAttributeVpaidLinear;
/**
 *  The creative is a non-linear VPAID creative.
 *
 *  Value: "CREATIVE_ATTRIBUTE_VPAID_NON_LINEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeAttributes_CreativeAttributeVpaidNonLinear;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Creative.creativeType

/**
 *  Audio creative. Create and update methods are supported for this creative
 *  type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeAudio;
/**
 *  Expandable creative. Create and update methods are supported for this
 *  creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`
 *
 *  Value: "CREATIVE_TYPE_EXPANDABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeExpandable;
/**
 *  Responsive and expandable Lightbox creative. Create and update methods are
 *  **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_LIGHTBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeLightbox;
/**
 *  Native creative rendered by publishers with assets from advertiser. Create
 *  and update methods are supported for this creative type if the
 *  hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNative;
/**
 *  Native app install creative. Create and update methods are supported for
 *  this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeAppInstall;
/**
 *  Square native app install creative. Create and update methods are supported
 *  for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeAppInstallSquare;
/**
 *  Square native creative. Create and update methods are supported for this
 *  creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_SITE_SQUARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeSiteSquare;
/**
 *  Native video creative. Create and update methods are supported for this
 *  creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeVideo;
/**
 *  Publisher hosted creative. Create and update methods are **not** supported
 *  for this creative type.
 *
 *  Value: "CREATIVE_TYPE_PUBLISHER_HOSTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypePublisherHosted;
/**
 *  Standard display creative. Create and update methods are supported for this
 *  creative type if the hosting_source is one of the following: *
 *  `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`
 *
 *  Value: "CREATIVE_TYPE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeStandard;
/**
 *  Templated app install mobile creative (banner). Create and update methods
 *  are **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_TEMPLATED_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeTemplatedAppInstall;
/**
 *  Interstitial creative including both display and video. Create and update
 *  methods are **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeTemplatedAppInstallInterstitial;
/**
 *  Templated app install mobile video creative. Create and update methods are
 *  **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeTemplatedAppInstallVideo;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "CREATIVE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeUnspecified;
/**
 *  Video creative. Create and update methods are supported for this creative
 *  type if the hosting_source is one of the following: *
 *  `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`
 *
 *  Value: "CREATIVE_TYPE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeVideo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Creative.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Creative.expandingDirection

/**
 *  Can expand in any diagonal direction.
 *
 *  Value: "EXPANDING_DIRECTION_ANY_DIAGONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionAnyDiagonal;
/**
 *  Expands down.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionDown;
/**
 *  Expands down and to the left side.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN_AND_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionDownAndLeft;
/**
 *  Expands down and to the right side.
 *
 *  Value: "EXPANDING_DIRECTION_DOWN_AND_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionDownAndRight;
/**
 *  Expands left.
 *
 *  Value: "EXPANDING_DIRECTION_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionLeft;
/**
 *  Expands to either the left or the right side.
 *
 *  Value: "EXPANDING_DIRECTION_LEFT_OR_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionLeftOrRight;
/**
 *  Does not expand in any direction.
 *
 *  Value: "EXPANDING_DIRECTION_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionNone;
/**
 *  Expands right.
 *
 *  Value: "EXPANDING_DIRECTION_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionRight;
/**
 *  The expanding direction is not specified.
 *
 *  Value: "EXPANDING_DIRECTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUnspecified;
/**
 *  Expands up.
 *
 *  Value: "EXPANDING_DIRECTION_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUp;
/**
 *  Expands up and to the left side.
 *
 *  Value: "EXPANDING_DIRECTION_UP_AND_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUpAndLeft;
/**
 *  Expands up and to the right side.
 *
 *  Value: "EXPANDING_DIRECTION_UP_AND_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUpAndRight;
/**
 *  Expands either up or down.
 *
 *  Value: "EXPANDING_DIRECTION_UP_OR_DOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUpOrDown;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Creative.hostingSource

/**
 *  A creative synced from Campaign Manager 360. Create and update methods are
 *  **not** supported for this hosting type.
 *
 *  Value: "HOSTING_SOURCE_CM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_HostingSource_HostingSourceCm;
/**
 *  A creative created in DV360 and hosted by Campaign Manager 360. Create and
 *  update methods are supported for this hosting type if the creative_type is
 *  one of the following: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO` *
 *  `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`
 *
 *  Value: "HOSTING_SOURCE_HOSTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_HostingSource_HostingSourceHosted;
/**
 *  A rich media creative created in Studio and hosted by Campaign Manager 360.
 *  Create and update methods are **not** supported for this hosting type.
 *
 *  Value: "HOSTING_SOURCE_RICH_MEDIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_HostingSource_HostingSourceRichMedia;
/**
 *  A creative hosted by a third-party ad server (3PAS). Create and update
 *  methods are supported for this hosting type if the creative_type is one of
 *  the following: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_EXPANDABLE` *
 *  `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`
 *
 *  Value: "HOSTING_SOURCE_THIRD_PARTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_HostingSource_HostingSourceThirdParty;
/**
 *  Hosting source is not specified or is unknown in this version.
 *
 *  Value: "HOSTING_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Creative_HostingSource_HostingSourceUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CreativeConfig.creativeType

/**
 *  Audio creative. Create and update methods are supported for this creative
 *  type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeAudio;
/**
 *  Expandable creative. Create and update methods are supported for this
 *  creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`
 *
 *  Value: "CREATIVE_TYPE_EXPANDABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeExpandable;
/**
 *  Responsive and expandable Lightbox creative. Create and update methods are
 *  **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_LIGHTBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeLightbox;
/**
 *  Native creative rendered by publishers with assets from advertiser. Create
 *  and update methods are supported for this creative type if the
 *  hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNative;
/**
 *  Native app install creative. Create and update methods are supported for
 *  this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeAppInstall;
/**
 *  Square native app install creative. Create and update methods are supported
 *  for this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeAppInstallSquare;
/**
 *  Square native creative. Create and update methods are supported for this
 *  creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_SITE_SQUARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeSiteSquare;
/**
 *  Native video creative. Create and update methods are supported for this
 *  creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *
 *  Value: "CREATIVE_TYPE_NATIVE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeVideo;
/**
 *  Publisher hosted creative. Create and update methods are **not** supported
 *  for this creative type.
 *
 *  Value: "CREATIVE_TYPE_PUBLISHER_HOSTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypePublisherHosted;
/**
 *  Standard display creative. Create and update methods are supported for this
 *  creative type if the hosting_source is one of the following: *
 *  `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`
 *
 *  Value: "CREATIVE_TYPE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeStandard;
/**
 *  Templated app install mobile creative (banner). Create and update methods
 *  are **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_TEMPLATED_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeTemplatedAppInstall;
/**
 *  Interstitial creative including both display and video. Create and update
 *  methods are **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeTemplatedAppInstallInterstitial;
/**
 *  Templated app install mobile video creative. Create and update methods are
 *  **not** supported for this creative type.
 *
 *  Value: "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeTemplatedAppInstallVideo;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "CREATIVE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeUnspecified;
/**
 *  Video creative. Create and update methods are supported for this creative
 *  type if the hosting_source is one of the following: *
 *  `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY`
 *
 *  Value: "CREATIVE_TYPE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeVideo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CustomBiddingAlgorithm.customBiddingAlgorithmType

/**
 *  Algorithm created through Ads Data Hub product.
 *
 *  Value: "ADS_DATA_HUB_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_AdsDataHubBased;
/**
 *  Algorithm type is not specified or is unknown in this version.
 *
 *  Value: "CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_CustomBiddingAlgorithmTypeUnspecified;
/**
 *  Algorithm created through goal builder in DV3 UI.
 *
 *  Value: "GOAL_BUILDER_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_GoalBuilderBased;
/**
 *  Algorithm generated through customer-uploaded custom bidding script files.
 *
 *  Value: "SCRIPT_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_ScriptBased;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CustomBiddingAlgorithm.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CustomBiddingModelDetails.readinessState

/**
 *  The model is trained and ready for serving.
 *
 *  Value: "READINESS_STATE_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateActive;
/**
 *  There is not enough data to train the serving model.
 *
 *  Value: "READINESS_STATE_INSUFFICIENT_DATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateInsufficientData;
/**
 *  A valid custom bidding script has not been provided with which to train the
 *  model. This state will only be applied to algorithms whose
 *  `custom_bidding_algorithm_type` is `SCRIPT_BASED`.
 *
 *  Value: "READINESS_STATE_NO_VALID_SCRIPT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateNoValidScript;
/**
 *  The model is training and not ready for serving.
 *
 *  Value: "READINESS_STATE_TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateTraining;
/**
 *  State is not specified or is unknown in this version.
 *
 *  Value: "READINESS_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CustomBiddingModelDetails.suspensionState

/**
 *  Model has not been used recently. Although the model still acts as
 *  `ENABLED`, it will eventually be suspended if not used.
 *
 *  Value: "SUSPENSION_STATE_DORMANT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateDormant;
/**
 *  Model is enabled, either recently used, currently used or scheduled to be
 *  used. The algorithm is actively scoring impressions for this advertiser.
 *
 *  Value: "SUSPENSION_STATE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateEnabled;
/**
 *  Model is suspended from scoring impressions and cannot serve. If the
 *  algorithm is assigned to a line item under this advertiser or otherwise
 *  updated, it will switch back to the `ENABLED` state and require time to
 *  prepare the serving model again.
 *
 *  Value: "SUSPENSION_STATE_SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateSuspended;
/**
 *  State is not specified or is unknown in this version.
 *
 *  Value: "SUSPENSION_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_CustomBiddingScript.state

/**
 *  The script has been accepted for scoring impressions.
 *
 *  Value: "ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingScript_State_Accepted;
/**
 *  The script is being processed for backend pipelines.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingScript_State_Pending;
/**
 *  The script has been rejected by backend pipelines. It may have errors.
 *
 *  Value: "REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingScript_State_Rejected;
/**
 *  The script state is not specified or is unknown in this version.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_CustomBiddingScript_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails.dayOfWeek

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Wednesday;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails.timeZoneResolution

/**
 *  Times are resolved in the time zone of the advertiser that served the ad.
 *
 *  Value: "TIME_ZONE_RESOLUTION_ADVERTISER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_TimeZoneResolution_TimeZoneResolutionAdvertiser;
/**
 *  Times are resolved in the time zone of the user that saw the ad.
 *
 *  Value: "TIME_ZONE_RESOLUTION_END_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_TimeZoneResolution_TimeZoneResolutionEndUser;
/**
 *  Time zone resolution is either unspecific or unknown.
 *
 *  Value: "TIME_ZONE_RESOLUTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_TimeZoneResolution_TimeZoneResolutionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest.targetingType

/**
 *  Target ads to a specific age range (for example, 18-24).
 *
 *  Value: "TARGETING_TYPE_AGE_RANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAgeRange;
/**
 *  Target a specific app (for example, Angry Birds).
 *
 *  Value: "TARGETING_TYPE_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeApp;
/**
 *  Target an app category (for example, education or puzzle games).
 *
 *  Value: "TARGETING_TYPE_APP_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAppCategory;
/**
 *  Target ads to an audience or groups of audiences. Singleton field, at most
 *  one can exist on a single Lineitem at a time.
 *
 *  Value: "TARGETING_TYPE_AUDIENCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudienceGroup;
/**
 *  Target ads to a specific audio content type.
 *
 *  Value: "TARGETING_TYPE_AUDIO_CONTENT_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudioContentType;
/**
 *  Target ads to ads.txt authorized sellers.
 *
 *  Value: "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAuthorizedSellerStatus;
/**
 *  Target ads to specific web browsers (for example, Chrome).
 *
 *  Value: "TARGETING_TYPE_BROWSER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBrowser;
/**
 *  Target ads around locations of a business chain within a specific geo
 *  region.
 *
 *  Value: "TARGETING_TYPE_BUSINESS_CHAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBusinessChain;
/**
 *  Target ads to a specific network carrier or internet service provider (ISP)
 *  (for example, Comcast or Orange).
 *
 *  Value: "TARGETING_TYPE_CARRIER_AND_ISP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCarrierAndIsp;
/**
 *  Target ads to a specific content category (for example, arts &
 *  entertainment).
 *
 *  Value: "TARGETING_TYPE_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCategory;
/**
 *  Target a channel (a custom group of related websites or apps).
 *
 *  Value: "TARGETING_TYPE_CHANNEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeChannel;
/**
 *  Target ads to a specific video content duration.
 *
 *  Value: "TARGETING_TYPE_CONTENT_DURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentDuration;
/**
 *  Target ads to a specific content genre.
 *
 *  Value: "TARGETING_TYPE_CONTENT_GENRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentGenre;
/**
 *  Target video or audio ads in a specific content instream position (for
 *  example, pre-roll, mid-roll, or post-roll).
 *
 *  Value: "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentInstreamPosition;
/**
 *  Target ads in a specific content outstream position.
 *
 *  Value: "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentOutstreamPosition;
/**
 *  Target ads to a specific video content stream type.
 *
 *  Value: "TARGETING_TYPE_CONTENT_STREAM_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentStreamType;
/**
 *  Target ads during a chosen time period on a specific day.
 *
 *  Value: "TARGETING_TYPE_DAY_AND_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDayAndTime;
/**
 *  Target ads to a specific device make or model (for example, Roku or
 *  Samsung).
 *
 *  Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceMakeModel;
/**
 *  Target ads to a specific device type (for example, tablet or connected TV).
 *
 *  Value: "TARGETING_TYPE_DEVICE_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceType;
/**
 *  Filter web sites by specific digital content label ratings (for example,
 *  DL-MA: suitable only for mature audiences).
 *
 *  Value: "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDigitalContentLabelExclusion;
/**
 *  Target ads to a specific environment (for example, web or app).
 *
 *  Value: "TARGETING_TYPE_ENVIRONMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeEnvironment;
/**
 *  Purchase impressions from specific exchanges.
 *
 *  Value: "TARGETING_TYPE_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeExchange;
/**
 *  Target ads to a specific gender (for example, female or male).
 *
 *  Value: "TARGETING_TYPE_GENDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGender;
/**
 *  Target ads to a specific regional location (for example, a city or state).
 *
 *  Value: "TARGETING_TYPE_GEO_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGeoRegion;
/**
 *  Target ads to a specific household income range (for example, top 10%).
 *
 *  Value: "TARGETING_TYPE_HOUSEHOLD_INCOME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeHouseholdIncome;
/**
 *  Purchase impressions from specific deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySource;
/**
 *  Purchase impressions from a group of deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySourceGroup;
/**
 *  Target ads to a specific keyword (for example, dog or retriever).
 *
 *  Value: "TARGETING_TYPE_KEYWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeKeyword;
/**
 *  Target ads to a specific language (for example, English or Japanese).
 *
 *  Value: "TARGETING_TYPE_LANGUAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeLanguage;
/**
 *  Target ads to a specific native content position.
 *
 *  Value: "TARGETING_TYPE_NATIVE_CONTENT_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNativeContentPosition;
/**
 *  Target ads to a specific negative keyword list.
 *
 *  Value: "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNegativeKeywordList;
/**
 *  Target ads in an Open Measurement enabled inventory.
 *
 *  Value: "TARGETING_TYPE_OMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOmid;
/**
 *  Target ads in a specific on screen position.
 *
 *  Value: "TARGETING_TYPE_ON_SCREEN_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOnScreenPosition;
/**
 *  Target ads to a specific operating system (for example, macOS).
 *
 *  Value: "TARGETING_TYPE_OPERATING_SYSTEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOperatingSystem;
/**
 *  Target ads to a specific parental status (for example, parent or not a
 *  parent).
 *
 *  Value: "TARGETING_TYPE_PARENTAL_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeParentalStatus;
/**
 *  Target ads around a specific point of interest, such as a notable building,
 *  a street address, or latitude/longitude coordinates.
 *
 *  Value: "TARGETING_TYPE_POI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypePoi;
/**
 *  Target ads to the specified points of interest on a proximity location list.
 *
 *  Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeProximityLocationList;
/**
 *  Target ads to the specified regions on a regional location list.
 *
 *  Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeRegionalLocationList;
/**
 *  Filter website content by sensitive categories (for example, adult).
 *
 *  Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSensitiveCategoryExclusion;
/**
 *  Purchase impressions from specific sub-exchanges.
 *
 *  Value: "TARGETING_TYPE_SUB_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSubExchange;
/**
 *  Filter web sites through third party verification (for example, IAS or
 *  DoubleVerify).
 *
 *  Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeThirdPartyVerifier;
/**
 *  Default value when type is not specified or is unknown in this version.
 *
 *  Value: "TARGETING_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUnspecified;
/**
 *  Target a specific url (for example, quora.com).
 *
 *  Value: "TARGETING_TYPE_URL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUrl;
/**
 *  Target user rewarded content for video ads.
 *
 *  Value: "TARGETING_TYPE_USER_REWARDED_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUserRewardedContent;
/**
 *  Target a specific video player size for video ads.
 *
 *  Value: "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeVideoPlayerSize;
/**
 *  Target ads to a specific viewability (for example, 80% viewable).
 *
 *  Value: "TARGETING_TYPE_VIEWABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeViewability;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails.deviceType

/**
 *  The device type is computer.
 *
 *  Value: "DEVICE_TYPE_COMPUTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeComputer;
/**
 *  The device type is connected TV.
 *
 *  Value: "DEVICE_TYPE_CONNECTED_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeConnectedTv;
/**
 *  The device type is smart phone..
 *
 *  Value: "DEVICE_TYPE_SMART_PHONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeSmartPhone;
/**
 *  The device type is tablet.
 *
 *  Value: "DEVICE_TYPE_TABLET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeTablet;
/**
 *  Default value when device type is not specified in this version. This enum
 *  is a placeholder for default value and does not represent a real device type
 *  option.
 *
 *  Value: "DEVICE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DeviceTypeTargetingOptionDetails.deviceType

/**
 *  The device type is computer.
 *
 *  Value: "DEVICE_TYPE_COMPUTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeComputer;
/**
 *  The device type is connected TV.
 *
 *  Value: "DEVICE_TYPE_CONNECTED_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeConnectedTv;
/**
 *  The device type is smart phone..
 *
 *  Value: "DEVICE_TYPE_SMART_PHONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeSmartPhone;
/**
 *  The device type is tablet.
 *
 *  Value: "DEVICE_TYPE_TABLET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeTablet;
/**
 *  Default value when device type is not specified in this version. This enum
 *  is a placeholder for default value and does not represent a real device type
 *  option.
 *
 *  Value: "DEVICE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails.excludedContentRatingTier

/**
 *  Content suitable for family audiences. It is a subset of
 *  CONTENT_RATING_TIER_GENERAL. Only applicable to YouTube and Partners line
 *  items.
 *
 *  Value: "CONTENT_RATING_TIER_FAMILIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierFamilies;
/**
 *  Content suitable for general audiences.
 *
 *  Value: "CONTENT_RATING_TIER_GENERAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierGeneral;
/**
 *  Content suitable only for mature audiences.
 *
 *  Value: "CONTENT_RATING_TIER_MATURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierMature;
/**
 *  Content suitable for most audiences with parental guidance.
 *
 *  Value: "CONTENT_RATING_TIER_PARENTAL_GUIDANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierParentalGuidance;
/**
 *  Content suitable for teen and older audiences.
 *
 *  Value: "CONTENT_RATING_TIER_TEENS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierTeens;
/**
 *  Content that has not been labeled.
 *
 *  Value: "CONTENT_RATING_TIER_UNRATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierUnrated;
/**
 *  Content label is not specified in this version. This enum is a place holder
 *  for a default value and does not represent a real content rating.
 *
 *  Value: "CONTENT_RATING_TIER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails.contentRatingTier

/**
 *  Content suitable for family audiences. It is a subset of
 *  CONTENT_RATING_TIER_GENERAL. Only applicable to YouTube and Partners line
 *  items.
 *
 *  Value: "CONTENT_RATING_TIER_FAMILIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierFamilies;
/**
 *  Content suitable for general audiences.
 *
 *  Value: "CONTENT_RATING_TIER_GENERAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierGeneral;
/**
 *  Content suitable only for mature audiences.
 *
 *  Value: "CONTENT_RATING_TIER_MATURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierMature;
/**
 *  Content suitable for most audiences with parental guidance.
 *
 *  Value: "CONTENT_RATING_TIER_PARENTAL_GUIDANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierParentalGuidance;
/**
 *  Content suitable for teen and older audiences.
 *
 *  Value: "CONTENT_RATING_TIER_TEENS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierTeens;
/**
 *  Content that has not been labeled.
 *
 *  Value: "CONTENT_RATING_TIER_UNRATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierUnrated;
/**
 *  Content label is not specified in this version. This enum is a place holder
 *  for a default value and does not represent a real content rating.
 *
 *  Value: "CONTENT_RATING_TIER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerify.avoidedAgeRatings

/**
 *  This enum is only a placeholder and it doesn't specify any age rating
 *  options.
 *
 *  Value: "AGE_RATING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerify_AvoidedAgeRatings_AgeRatingUnspecified;
/**
 *  Apps rated for Teens (12+).
 *
 *  Value: "APP_AGE_RATE_12_PLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerify_AvoidedAgeRatings_AppAgeRate12Plus;
/**
 *  Apps rated for Mature (17+).
 *
 *  Value: "APP_AGE_RATE_17_PLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerify_AvoidedAgeRatings_AppAgeRate17Plus;
/**
 *  Apps rated for Adults Only (18+).
 *
 *  Value: "APP_AGE_RATE_18_PLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerify_AvoidedAgeRatings_AppAgeRate18Plus;
/**
 *  Apps rated for Everyone (4+).
 *
 *  Value: "APP_AGE_RATE_4_PLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerify_AvoidedAgeRatings_AppAgeRate4Plus;
/**
 *  Apps rated for Everyone (9+).
 *
 *  Value: "APP_AGE_RATE_9_PLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerify_AvoidedAgeRatings_AppAgeRate9Plus;
/**
 *  Apps with unknown age rating.
 *
 *  Value: "APP_AGE_RATE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerify_AvoidedAgeRatings_AppAgeRateUnknown;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyAppStarRating.avoidedStarRating

/**
 *  Official Apps with rating < 1.5 Stars.
 *
 *  Value: "APP_STAR_RATE_1_POINT_5_LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate1Point5Less;
/**
 *  Official Apps with rating < 2 Stars.
 *
 *  Value: "APP_STAR_RATE_2_LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate2Less;
/**
 *  Official Apps with rating < 2.5 Stars.
 *
 *  Value: "APP_STAR_RATE_2_POINT_5_LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate2Point5Less;
/**
 *  Official Apps with rating < 3 Stars.
 *
 *  Value: "APP_STAR_RATE_3_LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate3Less;
/**
 *  Official Apps with rating < 3.5 Stars.
 *
 *  Value: "APP_STAR_RATE_3_POINT_5_LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate3Point5Less;
/**
 *  Official Apps with rating < 4 Stars.
 *
 *  Value: "APP_STAR_RATE_4_LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate4Less;
/**
 *  Official Apps with rating < 4.5 Stars.
 *
 *  Value: "APP_STAR_RATE_4_POINT_5_LESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate4Point5Less;
/**
 *  This enum is only a placeholder and it doesn't specify any app star rating
 *  options.
 *
 *  Value: "APP_STAR_RATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyBrandSafetyCategories.avoidedHighSeverityCategories

/**
 *  Adult Content: Pornography, Mature Topics & Nudity.
 *
 *  Value: "ADULT_CONTENT_PORNOGRAPHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_AdultContentPornography;
/**
 *  Copyright Infringement.
 *
 *  Value: "COPYRIGHT_INFRINGEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_CopyrightInfringement;
/**
 *  Illegal Activities: Criminal Skills.
 *
 *  Value: "CRIMINAL_SKILLS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_CriminalSkills;
/**
 *  Extreme Graphic/Explicit Violence/Weapons.
 *
 *  Value: "GRAPHIC_VIOLENCE_WEAPONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_GraphicViolenceWeapons;
/**
 *  Hate/Profanity.
 *
 *  Value: "HATE_PROFANITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_HateProfanity;
/**
 *  This enum is only a placeholder and it doesn't specify any high severity
 *  categories.
 *
 *  Value: "HIGHER_SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_HigherSeverityUnspecified;
/**
 *  Incentivized/Malware/Clutter.
 *
 *  Value: "NUISANCE_INCENTIVIZED_MALWARE_CLUTTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_NuisanceIncentivizedMalwareClutter;
/**
 *  Drugs/Alcohol/Controlled Substances: Substance Abuse.
 *
 *  Value: "SUBSTANCE_ABUSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedHighSeverityCategories_SubstanceAbuse;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyBrandSafetyCategories.avoidedMediumSeverityCategories

/**
 *  Ad Servers.
 *
 *  Value: "AD_SERVERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_AdServers;
/**
 *  Adult Content: Swimsuit.
 *
 *  Value: "ADULT_CONTENT_SWIMSUIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_AdultContentSwimsuit;
/**
 *  Drugs/Alcohol/Controlled Substances: Alcohol.
 *
 *  Value: "ALCOHOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_Alcohol;
/**
 *  Controversial Subjects: Alternative Lifestyles.
 *
 *  Value: "ALTERNATIVE_LIFESTYLES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_AlternativeLifestyles;
/**
 *  Controversial Subjects: Celebrity Gossip.
 *
 *  Value: "CELEBRITY_GOSSIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_CelebrityGossip;
/**
 *  Disaster: Aviation.
 *
 *  Value: "DISASTER_AVIATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_DisasterAviation;
/**
 *  Disaster: Man-made.
 *
 *  Value: "DISASTER_MAN_MADE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_DisasterManMade;
/**
 *  Disaster: Natural.
 *
 *  Value: "DISASTER_NATURAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_DisasterNatural;
/**
 *  Disaster: Terrorist Events.
 *
 *  Value: "DISASTER_TERRORIST_EVENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_DisasterTerroristEvents;
/**
 *  Disaster: Vehicle.
 *
 *  Value: "DISASTER_VEHICLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_DisasterVehicle;
/**
 *  Controversial Subjects: Gambling.
 *
 *  Value: "GAMBLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_Gambling;
/**
 *  Controversial Subjects: Inflammatory Politics and News.
 *
 *  Value: "INFLAMMATORY_POLITICS_AND_NEWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_InflammatoryPoliticsAndNews;
/**
 *  This enum is only a placeholder and it doesn't specify any medium severity
 *  categories.
 *
 *  Value: "MEDIUM_SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_MediumSeverityUnspecified;
/**
 *  Negative News: Financial.
 *
 *  Value: "NEGATIVE_NEWS_FINANCIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_NegativeNewsFinancial;
/**
 *  Negative News: Pharmaceutical.
 *
 *  Value: "NEGATIVE_NEWS_PHARMACEUTICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_NegativeNewsPharmaceutical;
/**
 *  Non-Std Content: Non-English.
 *
 *  Value: "NON_ENGLISH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_NonEnglish;
/**
 *  Controversial Subjects: Occult.
 *
 *  Value: "OCCULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_Occult;
/**
 *  Non-Std Content: Parking Page.
 *
 *  Value: "PARKING_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_ParkingPage;
/**
 *  Controversial Subjects: Sex Education.
 *
 *  Value: "SEX_EDUCATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_SexEducation;
/**
 *  Drugs/Alcohol/Controlled Substances: Smoking.
 *
 *  Value: "SMOKING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_Smoking;
/**
 *  Unmoderated UGC: Forums, Images & Video.
 *
 *  Value: "UNMODERATED_UGC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyBrandSafetyCategories_AvoidedMediumSeverityCategories_UnmoderatedUgc;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyDisplayViewability.iab

/**
 *  Target web and app inventory to maximize IAB viewable rate 30% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_30_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate30PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 40% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_40_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate40PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 50% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_50_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate50PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 55% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_55_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate55PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 60% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_60_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate60PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 65% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_65_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate65PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 70% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_70_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate70PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 75% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_75_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate75PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 80% or higher.
 *
 *  Value: "IAB_VIEWED_RATE_80_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate80PercentHigher;
/**
 *  This enum is only a placeholder and it doesn't specify any IAB viewed rate
 *  options.
 *
 *  Value: "IAB_VIEWED_RATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyDisplayViewability.viewableDuring

/**
 *  Target web and app inventory to maximize 100% viewable duration 10 seconds
 *  or more.
 *
 *  Value: "AVERAGE_VIEW_DURATION_10_SEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDuration10Sec;
/**
 *  Target web and app inventory to maximize 100% viewable duration 15 seconds
 *  or more.
 *
 *  Value: "AVERAGE_VIEW_DURATION_15_SEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDuration15Sec;
/**
 *  Target web and app inventory to maximize 100% viewable duration 5 seconds or
 *  more.
 *
 *  Value: "AVERAGE_VIEW_DURATION_5_SEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDuration5Sec;
/**
 *  This enum is only a placeholder and it doesn't specify any average view
 *  duration options.
 *
 *  Value: "AVERAGE_VIEW_DURATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDurationUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic.avoidedFraudOption

/**
 *  10% or Higher Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_10"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud10;
/**
 *  100% Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_100"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud100;
/**
 *  2% or Higher Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud2;
/**
 *  25% or Higher Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_25"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud25;
/**
 *  4% or Higher Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud4;
/**
 *  50% or Higher Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_50"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud50;
/**
 *  6% or Higher Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_6"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud6;
/**
 *  8% or Higher Fraud & IVT.
 *
 *  Value: "AD_IMPRESSION_FRAUD_8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud8;
/**
 *  This enum is only a placeholder and it doesn't specify any fraud and invalid
 *  traffic options.
 *
 *  Value: "FRAUD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_FraudUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyVideoViewability.playerImpressionRate

/**
 *  Sites with 25%+ of impressions.
 *
 *  Value: "PLAYER_SIZE_400X300_25"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x30025;
/**
 *  Sites with 5%+ of impressions.
 *
 *  Value: "PLAYER_SIZE_400X300_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x3005;
/**
 *  Sites with 70%+ of impressions.
 *
 *  Value: "PLAYER_SIZE_400X300_70"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x30070;
/**
 *  Sites with 95%+ of impressions.
 *
 *  Value: "PLAYER_SIZE_400X300_95"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x30095;
/**
 *  This enum is only a placeholder and it doesn't specify any impressions
 *  options.
 *
 *  Value: "PLAYER_SIZE_400X300_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x300Unspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyVideoViewability.videoIab

/**
 *  Target web and app inventory to maximize IAB viewable rate 30% or higher.
 *
 *  Value: "IAB_VIEWABILITY_30_PERCENT_HIHGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability30PercentHihger;
/**
 *  Target web and app inventory to maximize IAB viewable rate 40% or higher.
 *
 *  Value: "IAB_VIEWABILITY_40_PERCENT_HIHGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability40PercentHihger;
/**
 *  Target web and app inventory to maximize IAB viewable rate 50% or higher.
 *
 *  Value: "IAB_VIEWABILITY_50_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability50PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 55% or higher.
 *
 *  Value: "IAB_VIEWABILITY_55_PERCENT_HIHGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability55PercentHihger;
/**
 *  Target web and app inventory to maximize IAB viewable rate 60% or higher.
 *
 *  Value: "IAB_VIEWABILITY_60_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability60PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 65% or higher.
 *
 *  Value: "IAB_VIEWABILITY_65_PERCENT_HIHGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability65PercentHihger;
/**
 *  Target web and app inventory to maximize IAB viewable rate 70% or higher.
 *
 *  Value: "IAB_VIEWABILITY_70_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability70PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 75% or higher.
 *
 *  Value: "IAB_VIEWABILITY_75_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability75PercentHigher;
/**
 *  Target web and app inventory to maximize IAB viewable rate 80% or higher.
 *
 *  Value: "IAB_VIEWABILITY_80_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability80PercentHigher;
/**
 *  This enum is only a placeholder and it doesn't specify any video IAB
 *  viewable rate options.
 *
 *  Value: "VIDEO_IAB_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_VideoIabUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_DoubleVerifyVideoViewability.videoViewableRate

/**
 *  This enum is only a placeholder and it doesn't specify any video viewable
 *  rate options.
 *
 *  Value: "VIDEO_VIEWABLE_RATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_VideoViewableRateUnspecified;
/**
 *  Target web inventory to maximize fully viewable rate 10% or higher.
 *
 *  Value: "VIEWED_PERFORMANCE_10_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance10PercentHigher;
/**
 *  Target web inventory to maximize fully viewable rate 20% or higher.
 *
 *  Value: "VIEWED_PERFORMANCE_20_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance20PercentHigher;
/**
 *  Target web inventory to maximize fully viewable rate 25% or higher.
 *
 *  Value: "VIEWED_PERFORMANCE_25_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance25PercentHigher;
/**
 *  Target web inventory to maximize fully viewable rate 30% or higher.
 *
 *  Value: "VIEWED_PERFORMANCE_30_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance30PercentHigher;
/**
 *  Target web inventory to maximize fully viewable rate 35% or higher.
 *
 *  Value: "VIEWED_PERFORMANCE_35_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance35PercentHigher;
/**
 *  Target web inventory to maximize fully viewable rate 40% or higher.
 *
 *  Value: "VIEWED_PERFORMANCE_40_PERCENT_HIGHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance40PercentHigher;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails.environment

/**
 *  Target inventory displayed in apps.
 *
 *  Value: "ENVIRONMENT_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentApp;
/**
 *  Default value when environment is not specified in this version. This enum
 *  is a placeholder for default value and does not represent a real environment
 *  option.
 *
 *  Value: "ENVIRONMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentUnspecified;
/**
 *  Target inventory displayed in browsers. This includes inventory that was not
 *  designed for the device but viewed on it, such as websites optimized for
 *  desktop but viewed on a mobile device. ENVIRONMENT_WEB_OPTIMIZED should be
 *  targeted prior to the addition of this targeting option.
 *
 *  Value: "ENVIRONMENT_WEB_NOT_OPTIMIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentWebNotOptimized;
/**
 *  Target inventory displayed in browsers. This includes inventory that was
 *  designed for the device it was viewed on, such as mobile websites viewed on
 *  a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted, should be
 *  deleted prior to the deletion of this targeting option.
 *
 *  Value: "ENVIRONMENT_WEB_OPTIMIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentWebOptimized;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_EnvironmentTargetingOptionDetails.environment

/**
 *  Target inventory displayed in apps.
 *
 *  Value: "ENVIRONMENT_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentApp;
/**
 *  Default value when environment is not specified in this version. This enum
 *  is a placeholder for default value and does not represent a real environment
 *  option.
 *
 *  Value: "ENVIRONMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentUnspecified;
/**
 *  Target inventory displayed in browsers. This includes inventory that was not
 *  designed for the device but viewed on it, such as websites optimized for
 *  desktop but viewed on a mobile device. ENVIRONMENT_WEB_OPTIMIZED should be
 *  targeted prior to the addition of this targeting option.
 *
 *  Value: "ENVIRONMENT_WEB_NOT_OPTIMIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentWebNotOptimized;
/**
 *  Target inventory displayed in browsers. This includes inventory that was
 *  designed for the device it was viewed on, such as mobile websites viewed on
 *  a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted, should be
 *  deleted prior to the deletion of this targeting option.
 *
 *  Value: "ENVIRONMENT_WEB_OPTIMIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentWebOptimized;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails.exchange

/**
 *  Adform.
 *
 *  Value: "EXCHANGE_ADFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdform;
/**
 *  Admeta.
 *
 *  Value: "EXCHANGE_ADMETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdmeta;
/**
 *  Admixer.
 *
 *  Value: "EXCHANGE_ADMIXER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdmixer;
/**
 *  AdsMogo.
 *
 *  Value: "EXCHANGE_ADSMOGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdsmogo;
/**
 *  AdsWizz.
 *
 *  Value: "EXCHANGE_ADSWIZZ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdswizz;
/**
 *  Aja.
 *
 *  Value: "EXCHANGE_AJA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAja;
/**
 *  AppNexus.
 *
 *  Value: "EXCHANGE_APPNEXUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAppnexus;
/**
 *  BidSwitch.
 *
 *  Value: "EXCHANGE_BIDSWITCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeBidswitch;
/**
 *  BrightRoll Exchange for Video from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeBrightroll;
/**
 *  BrightRoll Exchange for Display from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeBrightrollDisplay;
/**
 *  Cadreon.
 *
 *  Value: "EXCHANGE_CADREON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeCadreon;
/**
 *  Dailymotion.
 *
 *  Value: "EXCHANGE_DAILYMOTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeDailymotion;
/**
 *  DAX.
 *
 *  Value: "EXCHANGE_DAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeDax;
/**
 *  Five.
 *
 *  Value: "EXCHANGE_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFive;
/**
 *  Fluct.
 *
 *  Value: "EXCHANGE_FLUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFluct;
/**
 *  FreeWheel SSP.
 *
 *  Value: "EXCHANGE_FREEWHEEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFreewheel;
/**
 *  Fyber.
 *
 *  Value: "EXCHANGE_FYBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFyber;
/**
 *  Geniee.
 *
 *  Value: "EXCHANGE_GENIEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeGeniee;
/**
 *  Google Ad Manager.
 *
 *  Value: "EXCHANGE_GOOGLE_AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeGoogleAdManager;
/**
 *  GumGum.
 *
 *  Value: "EXCHANGE_GUMGUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeGumgum;
/**
 *  iBILLBOARD.
 *
 *  Value: "EXCHANGE_IBILLBOARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeIbillboard;
/**
 *  i-mobile.
 *
 *  Value: "EXCHANGE_IMOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeImobile;
/**
 *  Improve Digital.
 *
 *  Value: "EXCHANGE_IMPROVE_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeImproveDigital;
/**
 *  Index Exchange.
 *
 *  Value: "EXCHANGE_INDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeIndex;
/**
 *  InMobi.
 *
 *  Value: "EXCHANGE_INMOBI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeInmobi;
/**
 *  Kargo.
 *
 *  Value: "EXCHANGE_KARGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeKargo;
/**
 *  Media.net.
 *
 *  Value: "EXCHANGE_MEDIANET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeMedianet;
/**
 *  MicroAd.
 *
 *  Value: "EXCHANGE_MICROAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeMicroad;
/**
 *  MoPub.
 *
 *  Value: "EXCHANGE_MOPUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeMopub;
/**
 *  Nend.
 *
 *  Value: "EXCHANGE_NEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeNend;
/**
 *  Nexstar Digital.
 *
 *  Value: "EXCHANGE_NEXSTAR_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeNexstarDigital;
/**
 *  ONE by AOL: Display Market Place.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOneByAolDisplay;
/**
 *  ONE by AOL: Mobile.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_MOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOneByAolMobile;
/**
 *  ONE by AOL: Video.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOneByAolVideo;
/**
 *  Ooyala.
 *
 *  Value: "EXCHANGE_OOYALA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOoyala;
/**
 *  Open8.
 *
 *  Value: "EXCHANGE_OPEN8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOpen8;
/**
 *  OpenX.
 *
 *  Value: "EXCHANGE_OPENX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOpenx;
/**
 *  Permodo.
 *
 *  Value: "EXCHANGE_PERMODO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePermodo;
/**
 *  PlatformId.
 *
 *  Value: "EXCHANGE_PLATFORMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePlatformid;
/**
 *  Platform One.
 *
 *  Value: "EXCHANGE_PLATFORMONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePlatformone;
/**
 *  PubMatic.
 *
 *  Value: "EXCHANGE_PUBMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePubmatic;
/**
 *  PulsePoint.
 *
 *  Value: "EXCHANGE_PULSEPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePulsepoint;
/**
 *  Red For Publishers.
 *
 *  Value: "EXCHANGE_RED_FOR_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeRedForPublishers;
/**
 *  RevenueMax.
 *
 *  Value: "EXCHANGE_REVENUEMAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeRevenuemax;
/**
 *  Rubicon.
 *
 *  Value: "EXCHANGE_RUBICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeRubicon;
/**
 *  Sharethrough.
 *
 *  Value: "EXCHANGE_SHARETHROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSharethrough;
/**
 *  Smaato.
 *
 *  Value: "EXCHANGE_SMAATO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmaato;
/**
 *  SmartClip.
 *
 *  Value: "EXCHANGE_SMARTCLIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmartclip;
/**
 *  SmartRTB+.
 *
 *  Value: "EXCHANGE_SMARTRTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmartrtb;
/**
 *  SmartstreamTv.
 *
 *  Value: "EXCHANGE_SMARTSTREAMTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmartstreamtv;
/**
 *  SoundCast.
 *
 *  Value: "EXCHANGE_SOUNDCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSoundcast;
/**
 *  Sovrn.
 *
 *  Value: "EXCHANGE_SOVRN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSovrn;
/**
 *  SpotXchange.
 *
 *  Value: "EXCHANGE_SPOTXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSpotxchange;
/**
 *  Ströer SSP.
 *
 *  Value: "EXCHANGE_STROER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeStroer;
/**
 *  Supership.
 *
 *  Value: "EXCHANGE_SUPERSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSupership;
/**
 *  Taboola.
 *
 *  Value: "EXCHANGE_TABOOLA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTaboola;
/**
 *  Tapjoy.
 *
 *  Value: "EXCHANGE_TAPJOY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTapjoy;
/**
 *  TeadsTv.
 *
 *  Value: "EXCHANGE_TEADSTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTeadstv;
/**
 *  Telaria.
 *
 *  Value: "EXCHANGE_TELARIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTelaria;
/**
 *  TripleLift.
 *
 *  Value: "EXCHANGE_TRIPLELIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTriplelift;
/**
 *  Triton.
 *
 *  Value: "EXCHANGE_TRITON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTriton;
/**
 *  TVN.
 *
 *  Value: "EXCHANGE_TVN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTvn;
/**
 *  United.
 *
 *  Value: "EXCHANGE_UNITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeUnited;
/**
 *  UnrulyX.
 *
 *  Value: "EXCHANGE_UNRULYX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeUnrulyx;
/**
 *  Exchange is not specified or is unknown in this version.
 *
 *  Value: "EXCHANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeUnspecified;
/**
 *  Vistar.
 *
 *  Value: "EXCHANGE_VISTAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeVistar;
/**
 *  Waze.
 *
 *  Value: "EXCHANGE_WAZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeWaze;
/**
 *  Yieldlab.
 *
 *  Value: "EXCHANGE_YIELDLAB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeYieldlab;
/**
 *  Yieldmo.
 *
 *  Value: "EXCHANGE_YIELDMO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeYieldmo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ExchangeConfigEnabledExchange.exchange

/**
 *  Adform.
 *
 *  Value: "EXCHANGE_ADFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdform;
/**
 *  Admeta.
 *
 *  Value: "EXCHANGE_ADMETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdmeta;
/**
 *  Admixer.
 *
 *  Value: "EXCHANGE_ADMIXER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdmixer;
/**
 *  AdsMogo.
 *
 *  Value: "EXCHANGE_ADSMOGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdsmogo;
/**
 *  AdsWizz.
 *
 *  Value: "EXCHANGE_ADSWIZZ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdswizz;
/**
 *  Aja.
 *
 *  Value: "EXCHANGE_AJA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAja;
/**
 *  AppNexus.
 *
 *  Value: "EXCHANGE_APPNEXUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAppnexus;
/**
 *  BidSwitch.
 *
 *  Value: "EXCHANGE_BIDSWITCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeBidswitch;
/**
 *  BrightRoll Exchange for Video from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeBrightroll;
/**
 *  BrightRoll Exchange for Display from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeBrightrollDisplay;
/**
 *  Cadreon.
 *
 *  Value: "EXCHANGE_CADREON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeCadreon;
/**
 *  Dailymotion.
 *
 *  Value: "EXCHANGE_DAILYMOTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeDailymotion;
/**
 *  DAX.
 *
 *  Value: "EXCHANGE_DAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeDax;
/**
 *  Five.
 *
 *  Value: "EXCHANGE_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFive;
/**
 *  Fluct.
 *
 *  Value: "EXCHANGE_FLUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFluct;
/**
 *  FreeWheel SSP.
 *
 *  Value: "EXCHANGE_FREEWHEEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFreewheel;
/**
 *  Fyber.
 *
 *  Value: "EXCHANGE_FYBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFyber;
/**
 *  Geniee.
 *
 *  Value: "EXCHANGE_GENIEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeGeniee;
/**
 *  Google Ad Manager.
 *
 *  Value: "EXCHANGE_GOOGLE_AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeGoogleAdManager;
/**
 *  GumGum.
 *
 *  Value: "EXCHANGE_GUMGUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeGumgum;
/**
 *  iBILLBOARD.
 *
 *  Value: "EXCHANGE_IBILLBOARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeIbillboard;
/**
 *  i-mobile.
 *
 *  Value: "EXCHANGE_IMOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeImobile;
/**
 *  Improve Digital.
 *
 *  Value: "EXCHANGE_IMPROVE_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeImproveDigital;
/**
 *  Index Exchange.
 *
 *  Value: "EXCHANGE_INDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeIndex;
/**
 *  InMobi.
 *
 *  Value: "EXCHANGE_INMOBI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeInmobi;
/**
 *  Kargo.
 *
 *  Value: "EXCHANGE_KARGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeKargo;
/**
 *  Media.net.
 *
 *  Value: "EXCHANGE_MEDIANET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeMedianet;
/**
 *  MicroAd.
 *
 *  Value: "EXCHANGE_MICROAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeMicroad;
/**
 *  MoPub.
 *
 *  Value: "EXCHANGE_MOPUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeMopub;
/**
 *  Nend.
 *
 *  Value: "EXCHANGE_NEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeNend;
/**
 *  Nexstar Digital.
 *
 *  Value: "EXCHANGE_NEXSTAR_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeNexstarDigital;
/**
 *  ONE by AOL: Display Market Place.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOneByAolDisplay;
/**
 *  ONE by AOL: Mobile.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_MOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOneByAolMobile;
/**
 *  ONE by AOL: Video.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOneByAolVideo;
/**
 *  Ooyala.
 *
 *  Value: "EXCHANGE_OOYALA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOoyala;
/**
 *  Open8.
 *
 *  Value: "EXCHANGE_OPEN8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOpen8;
/**
 *  OpenX.
 *
 *  Value: "EXCHANGE_OPENX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOpenx;
/**
 *  Permodo.
 *
 *  Value: "EXCHANGE_PERMODO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePermodo;
/**
 *  PlatformId.
 *
 *  Value: "EXCHANGE_PLATFORMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePlatformid;
/**
 *  Platform One.
 *
 *  Value: "EXCHANGE_PLATFORMONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePlatformone;
/**
 *  PubMatic.
 *
 *  Value: "EXCHANGE_PUBMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePubmatic;
/**
 *  PulsePoint.
 *
 *  Value: "EXCHANGE_PULSEPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePulsepoint;
/**
 *  Red For Publishers.
 *
 *  Value: "EXCHANGE_RED_FOR_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeRedForPublishers;
/**
 *  RevenueMax.
 *
 *  Value: "EXCHANGE_REVENUEMAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeRevenuemax;
/**
 *  Rubicon.
 *
 *  Value: "EXCHANGE_RUBICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeRubicon;
/**
 *  Sharethrough.
 *
 *  Value: "EXCHANGE_SHARETHROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSharethrough;
/**
 *  Smaato.
 *
 *  Value: "EXCHANGE_SMAATO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmaato;
/**
 *  SmartClip.
 *
 *  Value: "EXCHANGE_SMARTCLIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmartclip;
/**
 *  SmartRTB+.
 *
 *  Value: "EXCHANGE_SMARTRTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmartrtb;
/**
 *  SmartstreamTv.
 *
 *  Value: "EXCHANGE_SMARTSTREAMTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmartstreamtv;
/**
 *  SoundCast.
 *
 *  Value: "EXCHANGE_SOUNDCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSoundcast;
/**
 *  Sovrn.
 *
 *  Value: "EXCHANGE_SOVRN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSovrn;
/**
 *  SpotXchange.
 *
 *  Value: "EXCHANGE_SPOTXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSpotxchange;
/**
 *  Ströer SSP.
 *
 *  Value: "EXCHANGE_STROER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeStroer;
/**
 *  Supership.
 *
 *  Value: "EXCHANGE_SUPERSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSupership;
/**
 *  Taboola.
 *
 *  Value: "EXCHANGE_TABOOLA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTaboola;
/**
 *  Tapjoy.
 *
 *  Value: "EXCHANGE_TAPJOY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTapjoy;
/**
 *  TeadsTv.
 *
 *  Value: "EXCHANGE_TEADSTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTeadstv;
/**
 *  Telaria.
 *
 *  Value: "EXCHANGE_TELARIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTelaria;
/**
 *  TripleLift.
 *
 *  Value: "EXCHANGE_TRIPLELIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTriplelift;
/**
 *  Triton.
 *
 *  Value: "EXCHANGE_TRITON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTriton;
/**
 *  TVN.
 *
 *  Value: "EXCHANGE_TVN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTvn;
/**
 *  United.
 *
 *  Value: "EXCHANGE_UNITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeUnited;
/**
 *  UnrulyX.
 *
 *  Value: "EXCHANGE_UNRULYX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeUnrulyx;
/**
 *  Exchange is not specified or is unknown in this version.
 *
 *  Value: "EXCHANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeUnspecified;
/**
 *  Vistar.
 *
 *  Value: "EXCHANGE_VISTAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeVistar;
/**
 *  Waze.
 *
 *  Value: "EXCHANGE_WAZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeWaze;
/**
 *  Yieldlab.
 *
 *  Value: "EXCHANGE_YIELDLAB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeYieldlab;
/**
 *  Yieldmo.
 *
 *  Value: "EXCHANGE_YIELDMO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeYieldmo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ExchangeReviewStatus.exchange

/**
 *  Adform.
 *
 *  Value: "EXCHANGE_ADFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdform;
/**
 *  Admeta.
 *
 *  Value: "EXCHANGE_ADMETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdmeta;
/**
 *  Admixer.
 *
 *  Value: "EXCHANGE_ADMIXER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdmixer;
/**
 *  AdsMogo.
 *
 *  Value: "EXCHANGE_ADSMOGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdsmogo;
/**
 *  AdsWizz.
 *
 *  Value: "EXCHANGE_ADSWIZZ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdswizz;
/**
 *  Aja.
 *
 *  Value: "EXCHANGE_AJA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAja;
/**
 *  AppNexus.
 *
 *  Value: "EXCHANGE_APPNEXUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAppnexus;
/**
 *  BidSwitch.
 *
 *  Value: "EXCHANGE_BIDSWITCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeBidswitch;
/**
 *  BrightRoll Exchange for Video from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeBrightroll;
/**
 *  BrightRoll Exchange for Display from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeBrightrollDisplay;
/**
 *  Cadreon.
 *
 *  Value: "EXCHANGE_CADREON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeCadreon;
/**
 *  Dailymotion.
 *
 *  Value: "EXCHANGE_DAILYMOTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeDailymotion;
/**
 *  DAX.
 *
 *  Value: "EXCHANGE_DAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeDax;
/**
 *  Five.
 *
 *  Value: "EXCHANGE_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFive;
/**
 *  Fluct.
 *
 *  Value: "EXCHANGE_FLUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFluct;
/**
 *  FreeWheel SSP.
 *
 *  Value: "EXCHANGE_FREEWHEEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFreewheel;
/**
 *  Fyber.
 *
 *  Value: "EXCHANGE_FYBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFyber;
/**
 *  Geniee.
 *
 *  Value: "EXCHANGE_GENIEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeGeniee;
/**
 *  Google Ad Manager.
 *
 *  Value: "EXCHANGE_GOOGLE_AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeGoogleAdManager;
/**
 *  GumGum.
 *
 *  Value: "EXCHANGE_GUMGUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeGumgum;
/**
 *  iBILLBOARD.
 *
 *  Value: "EXCHANGE_IBILLBOARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeIbillboard;
/**
 *  i-mobile.
 *
 *  Value: "EXCHANGE_IMOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeImobile;
/**
 *  Improve Digital.
 *
 *  Value: "EXCHANGE_IMPROVE_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeImproveDigital;
/**
 *  Index Exchange.
 *
 *  Value: "EXCHANGE_INDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeIndex;
/**
 *  InMobi.
 *
 *  Value: "EXCHANGE_INMOBI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeInmobi;
/**
 *  Kargo.
 *
 *  Value: "EXCHANGE_KARGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeKargo;
/**
 *  Media.net.
 *
 *  Value: "EXCHANGE_MEDIANET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeMedianet;
/**
 *  MicroAd.
 *
 *  Value: "EXCHANGE_MICROAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeMicroad;
/**
 *  MoPub.
 *
 *  Value: "EXCHANGE_MOPUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeMopub;
/**
 *  Nend.
 *
 *  Value: "EXCHANGE_NEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeNend;
/**
 *  Nexstar Digital.
 *
 *  Value: "EXCHANGE_NEXSTAR_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeNexstarDigital;
/**
 *  ONE by AOL: Display Market Place.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOneByAolDisplay;
/**
 *  ONE by AOL: Mobile.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_MOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOneByAolMobile;
/**
 *  ONE by AOL: Video.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOneByAolVideo;
/**
 *  Ooyala.
 *
 *  Value: "EXCHANGE_OOYALA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOoyala;
/**
 *  Open8.
 *
 *  Value: "EXCHANGE_OPEN8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOpen8;
/**
 *  OpenX.
 *
 *  Value: "EXCHANGE_OPENX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOpenx;
/**
 *  Permodo.
 *
 *  Value: "EXCHANGE_PERMODO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePermodo;
/**
 *  PlatformId.
 *
 *  Value: "EXCHANGE_PLATFORMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePlatformid;
/**
 *  Platform One.
 *
 *  Value: "EXCHANGE_PLATFORMONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePlatformone;
/**
 *  PubMatic.
 *
 *  Value: "EXCHANGE_PUBMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePubmatic;
/**
 *  PulsePoint.
 *
 *  Value: "EXCHANGE_PULSEPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePulsepoint;
/**
 *  Red For Publishers.
 *
 *  Value: "EXCHANGE_RED_FOR_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeRedForPublishers;
/**
 *  RevenueMax.
 *
 *  Value: "EXCHANGE_REVENUEMAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeRevenuemax;
/**
 *  Rubicon.
 *
 *  Value: "EXCHANGE_RUBICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeRubicon;
/**
 *  Sharethrough.
 *
 *  Value: "EXCHANGE_SHARETHROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSharethrough;
/**
 *  Smaato.
 *
 *  Value: "EXCHANGE_SMAATO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmaato;
/**
 *  SmartClip.
 *
 *  Value: "EXCHANGE_SMARTCLIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmartclip;
/**
 *  SmartRTB+.
 *
 *  Value: "EXCHANGE_SMARTRTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmartrtb;
/**
 *  SmartstreamTv.
 *
 *  Value: "EXCHANGE_SMARTSTREAMTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmartstreamtv;
/**
 *  SoundCast.
 *
 *  Value: "EXCHANGE_SOUNDCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSoundcast;
/**
 *  Sovrn.
 *
 *  Value: "EXCHANGE_SOVRN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSovrn;
/**
 *  SpotXchange.
 *
 *  Value: "EXCHANGE_SPOTXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSpotxchange;
/**
 *  Ströer SSP.
 *
 *  Value: "EXCHANGE_STROER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeStroer;
/**
 *  Supership.
 *
 *  Value: "EXCHANGE_SUPERSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSupership;
/**
 *  Taboola.
 *
 *  Value: "EXCHANGE_TABOOLA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTaboola;
/**
 *  Tapjoy.
 *
 *  Value: "EXCHANGE_TAPJOY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTapjoy;
/**
 *  TeadsTv.
 *
 *  Value: "EXCHANGE_TEADSTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTeadstv;
/**
 *  Telaria.
 *
 *  Value: "EXCHANGE_TELARIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTelaria;
/**
 *  TripleLift.
 *
 *  Value: "EXCHANGE_TRIPLELIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTriplelift;
/**
 *  Triton.
 *
 *  Value: "EXCHANGE_TRITON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTriton;
/**
 *  TVN.
 *
 *  Value: "EXCHANGE_TVN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTvn;
/**
 *  United.
 *
 *  Value: "EXCHANGE_UNITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeUnited;
/**
 *  UnrulyX.
 *
 *  Value: "EXCHANGE_UNRULYX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeUnrulyx;
/**
 *  Exchange is not specified or is unknown in this version.
 *
 *  Value: "EXCHANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeUnspecified;
/**
 *  Vistar.
 *
 *  Value: "EXCHANGE_VISTAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeVistar;
/**
 *  Waze.
 *
 *  Value: "EXCHANGE_WAZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeWaze;
/**
 *  Yieldlab.
 *
 *  Value: "EXCHANGE_YIELDLAB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeYieldlab;
/**
 *  Yieldmo.
 *
 *  Value: "EXCHANGE_YIELDMO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeYieldmo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ExchangeReviewStatus.status

/**
 *  The creative is approved.
 *
 *  Value: "REVIEW_STATUS_APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusApproved;
/**
 *  The creative is pending review.
 *
 *  Value: "REVIEW_STATUS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusPending;
/**
 *  The creative is rejected.
 *
 *  Value: "REVIEW_STATUS_REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusRejected;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "REVIEW_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ExchangeTargetingOptionDetails.exchange

/**
 *  Adform.
 *
 *  Value: "EXCHANGE_ADFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdform;
/**
 *  Admeta.
 *
 *  Value: "EXCHANGE_ADMETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdmeta;
/**
 *  Admixer.
 *
 *  Value: "EXCHANGE_ADMIXER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdmixer;
/**
 *  AdsMogo.
 *
 *  Value: "EXCHANGE_ADSMOGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdsmogo;
/**
 *  AdsWizz.
 *
 *  Value: "EXCHANGE_ADSWIZZ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdswizz;
/**
 *  Aja.
 *
 *  Value: "EXCHANGE_AJA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAja;
/**
 *  AppNexus.
 *
 *  Value: "EXCHANGE_APPNEXUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAppnexus;
/**
 *  BidSwitch.
 *
 *  Value: "EXCHANGE_BIDSWITCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeBidswitch;
/**
 *  BrightRoll Exchange for Video from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeBrightroll;
/**
 *  BrightRoll Exchange for Display from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeBrightrollDisplay;
/**
 *  Cadreon.
 *
 *  Value: "EXCHANGE_CADREON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeCadreon;
/**
 *  Dailymotion.
 *
 *  Value: "EXCHANGE_DAILYMOTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeDailymotion;
/**
 *  DAX.
 *
 *  Value: "EXCHANGE_DAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeDax;
/**
 *  Five.
 *
 *  Value: "EXCHANGE_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFive;
/**
 *  Fluct.
 *
 *  Value: "EXCHANGE_FLUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFluct;
/**
 *  FreeWheel SSP.
 *
 *  Value: "EXCHANGE_FREEWHEEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFreewheel;
/**
 *  Fyber.
 *
 *  Value: "EXCHANGE_FYBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFyber;
/**
 *  Geniee.
 *
 *  Value: "EXCHANGE_GENIEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeGeniee;
/**
 *  Google Ad Manager.
 *
 *  Value: "EXCHANGE_GOOGLE_AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeGoogleAdManager;
/**
 *  GumGum.
 *
 *  Value: "EXCHANGE_GUMGUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeGumgum;
/**
 *  iBILLBOARD.
 *
 *  Value: "EXCHANGE_IBILLBOARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeIbillboard;
/**
 *  i-mobile.
 *
 *  Value: "EXCHANGE_IMOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeImobile;
/**
 *  Improve Digital.
 *
 *  Value: "EXCHANGE_IMPROVE_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeImproveDigital;
/**
 *  Index Exchange.
 *
 *  Value: "EXCHANGE_INDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeIndex;
/**
 *  InMobi.
 *
 *  Value: "EXCHANGE_INMOBI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeInmobi;
/**
 *  Kargo.
 *
 *  Value: "EXCHANGE_KARGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeKargo;
/**
 *  Media.net.
 *
 *  Value: "EXCHANGE_MEDIANET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeMedianet;
/**
 *  MicroAd.
 *
 *  Value: "EXCHANGE_MICROAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeMicroad;
/**
 *  MoPub.
 *
 *  Value: "EXCHANGE_MOPUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeMopub;
/**
 *  Nend.
 *
 *  Value: "EXCHANGE_NEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeNend;
/**
 *  Nexstar Digital.
 *
 *  Value: "EXCHANGE_NEXSTAR_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeNexstarDigital;
/**
 *  ONE by AOL: Display Market Place.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOneByAolDisplay;
/**
 *  ONE by AOL: Mobile.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_MOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOneByAolMobile;
/**
 *  ONE by AOL: Video.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOneByAolVideo;
/**
 *  Ooyala.
 *
 *  Value: "EXCHANGE_OOYALA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOoyala;
/**
 *  Open8.
 *
 *  Value: "EXCHANGE_OPEN8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOpen8;
/**
 *  OpenX.
 *
 *  Value: "EXCHANGE_OPENX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOpenx;
/**
 *  Permodo.
 *
 *  Value: "EXCHANGE_PERMODO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePermodo;
/**
 *  PlatformId.
 *
 *  Value: "EXCHANGE_PLATFORMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePlatformid;
/**
 *  Platform One.
 *
 *  Value: "EXCHANGE_PLATFORMONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePlatformone;
/**
 *  PubMatic.
 *
 *  Value: "EXCHANGE_PUBMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePubmatic;
/**
 *  PulsePoint.
 *
 *  Value: "EXCHANGE_PULSEPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePulsepoint;
/**
 *  Red For Publishers.
 *
 *  Value: "EXCHANGE_RED_FOR_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeRedForPublishers;
/**
 *  RevenueMax.
 *
 *  Value: "EXCHANGE_REVENUEMAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeRevenuemax;
/**
 *  Rubicon.
 *
 *  Value: "EXCHANGE_RUBICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeRubicon;
/**
 *  Sharethrough.
 *
 *  Value: "EXCHANGE_SHARETHROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSharethrough;
/**
 *  Smaato.
 *
 *  Value: "EXCHANGE_SMAATO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmaato;
/**
 *  SmartClip.
 *
 *  Value: "EXCHANGE_SMARTCLIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmartclip;
/**
 *  SmartRTB+.
 *
 *  Value: "EXCHANGE_SMARTRTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmartrtb;
/**
 *  SmartstreamTv.
 *
 *  Value: "EXCHANGE_SMARTSTREAMTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmartstreamtv;
/**
 *  SoundCast.
 *
 *  Value: "EXCHANGE_SOUNDCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSoundcast;
/**
 *  Sovrn.
 *
 *  Value: "EXCHANGE_SOVRN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSovrn;
/**
 *  SpotXchange.
 *
 *  Value: "EXCHANGE_SPOTXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSpotxchange;
/**
 *  Ströer SSP.
 *
 *  Value: "EXCHANGE_STROER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeStroer;
/**
 *  Supership.
 *
 *  Value: "EXCHANGE_SUPERSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSupership;
/**
 *  Taboola.
 *
 *  Value: "EXCHANGE_TABOOLA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTaboola;
/**
 *  Tapjoy.
 *
 *  Value: "EXCHANGE_TAPJOY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTapjoy;
/**
 *  TeadsTv.
 *
 *  Value: "EXCHANGE_TEADSTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTeadstv;
/**
 *  Telaria.
 *
 *  Value: "EXCHANGE_TELARIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTelaria;
/**
 *  TripleLift.
 *
 *  Value: "EXCHANGE_TRIPLELIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTriplelift;
/**
 *  Triton.
 *
 *  Value: "EXCHANGE_TRITON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTriton;
/**
 *  TVN.
 *
 *  Value: "EXCHANGE_TVN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTvn;
/**
 *  United.
 *
 *  Value: "EXCHANGE_UNITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeUnited;
/**
 *  UnrulyX.
 *
 *  Value: "EXCHANGE_UNRULYX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeUnrulyx;
/**
 *  Exchange is not specified or is unknown in this version.
 *
 *  Value: "EXCHANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeUnspecified;
/**
 *  Vistar.
 *
 *  Value: "EXCHANGE_VISTAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeVistar;
/**
 *  Waze.
 *
 *  Value: "EXCHANGE_WAZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeWaze;
/**
 *  Yieldlab.
 *
 *  Value: "EXCHANGE_YIELDLAB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeYieldlab;
/**
 *  Yieldmo.
 *
 *  Value: "EXCHANGE_YIELDMO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeYieldmo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ExitEvent.type

/**
 *  The exit event is a backup exit event. There could be multiple backup exit
 *  events in a creative.
 *
 *  Value: "EXIT_EVENT_TYPE_BACKUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExitEvent_Type_ExitEventTypeBackup;
/**
 *  The exit event is the default one.
 *
 *  Value: "EXIT_EVENT_TYPE_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExitEvent_Type_ExitEventTypeDefault;
/**
 *  Exit event type is not specified or is unknown in this version.
 *
 *  Value: "EXIT_EVENT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ExitEvent_Type_ExitEventTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_FirstAndThirdPartyAudience.audienceSource

/**
 *  Originated from Google Ad Manager.
 *
 *  Value: "AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_AdManager;
/**
 *  Originated from Ads Data Hub.
 *
 *  Value: "ADS_DATA_HUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_AdsDataHub;
/**
 *  Default value when audience source is not specified or is unknown.
 *
 *  Value: "AUDIENCE_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_AudienceSourceUnspecified;
/**
 *  Originated from Campaign Manager 360.
 *
 *  Value: "CAMPAIGN_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_CampaignManager;
/**
 *  Originated from Display & Video 360.
 *
 *  Value: "DISPLAY_VIDEO_360"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_DisplayVideo360;
/**
 *  Originated from Search Ads 360.
 *
 *  Value: "SEARCH_ADS_360"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_SearchAds360;
/**
 *  Originated from Youtube.
 *
 *  Value: "YOUTUBE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_Youtube;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_FirstAndThirdPartyAudience.audienceType

/**
 *  Audience was created based on campaign activity.
 *
 *  Value: "ACTIVITY_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_ActivityBased;
/**
 *  Default value when type is not specified or is unknown.
 *
 *  Value: "AUDIENCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_AudienceTypeUnspecified;
/**
 *  Audience was generated through matching customers to known contact
 *  information.
 *
 *  Value: "CUSTOMER_MATCH_CONTACT_INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_CustomerMatchContactInfo;
/**
 *  Audience was generated through matching customers to known Mobile device
 *  IDs.
 *
 *  Value: "CUSTOMER_MATCH_DEVICE_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_CustomerMatchDeviceId;
/**
 *  Audience was generated through matching customers to known User IDs.
 *
 *  Value: "CUSTOMER_MATCH_USER_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_CustomerMatchUserId;
/**
 *  Audience was created based on excluding the number of impressions they were
 *  served.
 *
 *  Value: "FREQUENCY_CAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_FrequencyCap;
/**
 *  Subtype of third party audience type.
 *
 *  Value: "LICENSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_Licensed;
/**
 *  Audience was created based on custom variables attached to pixel.
 *
 *  Value: "TAG_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_TagBased;
/**
 *  Audience was created based on past interactions with videos, YouTube ads, or
 *  YouTube channel.
 *
 *  Value: "YOUTUBE_USERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_YoutubeUsers;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_FirstAndThirdPartyAudience.firstAndThirdPartyAudienceType

/**
 *  Audience that is created via usage of client data.
 *
 *  Value: "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_FIRST_PARTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_FirstAndThirdPartyAudienceType_FirstAndThirdPartyAudienceTypeFirstParty;
/**
 *  Audience that is provided by Third Party data providers.
 *
 *  Value: "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_THIRD_PARTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_FirstAndThirdPartyAudienceType_FirstAndThirdPartyAudienceTypeThirdParty;
/**
 *  Default value when type is not specified or is unknown.
 *
 *  Value: "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudience_FirstAndThirdPartyAudienceType_FirstAndThirdPartyAudienceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting.recency

/**
 *  Recency is 10 days.
 *
 *  Value: "RECENCY_10_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency10Days;
/**
 *  Recency is 10 minutes.
 *
 *  Value: "RECENCY_10_MINUTES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency10Minutes;
/**
 *  Recency is 120 days.
 *
 *  Value: "RECENCY_120_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency120Days;
/**
 *  Recency is 12 hours.
 *
 *  Value: "RECENCY_12_HOURS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency12Hours;
/**
 *  Recency is 14 days.
 *
 *  Value: "RECENCY_14_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency14Days;
/**
 *  Recency is 15 days.
 *
 *  Value: "RECENCY_15_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency15Days;
/**
 *  Recency is 15 minutes.
 *
 *  Value: "RECENCY_15_MINUTES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency15Minutes;
/**
 *  Recency is 180 days.
 *
 *  Value: "RECENCY_180_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency180Days;
/**
 *  Recency is 1 day.
 *
 *  Value: "RECENCY_1_DAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency1Day;
/**
 *  Recency is 1 hour.
 *
 *  Value: "RECENCY_1_HOUR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency1Hour;
/**
 *  Recency is 1 minute.
 *
 *  Value: "RECENCY_1_MINUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency1Minute;
/**
 *  Recency is 21 days.
 *
 *  Value: "RECENCY_21_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency21Days;
/**
 *  Recency is 270 days.
 *
 *  Value: "RECENCY_270_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency270Days;
/**
 *  Recency is 28 days.
 *
 *  Value: "RECENCY_28_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency28Days;
/**
 *  Recency is 2 days.
 *
 *  Value: "RECENCY_2_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency2Days;
/**
 *  Recency is 2 hours.
 *
 *  Value: "RECENCY_2_HOURS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency2Hours;
/**
 *  Recency is 30 days.
 *
 *  Value: "RECENCY_30_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency30Days;
/**
 *  Recency is 30 minutes.
 *
 *  Value: "RECENCY_30_MINUTES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency30Minutes;
/**
 *  Recency is 365 days.
 *
 *  Value: "RECENCY_365_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency365Days;
/**
 *  Recency is 3 days.
 *
 *  Value: "RECENCY_3_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency3Days;
/**
 *  Recency is 3 hours.
 *
 *  Value: "RECENCY_3_HOURS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency3Hours;
/**
 *  Recency is 40 days.
 *
 *  Value: "RECENCY_40_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency40Days;
/**
 *  Recency is 45 days.
 *
 *  Value: "RECENCY_45_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency45Days;
/**
 *  Recency is 5 days.
 *
 *  Value: "RECENCY_5_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency5Days;
/**
 *  Recency is 5 minutes.
 *
 *  Value: "RECENCY_5_MINUTES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency5Minutes;
/**
 *  Recency is 60 days.
 *
 *  Value: "RECENCY_60_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency60Days;
/**
 *  Recency is 6 hours.
 *
 *  Value: "RECENCY_6_HOURS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency6Hours;
/**
 *  Recency is 7 days.
 *
 *  Value: "RECENCY_7_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency7Days;
/**
 *  Recency is 90 days.
 *
 *  Value: "RECENCY_90_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency90Days;
/**
 *  No limit of recency.
 *
 *  Value: "RECENCY_NO_LIMIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_RecencyNoLimit;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_FloodlightGroup.webTagType

/**
 *  Dynamic tag.
 *
 *  Value: "WEB_TAG_TYPE_DYNAMIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeDynamic;
/**
 *  Image tag.
 *
 *  Value: "WEB_TAG_TYPE_IMAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeImage;
/**
 *  No tag type.
 *
 *  Value: "WEB_TAG_TYPE_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeNone;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "WEB_TAG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_FrequencyCap.timeUnit

/**
 *  The frequency cap will be applied to a number of days.
 *
 *  Value: "TIME_UNIT_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitDays;
/**
 *  The frequency cap will be applied to a number of hours.
 *
 *  Value: "TIME_UNIT_HOURS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitHours;
/**
 *  The frequency cap will be applied to the whole life time of the line item.
 *
 *  Value: "TIME_UNIT_LIFETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitLifetime;
/**
 *  The frequency cap will be applied to a number of minutes.
 *
 *  Value: "TIME_UNIT_MINUTES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitMinutes;
/**
 *  The frequency cap will be applied to a number of months.
 *
 *  Value: "TIME_UNIT_MONTHS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitMonths;
/**
 *  Time unit value is not specified or is unknown in this version.
 *
 *  Value: "TIME_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitUnspecified;
/**
 *  The frequency cap will be applied to a number of weeks.
 *
 *  Value: "TIME_UNIT_WEEKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitWeeks;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GenderAssignedTargetingOptionDetails.gender

/**
 *  The audience gender is female.
 *
 *  Value: "GENDER_FEMALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderFemale;
/**
 *  The audience gender is male.
 *
 *  Value: "GENDER_MALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderMale;
/**
 *  The audience gender is unknown.
 *
 *  Value: "GENDER_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderUnknown;
/**
 *  Default value when gender is not specified in this version. This enum is a
 *  place holder for default value and does not represent a real gender option.
 *
 *  Value: "GENDER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GenderTargetingOptionDetails.gender

/**
 *  The audience gender is female.
 *
 *  Value: "GENDER_FEMALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderFemale;
/**
 *  The audience gender is male.
 *
 *  Value: "GENDER_MALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderMale;
/**
 *  The audience gender is unknown.
 *
 *  Value: "GENDER_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderUnknown;
/**
 *  Default value when gender is not specified in this version. This enum is a
 *  place holder for default value and does not represent a real gender option.
 *
 *  Value: "GENDER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GenerateDefaultLineItemRequest.lineItemType

/**
 *  RTB Audio ads sold for a variety of environments.
 *
 *  Value: "LINE_ITEM_TYPE_AUDIO_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeAudioDefault;
/**
 *  Image, HTML5, native, or rich media ads.
 *
 *  Value: "LINE_ITEM_TYPE_DISPLAY_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeDisplayDefault;
/**
 *  Display ads that drive installs of an app.
 *
 *  Value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeDisplayMobileAppInstall;
/**
 *  Display ads served on mobile app inventory. Line items of this type and
 *  their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeDisplayMobileAppInventory;
/**
 *  Type value is not specified or is unknown in this version. Line items of
 *  this type and their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeUnspecified;
/**
 *  Video ads sold on a CPM basis for a variety of environments.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoDefault;
/**
 *  Video ads that drive installs of an app.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoMobileAppInstall;
/**
 *  Video ads served on mobile app inventory. Line items of this type and their
 *  targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoMobileAppInventory;
/**
 *  Over-the-top ads present in OTT insertion orders. This type is only
 *  applicable to line items with an insertion order of insertion_order_type
 *  `OVER_THE_TOP`.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoOverTheTop;
/**
 *  YouTube video ads that promote conversions. Line items of this type and
 *  their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersAction;
/**
 *  YouTube audio ads. Line items of this type and their targeting cannot be
 *  created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersAudio;
/**
 *  YouTube video ads (up to 15 seconds) that cannot be skipped. Line items of
 *  this type and their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersNonSkippable;
/**
 *  YouTube video ads that optimize reaching more unique users at lower cost.
 *  May include bumper ads, skippable in-stream ads, or a mix of types. Line
 *  items of this type and their targeting cannot be created or updated using
 *  the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersReach;
/**
 *  Default YouTube video ads. Line items of this type and their targeting
 *  cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersSimple;
/**
 *  YouTube video ads that show a story in a particular sequence using a mix of
 *  formats. Line items of this type and their targeting cannot be created or
 *  updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIDEO_SEQUENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersVideoSequence;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails.geoRegionType

/**
 *  The geographic region is an airport.
 *
 *  Value: "GEO_REGION_TYPE_AIRPORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeAirport;
/**
 *  The geographic region is an arrondissement.
 *
 *  Value: "GEO_REGION_TYPE_ARRONDISSEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeArrondissement;
/**
 *  The geographic region is an autonomous community.
 *
 *  Value: "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeAutonomousCommunity;
/**
 *  The geographic region is a borough.
 *
 *  Value: "GEO_REGION_TYPE_BOROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeBorough;
/**
 *  The geographic region is a canton.
 *
 *  Value: "GEO_REGION_TYPE_CANTON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCanton;
/**
 *  The geographic region is a city.
 *
 *  Value: "GEO_REGION_TYPE_CITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCity;
/**
 *  The geographic region is a city region.
 *
 *  Value: "GEO_REGION_TYPE_CITY_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCityRegion;
/**
 *  The geographic region is a congressional district.
 *
 *  Value: "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCongressionalDistrict;
/**
 *  The geographic region is a country.
 *
 *  Value: "GEO_REGION_TYPE_COUNTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCountry;
/**
 *  The geographic region is a county.
 *
 *  Value: "GEO_REGION_TYPE_COUNTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCounty;
/**
 *  The geographic region targeting type is department.
 *
 *  Value: "GEO_REGION_TYPE_DEPARTMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeDepartment;
/**
 *  The geographic region is a district.
 *
 *  Value: "GEO_REGION_TYPE_DISTRICT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeDistrict;
/**
 *  The geographic region is a designated market area (DMA) region.
 *
 *  Value: "GEO_REGION_TYPE_DMA_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeDmaRegion;
/**
 *  The geographic region is a governorate.
 *
 *  Value: "GEO_REGION_TYPE_GOVERNORATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeGovernorate;
/**
 *  The geographic region type is metro.
 *
 *  Value: "GEO_REGION_TYPE_METRO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeMetro;
/**
 *  The geographic region is a municipality.
 *
 *  Value: "GEO_REGION_TYPE_MUNICIPALITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeMunicipality;
/**
 *  The geographic region is a neighborhood.
 *
 *  Value: "GEO_REGION_TYPE_NEIGHBORHOOD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeNeighborhood;
/**
 *  The geographic region is an okrug.
 *
 *  Value: "GEO_REGION_TYPE_OKRUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeOkrug;
/**
 *  The geographic region type is other.
 *
 *  Value: "GEO_REGION_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeOther;
/**
 *  The geographic region targeting type is postal code.
 *
 *  Value: "GEO_REGION_TYPE_POSTAL_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypePostalCode;
/**
 *  The geographic region is a prefecture.
 *
 *  Value: "GEO_REGION_TYPE_PREFECTURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypePrefecture;
/**
 *  The geographic region is a province.
 *
 *  Value: "GEO_REGION_TYPE_PROVINCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeProvince;
/**
 *  The geographic region type is region.
 *
 *  Value: "GEO_REGION_TYPE_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeRegion;
/**
 *  The geographic region is a state.
 *
 *  Value: "GEO_REGION_TYPE_STATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeState;
/**
 *  The geographic region is a territory.
 *
 *  Value: "GEO_REGION_TYPE_TERRITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeTerritory;
/**
 *  The geographic region is a TV region.
 *
 *  Value: "GEO_REGION_TYPE_TV_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeTvRegion;
/**
 *  The geographic region is a union territory.
 *
 *  Value: "GEO_REGION_TYPE_UNION_TERRITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnionTerritory;
/**
 *  The geographic region is a university.
 *
 *  Value: "GEO_REGION_TYPE_UNIVERSITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeUniversity;
/**
 *  The geographic region type is unknown.
 *
 *  Value: "GEO_REGION_TYPE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnknown;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GeoRegionTargetingOptionDetails.geoRegionType

/**
 *  The geographic region is an airport.
 *
 *  Value: "GEO_REGION_TYPE_AIRPORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeAirport;
/**
 *  The geographic region is an arrondissement.
 *
 *  Value: "GEO_REGION_TYPE_ARRONDISSEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeArrondissement;
/**
 *  The geographic region is an autonomous community.
 *
 *  Value: "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeAutonomousCommunity;
/**
 *  The geographic region is a borough.
 *
 *  Value: "GEO_REGION_TYPE_BOROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeBorough;
/**
 *  The geographic region is a canton.
 *
 *  Value: "GEO_REGION_TYPE_CANTON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCanton;
/**
 *  The geographic region is a city.
 *
 *  Value: "GEO_REGION_TYPE_CITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCity;
/**
 *  The geographic region is a city region.
 *
 *  Value: "GEO_REGION_TYPE_CITY_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCityRegion;
/**
 *  The geographic region is a congressional district.
 *
 *  Value: "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCongressionalDistrict;
/**
 *  The geographic region is a country.
 *
 *  Value: "GEO_REGION_TYPE_COUNTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCountry;
/**
 *  The geographic region is a county.
 *
 *  Value: "GEO_REGION_TYPE_COUNTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCounty;
/**
 *  The geographic region targeting type is department.
 *
 *  Value: "GEO_REGION_TYPE_DEPARTMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeDepartment;
/**
 *  The geographic region is a district.
 *
 *  Value: "GEO_REGION_TYPE_DISTRICT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeDistrict;
/**
 *  The geographic region is a designated market area (DMA) region.
 *
 *  Value: "GEO_REGION_TYPE_DMA_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeDmaRegion;
/**
 *  The geographic region is a governorate.
 *
 *  Value: "GEO_REGION_TYPE_GOVERNORATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeGovernorate;
/**
 *  The geographic region type is metro.
 *
 *  Value: "GEO_REGION_TYPE_METRO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeMetro;
/**
 *  The geographic region is a municipality.
 *
 *  Value: "GEO_REGION_TYPE_MUNICIPALITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeMunicipality;
/**
 *  The geographic region is a neighborhood.
 *
 *  Value: "GEO_REGION_TYPE_NEIGHBORHOOD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeNeighborhood;
/**
 *  The geographic region is an okrug.
 *
 *  Value: "GEO_REGION_TYPE_OKRUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeOkrug;
/**
 *  The geographic region type is other.
 *
 *  Value: "GEO_REGION_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeOther;
/**
 *  The geographic region targeting type is postal code.
 *
 *  Value: "GEO_REGION_TYPE_POSTAL_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypePostalCode;
/**
 *  The geographic region is a prefecture.
 *
 *  Value: "GEO_REGION_TYPE_PREFECTURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypePrefecture;
/**
 *  The geographic region is a province.
 *
 *  Value: "GEO_REGION_TYPE_PROVINCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeProvince;
/**
 *  The geographic region type is region.
 *
 *  Value: "GEO_REGION_TYPE_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeRegion;
/**
 *  The geographic region is a state.
 *
 *  Value: "GEO_REGION_TYPE_STATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeState;
/**
 *  The geographic region is a territory.
 *
 *  Value: "GEO_REGION_TYPE_TERRITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeTerritory;
/**
 *  The geographic region is a TV region.
 *
 *  Value: "GEO_REGION_TYPE_TV_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeTvRegion;
/**
 *  The geographic region is a union territory.
 *
 *  Value: "GEO_REGION_TYPE_UNION_TERRITORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnionTerritory;
/**
 *  The geographic region is a university.
 *
 *  Value: "GEO_REGION_TYPE_UNIVERSITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeUniversity;
/**
 *  The geographic region type is unknown.
 *
 *  Value: "GEO_REGION_TYPE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnknown;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GoogleAudience.googleAudienceType

/**
 *  Affinity type Google audience.
 *
 *  Value: "GOOGLE_AUDIENCE_TYPE_AFFINITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeAffinity;
/**
 *  Extended-Demographic type Google audience.
 *
 *  Value: "GOOGLE_AUDIENCE_TYPE_EXTENDED_DEMOGRAPHIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeExtendedDemographic;
/**
 *  In-Market type Google audience.
 *
 *  Value: "GOOGLE_AUDIENCE_TYPE_IN_MARKET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeInMarket;
/**
 *  Installed-Apps type Google audience.
 *
 *  Value: "GOOGLE_AUDIENCE_TYPE_INSTALLED_APPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeInstalledApps;
/**
 *  Life-Event type Google audience.
 *
 *  Value: "GOOGLE_AUDIENCE_TYPE_LIFE_EVENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeLifeEvent;
/**
 *  New-Mobile-Devices type Google audience.
 *
 *  Value: "GOOGLE_AUDIENCE_TYPE_NEW_MOBILE_DEVICES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeNewMobileDevices;
/**
 *  Default value when type is not specified or is unknown.
 *
 *  Value: "GOOGLE_AUDIENCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GuaranteedOrder.exchange

/**
 *  Adform.
 *
 *  Value: "EXCHANGE_ADFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdform;
/**
 *  Admeta.
 *
 *  Value: "EXCHANGE_ADMETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdmeta;
/**
 *  Admixer.
 *
 *  Value: "EXCHANGE_ADMIXER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdmixer;
/**
 *  AdsMogo.
 *
 *  Value: "EXCHANGE_ADSMOGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdsmogo;
/**
 *  AdsWizz.
 *
 *  Value: "EXCHANGE_ADSWIZZ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdswizz;
/**
 *  Aja.
 *
 *  Value: "EXCHANGE_AJA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAja;
/**
 *  AppNexus.
 *
 *  Value: "EXCHANGE_APPNEXUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAppnexus;
/**
 *  BidSwitch.
 *
 *  Value: "EXCHANGE_BIDSWITCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeBidswitch;
/**
 *  BrightRoll Exchange for Video from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeBrightroll;
/**
 *  BrightRoll Exchange for Display from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeBrightrollDisplay;
/**
 *  Cadreon.
 *
 *  Value: "EXCHANGE_CADREON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeCadreon;
/**
 *  Dailymotion.
 *
 *  Value: "EXCHANGE_DAILYMOTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeDailymotion;
/**
 *  DAX.
 *
 *  Value: "EXCHANGE_DAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeDax;
/**
 *  Five.
 *
 *  Value: "EXCHANGE_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFive;
/**
 *  Fluct.
 *
 *  Value: "EXCHANGE_FLUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFluct;
/**
 *  FreeWheel SSP.
 *
 *  Value: "EXCHANGE_FREEWHEEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFreewheel;
/**
 *  Fyber.
 *
 *  Value: "EXCHANGE_FYBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFyber;
/**
 *  Geniee.
 *
 *  Value: "EXCHANGE_GENIEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeGeniee;
/**
 *  Google Ad Manager.
 *
 *  Value: "EXCHANGE_GOOGLE_AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeGoogleAdManager;
/**
 *  GumGum.
 *
 *  Value: "EXCHANGE_GUMGUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeGumgum;
/**
 *  iBILLBOARD.
 *
 *  Value: "EXCHANGE_IBILLBOARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeIbillboard;
/**
 *  i-mobile.
 *
 *  Value: "EXCHANGE_IMOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeImobile;
/**
 *  Improve Digital.
 *
 *  Value: "EXCHANGE_IMPROVE_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeImproveDigital;
/**
 *  Index Exchange.
 *
 *  Value: "EXCHANGE_INDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeIndex;
/**
 *  InMobi.
 *
 *  Value: "EXCHANGE_INMOBI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeInmobi;
/**
 *  Kargo.
 *
 *  Value: "EXCHANGE_KARGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeKargo;
/**
 *  Media.net.
 *
 *  Value: "EXCHANGE_MEDIANET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeMedianet;
/**
 *  MicroAd.
 *
 *  Value: "EXCHANGE_MICROAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeMicroad;
/**
 *  MoPub.
 *
 *  Value: "EXCHANGE_MOPUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeMopub;
/**
 *  Nend.
 *
 *  Value: "EXCHANGE_NEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeNend;
/**
 *  Nexstar Digital.
 *
 *  Value: "EXCHANGE_NEXSTAR_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeNexstarDigital;
/**
 *  ONE by AOL: Display Market Place.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOneByAolDisplay;
/**
 *  ONE by AOL: Mobile.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_MOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOneByAolMobile;
/**
 *  ONE by AOL: Video.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOneByAolVideo;
/**
 *  Ooyala.
 *
 *  Value: "EXCHANGE_OOYALA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOoyala;
/**
 *  Open8.
 *
 *  Value: "EXCHANGE_OPEN8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOpen8;
/**
 *  OpenX.
 *
 *  Value: "EXCHANGE_OPENX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOpenx;
/**
 *  Permodo.
 *
 *  Value: "EXCHANGE_PERMODO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePermodo;
/**
 *  PlatformId.
 *
 *  Value: "EXCHANGE_PLATFORMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePlatformid;
/**
 *  Platform One.
 *
 *  Value: "EXCHANGE_PLATFORMONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePlatformone;
/**
 *  PubMatic.
 *
 *  Value: "EXCHANGE_PUBMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePubmatic;
/**
 *  PulsePoint.
 *
 *  Value: "EXCHANGE_PULSEPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePulsepoint;
/**
 *  Red For Publishers.
 *
 *  Value: "EXCHANGE_RED_FOR_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeRedForPublishers;
/**
 *  RevenueMax.
 *
 *  Value: "EXCHANGE_REVENUEMAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeRevenuemax;
/**
 *  Rubicon.
 *
 *  Value: "EXCHANGE_RUBICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeRubicon;
/**
 *  Sharethrough.
 *
 *  Value: "EXCHANGE_SHARETHROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSharethrough;
/**
 *  Smaato.
 *
 *  Value: "EXCHANGE_SMAATO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmaato;
/**
 *  SmartClip.
 *
 *  Value: "EXCHANGE_SMARTCLIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmartclip;
/**
 *  SmartRTB+.
 *
 *  Value: "EXCHANGE_SMARTRTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmartrtb;
/**
 *  SmartstreamTv.
 *
 *  Value: "EXCHANGE_SMARTSTREAMTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmartstreamtv;
/**
 *  SoundCast.
 *
 *  Value: "EXCHANGE_SOUNDCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSoundcast;
/**
 *  Sovrn.
 *
 *  Value: "EXCHANGE_SOVRN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSovrn;
/**
 *  SpotXchange.
 *
 *  Value: "EXCHANGE_SPOTXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSpotxchange;
/**
 *  Ströer SSP.
 *
 *  Value: "EXCHANGE_STROER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeStroer;
/**
 *  Supership.
 *
 *  Value: "EXCHANGE_SUPERSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSupership;
/**
 *  Taboola.
 *
 *  Value: "EXCHANGE_TABOOLA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTaboola;
/**
 *  Tapjoy.
 *
 *  Value: "EXCHANGE_TAPJOY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTapjoy;
/**
 *  TeadsTv.
 *
 *  Value: "EXCHANGE_TEADSTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTeadstv;
/**
 *  Telaria.
 *
 *  Value: "EXCHANGE_TELARIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTelaria;
/**
 *  TripleLift.
 *
 *  Value: "EXCHANGE_TRIPLELIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTriplelift;
/**
 *  Triton.
 *
 *  Value: "EXCHANGE_TRITON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTriton;
/**
 *  TVN.
 *
 *  Value: "EXCHANGE_TVN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTvn;
/**
 *  United.
 *
 *  Value: "EXCHANGE_UNITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeUnited;
/**
 *  UnrulyX.
 *
 *  Value: "EXCHANGE_UNRULYX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeUnrulyx;
/**
 *  Exchange is not specified or is unknown in this version.
 *
 *  Value: "EXCHANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeUnspecified;
/**
 *  Vistar.
 *
 *  Value: "EXCHANGE_VISTAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeVistar;
/**
 *  Waze.
 *
 *  Value: "EXCHANGE_WAZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeWaze;
/**
 *  Yieldlab.
 *
 *  Value: "EXCHANGE_YIELDLAB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeYieldlab;
/**
 *  Yieldmo.
 *
 *  Value: "EXCHANGE_YIELDMO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeYieldmo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GuaranteedOrderStatus.configStatus

/**
 *  The state after the buyer configures a guaranteed order.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_ConfigStatus_Completed;
/**
 *  The approval status is not specified or is unknown in this version.
 *
 *  Value: "GUARANTEED_ORDER_CONFIG_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_ConfigStatus_GuaranteedOrderConfigStatusUnspecified;
/**
 *  The beginning state of a guaranteed order. The guaranteed order in this
 *  state needs to be configured before it can serve.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_ConfigStatus_Pending;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_GuaranteedOrderStatus.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails.householdIncome

/**
 *  The audience is in the lower 50% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_LOWER_50_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeLower50Percent;
/**
 *  The audience is in the top 10% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_10_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop10Percent;
/**
 *  The audience is in the top 11-20% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop11To20Percent;
/**
 *  The audience is in the top 21-30% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop21To30Percent;
/**
 *  The audience is in the top 31-40% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop31To40Percent;
/**
 *  The audience is in the top 41-50% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop41To50Percent;
/**
 *  The household income of the audience is unknown.
 *
 *  Value: "HOUSEHOLD_INCOME_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnknown;
/**
 *  Default value when household income is not specified in this version. This
 *  enum is a placeholder for default value and does not represent a real
 *  household income option.
 *
 *  Value: "HOUSEHOLD_INCOME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails.householdIncome

/**
 *  The audience is in the lower 50% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_LOWER_50_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeLower50Percent;
/**
 *  The audience is in the top 10% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_10_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop10Percent;
/**
 *  The audience is in the top 11-20% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop11To20Percent;
/**
 *  The audience is in the top 21-30% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop21To30Percent;
/**
 *  The audience is in the top 31-40% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop31To40Percent;
/**
 *  The audience is in the top 41-50% of U.S. household incomes.
 *
 *  Value: "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop41To50Percent;
/**
 *  The household income of the audience is unknown.
 *
 *  Value: "HOUSEHOLD_INCOME_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnknown;
/**
 *  Default value when household income is not specified in this version. This
 *  enum is a placeholder for default value and does not represent a real
 *  household income option.
 *
 *  Value: "HOUSEHOLD_INCOME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InsertionOrder.billableOutcome

/**
 *  Pay per click.
 *
 *  Value: "BILLABLE_OUTCOME_PAY_PER_CLICK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomePayPerClick;
/**
 *  Pay per impressions.
 *
 *  Value: "BILLABLE_OUTCOME_PAY_PER_IMPRESSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomePayPerImpression;
/**
 *  Pay per active view.
 *
 *  Value: "BILLABLE_OUTCOME_PAY_PER_VIEWABLE_IMPRESSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomePayPerViewableImpression;
/**
 *  Unspecified billable outcome.
 *
 *  Value: "BILLABLE_OUTCOME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InsertionOrder.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InsertionOrder.insertionOrderType

/**
 *  Insertion order type is not specified or is unknown.
 *
 *  Value: "INSERTION_ORDER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_InsertionOrderType_InsertionOrderTypeUnspecified;
/**
 *  Over-the-top.
 *
 *  Value: "OVER_THE_TOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_InsertionOrderType_OverTheTop;
/**
 *  Real-time bidding.
 *
 *  Value: "RTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_InsertionOrderType_Rtb;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InsertionOrder.reservationType

/**
 *  Created with an instant quote. Only applicable to YouTube and partners line
 *  items.
 *
 *  Value: "RESERVATION_TYPE_INSTANT_RESERVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeInstantReserve;
/**
 *  Not created through a guaranteed inventory source.
 *
 *  Value: "RESERVATION_TYPE_NOT_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeNotGuaranteed;
/**
 *  Created through a Petra inventory source. Only applicable to YouTube and
 *  Partners line items.
 *
 *  Value: "RESERVATION_TYPE_PETRA_VIRAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypePetraViral;
/**
 *  Created through a programmatic guaranteed inventory source.
 *
 *  Value: "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeProgrammaticGuaranteed;
/**
 *  Created through a tag guaranteed inventory source.
 *
 *  Value: "RESERVATION_TYPE_TAG_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeTagGuaranteed;
/**
 *  Reservation type value is not specified or is unknown in this version.
 *
 *  Value: "RESERVATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InsertionOrderBudget.automationType

/**
 *  Allow the system to automatically adjust bids and shift budget to owning
 *  line items to optimize performance defined by performance_goal.
 *
 *  Value: "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeBidBudget;
/**
 *  Automatic budget allocation. Allow the system to automatically shift budget
 *  to owning line items to optimize performance defined by performance_goal. No
 *  automation on bid settings.
 *
 *  Value: "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeBudget;
/**
 *  No automation of bid or budget on insertion order level. Bid and budget must
 *  be manually configured at the line item level.
 *
 *  Value: "INSERTION_ORDER_AUTOMATION_TYPE_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeNone;
/**
 *  Insertion order automation option is not specified or is unknown in this
 *  version.
 *
 *  Value: "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InsertionOrderBudget.budgetUnit

/**
 *  Budgeting in currency amounts.
 *
 *  Value: "BUDGET_UNIT_CURRENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrderBudget_BudgetUnit_BudgetUnitCurrency;
/**
 *  Budgeting in impression amounts.
 *
 *  Value: "BUDGET_UNIT_IMPRESSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrderBudget_BudgetUnit_BudgetUnitImpressions;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "BUDGET_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InsertionOrderBudget_BudgetUnit_BudgetUnitUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.displayViewability

/**
 *  Target 40% Viewability or Higher.
 *
 *  Value: "PERFORMANCE_VIEWABILITY_40"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability40;
/**
 *  Target 50% Viewability or Higher.
 *
 *  Value: "PERFORMANCE_VIEWABILITY_50"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability50;
/**
 *  Target 60% Viewability or Higher.
 *
 *  Value: "PERFORMANCE_VIEWABILITY_60"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability60;
/**
 *  Target 70% Viewability or Higher.
 *
 *  Value: "PERFORMANCE_VIEWABILITY_70"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability70;
/**
 *  This enum is only a placeholder and it doesn't specify any display
 *  viewability options.
 *
 *  Value: "PERFORMANCE_VIEWABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewabilityUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedAdFraudRisk

/**
 *  Ad Fraud - Exclude High and Moderate Risk.
 *
 *  Value: "SUSPICIOUS_ACTIVITY_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAdFraudRisk_SuspiciousActivityHmr;
/**
 *  Ad Fraud - Exclude High Risk.
 *
 *  Value: "SUSPICIOUS_ACTIVITY_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAdFraudRisk_SuspiciousActivityHr;
/**
 *  This enum is only a placeholder and it doesn't specify any ad fraud
 *  prevention options.
 *
 *  Value: "SUSPICIOUS_ACTIVITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAdFraudRisk_SuspiciousActivityUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedAdultRisk

/**
 *  Adult - Exclude High and Moderate Risk.
 *
 *  Value: "ADULT_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAdultRisk_AdultHmr;
/**
 *  Adult - Exclude High Risk.
 *
 *  Value: "ADULT_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAdultRisk_AdultHr;
/**
 *  This enum is only a placeholder and it doesn't specify any adult options.
 *
 *  Value: "ADULT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAdultRisk_AdultUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedAlcoholRisk

/**
 *  Alcohol - Exclude High and Moderate Risk.
 *
 *  Value: "ALCOHOL_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAlcoholRisk_AlcoholHmr;
/**
 *  Alcohol - Exclude High Risk.
 *
 *  Value: "ALCOHOL_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAlcoholRisk_AlcoholHr;
/**
 *  This enum is only a placeholder and it doesn't specify any alcohol options.
 *
 *  Value: "ALCOHOL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedAlcoholRisk_AlcoholUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedDrugsRisk

/**
 *  Drugs - Exclude High and Moderate Risk.
 *
 *  Value: "DRUGS_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedDrugsRisk_DrugsHmr;
/**
 *  Drugs - Exclude High Risk.
 *
 *  Value: "DRUGS_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedDrugsRisk_DrugsHr;
/**
 *  This enum is only a placeholder and it doesn't specify any drugs options.
 *
 *  Value: "DRUGS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedDrugsRisk_DrugsUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedGamblingRisk

/**
 *  Gambling - Exclude High and Moderate Risk.
 *
 *  Value: "GAMBLING_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedGamblingRisk_GamblingHmr;
/**
 *  Gambling - Exclude High Risk.
 *
 *  Value: "GAMBLING_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedGamblingRisk_GamblingHr;
/**
 *  This enum is only a placeholder and it doesn't specify any gambling options.
 *
 *  Value: "GAMBLING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedGamblingRisk_GamblingUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedHateSpeechRisk

/**
 *  Hate Speech - Exclude High and Moderate Risk.
 *
 *  Value: "HATE_SPEECH_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedHateSpeechRisk_HateSpeechHmr;
/**
 *  Hate Speech - Exclude High Risk.
 *
 *  Value: "HATE_SPEECH_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedHateSpeechRisk_HateSpeechHr;
/**
 *  This enum is only a placeholder and it doesn't specify any hate speech
 *  options.
 *
 *  Value: "HATE_SPEECH_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedHateSpeechRisk_HateSpeechUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedIllegalDownloadsRisk

/**
 *  Illegal Downloads - Exclude High and Moderate Risk.
 *
 *  Value: "ILLEGAL_DOWNLOADS_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedIllegalDownloadsRisk_IllegalDownloadsHmr;
/**
 *  Illegal Downloads - Exclude High Risk.
 *
 *  Value: "ILLEGAL_DOWNLOADS_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedIllegalDownloadsRisk_IllegalDownloadsHr;
/**
 *  This enum is only a placeholder and it doesn't specify any illegal downloads
 *  options.
 *
 *  Value: "ILLEGAL_DOWNLOADS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedIllegalDownloadsRisk_IllegalDownloadsUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedOffensiveLanguageRisk

/**
 *  Offensive Language - Exclude High and Moderate Risk.
 *
 *  Value: "OFFENSIVE_LANGUAGE_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedOffensiveLanguageRisk_OffensiveLanguageHmr;
/**
 *  Offensive Language - Exclude High Risk.
 *
 *  Value: "OFFENSIVE_LANGUAGE_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedOffensiveLanguageRisk_OffensiveLanguageHr;
/**
 *  This enum is only a placeholder and it doesn't specify any language options.
 *
 *  Value: "OFFENSIVE_LANGUAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedOffensiveLanguageRisk_OffensiveLanguageUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.excludedViolenceRisk

/**
 *  Violence - Exclude High and Moderate Risk.
 *
 *  Value: "VIOLENCE_HMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedViolenceRisk_ViolenceHmr;
/**
 *  Violence - Exclude High Risk.
 *
 *  Value: "VIOLENCE_HR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedViolenceRisk_ViolenceHr;
/**
 *  This enum is only a placeholder and it doesn't specify any violence options.
 *
 *  Value: "VIOLENCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_ExcludedViolenceRisk_ViolenceUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.traqScoreOption

/**
 *  TRAQ score 1000.
 *
 *  Value: "TRAQ_1000"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq1000;
/**
 *  TRAQ score 250-1000.
 *
 *  Value: "TRAQ_250"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq250;
/**
 *  TRAQ score 500-1000.
 *
 *  Value: "TRAQ_500"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq500;
/**
 *  TRAQ score 600-1000.
 *
 *  Value: "TRAQ_600"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq600;
/**
 *  TRAQ score 700-1000.
 *
 *  Value: "TRAQ_700"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq700;
/**
 *  TRAQ score 750-1000.
 *
 *  Value: "TRAQ_750"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq750;
/**
 *  TRAQ score 875-1000.
 *
 *  Value: "TRAQ_875"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq875;
/**
 *  This enum is only a placeholder and it doesn't specify any true advertising
 *  quality scores.
 *
 *  Value: "TRAQ_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_TraqUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_IntegralAdScience.videoViewability

/**
 *  40%+ in view (IAB video viewability standard).
 *
 *  Value: "VIDEO_VIEWABILITY_40"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability40;
/**
 *  50%+ in view (IAB video viewability standard).
 *
 *  Value: "VIDEO_VIEWABILITY_50"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability50;
/**
 *  60%+ in view (IAB video viewability standard).
 *
 *  Value: "VIDEO_VIEWABILITY_60"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability60;
/**
 *  70%+ in view (IAB video viewability standard).
 *
 *  Value: "VIDEO_VIEWABILITY_70"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability70;
/**
 *  This enum is only a placeholder and it doesn't specify any video viewability
 *  options.
 *
 *  Value: "VIDEO_VIEWABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewabilityUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySource.commitment

/**
 *  The commitment is guaranteed delivery.
 *
 *  Value: "INVENTORY_SOURCE_COMMITMENT_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Commitment_InventorySourceCommitmentGuaranteed;
/**
 *  The commitment is non-guaranteed delivery.
 *
 *  Value: "INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Commitment_InventorySourceCommitmentNonGuaranteed;
/**
 *  The commitment is not specified or is unknown in this version.
 *
 *  Value: "INVENTORY_SOURCE_COMMITMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Commitment_InventorySourceCommitmentUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySource.deliveryMethod

/**
 *  The delivery method is programmatic.
 *
 *  Value: "INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_DeliveryMethod_InventorySourceDeliveryMethodProgrammatic;
/**
 *  The delivery method is tag.
 *
 *  Value: "INVENTORY_SOURCE_DELIVERY_METHOD_TAG"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_DeliveryMethod_InventorySourceDeliveryMethodTag;
/**
 *  The delivery method is not specified or is unknown in this version.
 *
 *  Value: "INVENTORY_SOURCE_DELIVERY_METHOD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_DeliveryMethod_InventorySourceDeliveryMethodUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySource.exchange

/**
 *  Adform.
 *
 *  Value: "EXCHANGE_ADFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdform;
/**
 *  Admeta.
 *
 *  Value: "EXCHANGE_ADMETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdmeta;
/**
 *  Admixer.
 *
 *  Value: "EXCHANGE_ADMIXER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdmixer;
/**
 *  AdsMogo.
 *
 *  Value: "EXCHANGE_ADSMOGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdsmogo;
/**
 *  AdsWizz.
 *
 *  Value: "EXCHANGE_ADSWIZZ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdswizz;
/**
 *  Aja.
 *
 *  Value: "EXCHANGE_AJA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAja;
/**
 *  AppNexus.
 *
 *  Value: "EXCHANGE_APPNEXUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAppnexus;
/**
 *  BidSwitch.
 *
 *  Value: "EXCHANGE_BIDSWITCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeBidswitch;
/**
 *  BrightRoll Exchange for Video from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeBrightroll;
/**
 *  BrightRoll Exchange for Display from Yahoo!.
 *
 *  Value: "EXCHANGE_BRIGHTROLL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeBrightrollDisplay;
/**
 *  Cadreon.
 *
 *  Value: "EXCHANGE_CADREON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeCadreon;
/**
 *  Dailymotion.
 *
 *  Value: "EXCHANGE_DAILYMOTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeDailymotion;
/**
 *  DAX.
 *
 *  Value: "EXCHANGE_DAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeDax;
/**
 *  Five.
 *
 *  Value: "EXCHANGE_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFive;
/**
 *  Fluct.
 *
 *  Value: "EXCHANGE_FLUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFluct;
/**
 *  FreeWheel SSP.
 *
 *  Value: "EXCHANGE_FREEWHEEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFreewheel;
/**
 *  Fyber.
 *
 *  Value: "EXCHANGE_FYBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFyber;
/**
 *  Geniee.
 *
 *  Value: "EXCHANGE_GENIEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeGeniee;
/**
 *  Google Ad Manager.
 *
 *  Value: "EXCHANGE_GOOGLE_AD_MANAGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeGoogleAdManager;
/**
 *  GumGum.
 *
 *  Value: "EXCHANGE_GUMGUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeGumgum;
/**
 *  iBILLBOARD.
 *
 *  Value: "EXCHANGE_IBILLBOARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeIbillboard;
/**
 *  i-mobile.
 *
 *  Value: "EXCHANGE_IMOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeImobile;
/**
 *  Improve Digital.
 *
 *  Value: "EXCHANGE_IMPROVE_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeImproveDigital;
/**
 *  Index Exchange.
 *
 *  Value: "EXCHANGE_INDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeIndex;
/**
 *  InMobi.
 *
 *  Value: "EXCHANGE_INMOBI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeInmobi;
/**
 *  Kargo.
 *
 *  Value: "EXCHANGE_KARGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeKargo;
/**
 *  Media.net.
 *
 *  Value: "EXCHANGE_MEDIANET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeMedianet;
/**
 *  MicroAd.
 *
 *  Value: "EXCHANGE_MICROAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeMicroad;
/**
 *  MoPub.
 *
 *  Value: "EXCHANGE_MOPUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeMopub;
/**
 *  Nend.
 *
 *  Value: "EXCHANGE_NEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeNend;
/**
 *  Nexstar Digital.
 *
 *  Value: "EXCHANGE_NEXSTAR_DIGITAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeNexstarDigital;
/**
 *  ONE by AOL: Display Market Place.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOneByAolDisplay;
/**
 *  ONE by AOL: Mobile.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_MOBILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOneByAolMobile;
/**
 *  ONE by AOL: Video.
 *
 *  Value: "EXCHANGE_ONE_BY_AOL_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOneByAolVideo;
/**
 *  Ooyala.
 *
 *  Value: "EXCHANGE_OOYALA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOoyala;
/**
 *  Open8.
 *
 *  Value: "EXCHANGE_OPEN8"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOpen8;
/**
 *  OpenX.
 *
 *  Value: "EXCHANGE_OPENX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOpenx;
/**
 *  Permodo.
 *
 *  Value: "EXCHANGE_PERMODO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangePermodo;
/**
 *  PlatformId.
 *
 *  Value: "EXCHANGE_PLATFORMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangePlatformid;
/**
 *  Platform One.
 *
 *  Value: "EXCHANGE_PLATFORMONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangePlatformone;
/**
 *  PubMatic.
 *
 *  Value: "EXCHANGE_PUBMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangePubmatic;
/**
 *  PulsePoint.
 *
 *  Value: "EXCHANGE_PULSEPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangePulsepoint;
/**
 *  Red For Publishers.
 *
 *  Value: "EXCHANGE_RED_FOR_PUBLISHERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeRedForPublishers;
/**
 *  RevenueMax.
 *
 *  Value: "EXCHANGE_REVENUEMAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeRevenuemax;
/**
 *  Rubicon.
 *
 *  Value: "EXCHANGE_RUBICON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeRubicon;
/**
 *  Sharethrough.
 *
 *  Value: "EXCHANGE_SHARETHROUGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSharethrough;
/**
 *  Smaato.
 *
 *  Value: "EXCHANGE_SMAATO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmaato;
/**
 *  SmartClip.
 *
 *  Value: "EXCHANGE_SMARTCLIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmartclip;
/**
 *  SmartRTB+.
 *
 *  Value: "EXCHANGE_SMARTRTB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmartrtb;
/**
 *  SmartstreamTv.
 *
 *  Value: "EXCHANGE_SMARTSTREAMTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmartstreamtv;
/**
 *  SoundCast.
 *
 *  Value: "EXCHANGE_SOUNDCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSoundcast;
/**
 *  Sovrn.
 *
 *  Value: "EXCHANGE_SOVRN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSovrn;
/**
 *  SpotXchange.
 *
 *  Value: "EXCHANGE_SPOTXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSpotxchange;
/**
 *  Ströer SSP.
 *
 *  Value: "EXCHANGE_STROER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeStroer;
/**
 *  Supership.
 *
 *  Value: "EXCHANGE_SUPERSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSupership;
/**
 *  Taboola.
 *
 *  Value: "EXCHANGE_TABOOLA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTaboola;
/**
 *  Tapjoy.
 *
 *  Value: "EXCHANGE_TAPJOY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTapjoy;
/**
 *  TeadsTv.
 *
 *  Value: "EXCHANGE_TEADSTV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTeadstv;
/**
 *  Telaria.
 *
 *  Value: "EXCHANGE_TELARIA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTelaria;
/**
 *  TripleLift.
 *
 *  Value: "EXCHANGE_TRIPLELIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTriplelift;
/**
 *  Triton.
 *
 *  Value: "EXCHANGE_TRITON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTriton;
/**
 *  TVN.
 *
 *  Value: "EXCHANGE_TVN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTvn;
/**
 *  United.
 *
 *  Value: "EXCHANGE_UNITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeUnited;
/**
 *  UnrulyX.
 *
 *  Value: "EXCHANGE_UNRULYX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeUnrulyx;
/**
 *  Exchange is not specified or is unknown in this version.
 *
 *  Value: "EXCHANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeUnspecified;
/**
 *  Vistar.
 *
 *  Value: "EXCHANGE_VISTAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeVistar;
/**
 *  Waze.
 *
 *  Value: "EXCHANGE_WAZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeWaze;
/**
 *  Yieldlab.
 *
 *  Value: "EXCHANGE_YIELDLAB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeYieldlab;
/**
 *  Yieldmo.
 *
 *  Value: "EXCHANGE_YIELDMO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_Exchange_ExchangeYieldmo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySource.inventorySourceProductType

/**
 *  The inventory source sells inventory through Auction Package. Modifying
 *  inventory sources of this product type are not supported via API.
 *
 *  Value: "AUCTION_PACKAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_AuctionPackage;
/**
 *  The inventory source sells inventory through Guaranteed Package. Modifying
 *  inventory sources of this product type are not supported via API.
 *
 *  Value: "GUARANTEED_PACKAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_GuaranteedPackage;
/**
 *  The inventory source sells inventory through Instant Reserve. Modifying
 *  inventory sources of this product type are not supported via API.
 *
 *  Value: "INSTANT_RESERVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_InstantReserve;
/**
 *  The product type is not specified or is unknown in this version. Modifying
 *  inventory sources of this product type are not supported via API.
 *
 *  Value: "INVENTORY_SOURCE_PRODUCT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_InventorySourceProductTypeUnspecified;
/**
 *  The inventory source sells inventory through Preferred Deal.
 *
 *  Value: "PREFERRED_DEAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_PreferredDeal;
/**
 *  The inventory source sells inventory through Private Auction.
 *
 *  Value: "PRIVATE_AUCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_PrivateAuction;
/**
 *  The inventory source sells inventory through Programmatic Guaranteed.
 *
 *  Value: "PROGRAMMATIC_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_ProgrammaticGuaranteed;
/**
 *  The inventory source sells inventory through Programmtic TV. Modifying
 *  inventory sources of this product type are not supported via API.
 *
 *  Value: "PROGRAMMATIC_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_ProgrammaticTv;
/**
 *  The inventory source sells inventory through Tag Guaranteed.
 *
 *  Value: "TAG_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_TagGuaranteed;
/**
 *  The inventory source sells inventory through YouTube Reserve.
 *
 *  Value: "YOUTUBE_RESERVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceProductType_YoutubeReserve;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySource.inventorySourceType

/**
 *  Auction package.
 *
 *  Value: "INVENTORY_SOURCE_TYPE_AUCTION_PACKAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceType_InventorySourceTypeAuctionPackage;
/**
 *  Private inventory source.
 *
 *  Value: "INVENTORY_SOURCE_TYPE_PRIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceType_InventorySourceTypePrivate;
/**
 *  The inventory source type is not specified or is unknown in this version.
 *
 *  Value: "INVENTORY_SOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySource_InventorySourceType_InventorySourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySourceStatus.configStatus

/**
 *  The state after the buyer configures a guaranteed inventory source.
 *
 *  Value: "INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_ConfigStatus_InventorySourceConfigStatusCompleted;
/**
 *  The beginning state of a guaranteed inventory source. The inventory source
 *  in this state needs to be configured.
 *
 *  Value: "INVENTORY_SOURCE_CONFIG_STATUS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_ConfigStatus_InventorySourceConfigStatusPending;
/**
 *  The approval status is not specified or is unknown in this version.
 *
 *  Value: "INVENTORY_SOURCE_CONFIG_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_ConfigStatus_InventorySourceConfigStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySourceStatus.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_InventorySourceStatus.sellerStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Invoice.invoiceType

/**
 *  The invoice has a negative amount.
 *
 *  Value: "INVOICE_TYPE_CREDIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Invoice_InvoiceType_InvoiceTypeCredit;
/**
 *  The invoice has a positive amount.
 *
 *  Value: "INVOICE_TYPE_INVOICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Invoice_InvoiceType_InvoiceTypeInvoice;
/**
 *  Not specified or is unknown in this version.
 *
 *  Value: "INVOICE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Invoice_InvoiceType_InvoiceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LineItem.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LineItem.lineItemType

/**
 *  RTB Audio ads sold for a variety of environments.
 *
 *  Value: "LINE_ITEM_TYPE_AUDIO_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeAudioDefault;
/**
 *  Image, HTML5, native, or rich media ads.
 *
 *  Value: "LINE_ITEM_TYPE_DISPLAY_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeDisplayDefault;
/**
 *  Display ads that drive installs of an app.
 *
 *  Value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeDisplayMobileAppInstall;
/**
 *  Display ads served on mobile app inventory. Line items of this type and
 *  their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeDisplayMobileAppInventory;
/**
 *  Type value is not specified or is unknown in this version. Line items of
 *  this type and their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeUnspecified;
/**
 *  Video ads sold on a CPM basis for a variety of environments.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoDefault;
/**
 *  Video ads that drive installs of an app.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoMobileAppInstall;
/**
 *  Video ads served on mobile app inventory. Line items of this type and their
 *  targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoMobileAppInventory;
/**
 *  Over-the-top ads present in OTT insertion orders. This type is only
 *  applicable to line items with an insertion order of insertion_order_type
 *  `OVER_THE_TOP`.
 *
 *  Value: "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoOverTheTop;
/**
 *  YouTube video ads that promote conversions. Line items of this type and
 *  their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersAction;
/**
 *  YouTube audio ads. Line items of this type and their targeting cannot be
 *  created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersAudio;
/**
 *  YouTube video ads (up to 15 seconds) that cannot be skipped. Line items of
 *  this type and their targeting cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersNonSkippable;
/**
 *  YouTube video ads that optimize reaching more unique users at lower cost.
 *  May include bumper ads, skippable in-stream ads, or a mix of types. Line
 *  items of this type and their targeting cannot be created or updated using
 *  the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersReach;
/**
 *  Default YouTube video ads. Line items of this type and their targeting
 *  cannot be created or updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersSimple;
/**
 *  YouTube video ads that show a story in a particular sequence using a mix of
 *  formats. Line items of this type and their targeting cannot be created or
 *  updated using the API.
 *
 *  Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIDEO_SEQUENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersVideoSequence;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LineItem.reservationType

/**
 *  Created with an instant quote. Only applicable to YouTube and partners line
 *  items.
 *
 *  Value: "RESERVATION_TYPE_INSTANT_RESERVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeInstantReserve;
/**
 *  Not created through a guaranteed inventory source.
 *
 *  Value: "RESERVATION_TYPE_NOT_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeNotGuaranteed;
/**
 *  Created through a Petra inventory source. Only applicable to YouTube and
 *  Partners line items.
 *
 *  Value: "RESERVATION_TYPE_PETRA_VIRAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypePetraViral;
/**
 *  Created through a programmatic guaranteed inventory source.
 *
 *  Value: "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeProgrammaticGuaranteed;
/**
 *  Created through a tag guaranteed inventory source.
 *
 *  Value: "RESERVATION_TYPE_TAG_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeTagGuaranteed;
/**
 *  Reservation type value is not specified or is unknown in this version.
 *
 *  Value: "RESERVATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LineItem.warningMessages

/**
 *  All partner enabled exchanges are negatively targeted. The line item will
 *  not run.
 *
 *  Value: "ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_AllPartnerEnabledExchangesNegativelyTargeted;
/**
 *  This line item isn't targeting any mobile users. This line item's type
 *  requires you to target a user list with mobile users. The line item will not
 *  run.
 *
 *  Value: "APP_INVENTORY_INVALID_AUDIENCE_LISTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_AppInventoryInvalidAudienceLists;
/**
 *  This line item's Apps & URLs targeting doesn't include any mobile apps. This
 *  line item's type requires you to include mobile apps in your channel,
 *  sitelist, or apps targeting. The line item will not run.
 *
 *  Value: "APP_INVENTORY_INVALID_SITE_TARGETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_AppInventoryInvalidSiteTargeting;
/**
 *  This line item's end date is in the past.
 *
 *  Value: "EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_Expired;
/**
 *  This line item has invalid flight dates. The line item will not run.
 *
 *  Value: "INVALID_FLIGHT_DATES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_InvalidFlightDates;
/**
 *  No active inventory sources are being targeted. The line item will not run.
 *
 *  Value: "INVALID_INVENTORY_SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_InvalidInventorySource;
/**
 *  Not specified or is unknown.
 *
 *  Value: "LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_LineItemWarningMessageUnspecified;
/**
 *  This line item does not contain any valid creative. The line item will not
 *  run.
 *
 *  Value: "NO_VALID_CREATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_NoValidCreative;
/**
 *  The insertion order of this line item has its end date set in the past. The
 *  line item will not run.
 *
 *  Value: "PARENT_INSERTION_ORDER_EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_ParentInsertionOrderExpired;
/**
 *  The insertion order of this line item is paused. The line item will not run.
 *
 *  Value: "PARENT_INSERTION_ORDER_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_ParentInsertionOrderPaused;
/**
 *  This line item will begin running in the future.
 *
 *  Value: "PENDING_FLIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItem_WarningMessages_PendingFlight;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LineItemBudget.budgetAllocationType

/**
 *  Automatic budget allocation is enabled for the line item.
 *
 *  Value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeAutomatic;
/**
 *  A fixed max budget amount is allocated for the line item.
 *
 *  Value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeFixed;
/**
 *  No budget limit is applied to the line item.
 *
 *  Value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeUnlimited;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LineItemBudget.budgetUnit

/**
 *  Budgeting in currency amounts.
 *
 *  Value: "BUDGET_UNIT_CURRENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemBudget_BudgetUnit_BudgetUnitCurrency;
/**
 *  Budgeting in impression amounts.
 *
 *  Value: "BUDGET_UNIT_IMPRESSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemBudget_BudgetUnit_BudgetUnitImpressions;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "BUDGET_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemBudget_BudgetUnit_BudgetUnitUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LineItemFlight.flightDateType

/**
 *  The line item uses its own custom flight dates.
 *
 *  Value: "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemFlight_FlightDateType_LineItemFlightDateTypeCustom;
/**
 *  The line item's flight dates are inherited from its parent insertion order.
 *
 *  Value: "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemFlight_FlightDateType_LineItemFlightDateTypeInherited;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LineItemFlight_FlightDateType_LineItemFlightDateTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_LocationList.locationType

/**
 *  The type for proximity geo location.
 *
 *  Value: "TARGETING_LOCATION_TYPE_PROXIMITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LocationList_LocationType_TargetingLocationTypeProximity;
/**
 *  The type for regional geo location.
 *
 *  Value: "TARGETING_LOCATION_TYPE_REGIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LocationList_LocationType_TargetingLocationTypeRegional;
/**
 *  Default value when type is not specified or is unknown.
 *
 *  Value: "TARGETING_LOCATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_LocationList_LocationType_TargetingLocationTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ManualTrigger.state

/**
 *  The trigger is currently active (activated).
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ManualTrigger_State_Active;
/**
 *  The trigger is currently inactive and ready to be activated.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ManualTrigger_State_Inactive;
/**
 *  Default value when state is not specified or is unknown in this version.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ManualTrigger_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_MaximizeSpendBidStrategy.performanceGoalType

/**
 *  Viewable impressions.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeAvViewed;
/**
 *  Completed inview and audible views.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCiva;
/**
 *  Cost per action.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpa;
/**
 *  Cost per click.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpc;
/**
 *  Custom bidding algorithm.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCustomAlgo;
/**
 *  Inview time over 10 secs views.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeIvoTen;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeUnspecified;
/**
 *  Viewable CPM.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeViewableCpm;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_MobileApp.platform

/**
 *  Android platform.
 *
 *  Value: "ANDROID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MobileApp_Platform_Android;
/**
 *  iOS platform.
 *
 *  Value: "IOS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MobileApp_Platform_Ios;
/**
 *  Platform is not specified.
 *
 *  Value: "PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_MobileApp_Platform_PlatformUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails.contentPosition

/**
 *  Native content position is in-article, i.e., ads appear between the
 *  paragraphs of pages.
 *
 *  Value: "NATIVE_CONTENT_POSITION_IN_ARTICLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionInArticle;
/**
 *  Native content position is in-feed, i.e., ads appear in a scrollable stream
 *  of content. A feed is typically editorial (e.g. a list of articles or news)
 *  or listings (e.g. a list of products or services).
 *
 *  Value: "NATIVE_CONTENT_POSITION_IN_FEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionInFeed;
/**
 *  Native content position is peripheral, i.e., ads appear outside of core
 *  content on pages, such as the right- or left-hand side of the page.
 *
 *  Value: "NATIVE_CONTENT_POSITION_PERIPHERAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionPeripheral;
/**
 *  Native content position is recommendation, i.e., ads appear in sections for
 *  recommended content.
 *
 *  Value: "NATIVE_CONTENT_POSITION_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionRecommendation;
/**
 *  The native content position is unknown.
 *
 *  Value: "NATIVE_CONTENT_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionUnknown;
/**
 *  Native content position is not specified in this version. This enum is a
 *  place holder for a default value and does not represent a real native
 *  content position.
 *
 *  Value: "NATIVE_CONTENT_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_NativeContentPositionTargetingOptionDetails.contentPosition

/**
 *  Native content position is in-article, i.e., ads appear between the
 *  paragraphs of pages.
 *
 *  Value: "NATIVE_CONTENT_POSITION_IN_ARTICLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionInArticle;
/**
 *  Native content position is in-feed, i.e., ads appear in a scrollable stream
 *  of content. A feed is typically editorial (e.g. a list of articles or news)
 *  or listings (e.g. a list of products or services).
 *
 *  Value: "NATIVE_CONTENT_POSITION_IN_FEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionInFeed;
/**
 *  Native content position is peripheral, i.e., ads appear outside of core
 *  content on pages, such as the right- or left-hand side of the page.
 *
 *  Value: "NATIVE_CONTENT_POSITION_PERIPHERAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionPeripheral;
/**
 *  Native content position is recommendation, i.e., ads appear in sections for
 *  recommended content.
 *
 *  Value: "NATIVE_CONTENT_POSITION_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionRecommendation;
/**
 *  The native content position is unknown.
 *
 *  Value: "NATIVE_CONTENT_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionUnknown;
/**
 *  Native content position is not specified in this version. This enum is a
 *  place holder for a default value and does not represent a real native
 *  content position.
 *
 *  Value: "NATIVE_CONTENT_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ObaIcon.position

/**
 *  At the lower left side of the creative.
 *
 *  Value: "OBA_ICON_POSITION_LOWER_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionLowerLeft;
/**
 *  At the lower right side of the creative.
 *
 *  Value: "OBA_ICON_POSITION_LOWER_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionLowerRight;
/**
 *  The OBA icon position is not specified.
 *
 *  Value: "OBA_ICON_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionUnspecified;
/**
 *  At the upper left side of the creative.
 *
 *  Value: "OBA_ICON_POSITION_UPPER_LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionUpperLeft;
/**
 *  At the upper right side of the creative.
 *
 *  Value: "OBA_ICON_POSITION_UPPER_RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionUpperRight;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_OmidAssignedTargetingOptionDetails.omid

/**
 *  Open Measurement enabled mobile display inventory.
 *
 *  Value: "OMID_FOR_MOBILE_DISPLAY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OmidAssignedTargetingOptionDetails_Omid_OmidForMobileDisplayAds;
/**
 *  Default value when omid targeting is not specified in this version.
 *
 *  Value: "OMID_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OmidAssignedTargetingOptionDetails_Omid_OmidUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_OmidTargetingOptionDetails.omid

/**
 *  Open Measurement enabled mobile display inventory.
 *
 *  Value: "OMID_FOR_MOBILE_DISPLAY_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OmidTargetingOptionDetails_Omid_OmidForMobileDisplayAds;
/**
 *  Default value when omid targeting is not specified in this version.
 *
 *  Value: "OMID_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OmidTargetingOptionDetails_Omid_OmidUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails.adType

/**
 *  Audio creatives, e.g. audio ads that play during audio content.
 *
 *  Value: "AD_TYPE_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeAudio;
/**
 *  Display creatives, e.g. image and HTML5.
 *
 *  Value: "AD_TYPE_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeDisplay;
/**
 *  Ad type is not specified or is unknown in this version.
 *
 *  Value: "AD_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeUnspecified;
/**
 *  Video creatives, e.g. video ads that play during streaming content in video
 *  players.
 *
 *  Value: "AD_TYPE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeVideo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails.onScreenPosition

/**
 *  The ad is located above the fold.
 *
 *  Value: "ON_SCREEN_POSITION_ABOVE_THE_FOLD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionAboveTheFold;
/**
 *  The ad is located below the fold.
 *
 *  Value: "ON_SCREEN_POSITION_BELOW_THE_FOLD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionBelowTheFold;
/**
 *  The ad position is unknown on the screen.
 *
 *  Value: "ON_SCREEN_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnknown;
/**
 *  On screen position is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real on screen position.
 *
 *  Value: "ON_SCREEN_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_OnScreenPositionTargetingOptionDetails.onScreenPosition

/**
 *  The ad is located above the fold.
 *
 *  Value: "ON_SCREEN_POSITION_ABOVE_THE_FOLD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionAboveTheFold;
/**
 *  The ad is located below the fold.
 *
 *  Value: "ON_SCREEN_POSITION_BELOW_THE_FOLD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionBelowTheFold;
/**
 *  The ad position is unknown on the screen.
 *
 *  Value: "ON_SCREEN_POSITION_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnknown;
/**
 *  On screen position is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real on screen position.
 *
 *  Value: "ON_SCREEN_POSITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Pacing.pacingPeriod

/**
 *  The pacing setting will be applied on daily basis.
 *
 *  Value: "PACING_PERIOD_DAILY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Pacing_PacingPeriod_PacingPeriodDaily;
/**
 *  The pacing setting will be applied to the whole flight duration.
 *
 *  Value: "PACING_PERIOD_FLIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Pacing_PacingPeriod_PacingPeriodFlight;
/**
 *  Period value is not specified or is unknown in this version.
 *
 *  Value: "PACING_PERIOD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Pacing_PacingPeriod_PacingPeriodUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Pacing.pacingType

/**
 *  Only applicable to `PACING_PERIOD_FLIGHT` pacing period. Ahead pacing
 *  attempts to spend faster than evenly, to make sure the entire budget is
 *  spent by the end of the flight.
 *
 *  Value: "PACING_TYPE_AHEAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Pacing_PacingType_PacingTypeAhead;
/**
 *  Spend all of pacing budget amount as quick as possible.
 *
 *  Value: "PACING_TYPE_ASAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Pacing_PacingType_PacingTypeAsap;
/**
 *  Spend a consistent budget amount every period of time.
 *
 *  Value: "PACING_TYPE_EVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Pacing_PacingType_PacingTypeEven;
/**
 *  Pacing mode value is not specified or is unknown in this version.
 *
 *  Value: "PACING_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Pacing_PacingType_PacingTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails.parentalStatus

/**
 *  The audience is not a parent.
 *
 *  Value: "PARENTAL_STATUS_NOT_A_PARENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusNotAParent;
/**
 *  The audience is a parent.
 *
 *  Value: "PARENTAL_STATUS_PARENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusParent;
/**
 *  The parental status of the audience is unknown.
 *
 *  Value: "PARENTAL_STATUS_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusUnknown;
/**
 *  Default value when parental status is not specified in this version. This
 *  enum is a place holder for default value and does not represent a real
 *  parental status option.
 *
 *  Value: "PARENTAL_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ParentalStatusTargetingOptionDetails.parentalStatus

/**
 *  The audience is not a parent.
 *
 *  Value: "PARENTAL_STATUS_NOT_A_PARENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusNotAParent;
/**
 *  The audience is a parent.
 *
 *  Value: "PARENTAL_STATUS_PARENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusParent;
/**
 *  The parental status of the audience is unknown.
 *
 *  Value: "PARENTAL_STATUS_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusUnknown;
/**
 *  Default value when parental status is not specified in this version. This
 *  enum is a place holder for default value and does not represent a real
 *  parental status option.
 *
 *  Value: "PARENTAL_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ParentEntityFilter.fileType

/**
 *  YouTube Ad.
 *
 *  Value: "FILE_TYPE_AD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FileType_FileTypeAd;
/**
 *  YouTube Ad Group.
 *
 *  Value: "FILE_TYPE_AD_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FileType_FileTypeAdGroup;
/**
 *  Campaign.
 *
 *  Value: "FILE_TYPE_CAMPAIGN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FileType_FileTypeCampaign;
/**
 *  Insertion Order.
 *
 *  Value: "FILE_TYPE_INSERTION_ORDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FileType_FileTypeInsertionOrder;
/**
 *  Line Item.
 *
 *  Value: "FILE_TYPE_LINE_ITEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FileType_FileTypeLineItem;
/**
 *  Media Product.
 *
 *  Value: "FILE_TYPE_MEDIA_PRODUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FileType_FileTypeMediaProduct;
/**
 *  Default value when type is unspecified or is unknown in this version.
 *
 *  Value: "FILE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FileType_FileTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ParentEntityFilter.filterType

/**
 *  Advertiser ID. If selected, all filter IDs must be Advertiser IDs that
 *  belong to the Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Value: "FILTER_TYPE_ADVERTISER_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeAdvertiserId;
/**
 *  Campaign ID. If selected, all filter IDs must be Campaign IDs that belong to
 *  the Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Value: "FILTER_TYPE_CAMPAIGN_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeCampaignId;
/**
 *  Insertion Order ID. If selected, all filter IDs must be Insertion Order IDs
 *  that belong to the Advertiser or Partner specified in
 *  CreateSdfDownloadTaskRequest. Can only be used for downloading
 *  `FILE_TYPE_INSERTION_ORDER`, `FILE_TYPE_LINE_ITEM`, `FILE_TYPE_AD_GROUP`,
 *  and `FILE_TYPE_AD`.
 *
 *  Value: "FILTER_TYPE_INSERTION_ORDER_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeInsertionOrderId;
/**
 *  Line Item ID. If selected, all filter IDs must be Line Item IDs that belong
 *  to the Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Can
 *  only be used for downloading `FILE_TYPE_LINE_ITEM`, `FILE_TYPE_AD_GROUP`,
 *  and `FILE_TYPE_AD`.
 *
 *  Value: "FILTER_TYPE_LINE_ITEM_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeLineItemId;
/**
 *  Media Product ID. If selected, all filter IDs must be Media Product IDs that
 *  belong to the Advertiser or Partner specified in
 *  CreateSdfDownloadTaskRequest. Can only be used for downloading
 *  `FILE_TYPE_MEDIA_PRODUCT`.
 *
 *  Value: "FILTER_TYPE_MEDIA_PRODUCT_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeMediaProductId;
/**
 *  If selected, no filter will be applied to the download. Can only be used if
 *  an Advertiser is specified in CreateSdfDownloadTaskRequest.
 *
 *  Value: "FILTER_TYPE_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeNone;
/**
 *  Default value when type is unspecified or is unknown in this version.
 *
 *  Value: "FILTER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_Partner.entityStatus

/**
 *  The entity is enabled to bid and spend budget.
 *
 *  Value: "ENTITY_STATUS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusActive;
/**
 *  The entity is archived. Bidding and budget spending are disabled. An entity
 *  can be deleted after archived. Deleted entities cannot be retrieved.
 *
 *  Value: "ENTITY_STATUS_ARCHIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusArchived;
/**
 *  The entity is under draft. Bidding and budget spending are disabled.
 *
 *  Value: "ENTITY_STATUS_DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusDraft;
/**
 *  Bidding and budget spending are paused for the entity.
 *
 *  Value: "ENTITY_STATUS_PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusPaused;
/**
 *  The entity is scheduled for deletion.
 *
 *  Value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusScheduledForDeletion;
/**
 *  Default value when status is not specified or is unknown in this version.
 *
 *  Value: "ENTITY_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PartnerCost.costType

/**
 *  The cost is charged for using AdLingo.
 *
 *  Value: "PARTNER_COST_TYPE_ADLINGO_FEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdlingoFee;
/**
 *  The cost is charged for using Adloox.
 *
 *  Value: "PARTNER_COST_TYPE_ADLOOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdloox;
/**
 *  The cost is charged for using Adloox Pre-Bid.
 *
 *  Value: "PARTNER_COST_TYPE_ADLOOX_PREBID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdlooxPrebid;
/**
 *  The cost is charged for using AdSafe.
 *
 *  Value: "PARTNER_COST_TYPE_ADSAFE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdsafe;
/**
 *  The cost is charged for using AdExpose.
 *
 *  Value: "PARTNER_COST_TYPE_ADXPOSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdxpose;
/**
 *  The cost is charged for using an Agency Trading Desk.
 *
 *  Value: "PARTNER_COST_TYPE_AGENCY_TRADING_DESK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAgencyTradingDesk;
/**
 *  The cost is charged for using Aggregate Knowledge.
 *
 *  Value: "PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAggregateKnowledge;
/**
 *  The cost is charged for using comScore vCE.
 *
 *  Value: "PARTNER_COST_TYPE_COMSCORE_VCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeComscoreVce;
/**
 *  The cost is charged as custom fee 1.
 *
 *  Value: "PARTNER_COST_TYPE_CUSTOM_FEE_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee1;
/**
 *  The cost is charged as custom fee 2.
 *
 *  Value: "PARTNER_COST_TYPE_CUSTOM_FEE_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee2;
/**
 *  The cost is charged as custom fee 3.
 *
 *  Value: "PARTNER_COST_TYPE_CUSTOM_FEE_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee3;
/**
 *  The cost is charged as custom fee 4.
 *
 *  Value: "PARTNER_COST_TYPE_CUSTOM_FEE_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee4;
/**
 *  The cost is charged as custom fee 5.
 *
 *  Value: "PARTNER_COST_TYPE_CUSTOM_FEE_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee5;
/**
 *  The cost is charged for using a Data Management Platform.
 *
 *  Value: "PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDataManagementPlatform;
/**
 *  The default cost type.
 *
 *  Value: "PARTNER_COST_TYPE_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDefault;
/**
 *  The cost is charged for using DoubleVerify.
 *
 *  Value: "PARTNER_COST_TYPE_DOUBLE_VERIFY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDoubleVerify;
/**
 *  The cost is charged for using DoubleVerify Pre-Bid.
 *
 *  Value: "PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDoubleVerifyPrebid;
/**
 *  The cost is charged for using DV360.
 *
 *  Value: "PARTNER_COST_TYPE_DV360_FEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDv360Fee;
/**
 *  The cost is charged for using Evidon.
 *
 *  Value: "PARTNER_COST_TYPE_EVIDON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeEvidon;
/**
 *  The cost is charged for using Integral Ad Science Pre-Bid.
 *
 *  Value: "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeIntegralAdSciencePrebid;
/**
 *  The cost is charged for using Integral Ad Science Video.
 *
 *  Value: "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeIntegralAdScienceVideo;
/**
 *  The cost is charged for using media cost data.
 *
 *  Value: "PARTNER_COST_TYPE_MEDIA_COST_DATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeMediaCostData;
/**
 *  The cost is charged for using MOAT Video.
 *
 *  Value: "PARTNER_COST_TYPE_MOAT_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeMoatVideo;
/**
 *  The cost is charged for using Nielsen Digital Ad Ratings.
 *
 *  Value: "PARTNER_COST_TYPE_NIELSEN_DAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeNielsenDar;
/**
 *  The cost is charged for using ShopLocal.
 *
 *  Value: "PARTNER_COST_TYPE_SHOP_LOCAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeShopLocal;
/**
 *  The cost is charged for using Teracent.
 *
 *  Value: "PARTNER_COST_TYPE_TERACENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeTeracent;
/**
 *  The cost is charged for using a third-party ad server.
 *
 *  Value: "PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeThirdPartyAdServer;
/**
 *  The cost is charged for using TrustMetrics.
 *
 *  Value: "PARTNER_COST_TYPE_TRUST_METRICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeTrustMetrics;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "PARTNER_COST_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeUnspecified;
/**
 *  The cost is charged for using Vizu.
 *
 *  Value: "PARTNER_COST_TYPE_VIZU"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeVizu;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PartnerCost.feeType

/**
 *  The partner cost is a fixed CPM fee. Not applicable when the partner cost
 *  cost_type is one of: * `PARTNER_COST_TYPE_MEDIA_COST_DATA` *
 *  `PARTNER_COST_TYPE_DV360_FEE`.
 *
 *  Value: "PARTNER_COST_FEE_TYPE_CPM_FEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_FeeType_PartnerCostFeeTypeCpmFee;
/**
 *  The partner cost is a percentage surcharge based on the media cost. Not
 *  applicable when the partner cost_type is one of: *
 *  `PARTNER_COST_TYPE_SHOP_LOCAL` * `PARTNER_COST_TYPE_TRUST_METRICS` *
 *  `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO` *
 *  `PARTNER_COST_TYPE_MOAT_VIDEO`.
 *
 *  Value: "PARTNER_COST_FEE_TYPE_MEDIA_FEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_FeeType_PartnerCostFeeTypeMediaFee;
/**
 *  Value is not specified or is unknown in this version.
 *
 *  Value: "PARTNER_COST_FEE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_FeeType_PartnerCostFeeTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PartnerCost.invoiceType

/**
 *  Partner cost is billed through DV360.
 *
 *  Value: "PARTNER_COST_INVOICE_TYPE_DV360"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_InvoiceType_PartnerCostInvoiceTypeDv360;
/**
 *  Partner cost is billed by the partner.
 *
 *  Value: "PARTNER_COST_INVOICE_TYPE_PARTNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_InvoiceType_PartnerCostInvoiceTypePartner;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "PARTNER_COST_INVOICE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerCost_InvoiceType_PartnerCostInvoiceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PartnerRevenueModel.markupType

/**
 *  Calculate the partner revenue based on a fixed CPM.
 *
 *  Value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeCpm;
/**
 *  Calculate the partner revenue based on a percentage surcharge of its media
 *  cost.
 *
 *  Value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeMediaCostMarkup;
/**
 *  Calculate the partner revenue based on a percentage surcharge of its total
 *  media cost, which includes all partner costs and data costs.
 *
 *  Value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeTotalMediaCostMarkup;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PerformanceGoal.performanceGoalType

/**
 *  The performance goal is set in audio completion rate (complete audio listens
 *  per impression) percentage.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeAudioCompletionRate;
/**
 *  The performance goal is set in click conversion rate (conversions per click)
 *  percentage.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_CLICK_CVR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeClickCvr;
/**
 *  The performance goal is set in CPA (cost per action).
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_CPA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpa;
/**
 *  The performance goal is set in CPC (cost per click).
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_CPC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpc;
/**
 *  The performance goal is set in CPE (cost per engagement).
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_CPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpe;
/**
 *  The performance goal is set as CPIAVC (cost per impression audible and
 *  visible at completion).
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_CPIAVC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpiavc;
/**
 *  The performance goal is set in CPM (cost per mille).
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_CPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpm;
/**
 *  The performance goal is set in CTR (click-through rate) percentage.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_CTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCtr;
/**
 *  The performance goal is set in impression conversion rate (conversions per
 *  impression) percentage.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeImpressionCvr;
/**
 *  The performance goal is set to Other.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeOther;
/**
 *  Performance goal type is not specified or is unknown in this version.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeUnspecified;
/**
 *  The performance goal is set in VCPM (cost per thousand viewable
 *  impressions).
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_VCPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeVcpm;
/**
 *  The performance goal is set in video completion rate (complete video views
 *  per impression) percentage.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeVideoCompletionRate;
/**
 *  The performance goal is set in Viewability percentage.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_VIEWABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeViewability;
/**
 *  The performance goal is set in YouTube view rate (YouTube views per
 *  impression) percentage.
 *
 *  Value: "PERFORMANCE_GOAL_TYPE_VTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeVtr;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PerformanceGoalBidStrategy.performanceGoalType

/**
 *  Viewable impressions.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeAvViewed;
/**
 *  Completed inview and audible views.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCiva;
/**
 *  Cost per action.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpa;
/**
 *  Cost per click.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpc;
/**
 *  Custom bidding algorithm.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCustomAlgo;
/**
 *  Inview time over 10 secs views.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeIvoTen;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeUnspecified;
/**
 *  Viewable CPM.
 *
 *  Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeViewableCpm;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PoiAssignedTargetingOptionDetails.proximityRadiusUnit

/**
 *  Kilometers.
 *
 *  Value: "DISTANCE_UNIT_KILOMETERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PoiAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitKilometers;
/**
 *  Miles.
 *
 *  Value: "DISTANCE_UNIT_MILES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PoiAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitMiles;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "DISTANCE_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PoiAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PrismaConfig.prismaType

/**
 *  Audio type.
 *
 *  Value: "PRISMA_TYPE_AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeAudio;
/**
 *  Display type.
 *
 *  Value: "PRISMA_TYPE_DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeDisplay;
/**
 *  Fee type.
 *
 *  Value: "PRISMA_TYPE_FEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeFee;
/**
 *  Search type.
 *
 *  Value: "PRISMA_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeSearch;
/**
 *  Social type.
 *
 *  Value: "PRISMA_TYPE_SOCIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeSocial;
/**
 *  Type is not specified or unknown in this version.
 *
 *  Value: "PRISMA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeUnspecified;
/**
 *  Video type.
 *
 *  Value: "PRISMA_TYPE_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeVideo;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails.proximityRadiusUnit

/**
 *  Radius distance unit in kilometeres
 *
 *  Value: "PROXIMITY_RADIUS_UNIT_KILOMETERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails_ProximityRadiusUnit_ProximityRadiusUnitKilometers;
/**
 *  Radius distance unit in miles.
 *
 *  Value: "PROXIMITY_RADIUS_UNIT_MILES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails_ProximityRadiusUnit_ProximityRadiusUnitMiles;
/**
 *  Default value when distance units is not specified in this version. This
 *  enum is a place holder for default value and does not represent a real
 *  distance unit.
 *
 *  Value: "PROXIMITY_RADIUS_UNIT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails_ProximityRadiusUnit_ProximityRadiusUnitUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_PublisherReviewStatus.status

/**
 *  The creative is approved.
 *
 *  Value: "REVIEW_STATUS_APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusApproved;
/**
 *  The creative is pending review.
 *
 *  Value: "REVIEW_STATUS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusPending;
/**
 *  The creative is rejected.
 *
 *  Value: "REVIEW_STATUS_REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusRejected;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "REVIEW_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_RateDetails.inventorySourceRateType

/**
 *  The rate type is Cost per Day.
 *
 *  Value: "INVENTORY_SOURCE_RATE_TYPE_CPD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeCpd;
/**
 *  The rate type is CPM (Fixed).
 *
 *  Value: "INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeCpmFixed;
/**
 *  The rate type is CPM (Floor).
 *
 *  Value: "INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeCpmFloor;
/**
 *  The rate type is Flat.
 *
 *  Value: "INVENTORY_SOURCE_RATE_TYPE_FLAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeFlat;
/**
 *  The rate type is not specified or is unknown in this version.
 *
 *  Value: "INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ReviewStatusInfo.approvalStatus

/**
 *  Both creative & landing page review and content & policy review are
 *  approved. The creative is servable.
 *
 *  Value: "APPROVAL_STATUS_APPROVED_SERVABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusApprovedServable;
/**
 *  The creative is still under review and not servable.
 *
 *  Value: "APPROVAL_STATUS_PENDING_NOT_SERVABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusPendingNotServable;
/**
 *  The creative has passed creative & landing page review and is servable, but
 *  is awaiting additional content & policy review.
 *
 *  Value: "APPROVAL_STATUS_PENDING_SERVABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusPendingServable;
/**
 *  There is an issue with the creative that must be fixed before it can serve.
 *
 *  Value: "APPROVAL_STATUS_REJECTED_NOT_SERVABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusRejectedNotServable;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "APPROVAL_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ReviewStatusInfo.contentAndPolicyReviewStatus

/**
 *  The creative is approved.
 *
 *  Value: "REVIEW_STATUS_APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusApproved;
/**
 *  The creative is pending review.
 *
 *  Value: "REVIEW_STATUS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusPending;
/**
 *  The creative is rejected.
 *
 *  Value: "REVIEW_STATUS_REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusRejected;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "REVIEW_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ReviewStatusInfo.creativeAndLandingPageReviewStatus

/**
 *  The creative is approved.
 *
 *  Value: "REVIEW_STATUS_APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusApproved;
/**
 *  The creative is pending review.
 *
 *  Value: "REVIEW_STATUS_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusPending;
/**
 *  The creative is rejected.
 *
 *  Value: "REVIEW_STATUS_REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusRejected;
/**
 *  Type value is not specified or is unknown in this version.
 *
 *  Value: "REVIEW_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ScriptError.errorCode

/**
 *  The script uses deprecated syntax.
 *
 *  Value: "DEPRECATED_SYNTAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ScriptError_ErrorCode_DeprecatedSyntax;
/**
 *  The script error is not specified or is unknown in this version.
 *
 *  Value: "ERROR_CODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ScriptError_ErrorCode_ErrorCodeUnspecified;
/**
 *  Internal errors were thrown while processing the script.
 *
 *  Value: "INTERNAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ScriptError_ErrorCode_InternalError;
/**
 *  The script has a syntax error.
 *
 *  Value: "SYNTAX_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ScriptError_ErrorCode_SyntaxError;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_SdfConfig.version

/**
 *  SDF version 3.1
 *
 *  Value: "SDF_VERSION_3_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion31;
/**
 *  SDF version 4
 *
 *  Value: "SDF_VERSION_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion4;
/**
 *  SDF version 4.1
 *
 *  Value: "SDF_VERSION_4_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion41;
/**
 *  SDF version 4.2
 *
 *  Value: "SDF_VERSION_4_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion42;
/**
 *  SDF version 5.
 *
 *  Value: "SDF_VERSION_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion5;
/**
 *  SDF version 5.1
 *
 *  Value: "SDF_VERSION_5_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion51;
/**
 *  SDF version 5.2
 *
 *  Value: "SDF_VERSION_5_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion52;
/**
 *  SDF version 5.3
 *
 *  Value: "SDF_VERSION_5_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion53;
/**
 *  SDF version 5.4
 *
 *  Value: "SDF_VERSION_5_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion54;
/**
 *  SDF version 5.5
 *
 *  Value: "SDF_VERSION_5_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersion55;
/**
 *  SDF version value is not specified or is unknown in this version.
 *
 *  Value: "SDF_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfConfig_Version_SdfVersionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_SdfDownloadTaskMetadata.version

/**
 *  SDF version 3.1
 *
 *  Value: "SDF_VERSION_3_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion31;
/**
 *  SDF version 4
 *
 *  Value: "SDF_VERSION_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion4;
/**
 *  SDF version 4.1
 *
 *  Value: "SDF_VERSION_4_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion41;
/**
 *  SDF version 4.2
 *
 *  Value: "SDF_VERSION_4_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion42;
/**
 *  SDF version 5.
 *
 *  Value: "SDF_VERSION_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion5;
/**
 *  SDF version 5.1
 *
 *  Value: "SDF_VERSION_5_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion51;
/**
 *  SDF version 5.2
 *
 *  Value: "SDF_VERSION_5_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion52;
/**
 *  SDF version 5.3
 *
 *  Value: "SDF_VERSION_5_3"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion53;
/**
 *  SDF version 5.4
 *
 *  Value: "SDF_VERSION_5_4"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion54;
/**
 *  SDF version 5.5
 *
 *  Value: "SDF_VERSION_5_5"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion55;
/**
 *  SDF version value is not specified or is unknown in this version.
 *
 *  Value: "SDF_VERSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails.excludedSensitiveCategory

/**
 *  Adult or pornographic text, image, or video content.
 *
 *  Value: "SENSITIVE_CATEGORY_ADULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryAdult;
/**
 *  Contains content related to alcoholic beverages, alcohol brands, recipes,
 *  etc.
 *
 *  Value: "SENSITIVE_CATEGORY_ALCOHOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryAlcohol;
/**
 *  Content that may be construed as biased against individuals, groups, or
 *  organizations based on criteria such as race, religion, disability, sex,
 *  age, veteran status, sexual orientation, gender identity, or political
 *  affiliation. May also indicate discussion of such content, for instance, in
 *  an academic or journalistic context.
 *
 *  Value: "SENSITIVE_CATEGORY_DEROGATORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryDerogatory;
/**
 *  Content related to audio, video, or software downloads.
 *
 *  Value: "SENSITIVE_CATEGORY_DOWNLOADS_SHARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryDownloadsSharing;
/**
 *  Contains content related to the recreational use of legal or illegal drugs,
 *  as well as to drug paraphernalia or cultivation.
 *
 *  Value: "SENSITIVE_CATEGORY_DRUGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryDrugs;
/**
 *  YouTube videos embedded on websites outside of YouTube.com. Only applicable
 *  to YouTube and Partners line items.
 *
 *  Value: "SENSITIVE_CATEGORY_EMBEDDED_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryEmbeddedVideo;
/**
 *  Contains content related to betting or wagering in a real-world or online
 *  setting.
 *
 *  Value: "SENSITIVE_CATEGORY_GAMBLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryGambling;
/**
 *  Video of live events streamed over the internet. Only applicable to YouTube
 *  and Partners line items.
 *
 *  Value: "SENSITIVE_CATEGORY_LIVE_STREAMING_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryLiveStreamingVideo;
/**
 *  Political news and media, including discussions of social, governmental, and
 *  public policy.
 *
 *  Value: "SENSITIVE_CATEGORY_POLITICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryPolitics;
/**
 *  Prominent use of words considered indecent, such as curse words and sexual
 *  slang. Pages with only very occasional usage, such as news sites that might
 *  include such words in a quotation, are not included.
 *
 *  Value: "SENSITIVE_CATEGORY_PROFANITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryProfanity;
/**
 *  Content related to religious thought or beliefs.
 *
 *  Value: "SENSITIVE_CATEGORY_RELIGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryReligion;
/**
 *  Issues that evoke strong, opposing views and spark debate. These include
 *  issues that are controversial in most countries and markets (such as
 *  abortion), as well as those that are controversial in specific countries and
 *  markets (such as immigration reform in the United States).
 *
 *  Value: "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategorySensitiveSocialIssues;
/**
 *  Content which may be considered shocking or disturbing, such as violent news
 *  stories, stunts, or toilet humor.
 *
 *  Value: "SENSITIVE_CATEGORY_SHOCKING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryShocking;
/**
 *  Adult content, as well as suggestive content that's not explicitly
 *  pornographic. This category includes all pages categorized as adult.
 *
 *  Value: "SENSITIVE_CATEGORY_SUGGESTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategorySuggestive;
/**
 *  Contains content related to tobacco and tobacco accessories, including
 *  lighters, humidors, ashtrays, etc.
 *
 *  Value: "SENSITIVE_CATEGORY_TOBACCO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryTobacco;
/**
 *  Content related to death, disasters, accidents, war, etc.
 *
 *  Value: "SENSITIVE_CATEGORY_TRAGEDY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryTragedy;
/**
 *  Content related to motor vehicle, aviation or other transportation
 *  accidents.
 *
 *  Value: "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryTransportationAccidents;
/**
 *  This enum is only a placeholder and doesn't specify a DV360 sensitive
 *  category.
 *
 *  Value: "SENSITIVE_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryUnspecified;
/**
 *  Content which may be considered graphically violent, gory, gruesome, or
 *  shocking, such as street fighting videos, accident photos, descriptions of
 *  torture, etc.
 *
 *  Value: "SENSITIVE_CATEGORY_VIOLENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryViolence;
/**
 *  Contains content related to personal weapons, including knives, guns, small
 *  firearms, and ammunition. Selecting either "weapons" or "sensitive social
 *  issues" will result in selecting both.
 *
 *  Value: "SENSITIVE_CATEGORY_WEAPONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryWeapons;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails.sensitiveCategory

/**
 *  Adult or pornographic text, image, or video content.
 *
 *  Value: "SENSITIVE_CATEGORY_ADULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryAdult;
/**
 *  Contains content related to alcoholic beverages, alcohol brands, recipes,
 *  etc.
 *
 *  Value: "SENSITIVE_CATEGORY_ALCOHOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryAlcohol;
/**
 *  Content that may be construed as biased against individuals, groups, or
 *  organizations based on criteria such as race, religion, disability, sex,
 *  age, veteran status, sexual orientation, gender identity, or political
 *  affiliation. May also indicate discussion of such content, for instance, in
 *  an academic or journalistic context.
 *
 *  Value: "SENSITIVE_CATEGORY_DEROGATORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryDerogatory;
/**
 *  Content related to audio, video, or software downloads.
 *
 *  Value: "SENSITIVE_CATEGORY_DOWNLOADS_SHARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryDownloadsSharing;
/**
 *  Contains content related to the recreational use of legal or illegal drugs,
 *  as well as to drug paraphernalia or cultivation.
 *
 *  Value: "SENSITIVE_CATEGORY_DRUGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryDrugs;
/**
 *  YouTube videos embedded on websites outside of YouTube.com. Only applicable
 *  to YouTube and Partners line items.
 *
 *  Value: "SENSITIVE_CATEGORY_EMBEDDED_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryEmbeddedVideo;
/**
 *  Contains content related to betting or wagering in a real-world or online
 *  setting.
 *
 *  Value: "SENSITIVE_CATEGORY_GAMBLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryGambling;
/**
 *  Video of live events streamed over the internet. Only applicable to YouTube
 *  and Partners line items.
 *
 *  Value: "SENSITIVE_CATEGORY_LIVE_STREAMING_VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryLiveStreamingVideo;
/**
 *  Political news and media, including discussions of social, governmental, and
 *  public policy.
 *
 *  Value: "SENSITIVE_CATEGORY_POLITICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryPolitics;
/**
 *  Prominent use of words considered indecent, such as curse words and sexual
 *  slang. Pages with only very occasional usage, such as news sites that might
 *  include such words in a quotation, are not included.
 *
 *  Value: "SENSITIVE_CATEGORY_PROFANITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryProfanity;
/**
 *  Content related to religious thought or beliefs.
 *
 *  Value: "SENSITIVE_CATEGORY_RELIGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryReligion;
/**
 *  Issues that evoke strong, opposing views and spark debate. These include
 *  issues that are controversial in most countries and markets (such as
 *  abortion), as well as those that are controversial in specific countries and
 *  markets (such as immigration reform in the United States).
 *
 *  Value: "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategorySensitiveSocialIssues;
/**
 *  Content which may be considered shocking or disturbing, such as violent news
 *  stories, stunts, or toilet humor.
 *
 *  Value: "SENSITIVE_CATEGORY_SHOCKING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryShocking;
/**
 *  Adult content, as well as suggestive content that's not explicitly
 *  pornographic. This category includes all pages categorized as adult.
 *
 *  Value: "SENSITIVE_CATEGORY_SUGGESTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategorySuggestive;
/**
 *  Contains content related to tobacco and tobacco accessories, including
 *  lighters, humidors, ashtrays, etc.
 *
 *  Value: "SENSITIVE_CATEGORY_TOBACCO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryTobacco;
/**
 *  Content related to death, disasters, accidents, war, etc.
 *
 *  Value: "SENSITIVE_CATEGORY_TRAGEDY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryTragedy;
/**
 *  Content related to motor vehicle, aviation or other transportation
 *  accidents.
 *
 *  Value: "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryTransportationAccidents;
/**
 *  This enum is only a placeholder and doesn't specify a DV360 sensitive
 *  category.
 *
 *  Value: "SENSITIVE_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryUnspecified;
/**
 *  Content which may be considered graphically violent, gory, gruesome, or
 *  shocking, such as street fighting videos, accident photos, descriptions of
 *  torture, etc.
 *
 *  Value: "SENSITIVE_CATEGORY_VIOLENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryViolence;
/**
 *  Contains content related to personal weapons, including knives, guns, small
 *  firearms, and ammunition. Selecting either "weapons" or "sensitive social
 *  issues" will result in selecting both.
 *
 *  Value: "SENSITIVE_CATEGORY_WEAPONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryWeapons;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_TargetingExpansionConfig.targetingExpansionLevel

/**
 *  Moderate targeting expansion, medium reach.
 *
 *  Value: "BALANCED_EXPANSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_BalancedExpansion;
/**
 *  Conservative targeting expansion, lowest reach.
 *
 *  Value: "LEAST_EXPANSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_LeastExpansion;
/**
 *  Moderately aggressive targeting expansion, higher reach.
 *
 *  Value: "MORE_EXPANSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_MoreExpansion;
/**
 *  Aggressive targeting expansion, highest reach.
 *
 *  Value: "MOST_EXPANSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_MostExpansion;
/**
 *  Targeting expansion off.
 *
 *  Value: "NO_EXPANSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_NoExpansion;
/**
 *  Moderately conservative targeting expansion, lower reach.
 *
 *  Value: "SOME_EXPANSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_SomeExpansion;
/**
 *  Targeting expansion level is not specified or is unknown in this version.
 *
 *  Value: "TARGETING_EXPANSION_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_TargetingExpansionLevelUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_TargetingOption.targetingType

/**
 *  Target ads to a specific age range (for example, 18-24).
 *
 *  Value: "TARGETING_TYPE_AGE_RANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAgeRange;
/**
 *  Target a specific app (for example, Angry Birds).
 *
 *  Value: "TARGETING_TYPE_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeApp;
/**
 *  Target an app category (for example, education or puzzle games).
 *
 *  Value: "TARGETING_TYPE_APP_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAppCategory;
/**
 *  Target ads to an audience or groups of audiences. Singleton field, at most
 *  one can exist on a single Lineitem at a time.
 *
 *  Value: "TARGETING_TYPE_AUDIENCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAudienceGroup;
/**
 *  Target ads to a specific audio content type.
 *
 *  Value: "TARGETING_TYPE_AUDIO_CONTENT_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAudioContentType;
/**
 *  Target ads to ads.txt authorized sellers.
 *
 *  Value: "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAuthorizedSellerStatus;
/**
 *  Target ads to specific web browsers (for example, Chrome).
 *
 *  Value: "TARGETING_TYPE_BROWSER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeBrowser;
/**
 *  Target ads around locations of a business chain within a specific geo
 *  region.
 *
 *  Value: "TARGETING_TYPE_BUSINESS_CHAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeBusinessChain;
/**
 *  Target ads to a specific network carrier or internet service provider (ISP)
 *  (for example, Comcast or Orange).
 *
 *  Value: "TARGETING_TYPE_CARRIER_AND_ISP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeCarrierAndIsp;
/**
 *  Target ads to a specific content category (for example, arts &
 *  entertainment).
 *
 *  Value: "TARGETING_TYPE_CATEGORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeCategory;
/**
 *  Target a channel (a custom group of related websites or apps).
 *
 *  Value: "TARGETING_TYPE_CHANNEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeChannel;
/**
 *  Target ads to a specific video content duration.
 *
 *  Value: "TARGETING_TYPE_CONTENT_DURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentDuration;
/**
 *  Target ads to a specific content genre.
 *
 *  Value: "TARGETING_TYPE_CONTENT_GENRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentGenre;
/**
 *  Target video or audio ads in a specific content instream position (for
 *  example, pre-roll, mid-roll, or post-roll).
 *
 *  Value: "TARGETING_TYPE_CONTENT_INSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentInstreamPosition;
/**
 *  Target ads in a specific content outstream position.
 *
 *  Value: "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentOutstreamPosition;
/**
 *  Target ads to a specific video content stream type.
 *
 *  Value: "TARGETING_TYPE_CONTENT_STREAM_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentStreamType;
/**
 *  Target ads during a chosen time period on a specific day.
 *
 *  Value: "TARGETING_TYPE_DAY_AND_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDayAndTime;
/**
 *  Target ads to a specific device make or model (for example, Roku or
 *  Samsung).
 *
 *  Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDeviceMakeModel;
/**
 *  Target ads to a specific device type (for example, tablet or connected TV).
 *
 *  Value: "TARGETING_TYPE_DEVICE_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDeviceType;
/**
 *  Filter web sites by specific digital content label ratings (for example,
 *  DL-MA: suitable only for mature audiences).
 *
 *  Value: "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDigitalContentLabelExclusion;
/**
 *  Target ads to a specific environment (for example, web or app).
 *
 *  Value: "TARGETING_TYPE_ENVIRONMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeEnvironment;
/**
 *  Purchase impressions from specific exchanges.
 *
 *  Value: "TARGETING_TYPE_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeExchange;
/**
 *  Target ads to a specific gender (for example, female or male).
 *
 *  Value: "TARGETING_TYPE_GENDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeGender;
/**
 *  Target ads to a specific regional location (for example, a city or state).
 *
 *  Value: "TARGETING_TYPE_GEO_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeGeoRegion;
/**
 *  Target ads to a specific household income range (for example, top 10%).
 *
 *  Value: "TARGETING_TYPE_HOUSEHOLD_INCOME"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeHouseholdIncome;
/**
 *  Purchase impressions from specific deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeInventorySource;
/**
 *  Purchase impressions from a group of deals and auction packages.
 *
 *  Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeInventorySourceGroup;
/**
 *  Target ads to a specific keyword (for example, dog or retriever).
 *
 *  Value: "TARGETING_TYPE_KEYWORD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeKeyword;
/**
 *  Target ads to a specific language (for example, English or Japanese).
 *
 *  Value: "TARGETING_TYPE_LANGUAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeLanguage;
/**
 *  Target ads to a specific native content position.
 *
 *  Value: "TARGETING_TYPE_NATIVE_CONTENT_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeNativeContentPosition;
/**
 *  Target ads to a specific negative keyword list.
 *
 *  Value: "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeNegativeKeywordList;
/**
 *  Target ads in an Open Measurement enabled inventory.
 *
 *  Value: "TARGETING_TYPE_OMID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeOmid;
/**
 *  Target ads in a specific on screen position.
 *
 *  Value: "TARGETING_TYPE_ON_SCREEN_POSITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeOnScreenPosition;
/**
 *  Target ads to a specific operating system (for example, macOS).
 *
 *  Value: "TARGETING_TYPE_OPERATING_SYSTEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeOperatingSystem;
/**
 *  Target ads to a specific parental status (for example, parent or not a
 *  parent).
 *
 *  Value: "TARGETING_TYPE_PARENTAL_STATUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeParentalStatus;
/**
 *  Target ads around a specific point of interest, such as a notable building,
 *  a street address, or latitude/longitude coordinates.
 *
 *  Value: "TARGETING_TYPE_POI"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypePoi;
/**
 *  Target ads to the specified points of interest on a proximity location list.
 *
 *  Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeProximityLocationList;
/**
 *  Target ads to the specified regions on a regional location list.
 *
 *  Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeRegionalLocationList;
/**
 *  Filter website content by sensitive categories (for example, adult).
 *
 *  Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeSensitiveCategoryExclusion;
/**
 *  Purchase impressions from specific sub-exchanges.
 *
 *  Value: "TARGETING_TYPE_SUB_EXCHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeSubExchange;
/**
 *  Filter web sites through third party verification (for example, IAS or
 *  DoubleVerify).
 *
 *  Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeThirdPartyVerifier;
/**
 *  Default value when type is not specified or is unknown in this version.
 *
 *  Value: "TARGETING_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeUnspecified;
/**
 *  Target a specific url (for example, quora.com).
 *
 *  Value: "TARGETING_TYPE_URL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeUrl;
/**
 *  Target user rewarded content for video ads.
 *
 *  Value: "TARGETING_TYPE_USER_REWARDED_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeUserRewardedContent;
/**
 *  Target a specific video player size for video ads.
 *
 *  Value: "TARGETING_TYPE_VIDEO_PLAYER_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeVideoPlayerSize;
/**
 *  Target ads to a specific viewability (for example, 80% viewable).
 *
 *  Value: "TARGETING_TYPE_VIEWABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeViewability;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ThirdPartyUrl.type

/**
 *  Used to track the number of times the audio or video plays to the end.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_COMPLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoComplete;
/**
 *  Used to track the number of times a user performs a custom click, such as
 *  clicking on a video hot spot.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoCustom;
/**
 *  Used to track the number of times the audio or video plays to 25% of its
 *  length.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FIRST_QUARTILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoFirstQuartile;
/**
 *  Used to track the number of times a user expands the player to full-screen
 *  size.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FULLSCREEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoFullscreen;
/**
 *  Used to track the number of times the audio or video plays to 50% of its
 *  length.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MIDPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoMidpoint;
/**
 *  Used to track the number of times a user mutes the audio or video.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoMute;
/**
 *  Used to track the number of times a user pauses the audio or video.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PAUSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoPause;
/**
 *  Used to track the number of times the audio or video plays to an offset
 *  determined by the progress_offset.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoProgress;
/**
 *  Used to track the number of times a user replays the audio or video.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_REWIND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoRewind;
/**
 *  Used to track the number of times the audio or video was skipped.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_SKIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoSkip;
/**
 *  Used to track the number of times a user starts the audio or video.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_START"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoStart;
/**
 *  Used to track the number of times a user stops the audio or video.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_STOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoStop;
/**
 *  Used to track the number of times the audio or video plays to 75% of its
 *  length.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_THIRD_QUARTILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoThirdQuartile;
/**
 *  Used to track user clicks on the audio or video.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_CLICK_TRACKING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeClickTracking;
/**
 *  Used to count impressions of the creative after the audio or video buffering
 *  is complete.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_IMPRESSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeImpression;
/**
 *  The type of third-party URL is unspecified or is unknown in this version.
 *
 *  Value: "THIRD_PARTY_URL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ThirdPartyVendorConfig.vendor

/**
 *  Comscore.
 *
 *  Value: "THIRD_PARTY_VENDOR_COMSCORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorComscore;
/**
 *  DoubleVerify.
 *
 *  Value: "THIRD_PARTY_VENDOR_DOUBLE_VERIFY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorDoubleVerify;
/**
 *  Dynata.
 *
 *  Value: "THIRD_PARTY_VENDOR_DYNATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorDynata;
/**
 *  Integral Ad Science.
 *
 *  Value: "THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorIntegralAdScience;
/**
 *  Kantar.
 *
 *  Value: "THIRD_PARTY_VENDOR_KANTAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorKantar;
/**
 *  Meetrics.
 *
 *  Value: "THIRD_PARTY_VENDOR_MEETRICS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorMeetrics;
/**
 *  Moat.
 *
 *  Value: "THIRD_PARTY_VENDOR_MOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorMoat;
/**
 *  Nielsen.
 *
 *  Value: "THIRD_PARTY_VENDOR_NIELSEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorNielsen;
/**
 *  Telemetry.
 *
 *  Value: "THIRD_PARTY_VENDOR_TELEMETRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorTelemetry;
/**
 *  Unknown third-party vendor.
 *
 *  Value: "THIRD_PARTY_VENDOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorUnspecified;
/**
 *  ZEFR.
 *
 *  Value: "THIRD_PARTY_VENDOR_ZEFR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorZefr;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_UniversalAdId.registry

/**
 *  Use Ad-ID to provide the Universal Ad ID.
 *
 *  Value: "UNIVERSAL_AD_REGISTRY_AD_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryAdId;
/**
 *  Use clearcast.co.uk to provide the Universal Ad ID.
 *
 *  Value: "UNIVERSAL_AD_REGISTRY_CLEARCAST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryClearcast;
/**
 *  Use Campaign Manager 360 to provide the Universal Ad ID.
 *
 *  Value: "UNIVERSAL_AD_REGISTRY_CM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryCm;
/**
 *  Use Display & Video 360 to provide the Universal Ad ID.
 *
 *  Value: "UNIVERSAL_AD_REGISTRY_DV360"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryDv360;
/**
 *  Use a custom provider to provide the Universal Ad ID.
 *
 *  Value: "UNIVERSAL_AD_REGISTRY_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryOther;
/**
 *  The Universal Ad registry is unspecified or is unknown in this version.
 *
 *  Value: "UNIVERSAL_AD_REGISTRY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails.userRewardedContent

/**
 *  Represents all other ads besides user-rewarded.
 *
 *  Value: "USER_REWARDED_CONTENT_NOT_USER_REWARDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails_UserRewardedContent_UserRewardedContentNotUserRewarded;
/**
 *  User rewarded content is not specified or is unknown in this version.
 *
 *  Value: "USER_REWARDED_CONTENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails_UserRewardedContent_UserRewardedContentUnspecified;
/**
 *  Represents ads where the user will see a reward after viewing.
 *
 *  Value: "USER_REWARDED_CONTENT_USER_REWARDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails_UserRewardedContent_UserRewardedContentUserRewarded;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_UserRewardedContentTargetingOptionDetails.userRewardedContent

/**
 *  Represents all other ads besides user-rewarded.
 *
 *  Value: "USER_REWARDED_CONTENT_NOT_USER_REWARDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UserRewardedContentTargetingOptionDetails_UserRewardedContent_UserRewardedContentNotUserRewarded;
/**
 *  User rewarded content is not specified or is unknown in this version.
 *
 *  Value: "USER_REWARDED_CONTENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UserRewardedContentTargetingOptionDetails_UserRewardedContent_UserRewardedContentUnspecified;
/**
 *  Represents ads where the user will see a reward after viewing.
 *
 *  Value: "USER_REWARDED_CONTENT_USER_REWARDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_UserRewardedContentTargetingOptionDetails_UserRewardedContent_UserRewardedContentUserRewarded;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails.videoPlayerSize

/**
 *  The dimensions of the video player are 1280×720 or greater (desktop), or
 *  over 90% of the screen covered (mobile).
 *
 *  Value: "VIDEO_PLAYER_SIZE_HD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeHd;
/**
 *  The dimensions of the video player are between 400x300 and 1280x720 pixels
 *  (desktop), or 20% to 90% of the screen covered (mobile).
 *
 *  Value: "VIDEO_PLAYER_SIZE_LARGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeLarge;
/**
 *  The dimensions of the video player are less than 400×300 (desktop), or up to
 *  20% of screen covered (mobile).
 *
 *  Value: "VIDEO_PLAYER_SIZE_SMALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeSmall;
/**
 *  The dimensions of the video player are unknown.
 *
 *  Value: "VIDEO_PLAYER_SIZE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnknown;
/**
 *  Video player size is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real video player size.
 *
 *  Value: "VIDEO_PLAYER_SIZE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails.videoPlayerSize

/**
 *  The dimensions of the video player are 1280×720 or greater (desktop), or
 *  over 90% of the screen covered (mobile).
 *
 *  Value: "VIDEO_PLAYER_SIZE_HD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeHd;
/**
 *  The dimensions of the video player are between 400x300 and 1280x720 pixels
 *  (desktop), or 20% to 90% of the screen covered (mobile).
 *
 *  Value: "VIDEO_PLAYER_SIZE_LARGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeLarge;
/**
 *  The dimensions of the video player are less than 400×300 (desktop), or up to
 *  20% of screen covered (mobile).
 *
 *  Value: "VIDEO_PLAYER_SIZE_SMALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeSmall;
/**
 *  The dimensions of the video player are unknown.
 *
 *  Value: "VIDEO_PLAYER_SIZE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnknown;
/**
 *  Video player size is not specified in this version. This enum is a place
 *  holder for a default value and does not represent a real video player size.
 *
 *  Value: "VIDEO_PLAYER_SIZE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails.viewability

/**
 *  Bid only on impressions that are at least 10% likely to be viewable.
 *
 *  Value: "VIEWABILITY_10_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability10PercentOrMore;
/**
 *  Bid only on impressions that are at least 20% likely to be viewable.
 *
 *  Value: "VIEWABILITY_20_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability20PercentOrMore;
/**
 *  Bid only on impressions that are at least 30% likely to be viewable.
 *
 *  Value: "VIEWABILITY_30_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability30PercentOrMore;
/**
 *  Bid only on impressions that are at least 40% likely to be viewable.
 *
 *  Value: "VIEWABILITY_40_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability40PercentOrMore;
/**
 *  Bid only on impressions that are at least 50% likely to be viewable.
 *
 *  Value: "VIEWABILITY_50_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability50PercentOrMore;
/**
 *  Bid only on impressions that are at least 60% likely to be viewable.
 *
 *  Value: "VIEWABILITY_60_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability60PercentOrMore;
/**
 *  Bid only on impressions that are at least 70% likely to be viewable.
 *
 *  Value: "VIEWABILITY_70_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability70PercentOrMore;
/**
 *  Bid only on impressions that are at least 80% likely to be viewable.
 *
 *  Value: "VIEWABILITY_80_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability80PercentOrMore;
/**
 *  Bid only on impressions that are at least 90% likely to be viewable.
 *
 *  Value: "VIEWABILITY_90_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability90PercentOrMore;
/**
 *  Default value when viewability is not specified in this version. This enum
 *  is a placeholder for default value and does not represent a real viewability
 *  option.
 *
 *  Value: "VIEWABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_ViewabilityUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_ViewabilityTargetingOptionDetails.viewability

/**
 *  Bid only on impressions that are at least 10% likely to be viewable.
 *
 *  Value: "VIEWABILITY_10_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability10PercentOrMore;
/**
 *  Bid only on impressions that are at least 20% likely to be viewable.
 *
 *  Value: "VIEWABILITY_20_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability20PercentOrMore;
/**
 *  Bid only on impressions that are at least 30% likely to be viewable.
 *
 *  Value: "VIEWABILITY_30_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability30PercentOrMore;
/**
 *  Bid only on impressions that are at least 40% likely to be viewable.
 *
 *  Value: "VIEWABILITY_40_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability40PercentOrMore;
/**
 *  Bid only on impressions that are at least 50% likely to be viewable.
 *
 *  Value: "VIEWABILITY_50_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability50PercentOrMore;
/**
 *  Bid only on impressions that are at least 60% likely to be viewable.
 *
 *  Value: "VIEWABILITY_60_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability60PercentOrMore;
/**
 *  Bid only on impressions that are at least 70% likely to be viewable.
 *
 *  Value: "VIEWABILITY_70_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability70PercentOrMore;
/**
 *  Bid only on impressions that are at least 80% likely to be viewable.
 *
 *  Value: "VIEWABILITY_80_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability80PercentOrMore;
/**
 *  Bid only on impressions that are at least 90% likely to be viewable.
 *
 *  Value: "VIEWABILITY_90_PERCENT_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability90PercentOrMore;
/**
 *  Default value when viewability is not specified in this version. This enum
 *  is a placeholder for default value and does not represent a real viewability
 *  option.
 *
 *  Value: "VIEWABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_ViewabilityUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy.type

/**
 *  A bidding strategy that pays a configurable amount per impression.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeManualCpm;
/**
 *  A bidding strategy that pays a configurable amount per video view.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeManualCpv;
/**
 *  A bidding strategy that automatically maximizes number of conversions given
 *  a daily budget.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeMaximizeConversions;
/**
 *  An automated bidding strategy that sets bids to achieve maximum lift.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_LIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeMaximizeLift;
/**
 *  A bidding strategy that automatically optimizes conversions per dollar.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeTargetCpa;
/**
 *  A bidding strategy that pays a configurable amount per impression.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeTargetCpm;
/**
 *  Type is not specified or unknown.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDisplayVideo_YoutubeAndPartnersSettings.contentCategory

/**
 *  A category including all content across YouTube and video partners that
 *  meets standards for monetization.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_EXPANDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryExpanded;
/**
 *  A category consisting of a reduced range of content that meets heightened
 *  requirements, especially regarding inappropriate language and sexual
 *  suggestiveness.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_LIMITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryLimited;
/**
 *  A category consisting of a wide range of content appropriate for most
 *  brands. The content is based off of YouTube's [advertiser-friendly content
 *  guidelines](https://support.google.com/youtube/answer/6162278).
 *
 *  Value: "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryStandard;
/**
 *  Content category is not specified or is unknown in this version.
 *
 *  Value: "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryUnspecified;

/**
 *  Request message for ManualTriggerService.ActivateManualTrigger.
 */
@interface GTLRDisplayVideo_ActivateManualTriggerRequest : GTLRObject
@end


/**
 *  Configuration for custom Active View video viewability metrics.
 */
@interface GTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig : GTLRObject

/** Required. The display name of the custom metric. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The minimum visible video duration required (in seconds) in order for an
 *  impression to be recorded. You must specify minimum_duration,
 *  minimum_quartile or both. If both are specified, an impression meets the
 *  metric criteria if either requirement is met (whichever happens first).
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds0
 *        0 seconds. (Value: "VIDEO_DURATION_SECONDS_0")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds1
 *        1 second. (Value: "VIDEO_DURATION_SECONDS_1")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds10
 *        10 seconds. (Value: "VIDEO_DURATION_SECONDS_10")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds11
 *        11 seconds. (Value: "VIDEO_DURATION_SECONDS_11")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds12
 *        12 seconds. (Value: "VIDEO_DURATION_SECONDS_12")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds13
 *        13 seconds. (Value: "VIDEO_DURATION_SECONDS_13")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds14
 *        14 seconds. (Value: "VIDEO_DURATION_SECONDS_14")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds15
 *        15 seconds. (Value: "VIDEO_DURATION_SECONDS_15")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds2
 *        2 seconds. (Value: "VIDEO_DURATION_SECONDS_2")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds3
 *        3 seconds. (Value: "VIDEO_DURATION_SECONDS_3")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds30
 *        30 seconds. (Value: "VIDEO_DURATION_SECONDS_30")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds4
 *        4 seconds. (Value: "VIDEO_DURATION_SECONDS_4")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds45
 *        45 seconds. (Value: "VIDEO_DURATION_SECONDS_45")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds5
 *        5 seconds. (Value: "VIDEO_DURATION_SECONDS_5")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds6
 *        6 seconds. (Value: "VIDEO_DURATION_SECONDS_6")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds60
 *        60 seconds. (Value: "VIDEO_DURATION_SECONDS_60")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds7
 *        7 seconds. (Value: "VIDEO_DURATION_SECONDS_7")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds8
 *        8 seconds. (Value: "VIDEO_DURATION_SECONDS_8")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSeconds9
 *        9 seconds. (Value: "VIDEO_DURATION_SECONDS_9")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationSecondsNone
 *        No duration value. (Value: "VIDEO_DURATION_SECONDS_NONE")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumDuration_VideoDurationUnspecified
 *        Value is not specified or is unknown in this version. (Value:
 *        "VIDEO_DURATION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *minimumDuration;

/**
 *  The minimum visible video duration required, based on the video quartiles,
 *  in order for an impression to be recorded. You must specify
 *  minimum_duration, minimum_quartile or both. If both are specified, an
 *  impression meets the metric criteria if either requirement is met (whichever
 *  happens first).
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileFirst
 *        First quartile. (Value: "VIDEO_DURATION_QUARTILE_FIRST")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileFourth
 *        Fourth quartile (completion). (Value:
 *        "VIDEO_DURATION_QUARTILE_FOURTH")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileNone
 *        No quartile value. (Value: "VIDEO_DURATION_QUARTILE_NONE")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileSecond
 *        Second quartile (midpoint). (Value: "VIDEO_DURATION_QUARTILE_SECOND")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileThird
 *        Third quartile. (Value: "VIDEO_DURATION_QUARTILE_THIRD")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumQuartile_VideoDurationQuartileUnspecified
 *        Value is not specified or is unknown in this version. (Value:
 *        "VIDEO_DURATION_QUARTILE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *minimumQuartile;

/**
 *  Required. The minimum percentage of the video ad's pixels visible on the
 *  screen in order for an impression to be recorded.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent0
 *        0% viewable. (Value: "VIEWABILITY_PERCENT_0")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent100
 *        100% viewable. (Value: "VIEWABILITY_PERCENT_100")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent25
 *        25% viewable. (Value: "VIEWABILITY_PERCENT_25")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent50
 *        50% viewable. (Value: "VIEWABILITY_PERCENT_50")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercent75
 *        75% viewable. (Value: "VIEWABILITY_PERCENT_75")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumViewability_ViewabilityPercentUnspecified
 *        Value is not specified or is unknown in this version. (Value:
 *        "VIEWABILITY_PERCENT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *minimumViewability;

/**
 *  Required. The minimum percentage of the video ad's volume required in order
 *  for an impression to be recorded.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumVolume_VideoVolumePercent0
 *        0% volume. (Value: "VIDEO_VOLUME_PERCENT_0")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumVolume_VideoVolumePercent10
 *        10% volume. (Value: "VIDEO_VOLUME_PERCENT_10")
 *    @arg @c kGTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig_MinimumVolume_VideoVolumePercentUnspecified
 *        Value is not specified or is unknown in this version. (Value:
 *        "VIDEO_VOLUME_PERCENT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *minimumVolume;

@end


/**
 *  Details of Adloox settings.
 */
@interface GTLRDisplayVideo_Adloox : GTLRObject

/** Adloox's brand safety settings. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedAdlooxCategories;

@end


/**
 *  A single advertiser in Display & Video 360 (DV360).
 */
@interface GTLRDisplayVideo_Advertiser : GTLRObject

/** Required. Immutable. Ad server related settings of the advertiser. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AdvertiserAdServerConfig *adServerConfig;

/**
 *  Output only. The unique ID of the advertiser. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/** Billing related settings of the advertiser. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AdvertiserBillingConfig *billingConfig;

/** Required. Creative related settings of the advertiser. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AdvertiserCreativeConfig *creativeConfig;

/** Settings that control how advertiser data may be accessed. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AdvertiserDataAccessConfig *dataAccessConfig;

/**
 *  Required. The display name of the advertiser. Must be UTF-8 encoded with a
 *  maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. Controls whether or not insertion orders and line items of the
 *  advertiser can spend their budgets and bid on inventory. * Accepted values
 *  are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_PAUSED` and
 *  `ENTITY_STATUS_SCHEDULED_FOR_DELETION`. * If set to
 *  `ENTITY_STATUS_SCHEDULED_FOR_DELETION`, the advertiser will be deleted 30
 *  days from when it was first scheduled for deletion.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusActive The
 *        entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusArchived The
 *        entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusDraft The
 *        entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusPaused
 *        Bidding and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_Advertiser_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/** Required. General settings of the advertiser. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AdvertiserGeneralConfig *generalConfig;

/**
 *  Integration details of the advertiser. Only integrationCode is currently
 *  applicable to advertiser. Other fields of IntegrationDetails are not
 *  supported and will be ignored if provided.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_IntegrationDetails *integrationDetails;

/** Output only. The resource name of the advertiser. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Immutable. The unique ID of the partner that the advertiser
 *  belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

/**
 *  Whether integration with Mediaocean (Prisma) is enabled. By enabling this,
 *  you agree to the following: On behalf of my company, I authorize Mediaocean
 *  (Prisma) to send budget segment plans to Google, and I authorize Google to
 *  send corresponding reporting and invoices from DV360 to Mediaocean for the
 *  purposes of budget planning, billing, and reconciliation for this
 *  advertiser.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *prismaEnabled;

/** Targeting settings related to ad serving of the advertiser. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AdvertiserTargetingConfig *servingConfig;

/**
 *  Output only. The timestamp when the advertiser was last updated. Assigned by
 *  the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Ad server related settings of an advertiser.
 */
@interface GTLRDisplayVideo_AdvertiserAdServerConfig : GTLRObject

/**
 *  The configuration for advertisers that use both Campaign Manager 360 (CM360)
 *  and third-party ad servers.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CmHybridConfig *cmHybridConfig;

/** The configuration for advertisers that use third-party ad servers only. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ThirdPartyOnlyConfig *thirdPartyOnlyConfig;

@end


/**
 *  Billing related settings of an advertiser.
 */
@interface GTLRDisplayVideo_AdvertiserBillingConfig : GTLRObject
@end


/**
 *  Creatives related settings of an advertiser.
 */
@interface GTLRDisplayVideo_AdvertiserCreativeConfig : GTLRObject

/**
 *  Whether or not the advertiser is enabled for dynamic creatives.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dynamicCreativeEnabled;

/**
 *  An ID for configuring campaign monitoring provided by Integral Ad Service
 *  (IAS). The DV360 system will append an IAS "Campaign Monitor" tag containing
 *  this ID to the creative tag.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *iasClientId;

/**
 *  Whether or not to use DV360's Online Behavioral Advertising (OBA)
 *  compliance. Warning: Changing OBA settings may cause the audit status of
 *  your creatives to be reset by some ad exchanges, making them ineligible to
 *  serve until they are re-approved.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *obaComplianceDisabled;

/**
 *  By setting this field to `true`, you, on behalf of your company, authorize
 *  Google to use video creatives associated with this Display & Video 360
 *  advertiser to provide reporting and features related to the advertiser's
 *  television campaigns. Applicable only when the advertiser has a CM360 hybrid
 *  ad server configuration.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *videoCreativeDataSharingAuthorized;

@end


/**
 *  Settings that control how advertiser related data may be accessed.
 */
@interface GTLRDisplayVideo_AdvertiserDataAccessConfig : GTLRObject

/**
 *  Structured Data Files (SDF) settings for the advertiser. If not specified,
 *  the SDF settings of the parent partner are used.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AdvertiserSdfConfig *sdfConfig;

@end


/**
 *  General settings of an advertiser.
 */
@interface GTLRDisplayVideo_AdvertiserGeneralConfig : GTLRObject

/**
 *  Required. Immutable. Advertiser's currency in ISO 4217 format. Accepted
 *  codes and the currencies they represent are: Currency Code : Currency Name *
 *  `ARS` : Argentine Peso * `AUD` : Australian Dollar * `BRL` : Brazilian Real
 *  * `CAD` : Canadian Dollar * `CHF` : Swiss Franc * `CLP` : Chilean Peso *
 *  `CNY` : Chinese Yuan * `COP` : Colombian Peso * `CZK` : Czech Koruna * `DKK`
 *  : Danish Krone * `EGP` : Egyption Pound * `EUR` : Euro * `GBP` : British
 *  Pound * `HKD` : Hong Kong Dollar * `HUF` : Hungarian Forint * `IDR` :
 *  Indonesian Rupiah * `ILS` : Israeli Shekel * `INR` : Indian Rupee * `JPY` :
 *  Japanese Yen * `KRW` : South Korean Won * `MXN` : Mexican Pesos * `MYR` :
 *  Malaysian Ringgit * `NGN` : Nigerian Naira * `NOK` : Norwegian Krone * `NZD`
 *  : New Zealand Dollar * `PEN` : Peruvian Nuevo Sol * `PLN` : Polish Zloty *
 *  `RON` : New Romanian Leu * `RUB` : Russian Ruble * `SEK` : Swedish Krona *
 *  `TRY` : Turkish Lira * `TWD` : New Taiwan Dollar * `USD` : US Dollar * `ZAR`
 *  : South African Rand
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Required. The domain URL of the advertiser's primary website. The system
 *  will send this information to publishers that require website URL to
 *  associate a campaign with an advertiser. Provide a URL with no path or query
 *  string, beginning with `http:` or `https:`. For example,
 *  http://www.example.com
 */
@property(nonatomic, copy, nullable) NSString *domainUrl;

/**
 *  Output only. The standard TZ database name of the advertiser's time zone.
 *  For example, `America/New_York`. See more at:
 *  https://en.wikipedia.org/wiki/List_of_tz_database_time_zones For CM360
 *  hybrid advertisers, the time zone is the same as that of the associated
 *  CM360 account; for third-party only advertisers, the time zone is the same
 *  as that of the parent partner.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  Structured Data Files (SDF) settings of an advertiser.
 */
@interface GTLRDisplayVideo_AdvertiserSdfConfig : GTLRObject

/**
 *  Whether or not this advertiser overrides the SDF configuration of its parent
 *  partner. By default, an advertiser inherits the SDF configuration from the
 *  parent partner. To override the partner configuration, set this field to
 *  `true` and provide the new configuration in sdfConfig.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *overridePartnerSdfConfig;

/**
 *  The SDF configuration for the advertiser. * Required when
 *  overridePartnerSdfConfig is `true`. * Output only when
 *  overridePartnerSdfConfig is `false`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_SdfConfig *sdfConfig;

@end


/**
 *  Targeting settings related to ad serving of an advertiser.
 */
@interface GTLRDisplayVideo_AdvertiserTargetingConfig : GTLRObject

/**
 *  Whether or not connected TV devices are exempt from viewability targeting
 *  for all video line items under the advertiser.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exemptTvFromViewabilityTargeting;

@end


/**
 *  Represents a targetable age range. This will be populated in the details
 *  field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_AGE_RANGE`.
 */
@interface GTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails : GTLRObject

/**
 *  The age range of an audience. We only support targeting a continuous age
 *  range of an audience. Thus, the age range represented in this field can be
 *  1) targeted solely, or, 2) part of a larger continuous age range. The reach
 *  of a continuous age range targeting can be expanded by also targeting an
 *  audience of an unknown age. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange1820
 *        The age range of the audience is 18 to 20, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_18_20")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange1824
 *        The age range of the audience is 18 to 24. (Value: "AGE_RANGE_18_24")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange2124
 *        The age range of the audience is 21 to 24, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_21_24")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange2529
 *        The age range of the audience is 25 to 29, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_25_29")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange2534
 *        The age range of the audience is 25 to 34. (Value: "AGE_RANGE_25_34")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange3034
 *        The age range of the audience is 30 to 34, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_30_34")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange3539
 *        The age range of the audience is 35 to 39, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_35_39")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange3544
 *        The age range of the audience is 35 to 44. (Value: "AGE_RANGE_35_44")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange4044
 *        The age range of the audience is 40 to 44, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_40_44")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange4549
 *        The age range of the audience is 45 to 49, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_45_49")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange4554
 *        The age range of the audience is 45 to 54. (Value: "AGE_RANGE_45_54")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange5054
 *        The age range of the audience is 50 to 54, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_50_54")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange5559
 *        The age range of the audience is 55 to 59, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_55_59")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange5564
 *        The age range of the audience is 55 to 64. (Value: "AGE_RANGE_55_64")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange6064
 *        The age range of the audience is 60 to 64, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_60_64")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRange65Plus
 *        The age range of the audience is 65 and up. (Value:
 *        "AGE_RANGE_65_PLUS")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRangeUnknown
 *        The age range of the audience is unknown. (Value: "AGE_RANGE_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails_AgeRange_AgeRangeUnspecified
 *        Default value when age range is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        age range option. (Value: "AGE_RANGE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *ageRange;

@end


/**
 *  Represents a targetable age range. This will be populated in the
 *  age_range_details field when targeting_type is `TARGETING_TYPE_AGE_RANGE`.
 */
@interface GTLRDisplayVideo_AgeRangeTargetingOptionDetails : GTLRObject

/**
 *  Output only. The age range of an audience.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange1820
 *        The age range of the audience is 18 to 20, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_18_20")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange1824
 *        The age range of the audience is 18 to 24. (Value: "AGE_RANGE_18_24")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange2124
 *        The age range of the audience is 21 to 24, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_21_24")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange2529
 *        The age range of the audience is 25 to 29, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_25_29")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange2534
 *        The age range of the audience is 25 to 34. (Value: "AGE_RANGE_25_34")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange3034
 *        The age range of the audience is 30 to 34, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_30_34")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange3539
 *        The age range of the audience is 35 to 39, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_35_39")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange3544
 *        The age range of the audience is 35 to 44. (Value: "AGE_RANGE_35_44")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange4044
 *        The age range of the audience is 40 to 44, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_40_44")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange4549
 *        The age range of the audience is 45 to 49, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_45_49")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange4554
 *        The age range of the audience is 45 to 54. (Value: "AGE_RANGE_45_54")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange5054
 *        The age range of the audience is 50 to 54, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_50_54")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange5559
 *        The age range of the audience is 55 to 59, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_55_59")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange5564
 *        The age range of the audience is 55 to 64. (Value: "AGE_RANGE_55_64")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange6064
 *        The age range of the audience is 60 to 64, only supported for the
 *        AdGroup of YouTube Programmatic Reservation line item. (Value:
 *        "AGE_RANGE_60_64")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRange65Plus
 *        The age range of the audience is 65 and up. (Value:
 *        "AGE_RANGE_65_PLUS")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRangeUnknown
 *        The age range of the audience is unknown. (Value: "AGE_RANGE_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_AgeRangeTargetingOptionDetails_AgeRange_AgeRangeUnspecified
 *        Default value when age range is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        age range option. (Value: "AGE_RANGE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *ageRange;

@end


/**
 *  Details for assigned app targeting option. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_APP`.
 */
@interface GTLRDisplayVideo_AppAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. The ID of the app. Android's Play store app uses bundle ID, for
 *  example `com.google.android.gm`. Apple's App store app ID uses 9 digit
 *  string, for example `422689480`.
 */
@property(nonatomic, copy, nullable) NSString *appId;

/**
 *  Indicates the platform of the targeted app. If this field is not specified,
 *  the app platform will be assumed to be mobile (i.e., Android or iOS), and we
 *  will derive the appropriate mobile platform from the app ID.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAmazonFiretv
 *        The app platform is Amazon FireTV. (Value:
 *        "APP_PLATFORM_AMAZON_FIRETV")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAndroid
 *        The app platform is Android. (Value: "APP_PLATFORM_ANDROID")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAndroidTv
 *        The app platform is Android TV. (Value: "APP_PLATFORM_ANDROID_TV")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformAppleTv
 *        The app platform is Apple TV. (Value: "APP_PLATFORM_APPLE_TV")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformGenericCtv
 *        The app platform is a CTV platform that is not explicitly listed
 *        elsewhere. (Value: "APP_PLATFORM_GENERIC_CTV")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformIos
 *        The app platform is iOS. (Value: "APP_PLATFORM_IOS")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformPlaystation
 *        The app platform is Playstation. (Value: "APP_PLATFORM_PLAYSTATION")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformRoku
 *        The app platform is Roku. (Value: "APP_PLATFORM_ROKU")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformSamsungTv
 *        The app platform is Samsung TV. (Value: "APP_PLATFORM_SAMSUNG_TV")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformUnspecified
 *        Default value when app platform is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        platform option. (Value: "APP_PLATFORM_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_AppAssignedTargetingOptionDetails_AppPlatform_AppPlatformXbox
 *        The app platform is Xbox. (Value: "APP_PLATFORM_XBOX")
 */
@property(nonatomic, copy, nullable) NSString *appPlatform;

/** Output only. The display name of the app. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

@end


/**
 *  Details for assigned app category targeting option. This will be populated
 *  in the app_category_details field of an AssignedTargetingOption when
 *  targeting_type is `TARGETING_TYPE_APP_CATEGORY`.
 */
@interface GTLRDisplayVideo_AppCategoryAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the app category. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_APP_CATEGORY`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable collection of apps. A collection lets you target
 *  dynamic groups of related apps that are maintained by the platform, for
 *  example `All Apps/Google Play/Games`. This will be populated in the
 *  app_category_details field when targeting_type is
 *  `TARGETING_TYPE_APP_CATEGORY`.
 */
@interface GTLRDisplayVideo_AppCategoryTargetingOptionDetails : GTLRObject

/** Output only. The name of the app collection. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  A single asset.
 */
@interface GTLRDisplayVideo_Asset : GTLRObject

/**
 *  The asset content. For uploaded assets, the content is the serving path.
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  Media ID of the uploaded asset. This is a unique identifier for the asset.
 *  This ID can be passed to other API calls, e.g. CreateCreative to associate
 *  the asset with a creative.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mediaId;

@end


/**
 *  Asset association for the creative.
 */
@interface GTLRDisplayVideo_AssetAssociation : GTLRObject

/** The associated asset. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Asset *asset;

/**
 *  The role of this asset for the creative.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleAdvertiserName
 *        The text that identifies the advertiser or brand name. The content
 *        must be UTF-8 encoded with a length of no more than 25 characters.
 *        This role is only supported in following creative_type: *
 *        `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_VIDEO` (Value: "ASSET_ROLE_ADVERTISER_NAME")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleAndroidAppId The
 *        ID of an Android app in the Google play store. You can find this ID in
 *        the App’s Google Play Store URL after ‘id’. For example, in
 *        https://play.google.com/store/apps/details?id=com.company.appname the
 *        identifier is com.company.appname. This role is only supported in
 *        following creative_type: * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` (Value:
 *        "ASSET_ROLE_ANDROID_APP_ID")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleBackup The asset
 *        is a backup asset of the creative. (Value: "ASSET_ROLE_BACKUP")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleBody Body text of
 *        a native creative. The content must be UTF-8 encoded with a length of
 *        no more than 90 characters. This role is only supported in following
 *        creative_type: * `CREATIVE_TYPE_NATIVE` *
 *        `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_VIDEO` (Value: "ASSET_ROLE_BODY")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleCallToAction The
 *        text to use on the call-to-action button of a native creative. The
 *        content must be UTF-8 encoded with a length of no more than 15
 *        characters. This role is only supported in following creative_type: *
 *        `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_VIDEO` (Value: "ASSET_ROLE_CALL_TO_ACTION")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleCaptionUrl A
 *        short, friendly version of the landing page URL to show in the
 *        creative. This URL gives people an idea of where they'll arrive after
 *        they click on the creative. The content must be UTF-8 encoded with a
 *        length of no more than 30 characters. For example, if the landing page
 *        URL is 'http://www.example.com/page', the caption URL can be
 *        'example.com'. The protocol (http://) is optional, but the URL can't
 *        contain spaces or special characters. This role is only supported in
 *        following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *        `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_VIDEO` (Value: "ASSET_ROLE_CAPTION_URL")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleCoverImage The
 *        cover image of a native video creative. This role is only supported
 *        and required in following creative_type: * `CREATIVE_TYPE_VIDEO`
 *        (Value: "ASSET_ROLE_COVER_IMAGE")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleHeadline Headline
 *        of a native creative. The content must be UTF-8 encoded with a length
 *        of no more than 25 characters. This role is only supported in
 *        following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *        `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_VIDEO` (Value: "ASSET_ROLE_HEADLINE")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleIcon The icon of
 *        a creative. This role is only supported and required in following
 *        creative_type: * `CREATIVE_TYPE_NATIVE` *
 *        `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` (Value: "ASSET_ROLE_ICON")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleIosAppId The ID
 *        of an iOS app in the Apple app store. This ID number can be found in
 *        the Apple App Store URL as the string of numbers directly after "id".
 *        For example, in
 *        https://apps.apple.com/us/app/gmail-email-by-google/id422689480 the ID
 *        is 422689480. This role is only supported in following creative_type:
 *        * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` (Value:
 *        "ASSET_ROLE_IOS_APP_ID")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleLongBody Long
 *        body text of a native creative. The content must be UTF-8 encoded with
 *        a length of no more than 150 characters. This role is only supported
 *        in following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *        `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_VIDEO` (Value: "ASSET_ROLE_LONG_BODY")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleLongHeadline Long
 *        headline of a native creative. The content must be UTF-8 encoded with
 *        a length of no more than 50 characters. This role is only supported in
 *        following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *        `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_VIDEO` (Value: "ASSET_ROLE_LONG_HEADLINE")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleMain The asset is
 *        the main asset of the creative. (Value: "ASSET_ROLE_MAIN")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRolePoliteLoad The
 *        asset is a polite load asset of the creative. (Value:
 *        "ASSET_ROLE_POLITE_LOAD")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRolePrice The
 *        purchase price of your app in the Google play store or iOS app store
 *        (for example, $5.99). Note that this value is not automatically synced
 *        with the actual value listed in the store. It will always be the one
 *        provided when save the creative. The content must be UTF-8 encoded
 *        with a length of no more than 15 characters. This role is only
 *        supported in following creative_type: *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` (Value: "ASSET_ROLE_PRICE")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleRating The rating
 *        of an app in the Google play store or iOS app store. Note that this
 *        value is not automatically synced with the actual rating in the store.
 *        It will always be the one provided when save the creative. This role
 *        is only supported in following creative_type: *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` (Value: "ASSET_ROLE_RATING")
 *    @arg @c kGTLRDisplayVideo_AssetAssociation_Role_AssetRoleUnspecified Asset
 *        role is not specified or is unknown in this version. (Value:
 *        "ASSET_ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  An assignment between a targetable inventory source and an inventory source
 *  group.
 */
@interface GTLRDisplayVideo_AssignedInventorySource : GTLRObject

/**
 *  Output only. The unique ID of the assigned inventory source. The ID is only
 *  unique within a given inventory source group. It may be reused in other
 *  contexts.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *assignedInventorySourceId;

/** Required. The ID of the inventory source entity being targeted. */
@property(nonatomic, copy, nullable) NSString *inventorySourceId;

/** Output only. The resource name of the assigned inventory source. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  An assignment between a location list and a relevant targeting option.
 *  Currently, geo region targeting options are the only supported option for
 *  assignment.
 */
@interface GTLRDisplayVideo_AssignedLocation : GTLRObject

/**
 *  Output only. The unique ID of the assigned location. The ID is only unique
 *  within a location list. It may be reused in other contexts.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *assignedLocationId;

/** Output only. The resource name of the assigned location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The ID of the targeting option assigned to the location list. Must
 *  be of type TARGETING_TYPE_GEO_REGION.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  A single assigned targeting option, which defines the state of a targeting
 *  option for an entity with targeting settings.
 */
@interface GTLRDisplayVideo_AssignedTargetingOption : GTLRObject

/**
 *  Age range details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_AGE_RANGE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AgeRangeAssignedTargetingOptionDetails *ageRangeDetails;

/**
 *  App category details. This field will be populated when the targeting_type
 *  is `TARGETING_TYPE_APP_CATEGORY`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AppCategoryAssignedTargetingOptionDetails *appCategoryDetails;

/**
 *  App details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_APP`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AppAssignedTargetingOptionDetails *appDetails;

/**
 *  Output only. The unique ID of the assigned targeting option. The ID is only
 *  unique within a given resource and targeting type. It may be reused in other
 *  contexts.
 */
@property(nonatomic, copy, nullable) NSString *assignedTargetingOptionId;

/**
 *  Audience targeting details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_AUDIENCE_GROUP`. You can only target one
 *  audience group option per resource.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AudienceGroupAssignedTargetingOptionDetails *audienceGroupDetails;

/**
 *  Audio content type details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails *audioContentTypeDetails;

/**
 *  Authorized seller status details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`. You can only
 *  target one authorized seller status option per resource. If a resource
 *  doesn't have an authorized seller status option, all authorized sellers
 *  indicated as DIRECT or RESELLER in the ads.txt file are targeted by default.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails *authorizedSellerStatusDetails;

/**
 *  Browser details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_BROWSER`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_BrowserAssignedTargetingOptionDetails *browserDetails;

/**
 *  Business chain details. This field will be populated when the targeting_type
 *  is `TARGETING_TYPE_BUSINESS_CHAIN`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails *businessChainDetails;

/**
 *  Carrier and ISP details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CarrierAndIspAssignedTargetingOptionDetails *carrierAndIspDetails;

/**
 *  Category details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_CATEGORY`. Targeting a category will also target its
 *  subcategories. If a category is excluded from targeting and a subcategory is
 *  included, the exclusion will take precedence.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CategoryAssignedTargetingOptionDetails *categoryDetails;

/**
 *  Channel details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_CHANNEL`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ChannelAssignedTargetingOptionDetails *channelDetails;

/**
 *  Content duration details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_CONTENT_DURATION`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails *contentDurationDetails;

/**
 *  Content genre details. This field will be populated when the targeting_type
 *  is `TARGETING_TYPE_CONTENT_GENRE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentGenreAssignedTargetingOptionDetails *contentGenreDetails;

/**
 *  Content instream position details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails *contentInstreamPositionDetails;

/**
 *  Content outstream position details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails *contentOutstreamPositionDetails;

/**
 *  Content duration details. This field will be populated when the
 *  TargetingType is `TARGETING_TYPE_CONTENT_STREAM_TYPE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails *contentStreamTypeDetails;

/**
 *  Day and time details. This field will be populated when the targeting_type
 *  is `TARGETING_TYPE_DAY_AND_TIME`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails *dayAndTimeDetails;

/**
 *  Device make and model details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DeviceMakeModelAssignedTargetingOptionDetails *deviceMakeModelDetails;

/**
 *  Device Type details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_DEVICE_TYPE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails *deviceTypeDetails;

/**
 *  Digital content label details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`. Digital
 *  content labels are targeting exclusions. Advertiser level digital content
 *  label exclusions, if set, are always applied in serving (even though they
 *  aren't visible in resource settings). Resource settings can exclude content
 *  labels in addition to advertiser exclusions, but can't override them. A line
 *  item won't serve if all the digital content labels are excluded.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails *digitalContentLabelExclusionDetails;

/**
 *  Environment details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_ENVIRONMENT`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails *environmentDetails;

/**
 *  Exchange details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_EXCHANGE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails *exchangeDetails;

/**
 *  Gender details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_GENDER`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GenderAssignedTargetingOptionDetails *genderDetails;

/**
 *  Geographic region details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_GEO_REGION`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails *geoRegionDetails;

/**
 *  Household income details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails *householdIncomeDetails;

/**
 *  Output only. The inheritance status of the assigned targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_InheritanceUnspecified
 *        The inheritance is unspecified or unknown. (Value:
 *        "INHERITANCE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_InheritedFromAdvertiser
 *        The assigned targeting option is inherited from advertiser targeting
 *        settings. (Value: "INHERITED_FROM_ADVERTISER")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_InheritedFromPartner
 *        The assigned targeting option is inherited from partner targeting
 *        settings. (Value: "INHERITED_FROM_PARTNER")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_Inheritance_NotInherited
 *        The assigned targeting option is not inherited from higher level
 *        entity. (Value: "NOT_INHERITED")
 */
@property(nonatomic, copy, nullable) NSString *inheritance;

/**
 *  Inventory source details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceAssignedTargetingOptionDetails *inventorySourceDetails;

/**
 *  Inventory source group details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceGroupAssignedTargetingOptionDetails *inventorySourceGroupDetails;

/**
 *  Keyword details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_KEYWORD`. A maximum of 5000 direct negative keywords can be
 *  assigned to a resource. No limit on number of positive keywords that can be
 *  assigned.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_KeywordAssignedTargetingOptionDetails *keywordDetails;

/**
 *  Language details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_LANGUAGE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_LanguageAssignedTargetingOptionDetails *languageDetails;

/** Output only. The resource name for this assigned targeting option. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Native content position details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails *nativeContentPositionDetails;

/**
 *  Keyword details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`. A maximum of 4 negative keyword
 *  lists can be assigned to a resource.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_NegativeKeywordListAssignedTargetingOptionDetails *negativeKeywordListDetails;

/**
 *  Open Measurement enabled inventory details. This field will be populated
 *  when the targeting_type is `TARGETING_TYPE_OMID`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_OmidAssignedTargetingOptionDetails *omidDetails;

/**
 *  On screen position details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails *onScreenPositionDetails;

/**
 *  Operating system details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_OperatingSystemAssignedTargetingOptionDetails *operatingSystemDetails;

/**
 *  Parental status details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails *parentalStatusDetails;

/**
 *  POI details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_POI`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PoiAssignedTargetingOptionDetails *poiDetails;

/**
 *  Proximity location list details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails *proximityLocationListDetails;

/**
 *  Regional location list details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_RegionalLocationListAssignedTargetingOptionDetails *regionalLocationListDetails;

/**
 *  Sensitive category details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`. Sensitive
 *  categories are targeting exclusions. Advertiser level sensitive category
 *  exclusions, if set, are always applied in serving (even though they aren't
 *  visible in resource settings). Resource settings can exclude sensitive
 *  categories in addition to advertiser exclusions, but can't override them.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails *sensitiveCategoryExclusionDetails;

/**
 *  Sub-exchange details. This field will be populated when the targeting_type
 *  is `TARGETING_TYPE_SUB_EXCHANGE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_SubExchangeAssignedTargetingOptionDetails *subExchangeDetails;

/**
 *  Output only. Identifies the type of this assigned targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAgeRange
 *        Target ads to a specific age range (for example, 18-24). (Value:
 *        "TARGETING_TYPE_AGE_RANGE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeApp
 *        Target a specific app (for example, Angry Birds). (Value:
 *        "TARGETING_TYPE_APP")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAppCategory
 *        Target an app category (for example, education or puzzle games).
 *        (Value: "TARGETING_TYPE_APP_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAudienceGroup
 *        Target ads to an audience or groups of audiences. Singleton field, at
 *        most one can exist on a single Lineitem at a time. (Value:
 *        "TARGETING_TYPE_AUDIENCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAudioContentType
 *        Target ads to a specific audio content type. (Value:
 *        "TARGETING_TYPE_AUDIO_CONTENT_TYPE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeAuthorizedSellerStatus
 *        Target ads to ads.txt authorized sellers. (Value:
 *        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeBrowser
 *        Target ads to specific web browsers (for example, Chrome). (Value:
 *        "TARGETING_TYPE_BROWSER")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeBusinessChain
 *        Target ads around locations of a business chain within a specific geo
 *        region. (Value: "TARGETING_TYPE_BUSINESS_CHAIN")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeCarrierAndIsp
 *        Target ads to a specific network carrier or internet service provider
 *        (ISP) (for example, Comcast or Orange). (Value:
 *        "TARGETING_TYPE_CARRIER_AND_ISP")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeCategory
 *        Target ads to a specific content category (for example, arts &
 *        entertainment). (Value: "TARGETING_TYPE_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeChannel
 *        Target a channel (a custom group of related websites or apps). (Value:
 *        "TARGETING_TYPE_CHANNEL")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentDuration
 *        Target ads to a specific video content duration. (Value:
 *        "TARGETING_TYPE_CONTENT_DURATION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentGenre
 *        Target ads to a specific content genre. (Value:
 *        "TARGETING_TYPE_CONTENT_GENRE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentInstreamPosition
 *        Target video or audio ads in a specific content instream position (for
 *        example, pre-roll, mid-roll, or post-roll). (Value:
 *        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentOutstreamPosition
 *        Target ads in a specific content outstream position. (Value:
 *        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeContentStreamType
 *        Target ads to a specific video content stream type. (Value:
 *        "TARGETING_TYPE_CONTENT_STREAM_TYPE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDayAndTime
 *        Target ads during a chosen time period on a specific day. (Value:
 *        "TARGETING_TYPE_DAY_AND_TIME")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDeviceMakeModel
 *        Target ads to a specific device make or model (for example, Roku or
 *        Samsung). (Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDeviceType
 *        Target ads to a specific device type (for example, tablet or connected
 *        TV). (Value: "TARGETING_TYPE_DEVICE_TYPE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeDigitalContentLabelExclusion
 *        Filter web sites by specific digital content label ratings (for
 *        example, DL-MA: suitable only for mature audiences). (Value:
 *        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeEnvironment
 *        Target ads to a specific environment (for example, web or app).
 *        (Value: "TARGETING_TYPE_ENVIRONMENT")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeExchange
 *        Purchase impressions from specific exchanges. (Value:
 *        "TARGETING_TYPE_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeGender
 *        Target ads to a specific gender (for example, female or male). (Value:
 *        "TARGETING_TYPE_GENDER")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeGeoRegion
 *        Target ads to a specific regional location (for example, a city or
 *        state). (Value: "TARGETING_TYPE_GEO_REGION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeHouseholdIncome
 *        Target ads to a specific household income range (for example, top
 *        10%). (Value: "TARGETING_TYPE_HOUSEHOLD_INCOME")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeInventorySource
 *        Purchase impressions from specific deals and auction packages. (Value:
 *        "TARGETING_TYPE_INVENTORY_SOURCE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeInventorySourceGroup
 *        Purchase impressions from a group of deals and auction packages.
 *        (Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeKeyword
 *        Target ads to a specific keyword (for example, dog or retriever).
 *        (Value: "TARGETING_TYPE_KEYWORD")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeLanguage
 *        Target ads to a specific language (for example, English or Japanese).
 *        (Value: "TARGETING_TYPE_LANGUAGE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeNativeContentPosition
 *        Target ads to a specific native content position. (Value:
 *        "TARGETING_TYPE_NATIVE_CONTENT_POSITION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeNegativeKeywordList
 *        Target ads to a specific negative keyword list. (Value:
 *        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeOmid
 *        Target ads in an Open Measurement enabled inventory. (Value:
 *        "TARGETING_TYPE_OMID")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeOnScreenPosition
 *        Target ads in a specific on screen position. (Value:
 *        "TARGETING_TYPE_ON_SCREEN_POSITION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeOperatingSystem
 *        Target ads to a specific operating system (for example, macOS).
 *        (Value: "TARGETING_TYPE_OPERATING_SYSTEM")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeParentalStatus
 *        Target ads to a specific parental status (for example, parent or not a
 *        parent). (Value: "TARGETING_TYPE_PARENTAL_STATUS")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypePoi
 *        Target ads around a specific point of interest, such as a notable
 *        building, a street address, or latitude/longitude coordinates. (Value:
 *        "TARGETING_TYPE_POI")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeProximityLocationList
 *        Target ads to the specified points of interest on a proximity location
 *        list. (Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeRegionalLocationList
 *        Target ads to the specified regions on a regional location list.
 *        (Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeSensitiveCategoryExclusion
 *        Filter website content by sensitive categories (for example, adult).
 *        (Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeSubExchange
 *        Purchase impressions from specific sub-exchanges. (Value:
 *        "TARGETING_TYPE_SUB_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeThirdPartyVerifier
 *        Filter web sites through third party verification (for example, IAS or
 *        DoubleVerify). (Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeUnspecified
 *        Default value when type is not specified or is unknown in this
 *        version. (Value: "TARGETING_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeUrl
 *        Target a specific url (for example, quora.com). (Value:
 *        "TARGETING_TYPE_URL")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeUserRewardedContent
 *        Target user rewarded content for video ads. (Value:
 *        "TARGETING_TYPE_USER_REWARDED_CONTENT")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeVideoPlayerSize
 *        Target a specific video player size for video ads. (Value:
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE")
 *    @arg @c kGTLRDisplayVideo_AssignedTargetingOption_TargetingType_TargetingTypeViewability
 *        Target ads to a specific viewability (for example, 80% viewable).
 *        (Value: "TARGETING_TYPE_VIEWABILITY")
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/**
 *  Third party verification details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ThirdPartyVerifierAssignedTargetingOptionDetails *thirdPartyVerifierDetails;

/**
 *  URL details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_URL`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_UrlAssignedTargetingOptionDetails *urlDetails;

/**
 *  User rewarded content details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails *userRewardedContentDetails;

/**
 *  Video player size details. This field will be populated when the
 *  targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails *videoPlayerSizeDetails;

/**
 *  Viewability details. This field will be populated when the targeting_type is
 *  `TARGETING_TYPE_VIEWABILITY`. You can only target one viewability option per
 *  resource.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails *viewabilityDetails;

@end


/**
 *  A single assigned user role, which defines a user's authorized interaction
 *  with a specified partner or advertiser.
 */
@interface GTLRDisplayVideo_AssignedUserRole : GTLRObject

/**
 *  The ID of the advertiser that the assigend user role applies to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/** Output only. The ID of the assigned user role. */
@property(nonatomic, copy, nullable) NSString *assignedUserRoleId;

/**
 *  The ID of the partner that the assigned user role applies to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

/**
 *  Required. The user role to assign to a user for the entity.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_Admin The user can
 *        manage campaigns, creatives, insertion orders, line items, and reports
 *        for the entity. They can view and edit billing information, create or
 *        modify users, and enable or disable exchanges. This role can only be
 *        assigned for a partner entity. (Value: "ADMIN")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_AdminPartnerClient The
 *        user can manage campaigns, creatives, insertion orders, line items,
 *        and reports for the entity. They can create and modify other
 *        `ADMIN_PARTNER_CLIENT` users and view billing information. They cannot
 *        view revenue models, markups, or any other reseller-sensitive fields.
 *        This role can only be assigned for a partner entity. (Value:
 *        "ADMIN_PARTNER_CLIENT")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_Creative The user can
 *        view media plan information they need to collaborate, but can't view
 *        cost-related data or Marketplace. (Value: "CREATIVE")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_CreativeAdmin The user
 *        can view media plan information they need to collaborate, but can't
 *        view cost-related data or Marketplace. In addition, they can add other
 *        creative admins or creative users to the entity. (Value:
 *        "CREATIVE_ADMIN")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_LimitedReportingOnly
 *        The user can only create and manage the following client-safe reports:
 *        General, Audience Performance, Cross-Partner, Keyword, Order ID,
 *        Category, and Third-Party Data Provider. (Value:
 *        "LIMITED_REPORTING_ONLY")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_ReadOnly The user can
 *        only build reports and view data for the entity. (Value: "READ_ONLY")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_ReportingOnly The user
 *        can only create and manage reports. (Value: "REPORTING_ONLY")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_Standard The user can
 *        manage campaigns, creatives, insertion orders, line items, and reports
 *        for the entity. They cannot create and modify users or view billing
 *        information. (Value: "STANDARD")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_StandardPartnerClient
 *        The user can manage campaigns, creatives, insertion orders, line
 *        items, and reports for the entity. They cannot create or modify other
 *        users or view billing information. They cannot view revenue models,
 *        markups, or any other reseller-sensitive fields. This role can only be
 *        assigned for an advertiser entity. (Value: "STANDARD_PARTNER_CLIENT")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_StandardPlanner The
 *        user can view all campaigns, creatives, insertion orders, line items,
 *        and reports for the entity, including all cost data. They can create
 *        and modify planning-related features, including plans and inventory.
 *        (Value: "STANDARD_PLANNER")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_StandardPlannerLimited
 *        The user can view all campaigns, creatives, insertion orders, line
 *        items, and reports for the entity. They can create or modify
 *        planning-related features, including plans and inventory. They have no
 *        access to cost data and cannot start, accept, or negotiate deals.
 *        (Value: "STANDARD_PLANNER_LIMITED")
 *    @arg @c kGTLRDisplayVideo_AssignedUserRole_UserRole_UserRoleUnspecified
 *        Default value when the user role is not specified or is unknown in
 *        this version. (Value: "USER_ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *userRole;

@end


/**
 *  Assigned audience group targeting option details. This will be populated in
 *  the details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_AUDIENCE_GROUP`. The relation between each group is UNION,
 *  except for excluded_first_and_third_party_audience_group and
 *  excluded_google_audience_group, of which COMPLEMENT is used as an
 *  INTERSECTION with other groups.
 */
@interface GTLRDisplayVideo_AudienceGroupAssignedTargetingOptionDetails : GTLRObject

/**
 *  The first and third party audience ids and recencies of the excluded first
 *  and third party audience group. Used for negative targeting. The COMPLEMENT
 *  of the UNION of this group and other excluded audience groups is used as an
 *  INTERSECTION to any positive audience targeting. All items are logically
 *  ‘OR’ of each other.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_FirstAndThirdPartyAudienceGroup *excludedFirstAndThirdPartyAudienceGroup;

/**
 *  The Google audience ids of the excluded Google audience group. Used for
 *  negative targeting. The COMPLEMENT of the UNION of this group and other
 *  excluded audience groups is used as an INTERSECTION to any positive audience
 *  targeting. Only contains Affinity, In-market and Installed-apps type Google
 *  audiences. All items are logically ‘OR’ of each other.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GoogleAudienceGroup *excludedGoogleAudienceGroup;

/**
 *  The combined audience ids of the included combined audience group. Contains
 *  combined audience ids only.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CombinedAudienceGroup *includedCombinedAudienceGroup;

/**
 *  The custom list ids of the included custom list group. Contains custom list
 *  ids only.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CustomListGroup *includedCustomListGroup;

/**
 *  The first and third party audience ids and recencies of included first and
 *  third party audience groups. Each first and third party audience group
 *  contains first and third party audience ids only. The relation between each
 *  first and third party audience group is INTERSECTION, and the result is
 *  UNION'ed with other audience groups. Repeated groups with same settings will
 *  be ignored.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_FirstAndThirdPartyAudienceGroup *> *includedFirstAndThirdPartyAudienceGroups;

/**
 *  The Google audience ids of the included Google audience group. Contains
 *  Google audience ids only.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GoogleAudienceGroup *includedGoogleAudienceGroup;

@end


/**
 *  Details for audio content type assigned targeting option. This will be
 *  populated in the audio_content_type_details field when targeting_type is
 *  `TARGETING_TYPE_AUDIO_CONTENT_TYPE`. Explicitly targeting all options is not
 *  supported. Remove all audio content type targeting options to achieve this
 *  effect.
 */
@interface GTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails : GTLRObject

/**
 *  The audio content type. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeBroadcast
 *        The audio content type is broadcast. (Value:
 *        "AUDIO_CONTENT_TYPE_BROADCAST")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeMusic
 *        The audio content type is music. (Value: "AUDIO_CONTENT_TYPE_MUSIC")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypePodcast
 *        The audio content type is podcast. (Value:
 *        "AUDIO_CONTENT_TYPE_PODCAST")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeUnknown
 *        The audio content type is unknown. (Value:
 *        "AUDIO_CONTENT_TYPE_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeAssignedTargetingOptionDetails_AudioContentType_AudioContentTypeUnspecified
 *        Audio content type is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real content
 *        stream type. (Value: "AUDIO_CONTENT_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *audioContentType;

@end


/**
 *  Represents a targetable audio content type. This will be populated in the
 *  audio_content_type_details field when targeting_type is
 *  `TARGETING_TYPE_AUDIO_CONTENT_TYPE`.
 */
@interface GTLRDisplayVideo_AudioContentTypeTargetingOptionDetails : GTLRObject

/**
 *  Output only. The audio content type.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeBroadcast
 *        The audio content type is broadcast. (Value:
 *        "AUDIO_CONTENT_TYPE_BROADCAST")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeMusic
 *        The audio content type is music. (Value: "AUDIO_CONTENT_TYPE_MUSIC")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypePodcast
 *        The audio content type is podcast. (Value:
 *        "AUDIO_CONTENT_TYPE_PODCAST")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeUnknown
 *        The audio content type is unknown. (Value:
 *        "AUDIO_CONTENT_TYPE_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_AudioContentTypeTargetingOptionDetails_AudioContentType_AudioContentTypeUnspecified
 *        Audio content type is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real content
 *        stream type. (Value: "AUDIO_CONTENT_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *audioContentType;

@end


/**
 *  The length an audio or a video has been played.
 */
@interface GTLRDisplayVideo_AudioVideoOffset : GTLRObject

/**
 *  The offset in percentage of the audio or video duration.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentage;

/**
 *  The offset in seconds from the start of the audio or video.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Response message for AdvertiserService.AuditAdvertiser.
 */
@interface GTLRDisplayVideo_AuditAdvertiserResponse : GTLRObject

/**
 *  The number of individual targeting options from the following targeting
 *  types that are assigned to a line item under this advertiser. These
 *  individual targeting options count towards the limit of 4500000 ad group
 *  targeting options per advertiser. Qualifying Targeting types: * Channels,
 *  URLs, apps, and collections * Demographic * Google Audiences, including
 *  Affinity, Custom Affinity, and In-market audiences * Inventory source *
 *  Keyword * Mobile app category * User lists * Video targeting * Viewability
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adGroupCriteriaCount;

/**
 *  The number of individual targeting options from the following targeting
 *  types that are assigned to a line item under this advertiser. These
 *  individual targeting options count towards the limit of 900000 campaign
 *  targeting options per advertiser. Qualifying Targeting types: * Position *
 *  Browser * Connection speed * Day and time * Device and operating system *
 *  Digital content label * Sensitive categories * Environment * Geography,
 *  including business chains and proximity * ISP * Language * Third-party
 *  verification
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *campaignCriteriaCount;

/**
 *  The number of channels created under this advertiser. These channels count
 *  towards the limit of 1000 channels per advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *channelsCount;

/**
 *  The number of negative keyword lists created under this advertiser. These
 *  negative keyword lists count towards the limit of 20 negative keyword lists
 *  per advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negativeKeywordListsCount;

/**
 *  The number of negatively targeted channels created under this advertiser.
 *  These negatively targeted channels count towards the limit of 5 negatively
 *  targeted channels per advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negativelyTargetedChannelsCount;

/**
 *  The number of ACTIVE and PAUSED campaigns under this advertiser. These
 *  campaigns count towards the limit of 9999 campaigns per advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *usedCampaignsCount;

/**
 *  The number of ACTIVE, PAUSED and DRAFT insertion orders under this
 *  advertiser. These insertion orders count towards the limit of 9999 insertion
 *  orders per advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *usedInsertionOrdersCount;

/**
 *  The number of ACTIVE, PAUSED, and DRAFT line items under this advertiser.
 *  These line items count towards the limit of 9999 line items per advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *usedLineItemsCount;

@end


/**
 *  Represents an assigned authorized seller status. This will be populated in
 *  the details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.
 */
@interface GTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The authorized seller status to target.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedAndNonParticipatingPublishers
 *        All authorized sellers, including publishers that have not posted an
 *        ads.txt file. Display & Video 360 automatically disallows unauthorized
 *        sellers. (Value:
 *        "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedDirectSellersOnly
 *        Only authorized sellers that directly own the inventory being
 *        monetized, as indicated by a DIRECT declaration in the ads.txt file.
 *        (Value: "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY")
 *    @arg @c kGTLRDisplayVideo_AuthorizedSellerStatusAssignedTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusUnspecified
 *        Default value when authorized seller status is not specified in this
 *        version. This enum is a placeholder for default value and does not
 *        represent a real authorized seller status option. (Value:
 *        "AUTHORIZED_SELLER_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *authorizedSellerStatus;

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable authorized seller status. This will be populated in
 *  the authorized_seller_status_details field when targeting_type is
 *  `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.
 */
@interface GTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails : GTLRObject

/**
 *  Output only. The authorized seller status.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedAndNonParticipatingPublishers
 *        All authorized sellers, including publishers that have not posted an
 *        ads.txt file. Display & Video 360 automatically disallows unauthorized
 *        sellers. (Value:
 *        "AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusAuthorizedDirectSellersOnly
 *        Only authorized sellers that directly own the inventory being
 *        monetized, as indicated by a DIRECT declaration in the ads.txt file.
 *        (Value: "AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY")
 *    @arg @c kGTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails_AuthorizedSellerStatus_AuthorizedSellerStatusUnspecified
 *        Default value when authorized seller status is not specified in this
 *        version. This enum is a placeholder for default value and does not
 *        represent a real authorized seller status option. (Value:
 *        "AUTHORIZED_SELLER_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *authorizedSellerStatus;

@end


/**
 *  Settings that control the bid strategy. Bid strategy determines the bid
 *  price.
 */
@interface GTLRDisplayVideo_BiddingStrategy : GTLRObject

/** A strategy that uses a fixed bid price. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_FixedBidStrategy *fixedBid;

/**
 *  A strategy that automatically adjusts the bid to optimize to your
 *  performance goal while spending the full budget. At insertion order level,
 *  the markup_type of line items cannot be set to
 *  `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`. In addition, when
 *  performance_goal_type is one of: *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED` , the line_item_type of
 *  the insertion order line items must be either: *
 *  `LINE_ITEM_TYPE_DISPLAY_DEFAULT` * `LINE_ITEM_TYPE_VIDEO_DEFAULT` , and when
 *  performance_goal_type is either: *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA` *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN` the line_item_type of the
 *  insertion order line items must be `LINE_ITEM_TYPE_VIDEO_DEFAULT`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_MaximizeSpendBidStrategy *maximizeSpendAutoBid;

/**
 *  A strategy that automatically adjusts the bid to meet or beat a specified
 *  performance goal. It is to be used only for a line item entity.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PerformanceGoalBidStrategy *performanceGoalAutoBid;

@end


/**
 *  Details for assigned browser targeting option. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_BROWSER`.
 */
@interface GTLRDisplayVideo_BrowserAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the browser. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted. All assigned browser
 *  targeting options on the same resource must have the same value for this
 *  field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_BROWSER`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable browser. This will be populated in the
 *  browser_details field when targeting_type is `TARGETING_TYPE_BROWSER`.
 */
@interface GTLRDisplayVideo_BrowserTargetingOptionDetails : GTLRObject

/** Output only. The display name of the browser. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Summarized information of an individual campaign budget.
 */
@interface GTLRDisplayVideo_BudgetSummary : GTLRObject

/**
 *  Corresponds to the external_budget_id of a campaign budget. If the value is
 *  not set in the campaign budget, this field will be empty.
 */
@property(nonatomic, copy, nullable) NSString *externalBudgetId;

/**
 *  The sum of charges made under this budget before taxes, in micros of the
 *  invoice's currency. For example, if currency_code is `USD`, then 1000000
 *  represents one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *preTaxAmountMicros;

/**
 *  Relevant client, product, and estimate codes from the Mediaocean Prisma
 *  tool. Only applicable for campaign budgets with an external_budget_source of
 *  EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PrismaCpeCode *prismaCpeCode;

/**
 *  The amount of tax applied to charges under this budget, in micros of the
 *  invoice's currency. For example, if currency_code is `USD`, then 1000000
 *  represents one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *taxAmountMicros;

/**
 *  The total sum of charges made under this budget, including tax, in micros of
 *  the invoice's currency. For example, if currency_code is `USD`, then 1000000
 *  represents one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalAmountMicros;

@end


/**
 *  Request message for BulkEditAdvertiserAssignedTargetingOptions.
 */
@interface GTLRDisplayVideo_BulkEditAdvertiserAssignedTargetingOptionsRequest : GTLRObject

/**
 *  The assigned targeting options to create in batch, specified as a list of
 *  `CreateAssignedTargetingOptionsRequest`. Supported targeting types: *
 *  `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`
 *  * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CreateAssignedTargetingOptionsRequest *> *createRequests;

/**
 *  The assigned targeting options to delete in batch, specified as a list of
 *  `DeleteAssignedTargetingOptionsRequest`. Supported targeting types: *
 *  `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`
 *  * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest *> *deleteRequests;

@end


/**
 *  GTLRDisplayVideo_BulkEditAdvertiserAssignedTargetingOptionsResponse
 */
@interface GTLRDisplayVideo_BulkEditAdvertiserAssignedTargetingOptionsResponse : GTLRObject

/**
 *  The list of assigned targeting options that have been successfully created.
 *  This list will be absent if empty.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *createdAssignedTargetingOptions;

@end


/**
 *  Request message for AssignedInventorySourceService.BulkEdit.
 */
@interface GTLRDisplayVideo_BulkEditAssignedInventorySourcesRequest : GTLRObject

/**
 *  The ID of the advertiser that owns the parent inventory source group. The
 *  parent partner does not have access to these assigned inventory sources.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  The assigned inventory sources to create in bulk, specified as a list of
 *  AssignedInventorySources.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedInventorySource *> *createdAssignedInventorySources;

/**
 *  The IDs of the assigned inventory sources to delete in bulk, specified as a
 *  list of assigned_inventory_source_ids.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *deletedAssignedInventorySources;

/**
 *  The ID of the partner that owns the inventory source group. Only this
 *  partner has write access to these assigned inventory sources.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

@end


/**
 *  Response message for AssignedInventorySourceService.BulkEdit.
 */
@interface GTLRDisplayVideo_BulkEditAssignedInventorySourcesResponse : GTLRObject

/**
 *  The list of assigned inventory sources that have been successfully created.
 *  This list will be absent if empty.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedInventorySource *> *assignedInventorySources;

@end


/**
 *  Request message for AssignedLocationService.BulkEditAssignedLocations.
 */
@interface GTLRDisplayVideo_BulkEditAssignedLocationsRequest : GTLRObject

/**
 *  The assigned locations to create in bulk, specified as a list of
 *  AssignedLocations.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedLocation *> *createdAssignedLocations;

/**
 *  The IDs of the assigned locations to delete in bulk, specified as a list of
 *  assigned_location_ids.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *deletedAssignedLocations;

@end


/**
 *  Response message for AssignedLocationService.BulkEditAssignedLocations.
 */
@interface GTLRDisplayVideo_BulkEditAssignedLocationsResponse : GTLRObject

/**
 *  The list of assigned locations that have been successfully created. This
 *  list will be absent if empty.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedLocation *> *assignedLocations;

@end


/**
 *  Request message for BulkEditLineItemsAssignedTargetingOptions.
 */
@interface GTLRDisplayVideo_BulkEditAssignedTargetingOptionsRequest : GTLRObject

/**
 *  The assigned targeting options to create in batch, specified as a list of
 *  CreateAssignedTargetingOptionsRequest.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CreateAssignedTargetingOptionsRequest *> *createRequests;

/**
 *  The assigned targeting options to delete in batch, specified as a list of
 *  DeleteAssignedTargetingOptionsRequest.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest *> *deleteRequests;

/**
 *  Required. The ID of the line items whose targeting is being updated.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *lineItemIds;

@end


/**
 *  GTLRDisplayVideo_BulkEditAssignedTargetingOptionsResponse
 */
@interface GTLRDisplayVideo_BulkEditAssignedTargetingOptionsResponse : GTLRObject

/** The error information for each line item that failed to update. */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Status *> *errors;

/**
 *  Output only. The IDs of the line items which failed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *failedLineItemIds;

/**
 *  Output only. The IDs of the line items which successfully updated.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *updatedLineItemIds;

@end


/**
 *  Request message for BulkEditAssignedUserRoles.
 */
@interface GTLRDisplayVideo_BulkEditAssignedUserRolesRequest : GTLRObject

/**
 *  The assigned user roles to create in batch, specified as a list of
 *  AssignedUserRoles.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedUserRole *> *createdAssignedUserRoles;

/**
 *  The assigned user roles to delete in batch, specified as a list of
 *  assigned_user_role_ids. The format of assigned_user_role_id is
 *  `entityType-entityid`, for example `partner-123`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deletedAssignedUserRoles;

@end


/**
 *  GTLRDisplayVideo_BulkEditAssignedUserRolesResponse
 */
@interface GTLRDisplayVideo_BulkEditAssignedUserRolesResponse : GTLRObject

/**
 *  The list of assigned user roles that have been successfully created. This
 *  list will be absent if empty.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedUserRole *> *createdAssignedUserRoles;

@end


/**
 *  Request message for NegativeKeywordService.BulkEditNegativeKeywords.
 */
@interface GTLRDisplayVideo_BulkEditNegativeKeywordsRequest : GTLRObject

/**
 *  The negative keywords to create in batch, specified as a list of
 *  NegativeKeywords.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_NegativeKeyword *> *createdNegativeKeywords;

/**
 *  The negative keywords to delete in batch, specified as a list of
 *  keyword_values.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deletedNegativeKeywords;

@end


/**
 *  Response message for NegativeKeywordService.BulkEditNegativeKeywords.
 */
@interface GTLRDisplayVideo_BulkEditNegativeKeywordsResponse : GTLRObject

/**
 *  The list of negative keywords that have been successfully created. This list
 *  will be absent if empty.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_NegativeKeyword *> *negativeKeywords;

@end


/**
 *  Request message for BulkEditPartnerAssignedTargetingOptions.
 */
@interface GTLRDisplayVideo_BulkEditPartnerAssignedTargetingOptionsRequest : GTLRObject

/**
 *  The assigned targeting options to create in batch, specified as a list of
 *  `CreateAssignedTargetingOptionsRequest`. Supported targeting types: *
 *  `TARGETING_TYPE_CHANNEL`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CreateAssignedTargetingOptionsRequest *> *createRequests;

/**
 *  The assigned targeting options to delete in batch, specified as a list of
 *  `DeleteAssignedTargetingOptionsRequest`. Supported targeting types: *
 *  `TARGETING_TYPE_CHANNEL`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest *> *deleteRequests;

@end


/**
 *  GTLRDisplayVideo_BulkEditPartnerAssignedTargetingOptionsResponse
 */
@interface GTLRDisplayVideo_BulkEditPartnerAssignedTargetingOptionsResponse : GTLRObject

/**
 *  The list of assigned targeting options that have been successfully created.
 *  This list will be absent if empty.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *createdAssignedTargetingOptions;

@end


/**
 *  Request message for SiteService.BulkEditSites.
 */
@interface GTLRDisplayVideo_BulkEditSitesRequest : GTLRObject

/**
 *  The ID of the advertiser that owns the parent channel.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/** The sites to create in batch, specified as a list of Sites. */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Site *> *createdSites;

/**
 *  The sites to delete in batch, specified as a list of site url_or_app_ids.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deletedSites;

/**
 *  The ID of the partner that owns the parent channel.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

@end


/**
 *  Response message for SiteService.BulkEditSites.
 */
@interface GTLRDisplayVideo_BulkEditSitesResponse : GTLRObject

/**
 *  The list of sites that have been successfully created. This list will be
 *  absent if empty.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Site *> *sites;

@end


/**
 *  GTLRDisplayVideo_BulkListAdvertiserAssignedTargetingOptionsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_BulkListAdvertiserAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent
 *  BulkListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of
 *  results. This token will be absent if there are no more
 *  assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_BulkListAssignedTargetingOptionsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "lineItemAssignedTargetingOptions" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_BulkListAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of wrapper objects, each providing an assigned targeting option and
 *  the line item it is assigned to. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_LineItemAssignedTargetingOption *> *lineItemAssignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent call to `BulkListAssignedTargetingOptions`
 *  to fetch the next page of results. This token will be absent if there are no
 *  more line_item_assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for BulkListCampaignAssignedTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_BulkListCampaignAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent
 *  BulkListCampaignAssignedTargetingOptionsRequest to fetch the next page of
 *  results. This token will be absent if there are no more
 *  assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for BulkListInsertionOrderAssignedTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_BulkListInsertionOrderAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent
 *  BulkListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page
 *  of results. This token will be absent if there are no more
 *  assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Request message for LineItemService.BulkUpdateLineItems.
 */
@interface GTLRDisplayVideo_BulkUpdateLineItemsRequest : GTLRObject

/**
 *  Required. IDs of line items to update.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *lineItemIds;

/**
 *  Required. A line item object containing the fields to be updated and the new
 *  values to assign to all line items specified in line_item_ids."
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_LineItem *targetLineItem;

/**
 *  Required. A field mask identifying which fields to update. Only the
 *  following fields are currently supported: * entityStatus
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Response message for LineItemService.BulkUpdateLineItems.
 */
@interface GTLRDisplayVideo_BulkUpdateLineItemsResponse : GTLRObject

/** Errors returned by line items that failed to update. */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Status *> *errors;

/**
 *  The IDs of line items that failed to update.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *failedLineItemIds;

/**
 *  The IDs of line items that are skipped for updates. For example, unnecessary
 *  mutates that will result in effectively no changes to line items will be
 *  skipped and corresponding line item IDs can be tracked here.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *skippedLineItemIds;

/**
 *  The IDs of successfully updated line items.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *updatedLineItemIds;

@end


/**
 *  Details for assigned Business chain targeting option. This will be populated
 *  in the details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_BUSINESS_CHAIN`.
 */
@interface GTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The display name of a business chain, e.g. "KFC", "Chase Bank".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. The radius of the area around the business chain that will be
 *  targeted. The units of the radius are specified by proximity_radius_unit.
 *  Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit
 *  is `DISTANCE_UNIT_MILES`. The minimum increment for both cases is 0.1.
 *  Inputs will be rounded to the nearest acceptable value if it is too
 *  granular, e.g. 15.57 will become 15.6.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proximityRadiusAmount;

/**
 *  Required. The unit of distance by which the targeting radius is measured.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitKilometers
 *        Kilometers. (Value: "DISTANCE_UNIT_KILOMETERS")
 *    @arg @c kGTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitMiles
 *        Miles. (Value: "DISTANCE_UNIT_MILES")
 *    @arg @c kGTLRDisplayVideo_BusinessChainAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "DISTANCE_UNIT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *proximityRadiusUnit;

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_BUSINESS_CHAIN`. Accepted business chain targeting option
 *  IDs can be retrieved using SearchTargetingOptions.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Search terms for Business Chain targeting options. At least one of the field
 *  should be populated.
 */
@interface GTLRDisplayVideo_BusinessChainSearchTerms : GTLRObject

/**
 *  The search query for the desired business chain. The query must be the full
 *  name of the business, e.g. "KFC", "mercedes-benz".
 */
@property(nonatomic, copy, nullable) NSString *businessChainQuery;

/**
 *  The search query for the desired geo region, e.g. "Seattle", "United State".
 */
@property(nonatomic, copy, nullable) NSString *regionQuery;

@end


/**
 *  Represents a targetable business chain within a geo region. This will be
 *  populated in the business_chain_details field when targeting_type is
 *  `TARGETING_TYPE_BUSINESS_CHAIN`.
 */
@interface GTLRDisplayVideo_BusinessChainTargetingOptionDetails : GTLRObject

/**
 *  Output only. The display name of the business chain, e.g. "KFC", "Chase
 *  Bank".
 */
@property(nonatomic, copy, nullable) NSString *businessChain;

/**
 *  Output only. The display name of the geographic region, e.g. "Ontario,
 *  Canada".
 */
@property(nonatomic, copy, nullable) NSString *geoRegion;

/**
 *  Output only. The type of the geographic region.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeAirport
 *        The geographic region is an airport. (Value:
 *        "GEO_REGION_TYPE_AIRPORT")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeArrondissement
 *        The geographic region is an arrondissement. (Value:
 *        "GEO_REGION_TYPE_ARRONDISSEMENT")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeAutonomousCommunity
 *        The geographic region is an autonomous community. (Value:
 *        "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeBorough
 *        The geographic region is a borough. (Value: "GEO_REGION_TYPE_BOROUGH")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCanton
 *        The geographic region is a canton. (Value: "GEO_REGION_TYPE_CANTON")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCity
 *        The geographic region is a city. (Value: "GEO_REGION_TYPE_CITY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCityRegion
 *        The geographic region is a city region. (Value:
 *        "GEO_REGION_TYPE_CITY_REGION")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCongressionalDistrict
 *        The geographic region is a congressional district. (Value:
 *        "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCountry
 *        The geographic region is a country. (Value: "GEO_REGION_TYPE_COUNTRY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeCounty
 *        The geographic region is a county. (Value: "GEO_REGION_TYPE_COUNTY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeDepartment
 *        The geographic region targeting type is department. (Value:
 *        "GEO_REGION_TYPE_DEPARTMENT")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeDistrict
 *        The geographic region is a district. (Value:
 *        "GEO_REGION_TYPE_DISTRICT")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeDmaRegion
 *        The geographic region is a designated market area (DMA) region.
 *        (Value: "GEO_REGION_TYPE_DMA_REGION")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeGovernorate
 *        The geographic region is a governorate. (Value:
 *        "GEO_REGION_TYPE_GOVERNORATE")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeMetro
 *        The geographic region type is metro. (Value: "GEO_REGION_TYPE_METRO")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeMunicipality
 *        The geographic region is a municipality. (Value:
 *        "GEO_REGION_TYPE_MUNICIPALITY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeNeighborhood
 *        The geographic region is a neighborhood. (Value:
 *        "GEO_REGION_TYPE_NEIGHBORHOOD")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeOkrug
 *        The geographic region is an okrug. (Value: "GEO_REGION_TYPE_OKRUG")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeOther
 *        The geographic region type is other. (Value: "GEO_REGION_TYPE_OTHER")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypePostalCode
 *        The geographic region targeting type is postal code. (Value:
 *        "GEO_REGION_TYPE_POSTAL_CODE")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypePrefecture
 *        The geographic region is a prefecture. (Value:
 *        "GEO_REGION_TYPE_PREFECTURE")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeProvince
 *        The geographic region is a province. (Value:
 *        "GEO_REGION_TYPE_PROVINCE")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeRegion
 *        The geographic region type is region. (Value:
 *        "GEO_REGION_TYPE_REGION")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeState
 *        The geographic region is a state. (Value: "GEO_REGION_TYPE_STATE")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeTerritory
 *        The geographic region is a territory. (Value:
 *        "GEO_REGION_TYPE_TERRITORY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeTvRegion
 *        The geographic region is a TV region. (Value:
 *        "GEO_REGION_TYPE_TV_REGION")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnionTerritory
 *        The geographic region is a union territory. (Value:
 *        "GEO_REGION_TYPE_UNION_TERRITORY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeUniversity
 *        The geographic region is a university. (Value:
 *        "GEO_REGION_TYPE_UNIVERSITY")
 *    @arg @c kGTLRDisplayVideo_BusinessChainTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnknown
 *        The geographic region type is unknown. (Value:
 *        "GEO_REGION_TYPE_UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *geoRegionType;

@end


/**
 *  A single campaign.
 */
@interface GTLRDisplayVideo_Campaign : GTLRObject

/**
 *  Output only. The unique ID of the advertiser the campaign belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  The list of budgets available to this campaign. If this field is not set,
 *  the campaign uses an unlimited budget.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CampaignBudget *> *campaignBudgets;

/** Required. The planned spend and duration of the campaign. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CampaignFlight *campaignFlight;

/** Required. The goal of the campaign. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CampaignGoal *campaignGoal;

/**
 *  Output only. The unique ID of the campaign. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *campaignId;

/**
 *  Required. The display name of the campaign. Must be UTF-8 encoded with a
 *  maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. Controls whether or not the insertion orders under this campaign
 *  can spend their budgets and bid on inventory. * Accepted values are
 *  `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and
 *  `ENTITY_STATUS_PAUSED`. * For CreateCampaign method,
 *  `ENTITY_STATUS_ARCHIVED` is not allowed.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusActive The
 *        entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusArchived The
 *        entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusDraft The
 *        entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusPaused Bidding
 *        and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_Campaign_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/** Required. The frequency cap setting of the campaign. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_FrequencyCap *frequencyCap;

/** Output only. The resource name of the campaign. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The timestamp when the campaign was last updated. Assigned by
 *  the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Settings that control how the campaign budget is allocated.
 */
@interface GTLRDisplayVideo_CampaignBudget : GTLRObject

/**
 *  Required. The total amount the linked insertion order segments can budget.
 *  The amount is in micros. Must be greater than 0. For example, 500000000
 *  represents 500 standard units of the currency.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *budgetAmountMicros;

/**
 *  The unique ID of the campaign budget. Assigned by the system. Do not set for
 *  new budgets. Must be included when updating or adding budgets to
 *  campaign_budgets. Otherwise, a new ID will be generated and assigned.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *budgetId;

/**
 *  Required. Immutable. Specifies whether the budget is measured in currency or
 *  impressions.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CampaignBudget_BudgetUnit_BudgetUnitCurrency
 *        Budgeting in currency amounts. (Value: "BUDGET_UNIT_CURRENCY")
 *    @arg @c kGTLRDisplayVideo_CampaignBudget_BudgetUnit_BudgetUnitImpressions
 *        Budgeting in impression amounts. (Value: "BUDGET_UNIT_IMPRESSIONS")
 *    @arg @c kGTLRDisplayVideo_CampaignBudget_BudgetUnit_BudgetUnitUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "BUDGET_UNIT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *budgetUnit;

/**
 *  Required. The date range for the campaign budget. Linked budget segments may
 *  have a different date range. They are resolved relative to the parent
 *  advertiser's time zone. Both `start_date` and `end_date` must be before the
 *  year 2037.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DateRange *dateRange;

/**
 *  Required. The display name of the budget. Must be UTF-8 encoded with a
 *  maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Immutable. The ID identifying this budget to the external source. If this
 *  field is set and the invoice detail level of the corresponding billing
 *  profile is set to "Budget level PO", all impressions served against this
 *  budget will include this ID on the invoice. Must be unique under the
 *  campaign.
 */
@property(nonatomic, copy, nullable) NSString *externalBudgetId;

/**
 *  Required. The external source of the budget.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CampaignBudget_ExternalBudgetSource_ExternalBudgetSourceMediaOcean
 *        Budget source is Mediaocean. (Value:
 *        "EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN")
 *    @arg @c kGTLRDisplayVideo_CampaignBudget_ExternalBudgetSource_ExternalBudgetSourceNone
 *        Budget has no external source. (Value: "EXTERNAL_BUDGET_SOURCE_NONE")
 *    @arg @c kGTLRDisplayVideo_CampaignBudget_ExternalBudgetSource_ExternalBudgetSourceUnspecified
 *        External budget source value is not specified or unknown in this
 *        version. (Value: "EXTERNAL_BUDGET_SOURCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *externalBudgetSource;

/**
 *  Immutable. The ID used to group budgets to be included the same invoice. If
 *  this field is set and the invoice level of the corresponding billing profile
 *  is set to "Budget invoice grouping ID", all external_budget_id sharing the
 *  same invoice_grouping_id will be grouped in the same invoice.
 */
@property(nonatomic, copy, nullable) NSString *invoiceGroupingId;

/**
 *  Additional metadata for use by the Mediaocean Prisma tool. Required for
 *  Mediaocean budgets. Only applicable to prisma_enabled advertisers.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PrismaConfig *prismaConfig;

@end


/**
 *  Settings that track the planned spend and duration of a campaign.
 */
@interface GTLRDisplayVideo_CampaignFlight : GTLRObject

/**
 *  Required. The dates that the campaign is expected to run. They are resolved
 *  relative to the parent advertiser's time zone. * The dates specified here
 *  will not affect serving. They are used to generate alerts and warnings. For
 *  example, if the flight date of any child insertion order is outside the
 *  range of these dates, the user interface will show a warning. * `start_date`
 *  is required and must be the current date or later. * `end_date` is optional.
 *  If specified, it must be the `start_date` or later. * Any specified date
 *  must be before the year 2037.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DateRange *plannedDates;

/**
 *  The amount the campaign is expected to spend for its given planned_dates.
 *  This will not limit serving, but will be used for tracking spend in the
 *  DV360 UI. The amount is in micros. Must be greater than or equal to 0. For
 *  example, 500000000 represents 500 standard units of the currency.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *plannedSpendAmountMicros;

@end


/**
 *  Settings that control the goal of a campaign.
 */
@interface GTLRDisplayVideo_CampaignGoal : GTLRObject

/**
 *  Required. The type of the campaign goal.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeAppInstall
 *        Drive app installs or engagements. (Value:
 *        "CAMPAIGN_GOAL_TYPE_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeBrandAwareness
 *        Raise awareness of a brand or product. (Value:
 *        "CAMPAIGN_GOAL_TYPE_BRAND_AWARENESS")
 *    @arg @c kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeOfflineAction
 *        Drive offline or in-store sales. (Value:
 *        "CAMPAIGN_GOAL_TYPE_OFFLINE_ACTION")
 *    @arg @c kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeOnlineAction
 *        Drive online action or visits. (Value:
 *        "CAMPAIGN_GOAL_TYPE_ONLINE_ACTION")
 *    @arg @c kGTLRDisplayVideo_CampaignGoal_CampaignGoalType_CampaignGoalTypeUnspecified
 *        Goal value is not specified or unknown in this version. (Value:
 *        "CAMPAIGN_GOAL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *campaignGoalType;

/**
 *  Required. The performance goal of the campaign. Acceptable values for
 *  performance_goal_type are: * `PERFORMANCE_GOAL_TYPE_CPM` *
 *  `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` *
 *  `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_CTR` *
 *  `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_OTHER`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PerformanceGoal *performanceGoal;

@end


/**
 *  Details for assigned carrier and ISP targeting option. This will be
 *  populated in the details field of an AssignedTargetingOption when
 *  targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.
 */
@interface GTLRDisplayVideo_CarrierAndIspAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the carrier or ISP. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted. All assigned carrier
 *  and ISP targeting options on the same resource must have the same value for
 *  this field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_CARRIER_AND_ISP`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable carrier or ISP. This will be populated in the
 *  carrier_and_isp_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_CARRIER_AND_ISP`.
 */
@interface GTLRDisplayVideo_CarrierAndIspTargetingOptionDetails : GTLRObject

/** Output only. The display name of the carrier or ISP. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The type indicating if it's carrier or ISP.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CarrierAndIspTargetingOptionDetails_Type_CarrierAndIspTypeCarrier
 *        Indicates this targeting resource refers to a mobile carrier. (Value:
 *        "CARRIER_AND_ISP_TYPE_CARRIER")
 *    @arg @c kGTLRDisplayVideo_CarrierAndIspTargetingOptionDetails_Type_CarrierAndIspTypeIsp
 *        Indicates this targeting resource refers to an ISP. (Value:
 *        "CARRIER_AND_ISP_TYPE_ISP")
 *    @arg @c kGTLRDisplayVideo_CarrierAndIspTargetingOptionDetails_Type_CarrierAndIspTypeUnspecified
 *        Default value when type is not specified or is unknown in this
 *        version. (Value: "CARRIER_AND_ISP_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Assigned category targeting option details. This will be populated in the
 *  category_details field when targeting_type is `TARGETING_TYPE_CATEGORY`.
 */
@interface GTLRDisplayVideo_CategoryAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the category. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_CATEGORY`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable category. This will be populated in the
 *  category_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_CATEGORY`.
 */
@interface GTLRDisplayVideo_CategoryTargetingOptionDetails : GTLRObject

/** Output only. The display name of the category. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  A single channel. Channels are custom groups of related websites and apps.
 */
@interface GTLRDisplayVideo_Channel : GTLRObject

/**
 *  The ID of the advertiser that owns the channel.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  Output only. The unique ID of the channel. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *channelId;

/**
 *  Required. The display name of the channel. Must be UTF-8 encoded with a
 *  maximum length of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The resource name of the channel. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Number of line items that are directly targeting this channel
 *  negatively.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negativelyTargetedLineItemCount;

/**
 *  The ID of the partner that owns the channel.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

/**
 *  Output only. Number of line items that are directly targeting this channel
 *  positively.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *positivelyTargetedLineItemCount;

@end


/**
 *  Details for assigned channel targeting option. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_CHANNEL`.
 */
@interface GTLRDisplayVideo_ChannelAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. ID of the channel. Should refer to the channel ID field on a
 *  [Partner-owned channel](partners.channels#Channel.FIELDS.channel_id) or
 *  [advertiser-owned channel](advertisers.channels#Channel.FIELDS.channel_id)
 *  resource.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *channelId;

/**
 *  Indicates if this option is being negatively targeted. For advertiser level
 *  assigned targeting option, this field must be true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

@end


/**
 *  Settings for advertisers that use both Campaign Manager 360 (CM360) and
 *  third-party ad servers.
 */
@interface GTLRDisplayVideo_CmHybridConfig : GTLRObject

/**
 *  Required. Immutable. Account ID of the CM360 Floodlight configuration linked
 *  with the DV360 advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cmAccountId;

/**
 *  Required. Immutable. ID of the CM360 Floodlight configuration linked with
 *  the DV360 advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cmFloodlightConfigId;

/**
 *  Required. Immutable. By setting this field to `true`, you, on behalf of your
 *  company, authorize the sharing of information from the given Floodlight
 *  configuration to this Display & Video 360 advertiser.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cmFloodlightLinkingAuthorized;

/**
 *  A list of CM360 sites whose placements will be synced to DV360 as creatives.
 *  If absent or empty in CreateAdvertiser method, the system will automatically
 *  create a CM360 site. Removing sites from this list may cause DV360 creatives
 *  synced from CM360 to be deleted. At least one site must be specified.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *cmSyncableSiteIds;

/**
 *  Whether or not to report DV360 cost to CM360.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dv360ToCmCostReportingEnabled;

/**
 *  Whether or not to include DV360 data in CM360 data transfer reports.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dv360ToCmDataSharingEnabled;

@end


/**
 *  A Campaign Manager 360 tracking ad.
 */
@interface GTLRDisplayVideo_CmTrackingAd : GTLRObject

/**
 *  The ad ID of the campaign manager 360 tracking Ad.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cmAdId;

/**
 *  The creative ID of the campaign manager 360 tracking Ad.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cmCreativeId;

/**
 *  The placement ID of the campaign manager 360 tracking Ad.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cmPlacementId;

@end


/**
 *  Describes a combined audience resource.
 */
@interface GTLRDisplayVideo_CombinedAudience : GTLRObject

/**
 *  Output only. The unique ID of the combined audience. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *combinedAudienceId;

/** Output only. The display name of the combined audience. . */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The resource name of the combined audience. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Details of combined audience group. All combined audience targeting settings
 *  are logically ‘OR’ of each other.
 */
@interface GTLRDisplayVideo_CombinedAudienceGroup : GTLRObject

/**
 *  Required. All combined audience targeting settings in combined audience
 *  group. Repeated settings with same id will be ignored. The number of
 *  combined audience settings should be no more than five, error will be thrown
 *  otherwise.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CombinedAudienceTargetingSetting *> *settings;

@end


/**
 *  Details of combined audience targeting setting.
 */
@interface GTLRDisplayVideo_CombinedAudienceTargetingSetting : GTLRObject

/**
 *  Required. Combined audience id of combined audience targeting setting. This
 *  id is combined_audience_id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *combinedAudienceId;

@end


/**
 *  Contact information defining a Customer Match audience member.
 */
@interface GTLRDisplayVideo_ContactInfo : GTLRObject

/**
 *  Country code of the member. Must also be set with the following fields: *
 *  hashed_first_name * hashed_last_name * zip_codes
 */
@property(nonatomic, copy, nullable) NSString *countryCode;

/**
 *  A list of SHA256 hashed email of the member. Before hashing, remove all
 *  whitespace and make sure the string is all lowercase.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *hashedEmails;

/**
 *  SHA256 hashed first name of the member. Before hashing, remove all
 *  whitespace and make sure the string is all lowercase. Must also be set with
 *  the following fields: * country_code * hashed_last_name * zip_codes
 */
@property(nonatomic, copy, nullable) NSString *hashedFirstName;

/**
 *  SHA256 hashed last name of the member. Before hashing, remove all whitespace
 *  and make sure the string is all lowercase. Must also be set with the
 *  following fields: * country_code * hashed_first_name * zip_codes
 */
@property(nonatomic, copy, nullable) NSString *hashedLastName;

/**
 *  A list of SHA256 hashed phone numbers of the member. Before hashing, all
 *  phone numbers must be formatted using the [E.164
 *  format](//en.wikipedia.org/wiki/E.164) and include the country calling code.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *hashedPhoneNumbers;

/**
 *  A list of zip codes of the member. Must also be set with the following
 *  fields: * country_code * hashed_first_name * hashed_last_name
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *zipCodes;

@end


/**
 *  Wrapper message for a list of contact information defining Customer Match
 *  audience members.
 */
@interface GTLRDisplayVideo_ContactInfoList : GTLRObject

/**
 *  A list of ContactInfo objects defining Customer Match audience members. The
 *  size of members after splitting the contact_infos mustn't be greater than
 *  500,000.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ContactInfo *> *contactInfos;

@end


/**
 *  Details for content duration assigned targeting option. This will be
 *  populated in the content_duration_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_DURATION`. Explicitly targeting all options is not
 *  supported. Remove all content duration targeting options to achieve this
 *  effect.
 */
@interface GTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The content duration.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration0To1Min
 *        Content is 0-1 minute long. (Value: "CONTENT_DURATION_0_TO_1_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration15To30Min
 *        Content is 15-30 minutes long. (Value:
 *        "CONTENT_DURATION_15_TO_30_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration1To5Min
 *        Content is 1-5 minutes long. (Value: "CONTENT_DURATION_1_TO_5_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration30To60Min
 *        Content is 30-60 minutes long. (Value:
 *        "CONTENT_DURATION_30_TO_60_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDuration5To15Min
 *        Content is 5-15 minutes long. (Value: "CONTENT_DURATION_5_TO_15_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDurationOver60Min
 *        Content is over 60 minutes long. (Value:
 *        "CONTENT_DURATION_OVER_60_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDurationUnknown
 *        The content duration is unknown. (Value: "CONTENT_DURATION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationAssignedTargetingOptionDetails_ContentDuration_ContentDurationUnspecified
 *        Content duration is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real content
 *        duration. (Value: "CONTENT_DURATION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentDuration;

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_DURATION`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable content duration. This will be populated in the
 *  content_duration_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_DURATION`.
 */
@interface GTLRDisplayVideo_ContentDurationTargetingOptionDetails : GTLRObject

/**
 *  Output only. The content duration.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration0To1Min
 *        Content is 0-1 minute long. (Value: "CONTENT_DURATION_0_TO_1_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration15To30Min
 *        Content is 15-30 minutes long. (Value:
 *        "CONTENT_DURATION_15_TO_30_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration1To5Min
 *        Content is 1-5 minutes long. (Value: "CONTENT_DURATION_1_TO_5_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration30To60Min
 *        Content is 30-60 minutes long. (Value:
 *        "CONTENT_DURATION_30_TO_60_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDuration5To15Min
 *        Content is 5-15 minutes long. (Value: "CONTENT_DURATION_5_TO_15_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDurationOver60Min
 *        Content is over 60 minutes long. (Value:
 *        "CONTENT_DURATION_OVER_60_MIN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDurationUnknown
 *        The content duration is unknown. (Value: "CONTENT_DURATION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ContentDurationTargetingOptionDetails_ContentDuration_ContentDurationUnspecified
 *        Content duration is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real content
 *        duration. (Value: "CONTENT_DURATION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentDuration;

@end


/**
 *  Details for content genre assigned targeting option. This will be populated
 *  in the content_genre_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_GENRE`. Explicitly targeting all options is not
 *  supported. Remove all content genre targeting options to achieve this
 *  effect.
 */
@interface GTLRDisplayVideo_ContentGenreAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the content genre. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_GENRE`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable content genre. This will be populated in the
 *  content_genre_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_GENRE`.
 */
@interface GTLRDisplayVideo_ContentGenreTargetingOptionDetails : GTLRObject

/** Output only. The display name of the content genre */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Assigned content instream position targeting option details. This will be
 *  populated in the content_instream_position_details field when targeting_type
 *  is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.
 */
@interface GTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The ad type to target. Only applicable to insertion order
 *  targeting and new line items supporting the specified ad type will inherit
 *  this targeting option by default. Possible values are: * `AD_TYPE_VIDEO`,
 *  the setting will be inherited by new line item when line_item_type is
 *  `LINE_ITEM_TYPE_VIDEO_DEFAULT`. * `AD_TYPE_AUDIO`, the setting will be
 *  inherited by new line item when line_item_type is
 *  `LINE_ITEM_TYPE_AUDIO_DEFAULT`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeAudio
 *        Audio creatives, e.g. audio ads that play during audio content.
 *        (Value: "AD_TYPE_AUDIO")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeDisplay
 *        Display creatives, e.g. image and HTML5. (Value: "AD_TYPE_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeUnspecified
 *        Ad type is not specified or is unknown in this version. (Value:
 *        "AD_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeVideo
 *        Video creatives, e.g. video ads that play during streaming content in
 *        video players. (Value: "AD_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *adType;

/**
 *  The content instream position for video or audio ads. Output only in v1.
 *  Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionMidRoll
 *        Ads that play between the beginning and end of streaming content.
 *        (Value: "CONTENT_INSTREAM_POSITION_MID_ROLL")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPostRoll
 *        Ads that play at the end of streaming content. (Value:
 *        "CONTENT_INSTREAM_POSITION_POST_ROLL")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPreRoll
 *        Ads that play before streaming content. (Value:
 *        "CONTENT_INSTREAM_POSITION_PRE_ROLL")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnknown
 *        Ads instream position is unknown. (Value:
 *        "CONTENT_INSTREAM_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionAssignedTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnspecified
 *        Content instream position is not specified in this version. This enum
 *        is a place holder for a default value and does not represent a real in
 *        stream ad position. (Value: "CONTENT_INSTREAM_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentInstreamPosition;

@end


/**
 *  Represents a targetable content instream position, which could be used by
 *  video and audio ads. This will be populated in the
 *  content_instream_position_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.
 */
@interface GTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails : GTLRObject

/**
 *  Output only. The content instream position.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionMidRoll
 *        Ads that play between the beginning and end of streaming content.
 *        (Value: "CONTENT_INSTREAM_POSITION_MID_ROLL")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPostRoll
 *        Ads that play at the end of streaming content. (Value:
 *        "CONTENT_INSTREAM_POSITION_POST_ROLL")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionPreRoll
 *        Ads that play before streaming content. (Value:
 *        "CONTENT_INSTREAM_POSITION_PRE_ROLL")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnknown
 *        Ads instream position is unknown. (Value:
 *        "CONTENT_INSTREAM_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails_ContentInstreamPosition_ContentInstreamPositionUnspecified
 *        Content instream position is not specified in this version. This enum
 *        is a place holder for a default value and does not represent a real in
 *        stream ad position. (Value: "CONTENT_INSTREAM_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentInstreamPosition;

@end


/**
 *  Assigned content outstream position targeting option details. This will be
 *  populated in the content_outstream_position_details field when
 *  targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.
 */
@interface GTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The ad type to target. Only applicable to insertion order
 *  targeting and new line items supporting the specified ad type will inherit
 *  this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`,
 *  the setting will be inherited by new line item when line_item_type is
 *  `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be
 *  inherited by new line item when line_item_type is
 *  `LINE_ITEM_TYPE_VIDEO_DEFAULT`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeAudio
 *        Audio creatives, e.g. audio ads that play during audio content.
 *        (Value: "AD_TYPE_AUDIO")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeDisplay
 *        Display creatives, e.g. image and HTML5. (Value: "AD_TYPE_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeUnspecified
 *        Ad type is not specified or is unknown in this version. (Value:
 *        "AD_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_AdType_AdTypeVideo
 *        Video creatives, e.g. video ads that play during streaming content in
 *        video players. (Value: "AD_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *adType;

/**
 *  The content outstream position. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInArticle
 *        Ads that appear between the paragraphs of your pages. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInBanner
 *        Ads that display on the top and the sides of a page. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_IN_BANNER")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInFeed
 *        Ads that appear in a scrollable stream of content. A feed is typically
 *        editorial (e.g. a list of articles or news) or listings (e.g. a list
 *        of products or services). (Value:
 *        "CONTENT_OUTSTREAM_POSITION_IN_FEED")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInterstitial
 *        Ads shown before or between content loads. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnknown
 *        The ad position is unknown in the content outstream. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionAssignedTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnspecified
 *        Content outstream position is not specified in this version. This enum
 *        is a place holder for a default value and does not represent a real
 *        content outstream position. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentOutstreamPosition;

@end


/**
 *  Represents a targetable content outstream position, which could be used by
 *  display and video ads. This will be populated in the
 *  content_outstream_position_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.
 */
@interface GTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails : GTLRObject

/**
 *  Output only. The content outstream position.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInArticle
 *        Ads that appear between the paragraphs of your pages. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInBanner
 *        Ads that display on the top and the sides of a page. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_IN_BANNER")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInFeed
 *        Ads that appear in a scrollable stream of content. A feed is typically
 *        editorial (e.g. a list of articles or news) or listings (e.g. a list
 *        of products or services). (Value:
 *        "CONTENT_OUTSTREAM_POSITION_IN_FEED")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionInterstitial
 *        Ads shown before or between content loads. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnknown
 *        The ad position is unknown in the content outstream. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails_ContentOutstreamPosition_ContentOutstreamPositionUnspecified
 *        Content outstream position is not specified in this version. This enum
 *        is a place holder for a default value and does not represent a real
 *        content outstream position. (Value:
 *        "CONTENT_OUTSTREAM_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentOutstreamPosition;

@end


/**
 *  Details for content stream type assigned targeting option. This will be
 *  populated in the content_stream_type_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_STREAM_TYPE`. Explicitly targeting all options is
 *  not supported. Remove all content stream type targeting options to achieve
 *  this effect.
 */
@interface GTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The content stream type.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails_ContentStreamType_ContentLiveStream
 *        The content is being live-streamed. (Value: "CONTENT_LIVE_STREAM")
 *    @arg @c kGTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails_ContentStreamType_ContentOnDemand
 *        The content is viewed on-demand. (Value: "CONTENT_ON_DEMAND")
 *    @arg @c kGTLRDisplayVideo_ContentStreamTypeAssignedTargetingOptionDetails_ContentStreamType_ContentStreamTypeUnspecified
 *        Content stream type is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real content
 *        stream type. (Value: "CONTENT_STREAM_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentStreamType;

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_STREAM_TYPE`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable content stream type. This will be populated in the
 *  content_stream_type_details field when targeting_type is
 *  `TARGETING_TYPE_CONTENT_STREAM_TYPE`.
 */
@interface GTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails : GTLRObject

/**
 *  Output only. The content stream type.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails_ContentStreamType_ContentLiveStream
 *        The content is being live-streamed. (Value: "CONTENT_LIVE_STREAM")
 *    @arg @c kGTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails_ContentStreamType_ContentOnDemand
 *        The content is viewed on-demand. (Value: "CONTENT_ON_DEMAND")
 *    @arg @c kGTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails_ContentStreamType_ContentStreamTypeUnspecified
 *        Content stream type is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real content
 *        stream type. (Value: "CONTENT_STREAM_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentStreamType;

@end


/**
 *  Settings that control how conversions are counted. All post-click
 *  conversions will be counted. A percentage value can be set for post-view
 *  conversions counting.
 */
@interface GTLRDisplayVideo_ConversionCountingConfig : GTLRObject

/**
 *  The Floodlight activity configs used to track conversions. The number of
 *  conversions counted is the sum of all of the conversions counted by all of
 *  the Floodlight activity IDs specified in this field.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_TrackingFloodlightActivityConfig *> *floodlightActivityConfigs;

/**
 *  The percentage of post-view conversions to count, in millis (1/1000 of a
 *  percent). Must be between 0 and 100000 inclusive. For example, to track 50%
 *  of the post-click conversions, set a value of 50000.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *postViewCountPercentageMillis;

@end


/**
 *  Counter event of the creative.
 */
@interface GTLRDisplayVideo_CounterEvent : GTLRObject

/** Required. The name of the counter event. */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The name used to identify this counter event in reports. */
@property(nonatomic, copy, nullable) NSString *reportingName;

@end


/**
 *  A request message for CreateAsset.
 */
@interface GTLRDisplayVideo_CreateAssetRequest : GTLRObject

/**
 *  Required. The filename of the asset, including the file extension. The
 *  filename must be UTF-8 encoded with a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *filename;

@end


/**
 *  A response message for CreateAsset.
 */
@interface GTLRDisplayVideo_CreateAssetResponse : GTLRObject

/** The uploaded asset, if successful. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Asset *asset;

@end


/**
 *  A request listing which assigned targeting options of a given targeting type
 *  should be created and added.
 */
@interface GTLRDisplayVideo_CreateAssignedTargetingOptionsRequest : GTLRObject

/** Required. The assigned targeting options to create and add. */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  Required. Identifies the type of this assigned targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAgeRange
 *        Target ads to a specific age range (for example, 18-24). (Value:
 *        "TARGETING_TYPE_AGE_RANGE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeApp
 *        Target a specific app (for example, Angry Birds). (Value:
 *        "TARGETING_TYPE_APP")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAppCategory
 *        Target an app category (for example, education or puzzle games).
 *        (Value: "TARGETING_TYPE_APP_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudienceGroup
 *        Target ads to an audience or groups of audiences. Singleton field, at
 *        most one can exist on a single Lineitem at a time. (Value:
 *        "TARGETING_TYPE_AUDIENCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudioContentType
 *        Target ads to a specific audio content type. (Value:
 *        "TARGETING_TYPE_AUDIO_CONTENT_TYPE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAuthorizedSellerStatus
 *        Target ads to ads.txt authorized sellers. (Value:
 *        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBrowser
 *        Target ads to specific web browsers (for example, Chrome). (Value:
 *        "TARGETING_TYPE_BROWSER")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBusinessChain
 *        Target ads around locations of a business chain within a specific geo
 *        region. (Value: "TARGETING_TYPE_BUSINESS_CHAIN")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCarrierAndIsp
 *        Target ads to a specific network carrier or internet service provider
 *        (ISP) (for example, Comcast or Orange). (Value:
 *        "TARGETING_TYPE_CARRIER_AND_ISP")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCategory
 *        Target ads to a specific content category (for example, arts &
 *        entertainment). (Value: "TARGETING_TYPE_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeChannel
 *        Target a channel (a custom group of related websites or apps). (Value:
 *        "TARGETING_TYPE_CHANNEL")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentDuration
 *        Target ads to a specific video content duration. (Value:
 *        "TARGETING_TYPE_CONTENT_DURATION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentGenre
 *        Target ads to a specific content genre. (Value:
 *        "TARGETING_TYPE_CONTENT_GENRE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentInstreamPosition
 *        Target video or audio ads in a specific content instream position (for
 *        example, pre-roll, mid-roll, or post-roll). (Value:
 *        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentOutstreamPosition
 *        Target ads in a specific content outstream position. (Value:
 *        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentStreamType
 *        Target ads to a specific video content stream type. (Value:
 *        "TARGETING_TYPE_CONTENT_STREAM_TYPE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDayAndTime
 *        Target ads during a chosen time period on a specific day. (Value:
 *        "TARGETING_TYPE_DAY_AND_TIME")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceMakeModel
 *        Target ads to a specific device make or model (for example, Roku or
 *        Samsung). (Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceType
 *        Target ads to a specific device type (for example, tablet or connected
 *        TV). (Value: "TARGETING_TYPE_DEVICE_TYPE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDigitalContentLabelExclusion
 *        Filter web sites by specific digital content label ratings (for
 *        example, DL-MA: suitable only for mature audiences). (Value:
 *        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeEnvironment
 *        Target ads to a specific environment (for example, web or app).
 *        (Value: "TARGETING_TYPE_ENVIRONMENT")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeExchange
 *        Purchase impressions from specific exchanges. (Value:
 *        "TARGETING_TYPE_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGender
 *        Target ads to a specific gender (for example, female or male). (Value:
 *        "TARGETING_TYPE_GENDER")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGeoRegion
 *        Target ads to a specific regional location (for example, a city or
 *        state). (Value: "TARGETING_TYPE_GEO_REGION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeHouseholdIncome
 *        Target ads to a specific household income range (for example, top
 *        10%). (Value: "TARGETING_TYPE_HOUSEHOLD_INCOME")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySource
 *        Purchase impressions from specific deals and auction packages. (Value:
 *        "TARGETING_TYPE_INVENTORY_SOURCE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySourceGroup
 *        Purchase impressions from a group of deals and auction packages.
 *        (Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeKeyword
 *        Target ads to a specific keyword (for example, dog or retriever).
 *        (Value: "TARGETING_TYPE_KEYWORD")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeLanguage
 *        Target ads to a specific language (for example, English or Japanese).
 *        (Value: "TARGETING_TYPE_LANGUAGE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNativeContentPosition
 *        Target ads to a specific native content position. (Value:
 *        "TARGETING_TYPE_NATIVE_CONTENT_POSITION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNegativeKeywordList
 *        Target ads to a specific negative keyword list. (Value:
 *        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOmid
 *        Target ads in an Open Measurement enabled inventory. (Value:
 *        "TARGETING_TYPE_OMID")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOnScreenPosition
 *        Target ads in a specific on screen position. (Value:
 *        "TARGETING_TYPE_ON_SCREEN_POSITION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOperatingSystem
 *        Target ads to a specific operating system (for example, macOS).
 *        (Value: "TARGETING_TYPE_OPERATING_SYSTEM")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeParentalStatus
 *        Target ads to a specific parental status (for example, parent or not a
 *        parent). (Value: "TARGETING_TYPE_PARENTAL_STATUS")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypePoi
 *        Target ads around a specific point of interest, such as a notable
 *        building, a street address, or latitude/longitude coordinates. (Value:
 *        "TARGETING_TYPE_POI")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeProximityLocationList
 *        Target ads to the specified points of interest on a proximity location
 *        list. (Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeRegionalLocationList
 *        Target ads to the specified regions on a regional location list.
 *        (Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSensitiveCategoryExclusion
 *        Filter website content by sensitive categories (for example, adult).
 *        (Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSubExchange
 *        Purchase impressions from specific sub-exchanges. (Value:
 *        "TARGETING_TYPE_SUB_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeThirdPartyVerifier
 *        Filter web sites through third party verification (for example, IAS or
 *        DoubleVerify). (Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUnspecified
 *        Default value when type is not specified or is unknown in this
 *        version. (Value: "TARGETING_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUrl
 *        Target a specific url (for example, quora.com). (Value:
 *        "TARGETING_TYPE_URL")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUserRewardedContent
 *        Target user rewarded content for video ads. (Value:
 *        "TARGETING_TYPE_USER_REWARDED_CONTENT")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeVideoPlayerSize
 *        Target a specific video player size for video ads. (Value:
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE")
 *    @arg @c kGTLRDisplayVideo_CreateAssignedTargetingOptionsRequest_TargetingType_TargetingTypeViewability
 *        Target ads to a specific viewability (for example, 80% viewable).
 *        (Value: "TARGETING_TYPE_VIEWABILITY")
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

@end


/**
 *  Request message for [SdfDownloadTaskService.CreateSdfDownloadTask].
 */
@interface GTLRDisplayVideo_CreateSdfDownloadTaskRequest : GTLRObject

/**
 *  The ID of the advertiser to download SDF for.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/** Filters on entities by their entity IDs. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_IdFilter *idFilter;

/** Filters on Inventory Sources by their IDs. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceFilter *inventorySourceFilter;

/**
 *  Filters on selected file types. The entities in each file are filtered by a
 *  chosen set of filter entities. The filter entities must be the same type as,
 *  or a parent type of, the selected file types.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ParentEntityFilter *parentEntityFilter;

/**
 *  The ID of the partner to download SDF for.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

/**
 *  Required. The SDF version of the downloaded file. If set to
 *  `SDF_VERSION_UNSPECIFIED`, this will default to the version specified by the
 *  advertiser or partner identified by `root_id`. An advertiser inherits its
 *  SDF version from its partner unless configured otherwise.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion31
 *        SDF version 3.1 (Value: "SDF_VERSION_3_1")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion4
 *        SDF version 4 (Value: "SDF_VERSION_4")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion41
 *        SDF version 4.1 (Value: "SDF_VERSION_4_1")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion42
 *        SDF version 4.2 (Value: "SDF_VERSION_4_2")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion5
 *        SDF version 5. (Value: "SDF_VERSION_5")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion51
 *        SDF version 5.1 (Value: "SDF_VERSION_5_1")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion52
 *        SDF version 5.2 (Value: "SDF_VERSION_5_2")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion53
 *        SDF version 5.3 (Value: "SDF_VERSION_5_3")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion54
 *        SDF version 5.4 (Value: "SDF_VERSION_5_4")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersion55
 *        SDF version 5.5 (Value: "SDF_VERSION_5_5")
 *    @arg @c kGTLRDisplayVideo_CreateSdfDownloadTaskRequest_Version_SdfVersionUnspecified
 *        SDF version value is not specified or is unknown in this version.
 *        (Value: "SDF_VERSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  A single Creative.
 */
@interface GTLRDisplayVideo_Creative : GTLRObject

/**
 *  Additional dimensions. Applicable when creative_type is one of: *
 *  `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` *
 *  `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_LIGHTBOX` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_PUBLISHER_HOSTED`
 *  If this field is specified, width_pixels and height_pixels are both required
 *  and must be greater than or equal to 0.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Dimensions *> *additionalDimensions;

/**
 *  Output only. The unique ID of the advertiser the creative belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/** Third-party HTML tracking tag to be appended to the creative tag. */
@property(nonatomic, copy, nullable) NSString *appendedTag;

/**
 *  Required. Assets associated to this creative. Assets can be associated to
 *  the creative in one of following roles: * `ASSET_ROLE_UNSPECIFIED` *
 *  `ASSET_ROLE_MAIN` * `ASSET_ROLE_BACKUP` * `ASSET_ROLE_POLITE_LOAD`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssetAssociation *> *assets;

/**
 *  Output only. The unique ID of the Campaign Manager 360 placement associated
 *  with the creative. This field is only applicable for creatives that are
 *  synced from Campaign Manager.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cmPlacementId;

/**
 *  The Campaign Manager 360 tracking ad associated with the creative. Optional
 *  for the following creative_type when created by an advertiser that uses both
 *  Campaign Manager 360 and third-party ad serving: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` Output only for other cases.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CmTrackingAd *cmTrackingAd;

/**
 *  The IDs of companion creatives for a video creative. You can assign existing
 *  display creatives (with image or HTML5 assets) to serve surrounding the
 *  publisher's video player. Companions display around the video player while
 *  the video is playing and remain after the video has completed. Creatives
 *  contain additional dimensions can not be companion creatives. This field is
 *  only supported for following creative_type: * `CREATIVE_TYPE_AUDIO` *
 *  `CREATIVE_TYPE_VIDEO`
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *companionCreativeIds;

/**
 *  Counter events for a rich media creative. Counters track the number of times
 *  that a user interacts with any part of a rich media creative in a specified
 *  way (mouse-overs, mouse-outs, clicks, taps, data loading, keyboard entries,
 *  etc.). Any event that can be captured in the creative can be recorded as a
 *  counter. Leave it empty or unset for creatives containing image assets only.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CounterEvent *> *counterEvents;

/**
 *  Output only. The timestamp when the creative was created. Assigned by the
 *  system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. A list of attributes of the creative that is generated by the
 *  system.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *creativeAttributes;

/**
 *  Output only. The unique ID of the creative. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creativeId;

/**
 *  Required. Immutable. The type of the creative.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeAudio Audio
 *        creative. Create and update methods are supported for this creative
 *        type if the hosting_source is `HOSTING_SOURCE_HOSTED` (Value:
 *        "CREATIVE_TYPE_AUDIO")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeExpandable
 *        Expandable creative. Create and update methods are supported for this
 *        creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`
 *        (Value: "CREATIVE_TYPE_EXPANDABLE")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeLightbox
 *        Responsive and expandable Lightbox creative. Create and update methods
 *        are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_LIGHTBOX")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNative Native
 *        creative rendered by publishers with assets from advertiser. Create
 *        and update methods are supported for this creative type if the
 *        hosting_source is `HOSTING_SOURCE_HOSTED` (Value:
 *        "CREATIVE_TYPE_NATIVE")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeAppInstall
 *        Native app install creative. Create and update methods are supported
 *        for this creative type if the hosting_source is
 *        `HOSTING_SOURCE_HOSTED` (Value: "CREATIVE_TYPE_NATIVE_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeAppInstallSquare
 *        Square native app install creative. Create and update methods are
 *        supported for this creative type if the hosting_source is
 *        `HOSTING_SOURCE_HOSTED` (Value:
 *        "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeSiteSquare
 *        Square native creative. Create and update methods are supported for
 *        this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *        (Value: "CREATIVE_TYPE_NATIVE_SITE_SQUARE")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeNativeVideo
 *        Native video creative. Create and update methods are supported for
 *        this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *        (Value: "CREATIVE_TYPE_NATIVE_VIDEO")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypePublisherHosted
 *        Publisher hosted creative. Create and update methods are **not**
 *        supported for this creative type. (Value:
 *        "CREATIVE_TYPE_PUBLISHER_HOSTED")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeStandard
 *        Standard display creative. Create and update methods are supported for
 *        this creative type if the hosting_source is one of the following: *
 *        `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY` (Value:
 *        "CREATIVE_TYPE_STANDARD")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeTemplatedAppInstall
 *        Templated app install mobile creative (banner). Create and update
 *        methods are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_TEMPLATED_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeTemplatedAppInstallInterstitial
 *        Interstitial creative including both display and video. Create and
 *        update methods are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeTemplatedAppInstallVideo
 *        Templated app install mobile video creative. Create and update methods
 *        are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "CREATIVE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_Creative_CreativeType_CreativeTypeVideo Video
 *        creative. Create and update methods are supported for this creative
 *        type if the hosting_source is one of the following: *
 *        `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY` (Value:
 *        "CREATIVE_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *creativeType;

/**
 *  Required. Primary dimensions of the creative. Applicable to all creative
 *  types. The value of width_pixels and height_pixels defaults to `0` when
 *  creative_type is one of: * `CREATIVE_TYPE_VIDEO` *
 *  `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL` * `CREATIVE_TYPE_AUDIO` *
 *  `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Dimensions *dimensions;

/**
 *  Required. The display name of the creative. Must be UTF-8 encoded with a
 *  maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Indicates whether the creative is dynamic.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dynamic;

/**
 *  Required. Controls whether or not the creative can serve. Accepted values
 *  are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED` *
 *  `ENTITY_STATUS_PAUSED`
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusActive The
 *        entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusArchived The
 *        entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusDraft The
 *        entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusPaused Bidding
 *        and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_Creative_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/**
 *  Required. Exit events for this creative. An exit (also known as a click tag)
 *  is any area in your creative that someone can click or tap to open an
 *  advertiser's landing page. Every creative must include at least one exit.
 *  You can add an exit to your creative in any of the following ways: * Use
 *  Google Web Designer's tap area. * Define a JavaScript variable called
 *  "clickTag". * Use the Enabler (Enabler.exit()) to track exits in rich media
 *  formats.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ExitEvent *> *exitEvents;

/**
 *  Optional. Specifies the expanding direction of the creative. Required and
 *  only valid for third-party expandable creatives. Third-party expandable
 *  creatives are creatives with following hosting source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_EXPANDABLE`
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionAnyDiagonal
 *        Can expand in any diagonal direction. (Value:
 *        "EXPANDING_DIRECTION_ANY_DIAGONAL")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionDown
 *        Expands down. (Value: "EXPANDING_DIRECTION_DOWN")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionDownAndLeft
 *        Expands down and to the left side. (Value:
 *        "EXPANDING_DIRECTION_DOWN_AND_LEFT")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionDownAndRight
 *        Expands down and to the right side. (Value:
 *        "EXPANDING_DIRECTION_DOWN_AND_RIGHT")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionLeft
 *        Expands left. (Value: "EXPANDING_DIRECTION_LEFT")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionLeftOrRight
 *        Expands to either the left or the right side. (Value:
 *        "EXPANDING_DIRECTION_LEFT_OR_RIGHT")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionNone
 *        Does not expand in any direction. (Value: "EXPANDING_DIRECTION_NONE")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionRight
 *        Expands right. (Value: "EXPANDING_DIRECTION_RIGHT")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUnspecified
 *        The expanding direction is not specified. (Value:
 *        "EXPANDING_DIRECTION_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUp
 *        Expands up. (Value: "EXPANDING_DIRECTION_UP")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUpAndLeft
 *        Expands up and to the left side. (Value:
 *        "EXPANDING_DIRECTION_UP_AND_LEFT")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUpAndRight
 *        Expands up and to the right side. (Value:
 *        "EXPANDING_DIRECTION_UP_AND_RIGHT")
 *    @arg @c kGTLRDisplayVideo_Creative_ExpandingDirection_ExpandingDirectionUpOrDown
 *        Expands either up or down. (Value: "EXPANDING_DIRECTION_UP_OR_DOWN")
 */
@property(nonatomic, copy, nullable) NSString *expandingDirection;

/**
 *  Optional. Indicates the creative will automatically expand on hover.
 *  Optional and only valid for third-party expandable creatives. Third-party
 *  expandable creatives are creatives with following hosting source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_EXPANDABLE`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expandOnHover;

/**
 *  Required. Indicates where the creative is hosted.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Creative_HostingSource_HostingSourceCm A
 *        creative synced from Campaign Manager 360. Create and update methods
 *        are **not** supported for this hosting type. (Value:
 *        "HOSTING_SOURCE_CM")
 *    @arg @c kGTLRDisplayVideo_Creative_HostingSource_HostingSourceHosted A
 *        creative created in DV360 and hosted by Campaign Manager 360. Create
 *        and update methods are supported for this hosting type if the
 *        creative_type is one of the following: * `CREATIVE_TYPE_AUDIO` *
 *        `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *        `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
 *        `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO` *
 *        `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO` (Value:
 *        "HOSTING_SOURCE_HOSTED")
 *    @arg @c kGTLRDisplayVideo_Creative_HostingSource_HostingSourceRichMedia A
 *        rich media creative created in Studio and hosted by Campaign Manager
 *        360. Create and update methods are **not** supported for this hosting
 *        type. (Value: "HOSTING_SOURCE_RICH_MEDIA")
 *    @arg @c kGTLRDisplayVideo_Creative_HostingSource_HostingSourceThirdParty A
 *        creative hosted by a third-party ad server (3PAS). Create and update
 *        methods are supported for this hosting type if the creative_type is
 *        one of the following: * `CREATIVE_TYPE_AUDIO` *
 *        `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_STANDARD` *
 *        `CREATIVE_TYPE_VIDEO` (Value: "HOSTING_SOURCE_THIRD_PARTY")
 *    @arg @c kGTLRDisplayVideo_Creative_HostingSource_HostingSourceUnspecified
 *        Hosting source is not specified or is unknown in this version. (Value:
 *        "HOSTING_SOURCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *hostingSource;

/**
 *  Output only. Indicates the third-party VAST tag creative requires HTML5
 *  Video support. Output only and only valid for third-party VAST tag
 *  creatives. Third-party VAST tag creatives are creatives with following
 *  hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following
 *  creative_type: * `CREATIVE_TYPE_VIDEO`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *html5Video;

/**
 *  Indicates whether Integral Ad Science (IAS) campaign monitoring is enabled.
 *  To enable this for the creative, make sure the
 *  Advertiser.creative_config.ias_client_id has been set to your IAS client ID.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *iasCampaignMonitoring;

/**
 *  ID information used to link this creative to an external system. Must be
 *  UTF-8 encoded with a length of no more than 10,000 characters.
 */
@property(nonatomic, copy, nullable) NSString *integrationCode;

/**
 *  JavaScript measurement URL from supported third-party verification providers
 *  (ComScore, DoubleVerify, IAS, Moat). HTML script tags are not supported.
 *  This field is only supported in following creative_type: *
 *  `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 */
@property(nonatomic, copy, nullable) NSString *jsTrackerUrl;

/**
 *  Output only. The IDs of the line items this creative is associated with. To
 *  associate a creative to a line item, use LineItem.creative_ids instead.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *lineItemIds;

/**
 *  Output only. Media duration of the creative. Applicable when creative_type
 *  is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_AUDIO` *
 *  `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_PUBLISHER_HOSTED`
 */
@property(nonatomic, strong, nullable) GTLRDuration *mediaDuration;

/**
 *  Output only. Indicates the third-party audio creative supports MP3. Output
 *  only and only valid for third-party audio creatives. Third-party audio
 *  creatives are creatives with following hosting_source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_AUDIO`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mp3Audio;

/** Output only. The resource name of the creative. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  User notes for this creative. Must be UTF-8 encoded with a length of no more
 *  than 20,000 characters.
 */
@property(nonatomic, copy, nullable) NSString *notes;

/**
 *  Specifies the OBA icon for a video creative. This field is only supported in
 *  following creative_type: * `CREATIVE_TYPE_VIDEO`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ObaIcon *obaIcon;

/**
 *  Output only. Indicates the third-party audio creative supports OGG. Output
 *  only and only valid for third-party audio creatives. Third-party audio
 *  creatives are creatives with following hosting_source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_AUDIO`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *oggAudio;

/**
 *  Amount of time to play the video before counting a view. This field is
 *  required when skippable is true. This field is only supported for the
 *  following creative_type: * `CREATIVE_TYPE_VIDEO`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AudioVideoOffset *progressOffset;

/**
 *  Optional. Indicates that the creative relies on HTML5 to render properly.
 *  Optional and only valid for third-party tag creatives. Third-party tag
 *  creatives are creatives with following hosting_source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requireHtml5;

/**
 *  Optional. Indicates that the creative requires MRAID (Mobile Rich Media Ad
 *  Interface Definitions system). Set this if the creative relies on mobile
 *  gestures for interactivity, such as swiping or tapping. Optional and only
 *  valid for third-party tag creatives. Third-party tag creatives are creatives
 *  with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with
 *  following creative_type: * `CREATIVE_TYPE_STANDARD` *
 *  `CREATIVE_TYPE_EXPANDABLE`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requireMraid;

/**
 *  Optional. Indicates that the creative will wait for a return ping for
 *  attribution. Only valid when using a Campaign Manager 360 tracking ad with a
 *  third-party ad server parameter and the ${DC_DBM_TOKEN} macro. Optional and
 *  only valid for third-party tag creatives or third-party VAST tag creatives.
 *  Third-party tag creatives are creatives with following hosting_source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` Third-party VAST tag
 *  creatives are creatives with following hosting_source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requirePingForAttribution;

/** Output only. The current status of the creative review process. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ReviewStatusInfo *reviewStatus;

/**
 *  Amount of time to play the video before the skip button appears. This field
 *  is required when skippable is true. This field is only supported for the
 *  following creative_type: * `CREATIVE_TYPE_VIDEO`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AudioVideoOffset *skipOffset;

/**
 *  Whether the user can choose to skip a video creative. This field is only
 *  supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *skippable;

/**
 *  Optional. The original third-party tag used for the creative. Required and
 *  only valid for third-party tag creatives. Third-party tag creatives are
 *  creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY`
 *  combined with following creative_type: * `CREATIVE_TYPE_STANDARD` *
 *  `CREATIVE_TYPE_EXPANDABLE`
 */
@property(nonatomic, copy, nullable) NSString *thirdPartyTag;

/**
 *  Tracking URLs from third parties to track interactions with a video
 *  creative. This field is only supported for the following creative_type: *
 *  `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ThirdPartyUrl *> *thirdPartyUrls;

/**
 *  Timer custom events for a rich media creative. Timers track the time during
 *  which a user views and interacts with a specified part of a rich media
 *  creative. A creative can have multiple timer events, each timed
 *  independently. Leave it empty or unset for creatives containing image assets
 *  only.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_TimerEvent *> *timerEvents;

/**
 *  Tracking URLs for analytics providers or third-party ad technology vendors.
 *  The URLs must start with https (except on inventory that doesn't require SSL
 *  compliance). If using macros in your URL, use only macros supported by
 *  Display & Video 360. Standard URLs only, no IMG or SCRIPT tags. This field
 *  is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` *
 *  `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
 *  `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *trackerUrls;

/**
 *  Output only. Audio/Video transcodes. Display & Video 360 transcodes the main
 *  asset into a number of alternative versions that use different file formats
 *  or have different properties (resolution, audio bit rate, and video bit
 *  rate), each designed for specific video players or bandwidths. These
 *  transcodes give a publisher's system more options to choose from for each
 *  impression on your video and ensures that the appropriate file serves based
 *  on the viewer’s connection and screen size. This field is only supported in
 *  following creative_type: * `CREATIVE_TYPE_VIDEO` *
 *  `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_AUDIO`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Transcode *> *transcodes;

/**
 *  Optional. An optional creative identifier provided by a registry that is
 *  unique across all platforms. Universal Ad ID is part of the VAST 4.0
 *  standard. It can be modified after the creative is created. This field is
 *  only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_UniversalAdId *universalAdId;

/**
 *  Output only. The timestamp when the creative was last updated, either by the
 *  user or system (e.g. creative review). Assigned by the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Optional. The URL of the VAST tag for a third-party VAST tag creative.
 *  Required and only valid for third-party VAST tag creatives. Third-party VAST
 *  tag creatives are creatives with following hosting_source: *
 *  `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: *
 *  `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`
 */
@property(nonatomic, copy, nullable) NSString *vastTagUrl;

/**
 *  Output only. Indicates the third-party VAST tag creative requires VPAID
 *  (Digital Video Player-Ad Interface). Output only and only valid for
 *  third-party VAST tag creatives. Third-party VAST tag creatives are creatives
 *  with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with
 *  following creative_type: * `CREATIVE_TYPE_VIDEO`
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vpaid;

@end


/**
 *  Creative requirements configuration for the inventory source.
 */
@interface GTLRDisplayVideo_CreativeConfig : GTLRObject

/**
 *  The type of creative that can be assigned to the inventory source. Only the
 *  following types are supported: * `CREATIVE_TYPE_STANDARD` *
 *  `CREATIVE_TYPE_VIDEO`
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeAudio
 *        Audio creative. Create and update methods are supported for this
 *        creative type if the hosting_source is `HOSTING_SOURCE_HOSTED` (Value:
 *        "CREATIVE_TYPE_AUDIO")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeExpandable
 *        Expandable creative. Create and update methods are supported for this
 *        creative type if the hosting_source is `HOSTING_SOURCE_THIRD_PARTY`
 *        (Value: "CREATIVE_TYPE_EXPANDABLE")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeLightbox
 *        Responsive and expandable Lightbox creative. Create and update methods
 *        are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_LIGHTBOX")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNative
 *        Native creative rendered by publishers with assets from advertiser.
 *        Create and update methods are supported for this creative type if the
 *        hosting_source is `HOSTING_SOURCE_HOSTED` (Value:
 *        "CREATIVE_TYPE_NATIVE")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeAppInstall
 *        Native app install creative. Create and update methods are supported
 *        for this creative type if the hosting_source is
 *        `HOSTING_SOURCE_HOSTED` (Value: "CREATIVE_TYPE_NATIVE_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeAppInstallSquare
 *        Square native app install creative. Create and update methods are
 *        supported for this creative type if the hosting_source is
 *        `HOSTING_SOURCE_HOSTED` (Value:
 *        "CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeSiteSquare
 *        Square native creative. Create and update methods are supported for
 *        this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *        (Value: "CREATIVE_TYPE_NATIVE_SITE_SQUARE")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeNativeVideo
 *        Native video creative. Create and update methods are supported for
 *        this creative type if the hosting_source is `HOSTING_SOURCE_HOSTED`
 *        (Value: "CREATIVE_TYPE_NATIVE_VIDEO")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypePublisherHosted
 *        Publisher hosted creative. Create and update methods are **not**
 *        supported for this creative type. (Value:
 *        "CREATIVE_TYPE_PUBLISHER_HOSTED")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeStandard
 *        Standard display creative. Create and update methods are supported for
 *        this creative type if the hosting_source is one of the following: *
 *        `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY` (Value:
 *        "CREATIVE_TYPE_STANDARD")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeTemplatedAppInstall
 *        Templated app install mobile creative (banner). Create and update
 *        methods are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_TEMPLATED_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeTemplatedAppInstallInterstitial
 *        Interstitial creative including both display and video. Create and
 *        update methods are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeTemplatedAppInstallVideo
 *        Templated app install mobile video creative. Create and update methods
 *        are **not** supported for this creative type. (Value:
 *        "CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "CREATIVE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_CreativeConfig_CreativeType_CreativeTypeVideo
 *        Video creative. Create and update methods are supported for this
 *        creative type if the hosting_source is one of the following: *
 *        `HOSTING_SOURCE_HOSTED` * `HOSTING_SOURCE_THIRD_PARTY` (Value:
 *        "CREATIVE_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *creativeType;

/**
 *  The configuration for display creatives. Applicable when creative_type is
 *  `CREATIVE_TYPE_STANDARD`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceDisplayCreativeConfig *displayCreativeConfig;

/**
 *  The configuration for video creatives. Applicable when creative_type is
 *  `CREATIVE_TYPE_VIDEO`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceVideoCreativeConfig *videoCreativeConfig;

@end


/**
 *  A single custom bidding algorithm.
 */
@interface GTLRDisplayVideo_CustomBiddingAlgorithm : GTLRObject

/**
 *  Immutable. The unique ID of the advertiser that owns the custom bidding
 *  algorithm.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  Output only. The unique ID of the custom bidding algorithm. Assigned by the
 *  system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customBiddingAlgorithmId;

/**
 *  Required. Immutable. The type of custom bidding algorithm.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_AdsDataHubBased
 *        Algorithm created through Ads Data Hub product. (Value:
 *        "ADS_DATA_HUB_BASED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_CustomBiddingAlgorithmTypeUnspecified
 *        Algorithm type is not specified or is unknown in this version. (Value:
 *        "CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_GoalBuilderBased
 *        Algorithm created through goal builder in DV3 UI. (Value:
 *        "GOAL_BUILDER_BASED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_CustomBiddingAlgorithmType_ScriptBased
 *        Algorithm generated through customer-uploaded custom bidding script
 *        files. (Value: "SCRIPT_BASED")
 */
@property(nonatomic, copy, nullable) NSString *customBiddingAlgorithmType;

/**
 *  Required. The display name of the custom bidding algorithm. Must be UTF-8
 *  encoded with a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Controls whether or not the custom bidding algorithm can be used as a
 *  bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` *
 *  `ENTITY_STATUS_ARCHIVED`
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusActive
 *        The entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusArchived
 *        The entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusDraft
 *        The entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusPaused
 *        Bidding and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingAlgorithm_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/**
 *  Output only. The details of custom bidding models for each advertiser who
 *  has access. This field may only include the details of the queried
 *  advertiser if the algorithm
 *  [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner)
 *  is a partner and is being retrieved using an advertiser
 *  [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CustomBiddingModelDetails *> *modelDetails;

/** Output only. The resource name of the custom bidding algorithm. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. The unique ID of the partner that owns the custom bidding
 *  algorithm.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

/**
 *  The IDs of the advertisers who have access to this algorithm. If
 *  advertiser_id is set, this field will only consist of that value. This field
 *  will not be set if the algorithm
 *  [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner)
 *  is a partner and is being retrieved using an advertiser
 *  [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *sharedAdvertiserIds;

@end


/**
 *  The details of a custom bidding algorithm model for a single shared
 *  advertiser.
 */
@interface GTLRDisplayVideo_CustomBiddingModelDetails : GTLRObject

/**
 *  The unique ID of the relevant advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  The readiness state of custom bidding model.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateActive
 *        The model is trained and ready for serving. (Value:
 *        "READINESS_STATE_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateInsufficientData
 *        There is not enough data to train the serving model. (Value:
 *        "READINESS_STATE_INSUFFICIENT_DATA")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateNoValidScript
 *        A valid custom bidding script has not been provided with which to
 *        train the model. This state will only be applied to algorithms whose
 *        `custom_bidding_algorithm_type` is `SCRIPT_BASED`. (Value:
 *        "READINESS_STATE_NO_VALID_SCRIPT")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateTraining
 *        The model is training and not ready for serving. (Value:
 *        "READINESS_STATE_TRAINING")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_ReadinessState_ReadinessStateUnspecified
 *        State is not specified or is unknown in this version. (Value:
 *        "READINESS_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *readinessState;

/**
 *  Output only. The suspension state of custom bidding model.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateDormant
 *        Model has not been used recently. Although the model still acts as
 *        `ENABLED`, it will eventually be suspended if not used. (Value:
 *        "SUSPENSION_STATE_DORMANT")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateEnabled
 *        Model is enabled, either recently used, currently used or scheduled to
 *        be used. The algorithm is actively scoring impressions for this
 *        advertiser. (Value: "SUSPENSION_STATE_ENABLED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateSuspended
 *        Model is suspended from scoring impressions and cannot serve. If the
 *        algorithm is assigned to a line item under this advertiser or
 *        otherwise updated, it will switch back to the `ENABLED` state and
 *        require time to prepare the serving model again. (Value:
 *        "SUSPENSION_STATE_SUSPENDED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingModelDetails_SuspensionState_SuspensionStateUnspecified
 *        State is not specified or is unknown in this version. (Value:
 *        "SUSPENSION_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *suspensionState;

@end


/**
 *  A single custom bidding script.
 */
@interface GTLRDisplayVideo_CustomBiddingScript : GTLRObject

/**
 *  Output only. Whether the script is currently being used for scoring by the
 *  parent algorithm.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *active;

/** Output only. The time when the script was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The unique ID of the custom bidding algorithm the script
 *  belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customBiddingAlgorithmId;

/**
 *  Output only. The unique ID of the custom bidding script.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customBiddingScriptId;

/**
 *  Output only. Error details of a rejected custom bidding script. This field
 *  will only be populated when Script.state is REJECTED.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ScriptError *> *errors;

/** Output only. The resource name of the custom bidding script. */
@property(nonatomic, copy, nullable) NSString *name;

/** The reference to the uploaded script file. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CustomBiddingScriptRef *script;

/**
 *  Output only. The state of the custom bidding script.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_CustomBiddingScript_State_Accepted The script
 *        has been accepted for scoring impressions. (Value: "ACCEPTED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingScript_State_Pending The script is
 *        being processed for backend pipelines. (Value: "PENDING")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingScript_State_Rejected The script
 *        has been rejected by backend pipelines. It may have errors. (Value:
 *        "REJECTED")
 *    @arg @c kGTLRDisplayVideo_CustomBiddingScript_State_StateUnspecified The
 *        script state is not specified or is unknown in this version. (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  The reference to the uploaded custom bidding script file.
 */
@interface GTLRDisplayVideo_CustomBiddingScriptRef : GTLRObject

/**
 *  A resource name to be used in media.download to Download the script files.
 *  Or media.upload to Upload the script files. Resource names have the format
 *  `customBiddingAlgorithms/{custom_bidding_algorithm_id}/scriptRef/{ref_id}`.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  Describes a custom list entity, such as a custom affinity or custom intent
 *  audience list.
 */
@interface GTLRDisplayVideo_CustomList : GTLRObject

/**
 *  Output only. The unique ID of the custom list. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customListId;

/** Output only. The display name of the custom list. . */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The resource name of the custom list. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Details of custom list group. All custom list targeting settings are
 *  logically ‘OR’ of each other.
 */
@interface GTLRDisplayVideo_CustomListGroup : GTLRObject

/**
 *  Required. All custom list targeting settings in custom list group. Repeated
 *  settings with same id will be ignored.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CustomListTargetingSetting *> *settings;

@end


/**
 *  Details of custom list targeting setting.
 */
@interface GTLRDisplayVideo_CustomListTargetingSetting : GTLRObject

/**
 *  Required. Custom id of custom list targeting setting. This id is
 *  custom_list_id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customListId;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRDisplayVideo_Date : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  A date range.
 */
@interface GTLRDisplayVideo_DateRange : GTLRObject

/**
 *  The upper bound of the date range, inclusive. Must specify a positive value
 *  for `year`, `month`, and `day`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Date *endDate;

/**
 *  The lower bound of the date range, inclusive. Must specify a positive value
 *  for `year`, `month`, and `day`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Date *startDate;

@end


/**
 *  Representation of a segment of time defined on a specific day of the week
 *  and with a start and end time. The time represented by `start_hour` must be
 *  before the time represented by `end_hour`.
 */
@interface GTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. The day of the week for this day and time targeting setting.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_DayOfWeekUnspecified
 *        The day of the week is unspecified. (Value: "DAY_OF_WEEK_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Friday
 *        Friday (Value: "FRIDAY")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Monday
 *        Monday (Value: "MONDAY")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Saturday
 *        Saturday (Value: "SATURDAY")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Sunday
 *        Sunday (Value: "SUNDAY")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Thursday
 *        Thursday (Value: "THURSDAY")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Tuesday
 *        Tuesday (Value: "TUESDAY")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_DayOfWeek_Wednesday
 *        Wednesday (Value: "WEDNESDAY")
 */
@property(nonatomic, copy, nullable) NSString *dayOfWeek;

/**
 *  Required. The end hour for day and time targeting. Must be between 1 (1 hour
 *  after start of day) and 24 (end of day).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endHour;

/**
 *  Required. The start hour for day and time targeting. Must be between 0
 *  (start of day) and 23 (1 hour before end of day).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startHour;

/**
 *  Required. The mechanism used to determine which timezone to use for this day
 *  and time targeting setting.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_TimeZoneResolution_TimeZoneResolutionAdvertiser
 *        Times are resolved in the time zone of the advertiser that served the
 *        ad. (Value: "TIME_ZONE_RESOLUTION_ADVERTISER")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_TimeZoneResolution_TimeZoneResolutionEndUser
 *        Times are resolved in the time zone of the user that saw the ad.
 *        (Value: "TIME_ZONE_RESOLUTION_END_USER")
 *    @arg @c kGTLRDisplayVideo_DayAndTimeAssignedTargetingOptionDetails_TimeZoneResolution_TimeZoneResolutionUnspecified
 *        Time zone resolution is either unspecific or unknown. (Value:
 *        "TIME_ZONE_RESOLUTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *timeZoneResolution;

@end


/**
 *  Request message for ManualTriggerService.DeactivateManualTrigger.
 */
@interface GTLRDisplayVideo_DeactivateManualTriggerRequest : GTLRObject
@end


/**
 *  A request listing which assigned targeting options of a given targeting type
 *  should be deleted.
 */
@interface GTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest : GTLRObject

/** Required. The assigned targeting option IDs to delete. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *assignedTargetingOptionIds;

/**
 *  Required. Identifies the type of this assigned targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAgeRange
 *        Target ads to a specific age range (for example, 18-24). (Value:
 *        "TARGETING_TYPE_AGE_RANGE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeApp
 *        Target a specific app (for example, Angry Birds). (Value:
 *        "TARGETING_TYPE_APP")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAppCategory
 *        Target an app category (for example, education or puzzle games).
 *        (Value: "TARGETING_TYPE_APP_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudienceGroup
 *        Target ads to an audience or groups of audiences. Singleton field, at
 *        most one can exist on a single Lineitem at a time. (Value:
 *        "TARGETING_TYPE_AUDIENCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAudioContentType
 *        Target ads to a specific audio content type. (Value:
 *        "TARGETING_TYPE_AUDIO_CONTENT_TYPE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeAuthorizedSellerStatus
 *        Target ads to ads.txt authorized sellers. (Value:
 *        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBrowser
 *        Target ads to specific web browsers (for example, Chrome). (Value:
 *        "TARGETING_TYPE_BROWSER")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeBusinessChain
 *        Target ads around locations of a business chain within a specific geo
 *        region. (Value: "TARGETING_TYPE_BUSINESS_CHAIN")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCarrierAndIsp
 *        Target ads to a specific network carrier or internet service provider
 *        (ISP) (for example, Comcast or Orange). (Value:
 *        "TARGETING_TYPE_CARRIER_AND_ISP")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeCategory
 *        Target ads to a specific content category (for example, arts &
 *        entertainment). (Value: "TARGETING_TYPE_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeChannel
 *        Target a channel (a custom group of related websites or apps). (Value:
 *        "TARGETING_TYPE_CHANNEL")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentDuration
 *        Target ads to a specific video content duration. (Value:
 *        "TARGETING_TYPE_CONTENT_DURATION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentGenre
 *        Target ads to a specific content genre. (Value:
 *        "TARGETING_TYPE_CONTENT_GENRE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentInstreamPosition
 *        Target video or audio ads in a specific content instream position (for
 *        example, pre-roll, mid-roll, or post-roll). (Value:
 *        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentOutstreamPosition
 *        Target ads in a specific content outstream position. (Value:
 *        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeContentStreamType
 *        Target ads to a specific video content stream type. (Value:
 *        "TARGETING_TYPE_CONTENT_STREAM_TYPE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDayAndTime
 *        Target ads during a chosen time period on a specific day. (Value:
 *        "TARGETING_TYPE_DAY_AND_TIME")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceMakeModel
 *        Target ads to a specific device make or model (for example, Roku or
 *        Samsung). (Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDeviceType
 *        Target ads to a specific device type (for example, tablet or connected
 *        TV). (Value: "TARGETING_TYPE_DEVICE_TYPE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeDigitalContentLabelExclusion
 *        Filter web sites by specific digital content label ratings (for
 *        example, DL-MA: suitable only for mature audiences). (Value:
 *        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeEnvironment
 *        Target ads to a specific environment (for example, web or app).
 *        (Value: "TARGETING_TYPE_ENVIRONMENT")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeExchange
 *        Purchase impressions from specific exchanges. (Value:
 *        "TARGETING_TYPE_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGender
 *        Target ads to a specific gender (for example, female or male). (Value:
 *        "TARGETING_TYPE_GENDER")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeGeoRegion
 *        Target ads to a specific regional location (for example, a city or
 *        state). (Value: "TARGETING_TYPE_GEO_REGION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeHouseholdIncome
 *        Target ads to a specific household income range (for example, top
 *        10%). (Value: "TARGETING_TYPE_HOUSEHOLD_INCOME")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySource
 *        Purchase impressions from specific deals and auction packages. (Value:
 *        "TARGETING_TYPE_INVENTORY_SOURCE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeInventorySourceGroup
 *        Purchase impressions from a group of deals and auction packages.
 *        (Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeKeyword
 *        Target ads to a specific keyword (for example, dog or retriever).
 *        (Value: "TARGETING_TYPE_KEYWORD")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeLanguage
 *        Target ads to a specific language (for example, English or Japanese).
 *        (Value: "TARGETING_TYPE_LANGUAGE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNativeContentPosition
 *        Target ads to a specific native content position. (Value:
 *        "TARGETING_TYPE_NATIVE_CONTENT_POSITION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeNegativeKeywordList
 *        Target ads to a specific negative keyword list. (Value:
 *        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOmid
 *        Target ads in an Open Measurement enabled inventory. (Value:
 *        "TARGETING_TYPE_OMID")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOnScreenPosition
 *        Target ads in a specific on screen position. (Value:
 *        "TARGETING_TYPE_ON_SCREEN_POSITION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeOperatingSystem
 *        Target ads to a specific operating system (for example, macOS).
 *        (Value: "TARGETING_TYPE_OPERATING_SYSTEM")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeParentalStatus
 *        Target ads to a specific parental status (for example, parent or not a
 *        parent). (Value: "TARGETING_TYPE_PARENTAL_STATUS")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypePoi
 *        Target ads around a specific point of interest, such as a notable
 *        building, a street address, or latitude/longitude coordinates. (Value:
 *        "TARGETING_TYPE_POI")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeProximityLocationList
 *        Target ads to the specified points of interest on a proximity location
 *        list. (Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeRegionalLocationList
 *        Target ads to the specified regions on a regional location list.
 *        (Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSensitiveCategoryExclusion
 *        Filter website content by sensitive categories (for example, adult).
 *        (Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeSubExchange
 *        Purchase impressions from specific sub-exchanges. (Value:
 *        "TARGETING_TYPE_SUB_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeThirdPartyVerifier
 *        Filter web sites through third party verification (for example, IAS or
 *        DoubleVerify). (Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUnspecified
 *        Default value when type is not specified or is unknown in this
 *        version. (Value: "TARGETING_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUrl
 *        Target a specific url (for example, quora.com). (Value:
 *        "TARGETING_TYPE_URL")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeUserRewardedContent
 *        Target user rewarded content for video ads. (Value:
 *        "TARGETING_TYPE_USER_REWARDED_CONTENT")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeVideoPlayerSize
 *        Target a specific video player size for video ads. (Value:
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE")
 *    @arg @c kGTLRDisplayVideo_DeleteAssignedTargetingOptionsRequest_TargetingType_TargetingTypeViewability
 *        Target ads to a specific viewability (for example, 80% viewable).
 *        (Value: "TARGETING_TYPE_VIEWABILITY")
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

@end


/**
 *  Assigned device make and model targeting option details. This will be
 *  populated in the device_make_model_details field when targeting_type is
 *  `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
 */
@interface GTLRDisplayVideo_DeviceMakeModelAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the device make and model. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable device make and model. This will be populated in the
 *  device_make_model_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
 */
@interface GTLRDisplayVideo_DeviceMakeModelTargetingOptionDetails : GTLRObject

/** Output only. The display name of the device make and model. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Targeting details for device type. This will be populated in the details
 *  field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_DEVICE_TYPE`.
 */
@interface GTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails : GTLRObject

/**
 *  The display name of the device type. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeComputer
 *        The device type is computer. (Value: "DEVICE_TYPE_COMPUTER")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeConnectedTv
 *        The device type is connected TV. (Value: "DEVICE_TYPE_CONNECTED_TV")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeSmartPhone
 *        The device type is smart phone.. (Value: "DEVICE_TYPE_SMART_PHONE")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeTablet
 *        The device type is tablet. (Value: "DEVICE_TYPE_TABLET")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeAssignedTargetingOptionDetails_DeviceType_DeviceTypeUnspecified
 *        Default value when device type is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        device type option. (Value: "DEVICE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *deviceType;

/**
 *  Output only. Bid multiplier allows you to show your ads more or less
 *  frequently based on the device type. It will apply a multiplier on the
 *  original bid price. When this field is 0, it indicates this field is not
 *  applicable instead of multiplying 0 on the original bid price. For example,
 *  if the bid price without multiplier is $10.0 and the multiplier is 1.5 for
 *  Tablet, the resulting bid price for Tablet will be $15.0. Only applicable to
 *  YouTube and Partners line items.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *youtubeAndPartnersBidMultiplier;

@end


/**
 *  Represents a targetable device type. This will be populated in the
 *  device_type_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_DEVICE_TYPE`.
 */
@interface GTLRDisplayVideo_DeviceTypeTargetingOptionDetails : GTLRObject

/**
 *  Output only. The device type that is used to be targeted.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeComputer
 *        The device type is computer. (Value: "DEVICE_TYPE_COMPUTER")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeConnectedTv
 *        The device type is connected TV. (Value: "DEVICE_TYPE_CONNECTED_TV")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeSmartPhone
 *        The device type is smart phone.. (Value: "DEVICE_TYPE_SMART_PHONE")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeTablet
 *        The device type is tablet. (Value: "DEVICE_TYPE_TABLET")
 *    @arg @c kGTLRDisplayVideo_DeviceTypeTargetingOptionDetails_DeviceType_DeviceTypeUnspecified
 *        Default value when device type is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        device type option. (Value: "DEVICE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *deviceType;

@end


/**
 *  Targeting details for digital content label. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.
 */
@interface GTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. The display name of the digital content label rating tier to be
 *  EXCLUDED.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierFamilies
 *        Content suitable for family audiences. It is a subset of
 *        CONTENT_RATING_TIER_GENERAL. Only applicable to YouTube and Partners
 *        line items. (Value: "CONTENT_RATING_TIER_FAMILIES")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierGeneral
 *        Content suitable for general audiences. (Value:
 *        "CONTENT_RATING_TIER_GENERAL")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierMature
 *        Content suitable only for mature audiences. (Value:
 *        "CONTENT_RATING_TIER_MATURE")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierParentalGuidance
 *        Content suitable for most audiences with parental guidance. (Value:
 *        "CONTENT_RATING_TIER_PARENTAL_GUIDANCE")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierTeens
 *        Content suitable for teen and older audiences. (Value:
 *        "CONTENT_RATING_TIER_TEENS")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierUnrated
 *        Content that has not been labeled. (Value:
 *        "CONTENT_RATING_TIER_UNRATED")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelAssignedTargetingOptionDetails_ExcludedContentRatingTier_ContentRatingTierUnspecified
 *        Content label is not specified in this version. This enum is a place
 *        holder for a default value and does not represent a real content
 *        rating. (Value: "CONTENT_RATING_TIER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedContentRatingTier;

@end


/**
 *  Represents a targetable digital content label rating tier. This will be
 *  populated in the digital_content_label_details field of the TargetingOption
 *  when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.
 */
@interface GTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails : GTLRObject

/**
 *  Output only. An enum for the content label brand safety tiers.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierFamilies
 *        Content suitable for family audiences. It is a subset of
 *        CONTENT_RATING_TIER_GENERAL. Only applicable to YouTube and Partners
 *        line items. (Value: "CONTENT_RATING_TIER_FAMILIES")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierGeneral
 *        Content suitable for general audiences. (Value:
 *        "CONTENT_RATING_TIER_GENERAL")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierMature
 *        Content suitable only for mature audiences. (Value:
 *        "CONTENT_RATING_TIER_MATURE")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierParentalGuidance
 *        Content suitable for most audiences with parental guidance. (Value:
 *        "CONTENT_RATING_TIER_PARENTAL_GUIDANCE")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierTeens
 *        Content suitable for teen and older audiences. (Value:
 *        "CONTENT_RATING_TIER_TEENS")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierUnrated
 *        Content that has not been labeled. (Value:
 *        "CONTENT_RATING_TIER_UNRATED")
 *    @arg @c kGTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails_ContentRatingTier_ContentRatingTierUnspecified
 *        Content label is not specified in this version. This enum is a place
 *        holder for a default value and does not represent a real content
 *        rating. (Value: "CONTENT_RATING_TIER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentRatingTier;

@end


/**
 *  Dimensions.
 */
@interface GTLRDisplayVideo_Dimensions : GTLRObject

/**
 *  The height in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *heightPixels;

/**
 *  The width in pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *widthPixels;

@end


/**
 *  Details of DoubleVerify settings.
 */
@interface GTLRDisplayVideo_DoubleVerify : GTLRObject

/** Avoid bidding on apps with the star ratings. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DoubleVerifyAppStarRating *appStarRating;

/** Avoid bidding on apps with the age rating. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *avoidedAgeRatings;

/** DV Brand Safety Controls. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DoubleVerifyBrandSafetyCategories *brandSafetyCategories;

/**
 *  The custom segment ID provided by DoubleVerify. The ID must start with "51"
 *  and consist of eight digits. Custom segment ID cannot be specified along
 *  with any of the following fields: * brand_safety_categories *
 *  avoided_age_ratings * app_star_rating * fraud_invalid_traffic
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customSegmentId;

/** Display viewability settings (applicable to display line items only). */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DoubleVerifyDisplayViewability *displayViewability;

/** Avoid Sites and Apps with historical Fraud & IVT Rates. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic *fraudInvalidTraffic;

/** Video viewability settings (applicable to video line items only). */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DoubleVerifyVideoViewability *videoViewability;

@end


/**
 *  Details of DoubleVerify star ratings settings.
 */
@interface GTLRDisplayVideo_DoubleVerifyAppStarRating : GTLRObject

/**
 *  Avoid bidding on apps with the star ratings.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate1Point5Less
 *        Official Apps with rating < 1.5 Stars. (Value:
 *        "APP_STAR_RATE_1_POINT_5_LESS")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate2Less
 *        Official Apps with rating < 2 Stars. (Value: "APP_STAR_RATE_2_LESS")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate2Point5Less
 *        Official Apps with rating < 2.5 Stars. (Value:
 *        "APP_STAR_RATE_2_POINT_5_LESS")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate3Less
 *        Official Apps with rating < 3 Stars. (Value: "APP_STAR_RATE_3_LESS")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate3Point5Less
 *        Official Apps with rating < 3.5 Stars. (Value:
 *        "APP_STAR_RATE_3_POINT_5_LESS")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate4Less
 *        Official Apps with rating < 4 Stars. (Value: "APP_STAR_RATE_4_LESS")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRate4Point5Less
 *        Official Apps with rating < 4.5 Stars. (Value:
 *        "APP_STAR_RATE_4_POINT_5_LESS")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyAppStarRating_AvoidedStarRating_AppStarRateUnspecified
 *        This enum is only a placeholder and it doesn't specify any app star
 *        rating options. (Value: "APP_STAR_RATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *avoidedStarRating;

/**
 *  Avoid bidding on apps with insufficient star ratings.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *avoidInsufficientStarRating;

@end


/**
 *  Settings for brand safety controls.
 */
@interface GTLRDisplayVideo_DoubleVerifyBrandSafetyCategories : GTLRObject

/** Brand safety high severity avoidance categories. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *avoidedHighSeverityCategories;

/** Brand safety medium severity avoidance categories. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *avoidedMediumSeverityCategories;

/**
 *  Unknown or unrateable.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *avoidUnknownBrandSafetyCategory;

@end


/**
 *  Details of DoubleVerify display viewability settings.
 */
@interface GTLRDisplayVideo_DoubleVerifyDisplayViewability : GTLRObject

/**
 *  Target web and app inventory to maximize IAB viewable rate.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate30PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 30% or
 *        higher. (Value: "IAB_VIEWED_RATE_30_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate40PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 40% or
 *        higher. (Value: "IAB_VIEWED_RATE_40_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate50PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 50% or
 *        higher. (Value: "IAB_VIEWED_RATE_50_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate55PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 55% or
 *        higher. (Value: "IAB_VIEWED_RATE_55_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate60PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 60% or
 *        higher. (Value: "IAB_VIEWED_RATE_60_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate65PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 65% or
 *        higher. (Value: "IAB_VIEWED_RATE_65_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate70PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 70% or
 *        higher. (Value: "IAB_VIEWED_RATE_70_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate75PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 75% or
 *        higher. (Value: "IAB_VIEWED_RATE_75_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRate80PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 80% or
 *        higher. (Value: "IAB_VIEWED_RATE_80_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_Iab_IabViewedRateUnspecified
 *        This enum is only a placeholder and it doesn't specify any IAB viewed
 *        rate options. (Value: "IAB_VIEWED_RATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *iab;

/**
 *  Target web and app inventory to maximize 100% viewable duration.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDuration10Sec
 *        Target web and app inventory to maximize 100% viewable duration 10
 *        seconds or more. (Value: "AVERAGE_VIEW_DURATION_10_SEC")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDuration15Sec
 *        Target web and app inventory to maximize 100% viewable duration 15
 *        seconds or more. (Value: "AVERAGE_VIEW_DURATION_15_SEC")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDuration5Sec
 *        Target web and app inventory to maximize 100% viewable duration 5
 *        seconds or more. (Value: "AVERAGE_VIEW_DURATION_5_SEC")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyDisplayViewability_ViewableDuring_AverageViewDurationUnspecified
 *        This enum is only a placeholder and it doesn't specify any average
 *        view duration options. (Value: "AVERAGE_VIEW_DURATION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *viewableDuring;

@end


/**
 *  DoubleVerify Fraud & Invalid Traffic settings.
 */
@interface GTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic : GTLRObject

/**
 *  Avoid Sites and Apps with historical Fraud & IVT.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud10
 *        10% or Higher Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_10")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud100
 *        100% Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_100")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud2
 *        2% or Higher Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_2")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud25
 *        25% or Higher Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_25")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud4
 *        4% or Higher Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_4")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud50
 *        50% or Higher Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_50")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud6
 *        6% or Higher Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_6")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_AdImpressionFraud8
 *        8% or Higher Fraud & IVT. (Value: "AD_IMPRESSION_FRAUD_8")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyFraudInvalidTraffic_AvoidedFraudOption_FraudUnspecified
 *        This enum is only a placeholder and it doesn't specify any fraud and
 *        invalid traffic options. (Value: "FRAUD_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *avoidedFraudOption;

/**
 *  Insufficient Historical Fraud & IVT Stats.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *avoidInsufficientOption;

@end


/**
 *  Details of DoubleVerify video viewability settings.
 */
@interface GTLRDisplayVideo_DoubleVerifyVideoViewability : GTLRObject

/**
 *  Target inventory to maximize impressions with 400x300 or greater player
 *  size.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x30025
 *        Sites with 25%+ of impressions. (Value: "PLAYER_SIZE_400X300_25")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x3005
 *        Sites with 5%+ of impressions. (Value: "PLAYER_SIZE_400X300_5")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x30070
 *        Sites with 70%+ of impressions. (Value: "PLAYER_SIZE_400X300_70")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x30095
 *        Sites with 95%+ of impressions. (Value: "PLAYER_SIZE_400X300_95")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_PlayerImpressionRate_PlayerSize400x300Unspecified
 *        This enum is only a placeholder and it doesn't specify any impressions
 *        options. (Value: "PLAYER_SIZE_400X300_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *playerImpressionRate;

/**
 *  Target web inventory to maximize IAB viewable rate.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability30PercentHihger
 *        Target web and app inventory to maximize IAB viewable rate 30% or
 *        higher. (Value: "IAB_VIEWABILITY_30_PERCENT_HIHGER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability40PercentHihger
 *        Target web and app inventory to maximize IAB viewable rate 40% or
 *        higher. (Value: "IAB_VIEWABILITY_40_PERCENT_HIHGER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability50PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 50% or
 *        higher. (Value: "IAB_VIEWABILITY_50_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability55PercentHihger
 *        Target web and app inventory to maximize IAB viewable rate 55% or
 *        higher. (Value: "IAB_VIEWABILITY_55_PERCENT_HIHGER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability60PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 60% or
 *        higher. (Value: "IAB_VIEWABILITY_60_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability65PercentHihger
 *        Target web and app inventory to maximize IAB viewable rate 65% or
 *        higher. (Value: "IAB_VIEWABILITY_65_PERCENT_HIHGER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability70PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 70% or
 *        higher. (Value: "IAB_VIEWABILITY_70_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability75PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 75% or
 *        higher. (Value: "IAB_VIEWABILITY_75_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_IabViewability80PercentHigher
 *        Target web and app inventory to maximize IAB viewable rate 80% or
 *        higher. (Value: "IAB_VIEWABILITY_80_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoIab_VideoIabUnspecified
 *        This enum is only a placeholder and it doesn't specify any video IAB
 *        viewable rate options. (Value: "VIDEO_IAB_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *videoIab;

/**
 *  Target web inventory to maximize fully viewable rate.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_VideoViewableRateUnspecified
 *        This enum is only a placeholder and it doesn't specify any video
 *        viewable rate options. (Value: "VIDEO_VIEWABLE_RATE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance10PercentHigher
 *        Target web inventory to maximize fully viewable rate 10% or higher.
 *        (Value: "VIEWED_PERFORMANCE_10_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance20PercentHigher
 *        Target web inventory to maximize fully viewable rate 20% or higher.
 *        (Value: "VIEWED_PERFORMANCE_20_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance25PercentHigher
 *        Target web inventory to maximize fully viewable rate 25% or higher.
 *        (Value: "VIEWED_PERFORMANCE_25_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance30PercentHigher
 *        Target web inventory to maximize fully viewable rate 30% or higher.
 *        (Value: "VIEWED_PERFORMANCE_30_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance35PercentHigher
 *        Target web inventory to maximize fully viewable rate 35% or higher.
 *        (Value: "VIEWED_PERFORMANCE_35_PERCENT_HIGHER")
 *    @arg @c kGTLRDisplayVideo_DoubleVerifyVideoViewability_VideoViewableRate_ViewedPerformance40PercentHigher
 *        Target web inventory to maximize fully viewable rate 40% or higher.
 *        (Value: "VIEWED_PERFORMANCE_40_PERCENT_HIGHER")
 */
@property(nonatomic, copy, nullable) NSString *videoViewableRate;

@end


/**
 *  Request message for LineItemService.DuplicateLineItem.
 */
@interface GTLRDisplayVideo_DuplicateLineItemRequest : GTLRObject

/**
 *  The display name of the new line item. Must be UTF-8 encoded with a maximum
 *  size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *targetDisplayName;

@end


/**
 *  GTLRDisplayVideo_DuplicateLineItemResponse
 */
@interface GTLRDisplayVideo_DuplicateLineItemResponse : GTLRObject

/**
 *  The ID of the created line item.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *duplicateLineItemId;

@end


/**
 *  Request message for
 *  FirstAndThirdPartyAudienceService.EditCustomerMatchMembers.
 */
@interface GTLRDisplayVideo_EditCustomerMatchMembersRequest : GTLRObject

/**
 *  Input only. A list of contact information to define the members to be added.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContactInfoList *addedContactInfoList;

/**
 *  Input only. A list of mobile device IDs to define the members to be added.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_MobileDeviceIdList *addedMobileDeviceIdList;

/**
 *  Required. The ID of the owner advertiser of the updated Customer Match
 *  FirstAndThirdPartyAudience.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

@end


/**
 *  The response of FirstAndThirdPartyAudienceService.EditCustomerMatchMembers.
 */
@interface GTLRDisplayVideo_EditCustomerMatchMembersResponse : GTLRObject

/**
 *  Required. The ID of the updated Customer Match FirstAndThirdPartyAudience.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *firstAndThirdPartyAudienceId;

@end


/**
 *  Request message for GuaranteedOrderService.EditGuaranteedOrderReadAccessors.
 */
@interface GTLRDisplayVideo_EditGuaranteedOrderReadAccessorsRequest : GTLRObject

/**
 *  The advertisers to add as read accessors to the guaranteed order.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *addedAdvertisers;

/**
 *  Required. The partner context in which the change is being made.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

/**
 *  Whether to give all advertisers of the read/write accessor partner read
 *  access to the guaranteed order. Only applicable if read_write_partner_id is
 *  set in the guaranteed order.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readAccessInherited;

/**
 *  The advertisers to remove as read accessors to the guaranteed order.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *removedAdvertisers;

@end


/**
 *  GTLRDisplayVideo_EditGuaranteedOrderReadAccessorsResponse
 */
@interface GTLRDisplayVideo_EditGuaranteedOrderReadAccessorsResponse : GTLRObject

/**
 *  Whether all advertisers of read_write_partner_id have read access to the
 *  guaranteed order.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readAccessInherited;

/**
 *  The IDs of advertisers with read access to the guaranteed order.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *readAdvertiserIds;

@end


/**
 *  Request message for
 *  InventorySourceService.EditInventorySourceReadWriteAccessors.
 */
@interface GTLRDisplayVideo_EditInventorySourceReadWriteAccessorsRequest : GTLRObject

/**
 *  The advertisers to add or remove from the list of advertisers that have
 *  read/write access to the inventory source. This change will remove an
 *  existing partner read/write accessor.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate *advertisersUpdate;

/**
 *  Set the partner context as read/write accessor of the inventory source. This
 *  will remove all other current read/write advertiser accessors.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *assignPartner;

/**
 *  Required. The partner context by which the accessors change is being made.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

@end


/**
 *  Update to the list of advertisers with read/write access to the inventory
 *  source.
 */
@interface GTLRDisplayVideo_EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate : GTLRObject

/**
 *  The advertisers to add.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *addedAdvertisers;

/**
 *  The advertisers to remove.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *removedAdvertisers;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRDisplayVideo_Empty : GTLRObject
@end


/**
 *  Assigned environment targeting option details. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_ENVIRONMENT`.
 */
@interface GTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails : GTLRObject

/**
 *  The serving environment. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentApp
 *        Target inventory displayed in apps. (Value: "ENVIRONMENT_APP")
 *    @arg @c kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentUnspecified
 *        Default value when environment is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        environment option. (Value: "ENVIRONMENT_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentWebNotOptimized
 *        Target inventory displayed in browsers. This includes inventory that
 *        was not designed for the device but viewed on it, such as websites
 *        optimized for desktop but viewed on a mobile device.
 *        ENVIRONMENT_WEB_OPTIMIZED should be targeted prior to the addition of
 *        this targeting option. (Value: "ENVIRONMENT_WEB_NOT_OPTIMIZED")
 *    @arg @c kGTLRDisplayVideo_EnvironmentAssignedTargetingOptionDetails_Environment_EnvironmentWebOptimized
 *        Target inventory displayed in browsers. This includes inventory that
 *        was designed for the device it was viewed on, such as mobile websites
 *        viewed on a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted,
 *        should be deleted prior to the deletion of this targeting option.
 *        (Value: "ENVIRONMENT_WEB_OPTIMIZED")
 */
@property(nonatomic, copy, nullable) NSString *environment;

@end


/**
 *  Represents a targetable environment. This will be populated in the
 *  environment_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_ENVIRONMENT`.
 */
@interface GTLRDisplayVideo_EnvironmentTargetingOptionDetails : GTLRObject

/**
 *  Output only. The serving environment.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentApp
 *        Target inventory displayed in apps. (Value: "ENVIRONMENT_APP")
 *    @arg @c kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentUnspecified
 *        Default value when environment is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        environment option. (Value: "ENVIRONMENT_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentWebNotOptimized
 *        Target inventory displayed in browsers. This includes inventory that
 *        was not designed for the device but viewed on it, such as websites
 *        optimized for desktop but viewed on a mobile device.
 *        ENVIRONMENT_WEB_OPTIMIZED should be targeted prior to the addition of
 *        this targeting option. (Value: "ENVIRONMENT_WEB_NOT_OPTIMIZED")
 *    @arg @c kGTLRDisplayVideo_EnvironmentTargetingOptionDetails_Environment_EnvironmentWebOptimized
 *        Target inventory displayed in browsers. This includes inventory that
 *        was designed for the device it was viewed on, such as mobile websites
 *        viewed on a mobile device. ENVIRONMENT_WEB_NOT_OPTIMIZED, if targeted,
 *        should be deleted prior to the deletion of this targeting option.
 *        (Value: "ENVIRONMENT_WEB_OPTIMIZED")
 */
@property(nonatomic, copy, nullable) NSString *environment;

@end


/**
 *  Details for assigned exchange targeting option. This will be populated in
 *  the details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_EXCHANGE`.
 */
@interface GTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. The enum value for the exchange.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdform
 *        Adform. (Value: "EXCHANGE_ADFORM")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdmeta
 *        Admeta. (Value: "EXCHANGE_ADMETA")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdmixer
 *        Admixer. (Value: "EXCHANGE_ADMIXER")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdsmogo
 *        AdsMogo. (Value: "EXCHANGE_ADSMOGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAdswizz
 *        AdsWizz. (Value: "EXCHANGE_ADSWIZZ")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAja
 *        Aja. (Value: "EXCHANGE_AJA")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeAppnexus
 *        AppNexus. (Value: "EXCHANGE_APPNEXUS")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeBidswitch
 *        BidSwitch. (Value: "EXCHANGE_BIDSWITCH")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeBrightroll
 *        BrightRoll Exchange for Video from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeBrightrollDisplay
 *        BrightRoll Exchange for Display from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeCadreon
 *        Cadreon. (Value: "EXCHANGE_CADREON")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeDailymotion
 *        Dailymotion. (Value: "EXCHANGE_DAILYMOTION")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeDax
 *        DAX. (Value: "EXCHANGE_DAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFive
 *        Five. (Value: "EXCHANGE_FIVE")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFluct
 *        Fluct. (Value: "EXCHANGE_FLUCT")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFreewheel
 *        FreeWheel SSP. (Value: "EXCHANGE_FREEWHEEL")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeFyber
 *        Fyber. (Value: "EXCHANGE_FYBER")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeGeniee
 *        Geniee. (Value: "EXCHANGE_GENIEE")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeGoogleAdManager
 *        Google Ad Manager. (Value: "EXCHANGE_GOOGLE_AD_MANAGER")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeGumgum
 *        GumGum. (Value: "EXCHANGE_GUMGUM")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeIbillboard
 *        iBILLBOARD. (Value: "EXCHANGE_IBILLBOARD")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeImobile
 *        i-mobile. (Value: "EXCHANGE_IMOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeImproveDigital
 *        Improve Digital. (Value: "EXCHANGE_IMPROVE_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeIndex
 *        Index Exchange. (Value: "EXCHANGE_INDEX")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeInmobi
 *        InMobi. (Value: "EXCHANGE_INMOBI")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeKargo
 *        Kargo. (Value: "EXCHANGE_KARGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeMedianet
 *        Media.net. (Value: "EXCHANGE_MEDIANET")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeMicroad
 *        MicroAd. (Value: "EXCHANGE_MICROAD")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeMopub
 *        MoPub. (Value: "EXCHANGE_MOPUB")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeNend
 *        Nend. (Value: "EXCHANGE_NEND")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeNexstarDigital
 *        Nexstar Digital. (Value: "EXCHANGE_NEXSTAR_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOneByAolDisplay
 *        ONE by AOL: Display Market Place. (Value:
 *        "EXCHANGE_ONE_BY_AOL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOneByAolMobile
 *        ONE by AOL: Mobile. (Value: "EXCHANGE_ONE_BY_AOL_MOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOneByAolVideo
 *        ONE by AOL: Video. (Value: "EXCHANGE_ONE_BY_AOL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOoyala
 *        Ooyala. (Value: "EXCHANGE_OOYALA")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOpen8
 *        Open8. (Value: "EXCHANGE_OPEN8")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeOpenx
 *        OpenX. (Value: "EXCHANGE_OPENX")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePermodo
 *        Permodo. (Value: "EXCHANGE_PERMODO")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePlatformid
 *        PlatformId. (Value: "EXCHANGE_PLATFORMID")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePlatformone
 *        Platform One. (Value: "EXCHANGE_PLATFORMONE")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePubmatic
 *        PubMatic. (Value: "EXCHANGE_PUBMATIC")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangePulsepoint
 *        PulsePoint. (Value: "EXCHANGE_PULSEPOINT")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeRedForPublishers
 *        Red For Publishers. (Value: "EXCHANGE_RED_FOR_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeRevenuemax
 *        RevenueMax. (Value: "EXCHANGE_REVENUEMAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeRubicon
 *        Rubicon. (Value: "EXCHANGE_RUBICON")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSharethrough
 *        Sharethrough. (Value: "EXCHANGE_SHARETHROUGH")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmaato
 *        Smaato. (Value: "EXCHANGE_SMAATO")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmartclip
 *        SmartClip. (Value: "EXCHANGE_SMARTCLIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmartrtb
 *        SmartRTB+. (Value: "EXCHANGE_SMARTRTB")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSmartstreamtv
 *        SmartstreamTv. (Value: "EXCHANGE_SMARTSTREAMTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSoundcast
 *        SoundCast. (Value: "EXCHANGE_SOUNDCAST")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSovrn
 *        Sovrn. (Value: "EXCHANGE_SOVRN")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSpotxchange
 *        SpotXchange. (Value: "EXCHANGE_SPOTXCHANGE")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeStroer
 *        Ströer SSP. (Value: "EXCHANGE_STROER")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeSupership
 *        Supership. (Value: "EXCHANGE_SUPERSHIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTaboola
 *        Taboola. (Value: "EXCHANGE_TABOOLA")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTapjoy
 *        Tapjoy. (Value: "EXCHANGE_TAPJOY")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTeadstv
 *        TeadsTv. (Value: "EXCHANGE_TEADSTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTelaria
 *        Telaria. (Value: "EXCHANGE_TELARIA")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTriplelift
 *        TripleLift. (Value: "EXCHANGE_TRIPLELIFT")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTriton
 *        Triton. (Value: "EXCHANGE_TRITON")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeTvn
 *        TVN. (Value: "EXCHANGE_TVN")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeUnited
 *        United. (Value: "EXCHANGE_UNITED")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeUnrulyx
 *        UnrulyX. (Value: "EXCHANGE_UNRULYX")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeUnspecified
 *        Exchange is not specified or is unknown in this version. (Value:
 *        "EXCHANGE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeVistar
 *        Vistar. (Value: "EXCHANGE_VISTAR")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeWaze
 *        Waze. (Value: "EXCHANGE_WAZE")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeYieldlab
 *        Yieldlab. (Value: "EXCHANGE_YIELDLAB")
 *    @arg @c kGTLRDisplayVideo_ExchangeAssignedTargetingOptionDetails_Exchange_ExchangeYieldmo
 *        Yieldmo. (Value: "EXCHANGE_YIELDMO")
 */
@property(nonatomic, copy, nullable) NSString *exchange;

@end


/**
 *  Settings that control which exchanges are enabled for a partner.
 */
@interface GTLRDisplayVideo_ExchangeConfig : GTLRObject

/**
 *  All enabled exchanges in the partner. Duplicate enabled exchanges will be
 *  ignored.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ExchangeConfigEnabledExchange *> *enabledExchanges;

@end


/**
 *  An enabled exchange in the partner.
 */
@interface GTLRDisplayVideo_ExchangeConfigEnabledExchange : GTLRObject

/**
 *  The enabled exchange.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdform
 *        Adform. (Value: "EXCHANGE_ADFORM")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdmeta
 *        Admeta. (Value: "EXCHANGE_ADMETA")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdmixer
 *        Admixer. (Value: "EXCHANGE_ADMIXER")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdsmogo
 *        AdsMogo. (Value: "EXCHANGE_ADSMOGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAdswizz
 *        AdsWizz. (Value: "EXCHANGE_ADSWIZZ")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAja
 *        Aja. (Value: "EXCHANGE_AJA")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeAppnexus
 *        AppNexus. (Value: "EXCHANGE_APPNEXUS")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeBidswitch
 *        BidSwitch. (Value: "EXCHANGE_BIDSWITCH")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeBrightroll
 *        BrightRoll Exchange for Video from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeBrightrollDisplay
 *        BrightRoll Exchange for Display from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeCadreon
 *        Cadreon. (Value: "EXCHANGE_CADREON")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeDailymotion
 *        Dailymotion. (Value: "EXCHANGE_DAILYMOTION")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeDax
 *        DAX. (Value: "EXCHANGE_DAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFive
 *        Five. (Value: "EXCHANGE_FIVE")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFluct
 *        Fluct. (Value: "EXCHANGE_FLUCT")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFreewheel
 *        FreeWheel SSP. (Value: "EXCHANGE_FREEWHEEL")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeFyber
 *        Fyber. (Value: "EXCHANGE_FYBER")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeGeniee
 *        Geniee. (Value: "EXCHANGE_GENIEE")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeGoogleAdManager
 *        Google Ad Manager. (Value: "EXCHANGE_GOOGLE_AD_MANAGER")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeGumgum
 *        GumGum. (Value: "EXCHANGE_GUMGUM")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeIbillboard
 *        iBILLBOARD. (Value: "EXCHANGE_IBILLBOARD")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeImobile
 *        i-mobile. (Value: "EXCHANGE_IMOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeImproveDigital
 *        Improve Digital. (Value: "EXCHANGE_IMPROVE_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeIndex
 *        Index Exchange. (Value: "EXCHANGE_INDEX")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeInmobi
 *        InMobi. (Value: "EXCHANGE_INMOBI")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeKargo
 *        Kargo. (Value: "EXCHANGE_KARGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeMedianet
 *        Media.net. (Value: "EXCHANGE_MEDIANET")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeMicroad
 *        MicroAd. (Value: "EXCHANGE_MICROAD")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeMopub
 *        MoPub. (Value: "EXCHANGE_MOPUB")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeNend
 *        Nend. (Value: "EXCHANGE_NEND")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeNexstarDigital
 *        Nexstar Digital. (Value: "EXCHANGE_NEXSTAR_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOneByAolDisplay
 *        ONE by AOL: Display Market Place. (Value:
 *        "EXCHANGE_ONE_BY_AOL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOneByAolMobile
 *        ONE by AOL: Mobile. (Value: "EXCHANGE_ONE_BY_AOL_MOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOneByAolVideo
 *        ONE by AOL: Video. (Value: "EXCHANGE_ONE_BY_AOL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOoyala
 *        Ooyala. (Value: "EXCHANGE_OOYALA")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOpen8
 *        Open8. (Value: "EXCHANGE_OPEN8")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeOpenx
 *        OpenX. (Value: "EXCHANGE_OPENX")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePermodo
 *        Permodo. (Value: "EXCHANGE_PERMODO")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePlatformid
 *        PlatformId. (Value: "EXCHANGE_PLATFORMID")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePlatformone
 *        Platform One. (Value: "EXCHANGE_PLATFORMONE")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePubmatic
 *        PubMatic. (Value: "EXCHANGE_PUBMATIC")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangePulsepoint
 *        PulsePoint. (Value: "EXCHANGE_PULSEPOINT")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeRedForPublishers
 *        Red For Publishers. (Value: "EXCHANGE_RED_FOR_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeRevenuemax
 *        RevenueMax. (Value: "EXCHANGE_REVENUEMAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeRubicon
 *        Rubicon. (Value: "EXCHANGE_RUBICON")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSharethrough
 *        Sharethrough. (Value: "EXCHANGE_SHARETHROUGH")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmaato
 *        Smaato. (Value: "EXCHANGE_SMAATO")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmartclip
 *        SmartClip. (Value: "EXCHANGE_SMARTCLIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmartrtb
 *        SmartRTB+. (Value: "EXCHANGE_SMARTRTB")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSmartstreamtv
 *        SmartstreamTv. (Value: "EXCHANGE_SMARTSTREAMTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSoundcast
 *        SoundCast. (Value: "EXCHANGE_SOUNDCAST")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSovrn
 *        Sovrn. (Value: "EXCHANGE_SOVRN")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSpotxchange
 *        SpotXchange. (Value: "EXCHANGE_SPOTXCHANGE")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeStroer
 *        Ströer SSP. (Value: "EXCHANGE_STROER")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeSupership
 *        Supership. (Value: "EXCHANGE_SUPERSHIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTaboola
 *        Taboola. (Value: "EXCHANGE_TABOOLA")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTapjoy
 *        Tapjoy. (Value: "EXCHANGE_TAPJOY")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTeadstv
 *        TeadsTv. (Value: "EXCHANGE_TEADSTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTelaria
 *        Telaria. (Value: "EXCHANGE_TELARIA")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTriplelift
 *        TripleLift. (Value: "EXCHANGE_TRIPLELIFT")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTriton
 *        Triton. (Value: "EXCHANGE_TRITON")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeTvn
 *        TVN. (Value: "EXCHANGE_TVN")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeUnited
 *        United. (Value: "EXCHANGE_UNITED")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeUnrulyx
 *        UnrulyX. (Value: "EXCHANGE_UNRULYX")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeUnspecified
 *        Exchange is not specified or is unknown in this version. (Value:
 *        "EXCHANGE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeVistar
 *        Vistar. (Value: "EXCHANGE_VISTAR")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeWaze
 *        Waze. (Value: "EXCHANGE_WAZE")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeYieldlab
 *        Yieldlab. (Value: "EXCHANGE_YIELDLAB")
 *    @arg @c kGTLRDisplayVideo_ExchangeConfigEnabledExchange_Exchange_ExchangeYieldmo
 *        Yieldmo. (Value: "EXCHANGE_YIELDMO")
 */
@property(nonatomic, copy, nullable) NSString *exchange;

/**
 *  Output only. Agency ID of Google Ad Manager. The field is only relevant when
 *  Google Ad Manager is the enabled exchange.
 */
@property(nonatomic, copy, nullable) NSString *googleAdManagerAgencyId;

/**
 *  Output only. Network ID of Google Ad Manager. The field is only relevant
 *  when Google Ad Manager is the enabled exchange.
 */
@property(nonatomic, copy, nullable) NSString *googleAdManagerBuyerNetworkId;

/** Output only. Seat ID of the enabled exchange. */
@property(nonatomic, copy, nullable) NSString *seatId;

@end


/**
 *  Exchange review status for the creative.
 */
@interface GTLRDisplayVideo_ExchangeReviewStatus : GTLRObject

/**
 *  The exchange reviewing the creative.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdform
 *        Adform. (Value: "EXCHANGE_ADFORM")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdmeta
 *        Admeta. (Value: "EXCHANGE_ADMETA")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdmixer
 *        Admixer. (Value: "EXCHANGE_ADMIXER")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdsmogo
 *        AdsMogo. (Value: "EXCHANGE_ADSMOGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAdswizz
 *        AdsWizz. (Value: "EXCHANGE_ADSWIZZ")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAja Aja.
 *        (Value: "EXCHANGE_AJA")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeAppnexus
 *        AppNexus. (Value: "EXCHANGE_APPNEXUS")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeBidswitch
 *        BidSwitch. (Value: "EXCHANGE_BIDSWITCH")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeBrightroll
 *        BrightRoll Exchange for Video from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeBrightrollDisplay
 *        BrightRoll Exchange for Display from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeCadreon
 *        Cadreon. (Value: "EXCHANGE_CADREON")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeDailymotion
 *        Dailymotion. (Value: "EXCHANGE_DAILYMOTION")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeDax DAX.
 *        (Value: "EXCHANGE_DAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFive Five.
 *        (Value: "EXCHANGE_FIVE")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFluct
 *        Fluct. (Value: "EXCHANGE_FLUCT")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFreewheel
 *        FreeWheel SSP. (Value: "EXCHANGE_FREEWHEEL")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeFyber
 *        Fyber. (Value: "EXCHANGE_FYBER")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeGeniee
 *        Geniee. (Value: "EXCHANGE_GENIEE")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeGoogleAdManager
 *        Google Ad Manager. (Value: "EXCHANGE_GOOGLE_AD_MANAGER")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeGumgum
 *        GumGum. (Value: "EXCHANGE_GUMGUM")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeIbillboard
 *        iBILLBOARD. (Value: "EXCHANGE_IBILLBOARD")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeImobile
 *        i-mobile. (Value: "EXCHANGE_IMOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeImproveDigital
 *        Improve Digital. (Value: "EXCHANGE_IMPROVE_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeIndex
 *        Index Exchange. (Value: "EXCHANGE_INDEX")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeInmobi
 *        InMobi. (Value: "EXCHANGE_INMOBI")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeKargo
 *        Kargo. (Value: "EXCHANGE_KARGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeMedianet
 *        Media.net. (Value: "EXCHANGE_MEDIANET")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeMicroad
 *        MicroAd. (Value: "EXCHANGE_MICROAD")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeMopub
 *        MoPub. (Value: "EXCHANGE_MOPUB")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeNend Nend.
 *        (Value: "EXCHANGE_NEND")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeNexstarDigital
 *        Nexstar Digital. (Value: "EXCHANGE_NEXSTAR_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOneByAolDisplay
 *        ONE by AOL: Display Market Place. (Value:
 *        "EXCHANGE_ONE_BY_AOL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOneByAolMobile
 *        ONE by AOL: Mobile. (Value: "EXCHANGE_ONE_BY_AOL_MOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOneByAolVideo
 *        ONE by AOL: Video. (Value: "EXCHANGE_ONE_BY_AOL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOoyala
 *        Ooyala. (Value: "EXCHANGE_OOYALA")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOpen8
 *        Open8. (Value: "EXCHANGE_OPEN8")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeOpenx
 *        OpenX. (Value: "EXCHANGE_OPENX")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePermodo
 *        Permodo. (Value: "EXCHANGE_PERMODO")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePlatformid
 *        PlatformId. (Value: "EXCHANGE_PLATFORMID")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePlatformone
 *        Platform One. (Value: "EXCHANGE_PLATFORMONE")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePubmatic
 *        PubMatic. (Value: "EXCHANGE_PUBMATIC")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangePulsepoint
 *        PulsePoint. (Value: "EXCHANGE_PULSEPOINT")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeRedForPublishers
 *        Red For Publishers. (Value: "EXCHANGE_RED_FOR_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeRevenuemax
 *        RevenueMax. (Value: "EXCHANGE_REVENUEMAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeRubicon
 *        Rubicon. (Value: "EXCHANGE_RUBICON")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSharethrough
 *        Sharethrough. (Value: "EXCHANGE_SHARETHROUGH")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmaato
 *        Smaato. (Value: "EXCHANGE_SMAATO")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmartclip
 *        SmartClip. (Value: "EXCHANGE_SMARTCLIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmartrtb
 *        SmartRTB+. (Value: "EXCHANGE_SMARTRTB")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSmartstreamtv
 *        SmartstreamTv. (Value: "EXCHANGE_SMARTSTREAMTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSoundcast
 *        SoundCast. (Value: "EXCHANGE_SOUNDCAST")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSovrn
 *        Sovrn. (Value: "EXCHANGE_SOVRN")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSpotxchange
 *        SpotXchange. (Value: "EXCHANGE_SPOTXCHANGE")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeStroer
 *        Ströer SSP. (Value: "EXCHANGE_STROER")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeSupership
 *        Supership. (Value: "EXCHANGE_SUPERSHIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTaboola
 *        Taboola. (Value: "EXCHANGE_TABOOLA")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTapjoy
 *        Tapjoy. (Value: "EXCHANGE_TAPJOY")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTeadstv
 *        TeadsTv. (Value: "EXCHANGE_TEADSTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTelaria
 *        Telaria. (Value: "EXCHANGE_TELARIA")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTriplelift
 *        TripleLift. (Value: "EXCHANGE_TRIPLELIFT")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTriton
 *        Triton. (Value: "EXCHANGE_TRITON")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeTvn TVN.
 *        (Value: "EXCHANGE_TVN")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeUnited
 *        United. (Value: "EXCHANGE_UNITED")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeUnrulyx
 *        UnrulyX. (Value: "EXCHANGE_UNRULYX")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeUnspecified
 *        Exchange is not specified or is unknown in this version. (Value:
 *        "EXCHANGE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeVistar
 *        Vistar. (Value: "EXCHANGE_VISTAR")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeWaze Waze.
 *        (Value: "EXCHANGE_WAZE")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeYieldlab
 *        Yieldlab. (Value: "EXCHANGE_YIELDLAB")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Exchange_ExchangeYieldmo
 *        Yieldmo. (Value: "EXCHANGE_YIELDMO")
 */
@property(nonatomic, copy, nullable) NSString *exchange;

/**
 *  Status of the exchange review.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusApproved
 *        The creative is approved. (Value: "REVIEW_STATUS_APPROVED")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusPending
 *        The creative is pending review. (Value: "REVIEW_STATUS_PENDING")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusRejected
 *        The creative is rejected. (Value: "REVIEW_STATUS_REJECTED")
 *    @arg @c kGTLRDisplayVideo_ExchangeReviewStatus_Status_ReviewStatusUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "REVIEW_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Represents a targetable exchange. This will be populated in the
 *  exchange_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_EXCHANGE`.
 */
@interface GTLRDisplayVideo_ExchangeTargetingOptionDetails : GTLRObject

/**
 *  Output only. The type of exchange.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdform
 *        Adform. (Value: "EXCHANGE_ADFORM")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdmeta
 *        Admeta. (Value: "EXCHANGE_ADMETA")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdmixer
 *        Admixer. (Value: "EXCHANGE_ADMIXER")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdsmogo
 *        AdsMogo. (Value: "EXCHANGE_ADSMOGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAdswizz
 *        AdsWizz. (Value: "EXCHANGE_ADSWIZZ")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAja
 *        Aja. (Value: "EXCHANGE_AJA")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeAppnexus
 *        AppNexus. (Value: "EXCHANGE_APPNEXUS")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeBidswitch
 *        BidSwitch. (Value: "EXCHANGE_BIDSWITCH")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeBrightroll
 *        BrightRoll Exchange for Video from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeBrightrollDisplay
 *        BrightRoll Exchange for Display from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeCadreon
 *        Cadreon. (Value: "EXCHANGE_CADREON")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeDailymotion
 *        Dailymotion. (Value: "EXCHANGE_DAILYMOTION")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeDax
 *        DAX. (Value: "EXCHANGE_DAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFive
 *        Five. (Value: "EXCHANGE_FIVE")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFluct
 *        Fluct. (Value: "EXCHANGE_FLUCT")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFreewheel
 *        FreeWheel SSP. (Value: "EXCHANGE_FREEWHEEL")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeFyber
 *        Fyber. (Value: "EXCHANGE_FYBER")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeGeniee
 *        Geniee. (Value: "EXCHANGE_GENIEE")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeGoogleAdManager
 *        Google Ad Manager. (Value: "EXCHANGE_GOOGLE_AD_MANAGER")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeGumgum
 *        GumGum. (Value: "EXCHANGE_GUMGUM")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeIbillboard
 *        iBILLBOARD. (Value: "EXCHANGE_IBILLBOARD")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeImobile
 *        i-mobile. (Value: "EXCHANGE_IMOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeImproveDigital
 *        Improve Digital. (Value: "EXCHANGE_IMPROVE_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeIndex
 *        Index Exchange. (Value: "EXCHANGE_INDEX")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeInmobi
 *        InMobi. (Value: "EXCHANGE_INMOBI")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeKargo
 *        Kargo. (Value: "EXCHANGE_KARGO")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeMedianet
 *        Media.net. (Value: "EXCHANGE_MEDIANET")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeMicroad
 *        MicroAd. (Value: "EXCHANGE_MICROAD")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeMopub
 *        MoPub. (Value: "EXCHANGE_MOPUB")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeNend
 *        Nend. (Value: "EXCHANGE_NEND")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeNexstarDigital
 *        Nexstar Digital. (Value: "EXCHANGE_NEXSTAR_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOneByAolDisplay
 *        ONE by AOL: Display Market Place. (Value:
 *        "EXCHANGE_ONE_BY_AOL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOneByAolMobile
 *        ONE by AOL: Mobile. (Value: "EXCHANGE_ONE_BY_AOL_MOBILE")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOneByAolVideo
 *        ONE by AOL: Video. (Value: "EXCHANGE_ONE_BY_AOL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOoyala
 *        Ooyala. (Value: "EXCHANGE_OOYALA")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOpen8
 *        Open8. (Value: "EXCHANGE_OPEN8")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeOpenx
 *        OpenX. (Value: "EXCHANGE_OPENX")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePermodo
 *        Permodo. (Value: "EXCHANGE_PERMODO")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePlatformid
 *        PlatformId. (Value: "EXCHANGE_PLATFORMID")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePlatformone
 *        Platform One. (Value: "EXCHANGE_PLATFORMONE")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePubmatic
 *        PubMatic. (Value: "EXCHANGE_PUBMATIC")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangePulsepoint
 *        PulsePoint. (Value: "EXCHANGE_PULSEPOINT")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeRedForPublishers
 *        Red For Publishers. (Value: "EXCHANGE_RED_FOR_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeRevenuemax
 *        RevenueMax. (Value: "EXCHANGE_REVENUEMAX")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeRubicon
 *        Rubicon. (Value: "EXCHANGE_RUBICON")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSharethrough
 *        Sharethrough. (Value: "EXCHANGE_SHARETHROUGH")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmaato
 *        Smaato. (Value: "EXCHANGE_SMAATO")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmartclip
 *        SmartClip. (Value: "EXCHANGE_SMARTCLIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmartrtb
 *        SmartRTB+. (Value: "EXCHANGE_SMARTRTB")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSmartstreamtv
 *        SmartstreamTv. (Value: "EXCHANGE_SMARTSTREAMTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSoundcast
 *        SoundCast. (Value: "EXCHANGE_SOUNDCAST")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSovrn
 *        Sovrn. (Value: "EXCHANGE_SOVRN")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSpotxchange
 *        SpotXchange. (Value: "EXCHANGE_SPOTXCHANGE")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeStroer
 *        Ströer SSP. (Value: "EXCHANGE_STROER")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeSupership
 *        Supership. (Value: "EXCHANGE_SUPERSHIP")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTaboola
 *        Taboola. (Value: "EXCHANGE_TABOOLA")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTapjoy
 *        Tapjoy. (Value: "EXCHANGE_TAPJOY")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTeadstv
 *        TeadsTv. (Value: "EXCHANGE_TEADSTV")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTelaria
 *        Telaria. (Value: "EXCHANGE_TELARIA")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTriplelift
 *        TripleLift. (Value: "EXCHANGE_TRIPLELIFT")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTriton
 *        Triton. (Value: "EXCHANGE_TRITON")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeTvn
 *        TVN. (Value: "EXCHANGE_TVN")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeUnited
 *        United. (Value: "EXCHANGE_UNITED")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeUnrulyx
 *        UnrulyX. (Value: "EXCHANGE_UNRULYX")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeUnspecified
 *        Exchange is not specified or is unknown in this version. (Value:
 *        "EXCHANGE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeVistar
 *        Vistar. (Value: "EXCHANGE_VISTAR")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeWaze
 *        Waze. (Value: "EXCHANGE_WAZE")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeYieldlab
 *        Yieldlab. (Value: "EXCHANGE_YIELDLAB")
 *    @arg @c kGTLRDisplayVideo_ExchangeTargetingOptionDetails_Exchange_ExchangeYieldmo
 *        Yieldmo. (Value: "EXCHANGE_YIELDMO")
 */
@property(nonatomic, copy, nullable) NSString *exchange;

@end


/**
 *  Exit event of the creative.
 */
@interface GTLRDisplayVideo_ExitEvent : GTLRObject

/**
 *  The name of the click tag of the exit event. The name must be unique within
 *  one creative. Leave it empty or unset for creatives containing image assets
 *  only.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The name used to identify this event in reports. Leave it empty or unset for
 *  creatives containing image assets only.
 */
@property(nonatomic, copy, nullable) NSString *reportingName;

/**
 *  Required. The type of the exit event.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ExitEvent_Type_ExitEventTypeBackup The exit
 *        event is a backup exit event. There could be multiple backup exit
 *        events in a creative. (Value: "EXIT_EVENT_TYPE_BACKUP")
 *    @arg @c kGTLRDisplayVideo_ExitEvent_Type_ExitEventTypeDefault The exit
 *        event is the default one. (Value: "EXIT_EVENT_TYPE_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_ExitEvent_Type_ExitEventTypeUnspecified Exit
 *        event type is not specified or is unknown in this version. (Value:
 *        "EXIT_EVENT_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Required. The click through URL of the exit event. This is required when
 *  type is: * `EXIT_EVENT_TYPE_DEFAULT` * `EXIT_EVENT_TYPE_BACKUP`
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Describes a first or third party audience list used for targeting. First
 *  party audiences are created via usage of client data. Third party audiences
 *  are provided by Third Party data providers and can only be licensed to
 *  customers.
 */
@interface GTLRDisplayVideo_FirstAndThirdPartyAudience : GTLRObject

/**
 *  Output only. The estimated audience size for the Display network in the past
 *  month. If the size is less than 1000, the number will be hidden and 0 will
 *  be returned due to privacy reasons. Otherwise, the number will be rounded
 *  off to two significant digits. Only returned in GET request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *activeDisplayAudienceSize;

/**
 *  The app_id matches with the type of the mobile_device_ids being uploaded.
 *  Only applicable to audience_type `CUSTOMER_MATCH_DEVICE_ID`
 */
@property(nonatomic, copy, nullable) NSString *appId;

/**
 *  Output only. The source of the audience.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_AdManager
 *        Originated from Google Ad Manager. (Value: "AD_MANAGER")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_AdsDataHub
 *        Originated from Ads Data Hub. (Value: "ADS_DATA_HUB")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_AudienceSourceUnspecified
 *        Default value when audience source is not specified or is unknown.
 *        (Value: "AUDIENCE_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_CampaignManager
 *        Originated from Campaign Manager 360. (Value: "CAMPAIGN_MANAGER")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_DisplayVideo360
 *        Originated from Display & Video 360. (Value: "DISPLAY_VIDEO_360")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_SearchAds360
 *        Originated from Search Ads 360. (Value: "SEARCH_ADS_360")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceSource_Youtube
 *        Originated from Youtube. (Value: "YOUTUBE")
 */
@property(nonatomic, copy, nullable) NSString *audienceSource;

/**
 *  The type of the audience.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_ActivityBased
 *        Audience was created based on campaign activity. (Value:
 *        "ACTIVITY_BASED")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_AudienceTypeUnspecified
 *        Default value when type is not specified or is unknown. (Value:
 *        "AUDIENCE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_CustomerMatchContactInfo
 *        Audience was generated through matching customers to known contact
 *        information. (Value: "CUSTOMER_MATCH_CONTACT_INFO")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_CustomerMatchDeviceId
 *        Audience was generated through matching customers to known Mobile
 *        device IDs. (Value: "CUSTOMER_MATCH_DEVICE_ID")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_CustomerMatchUserId
 *        Audience was generated through matching customers to known User IDs.
 *        (Value: "CUSTOMER_MATCH_USER_ID")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_FrequencyCap
 *        Audience was created based on excluding the number of impressions they
 *        were served. (Value: "FREQUENCY_CAP")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_Licensed
 *        Subtype of third party audience type. (Value: "LICENSED")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_TagBased
 *        Audience was created based on custom variables attached to pixel.
 *        (Value: "TAG_BASED")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_AudienceType_YoutubeUsers
 *        Audience was created based on past interactions with videos, YouTube
 *        ads, or YouTube channel. (Value: "YOUTUBE_USERS")
 */
@property(nonatomic, copy, nullable) NSString *audienceType;

/**
 *  Input only. A list of contact information to define the initial audience
 *  members. Only applicable to audience_type `CUSTOMER_MATCH_CONTACT_INFO`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContactInfoList *contactInfoList;

/**
 *  The user-provided description of the audience. Only applicable to first
 *  party audiences.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. The estimated audience size for the Display network. If the
 *  size is less than 1000, the number will be hidden and 0 will be returned due
 *  to privacy reasons. Otherwise, the number will be rounded off to two
 *  significant digits. Only returned in GET request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *displayAudienceSize;

/**
 *  Output only. The estimated desktop audience size in Display network. If the
 *  size is less than 1000, the number will be hidden and 0 will be returned due
 *  to privacy reasons. Otherwise, the number will be rounded off to two
 *  significant digits. Only applicable to first party audiences. Only returned
 *  in GET request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *displayDesktopAudienceSize;

/**
 *  Output only. The estimated mobile app audience size in Display network. If
 *  the size is less than 1000, the number will be hidden and 0 will be returned
 *  due to privacy reasons. Otherwise, the number will be rounded off to two
 *  significant digits. Only applicable to first party audiences. Only returned
 *  in GET request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *displayMobileAppAudienceSize;

/**
 *  Output only. The estimated mobile web audience size in Display network. If
 *  the size is less than 1000, the number will be hidden and 0 will be returned
 *  due to privacy reasons. Otherwise, the number will be rounded off to two
 *  significant digits. Only applicable to first party audiences. Only returned
 *  in GET request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *displayMobileWebAudienceSize;

/** The display name of the first and third party audience. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The unique ID of the first and third party audience. Assigned
 *  by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *firstAndThirdPartyAudienceId;

/**
 *  Whether the audience is a first or third party audience.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_FirstAndThirdPartyAudienceType_FirstAndThirdPartyAudienceTypeFirstParty
 *        Audience that is created via usage of client data. (Value:
 *        "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_FIRST_PARTY")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_FirstAndThirdPartyAudienceType_FirstAndThirdPartyAudienceTypeThirdParty
 *        Audience that is provided by Third Party data providers. (Value:
 *        "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_THIRD_PARTY")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudience_FirstAndThirdPartyAudienceType_FirstAndThirdPartyAudienceTypeUnspecified
 *        Default value when type is not specified or is unknown. (Value:
 *        "FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *firstAndThirdPartyAudienceType;

/**
 *  Output only. The estimated audience size for Gmail network. If the size is
 *  less than 1000, the number will be hidden and 0 will be returned due to
 *  privacy reasons. Otherwise, the number will be rounded off to two
 *  significant digits. Only applicable to first party audiences. Only returned
 *  in GET request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *gmailAudienceSize;

/**
 *  The duration in days that an entry remains in the audience after the
 *  qualifying event. If the audience has no expiration, set the value of this
 *  field to 10000. Otherwise, the set value must be greater than 0 and less
 *  than or equal to 540. Only applicable to first party audiences. This field
 *  is required if one of the following audience_type is used: *
 *  `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *membershipDurationDays;

/**
 *  Input only. A list of mobile device IDs to define the initial audience
 *  members. Only applicable to audience_type `CUSTOMER_MATCH_DEVICE_ID`
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_MobileDeviceIdList *mobileDeviceIdList;

/** Output only. The resource name of the first and third party audience. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The estimated audience size for YouTube network. If the size is
 *  less than 1000, the number will be hidden and 0 will be returned due to
 *  privacy reasons. Otherwise, the number will be rounded off to two
 *  significant digits. Only applicable to first party audiences. Only returned
 *  in GET request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *youtubeAudienceSize;

@end


/**
 *  Details of first and third party audience group. All first and third party
 *  audience targeting settings are logically ‘OR’ of each other.
 */
@interface GTLRDisplayVideo_FirstAndThirdPartyAudienceGroup : GTLRObject

/**
 *  Required. All first and third party audience targeting settings in first and
 *  third party audience group. Repeated settings with same id are not allowed.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting *> *settings;

@end


/**
 *  Details of first and third party audience targeting setting.
 */
@interface GTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting : GTLRObject

/**
 *  Required. First and third party audience id of the first and third party
 *  audience targeting setting. This id is first_and_third_party_audience_id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *firstAndThirdPartyAudienceId;

/**
 *  The recency of the first and third party audience targeting setting. Only
 *  applicable to first party audiences, otherwise will be ignored. For more
 *  info, refer to
 *  https://support.google.com/displayvideo/answer/2949947#recency When
 *  unspecified, no recency limit will be used.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency10Days
 *        Recency is 10 days. (Value: "RECENCY_10_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency10Minutes
 *        Recency is 10 minutes. (Value: "RECENCY_10_MINUTES")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency120Days
 *        Recency is 120 days. (Value: "RECENCY_120_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency12Hours
 *        Recency is 12 hours. (Value: "RECENCY_12_HOURS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency14Days
 *        Recency is 14 days. (Value: "RECENCY_14_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency15Days
 *        Recency is 15 days. (Value: "RECENCY_15_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency15Minutes
 *        Recency is 15 minutes. (Value: "RECENCY_15_MINUTES")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency180Days
 *        Recency is 180 days. (Value: "RECENCY_180_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency1Day
 *        Recency is 1 day. (Value: "RECENCY_1_DAY")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency1Hour
 *        Recency is 1 hour. (Value: "RECENCY_1_HOUR")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency1Minute
 *        Recency is 1 minute. (Value: "RECENCY_1_MINUTE")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency21Days
 *        Recency is 21 days. (Value: "RECENCY_21_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency270Days
 *        Recency is 270 days. (Value: "RECENCY_270_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency28Days
 *        Recency is 28 days. (Value: "RECENCY_28_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency2Days
 *        Recency is 2 days. (Value: "RECENCY_2_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency2Hours
 *        Recency is 2 hours. (Value: "RECENCY_2_HOURS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency30Days
 *        Recency is 30 days. (Value: "RECENCY_30_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency30Minutes
 *        Recency is 30 minutes. (Value: "RECENCY_30_MINUTES")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency365Days
 *        Recency is 365 days. (Value: "RECENCY_365_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency3Days
 *        Recency is 3 days. (Value: "RECENCY_3_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency3Hours
 *        Recency is 3 hours. (Value: "RECENCY_3_HOURS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency40Days
 *        Recency is 40 days. (Value: "RECENCY_40_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency45Days
 *        Recency is 45 days. (Value: "RECENCY_45_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency5Days
 *        Recency is 5 days. (Value: "RECENCY_5_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency5Minutes
 *        Recency is 5 minutes. (Value: "RECENCY_5_MINUTES")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency60Days
 *        Recency is 60 days. (Value: "RECENCY_60_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency6Hours
 *        Recency is 6 hours. (Value: "RECENCY_6_HOURS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency7Days
 *        Recency is 7 days. (Value: "RECENCY_7_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_Recency90Days
 *        Recency is 90 days. (Value: "RECENCY_90_DAYS")
 *    @arg @c kGTLRDisplayVideo_FirstAndThirdPartyAudienceTargetingSetting_Recency_RecencyNoLimit
 *        No limit of recency. (Value: "RECENCY_NO_LIMIT")
 */
@property(nonatomic, copy, nullable) NSString *recency;

@end


/**
 *  A strategy that uses a fixed bidding price.
 */
@interface GTLRDisplayVideo_FixedBidStrategy : GTLRObject

/**
 *  The fixed bid amount, in micros of the advertiser's currency. For insertion
 *  order entity, bid_amount_micros should be set as 0. For line item entity,
 *  bid_amount_micros must be greater than or equal to billable unit of the
 *  given currency and smaller than or equal to the upper limit 1000000000. For
 *  example, 1500000 represents 1.5 standard units of the currency.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bidAmountMicros;

@end


/**
 *  A single Floodlight group.
 */
@interface GTLRDisplayVideo_FloodlightGroup : GTLRObject

/**
 *  The Active View video viewability metric configuration for the Floodlight
 *  group.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ActiveViewVideoViewabilityMetricConfig *activeViewConfig;

/**
 *  User-defined custom variables owned by the Floodlight group. Use custom
 *  Floodlight variables to create reporting data that is tailored to your
 *  unique business needs. Custom Floodlight variables use the keys `U1=`,
 *  `U2=`, and so on, and can take any values that you choose to pass to them.
 *  You can use them to track virtually any type of data that you collect about
 *  your customers, such as the genre of movie that a customer purchases, the
 *  country to which the item is shipped, and so on. Custom Floodlight variables
 *  may not be used to pass any data that could be used or recognized as
 *  personally identifiable information (PII). Example: `custom_variables {
 *  fields { "U1": value { number_value: 123.4 }, "U2": value { string_value:
 *  "MyVariable2" }, "U3": value { string_value: "MyVariable3" } } }` Acceptable
 *  values for keys are "U1" through "U100", inclusive. String values must be
 *  less than 64 characters long, and cannot contain the following characters:
 *  `"<>`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_FloodlightGroup_CustomVariables *customVariables;

/** Required. The display name of the Floodlight group. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The unique ID of the Floodlight group. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *floodlightGroupId;

/**
 *  Required. The lookback window for the Floodlight group. Both click_days and
 *  impression_days are required. Acceptable values for both are `0` to `90`,
 *  inclusive.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_LookbackWindow *lookbackWindow;

/** Output only. The resource name of the Floodlight group. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The web tag type enabled for the Floodlight group.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeDynamic
 *        Dynamic tag. (Value: "WEB_TAG_TYPE_DYNAMIC")
 *    @arg @c kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeImage Image
 *        tag. (Value: "WEB_TAG_TYPE_IMAGE")
 *    @arg @c kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeNone No tag
 *        type. (Value: "WEB_TAG_TYPE_NONE")
 *    @arg @c kGTLRDisplayVideo_FloodlightGroup_WebTagType_WebTagTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "WEB_TAG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *webTagType;

@end


/**
 *  User-defined custom variables owned by the Floodlight group. Use custom
 *  Floodlight variables to create reporting data that is tailored to your
 *  unique business needs. Custom Floodlight variables use the keys `U1=`,
 *  `U2=`, and so on, and can take any values that you choose to pass to them.
 *  You can use them to track virtually any type of data that you collect about
 *  your customers, such as the genre of movie that a customer purchases, the
 *  country to which the item is shipped, and so on. Custom Floodlight variables
 *  may not be used to pass any data that could be used or recognized as
 *  personally identifiable information (PII). Example: `custom_variables {
 *  fields { "U1": value { number_value: 123.4 }, "U2": value { string_value:
 *  "MyVariable2" }, "U3": value { string_value: "MyVariable3" } } }` Acceptable
 *  values for keys are "U1" through "U100", inclusive. String values must be
 *  less than 64 characters long, and cannot contain the following characters:
 *  `"<>`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDisplayVideo_FloodlightGroup_CustomVariables : GTLRObject
@end


/**
 *  Settings that control the number of times a user may be shown with the same
 *  ad during a given time period.
 */
@interface GTLRDisplayVideo_FrequencyCap : GTLRObject

/**
 *  The maximum number of times a user may be shown the same ad during this
 *  period. Must be greater than 0. Required when unlimited is `false` and
 *  max_views is not set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxImpressions;

/**
 *  The maximum number of times a user may click-through or fully view an ad
 *  during this period until it is no longer served to them. Must be greater
 *  than 0. Only applicable to YouTube and Partners resources. Required when
 *  unlimited is `false` and max_impressions is not set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxViews;

/**
 *  The time unit in which the frequency cap will be applied. Required when
 *  unlimited is `false`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitDays The frequency
 *        cap will be applied to a number of days. (Value: "TIME_UNIT_DAYS")
 *    @arg @c kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitHours The
 *        frequency cap will be applied to a number of hours. (Value:
 *        "TIME_UNIT_HOURS")
 *    @arg @c kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitLifetime The
 *        frequency cap will be applied to the whole life time of the line item.
 *        (Value: "TIME_UNIT_LIFETIME")
 *    @arg @c kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitMinutes The
 *        frequency cap will be applied to a number of minutes. (Value:
 *        "TIME_UNIT_MINUTES")
 *    @arg @c kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitMonths The
 *        frequency cap will be applied to a number of months. (Value:
 *        "TIME_UNIT_MONTHS")
 *    @arg @c kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitUnspecified Time
 *        unit value is not specified or is unknown in this version. (Value:
 *        "TIME_UNIT_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_FrequencyCap_TimeUnit_TimeUnitWeeks The
 *        frequency cap will be applied to a number of weeks. (Value:
 *        "TIME_UNIT_WEEKS")
 */
@property(nonatomic, copy, nullable) NSString *timeUnit;

/**
 *  The number of time_unit the frequency cap will last. Required when unlimited
 *  is `false`. The following restrictions apply based on the value of
 *  time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will
 *  default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 *
 *  `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be
 *  between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 *
 *  `TIME_UNIT_MINUTES` - must be between 1 and 59
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeUnitCount;

/**
 *  Whether unlimited frequency capping is applied. When this field is set to
 *  `true`, the remaining frequency cap fields are not applicable.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unlimited;

@end


/**
 *  Details for assigned gender targeting option. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_GENDER`.
 */
@interface GTLRDisplayVideo_GenderAssignedTargetingOptionDetails : GTLRObject

/**
 *  The gender of the audience. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderFemale
 *        The audience gender is female. (Value: "GENDER_FEMALE")
 *    @arg @c kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderMale
 *        The audience gender is male. (Value: "GENDER_MALE")
 *    @arg @c kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderUnknown
 *        The audience gender is unknown. (Value: "GENDER_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_GenderAssignedTargetingOptionDetails_Gender_GenderUnspecified
 *        Default value when gender is not specified in this version. This enum
 *        is a place holder for default value and does not represent a real
 *        gender option. (Value: "GENDER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *gender;

@end


/**
 *  Represents a targetable gender. This will be populated in the gender_details
 *  field of a TargetingOption when targeting_type is `TARGETING_TYPE_GENDER`.
 */
@interface GTLRDisplayVideo_GenderTargetingOptionDetails : GTLRObject

/**
 *  Output only. The gender of an audience.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderFemale
 *        The audience gender is female. (Value: "GENDER_FEMALE")
 *    @arg @c kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderMale
 *        The audience gender is male. (Value: "GENDER_MALE")
 *    @arg @c kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderUnknown
 *        The audience gender is unknown. (Value: "GENDER_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_GenderTargetingOptionDetails_Gender_GenderUnspecified
 *        Default value when gender is not specified in this version. This enum
 *        is a place holder for default value and does not represent a real
 *        gender option. (Value: "GENDER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *gender;

@end


/**
 *  Request message for LineItemService.GenerateDefaultLineItem.
 */
@interface GTLRDisplayVideo_GenerateDefaultLineItemRequest : GTLRObject

/**
 *  Required. The display name of the line item. Must be UTF-8 encoded with a
 *  maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. The unique ID of the insertion order that the line item belongs
 *  to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *insertionOrderId;

/**
 *  Required. The type of the line item.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeAudioDefault
 *        RTB Audio ads sold for a variety of environments. (Value:
 *        "LINE_ITEM_TYPE_AUDIO_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeDisplayDefault
 *        Image, HTML5, native, or rich media ads. (Value:
 *        "LINE_ITEM_TYPE_DISPLAY_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeDisplayMobileAppInstall
 *        Display ads that drive installs of an app. (Value:
 *        "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeDisplayMobileAppInventory
 *        Display ads served on mobile app inventory. Line items of this type
 *        and their targeting cannot be created or updated using the API.
 *        (Value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeUnspecified
 *        Type value is not specified or is unknown in this version. Line items
 *        of this type and their targeting cannot be created or updated using
 *        the API. (Value: "LINE_ITEM_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoDefault
 *        Video ads sold on a CPM basis for a variety of environments. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoMobileAppInstall
 *        Video ads that drive installs of an app. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoMobileAppInventory
 *        Video ads served on mobile app inventory. Line items of this type and
 *        their targeting cannot be created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeVideoOverTheTop
 *        Over-the-top ads present in OTT insertion orders. This type is only
 *        applicable to line items with an insertion order of
 *        insertion_order_type `OVER_THE_TOP`. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersAction
 *        YouTube video ads that promote conversions. Line items of this type
 *        and their targeting cannot be created or updated using the API.
 *        (Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_ACTION")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersAudio
 *        YouTube audio ads. Line items of this type and their targeting cannot
 *        be created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_AUDIO")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersNonSkippable
 *        YouTube video ads (up to 15 seconds) that cannot be skipped. Line
 *        items of this type and their targeting cannot be created or updated
 *        using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersReach
 *        YouTube video ads that optimize reaching more unique users at lower
 *        cost. May include bumper ads, skippable in-stream ads, or a mix of
 *        types. Line items of this type and their targeting cannot be created
 *        or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersSimple
 *        Default YouTube video ads. Line items of this type and their targeting
 *        cannot be created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE")
 *    @arg @c kGTLRDisplayVideo_GenerateDefaultLineItemRequest_LineItemType_LineItemTypeYoutubeAndPartnersVideoSequence
 *        YouTube video ads that show a story in a particular sequence using a
 *        mix of formats. Line items of this type and their targeting cannot be
 *        created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIDEO_SEQUENCE")
 */
@property(nonatomic, copy, nullable) NSString *lineItemType;

/**
 *  The mobile app promoted by the line item. This is applicable only when
 *  line_item_type is either `LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL` or
 *  `LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_MobileApp *mobileApp;

@end


/**
 *  Details for assigned geographic region targeting option. This will be
 *  populated in the details field of an AssignedTargetingOption when
 *  targeting_type is `TARGETING_TYPE_GEO_REGION`.
 */
@interface GTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The display name of the geographic region (e.g., "Ontario,
 *  Canada").
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The type of geographic region targeting.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeAirport
 *        The geographic region is an airport. (Value:
 *        "GEO_REGION_TYPE_AIRPORT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeArrondissement
 *        The geographic region is an arrondissement. (Value:
 *        "GEO_REGION_TYPE_ARRONDISSEMENT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeAutonomousCommunity
 *        The geographic region is an autonomous community. (Value:
 *        "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeBorough
 *        The geographic region is a borough. (Value: "GEO_REGION_TYPE_BOROUGH")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCanton
 *        The geographic region is a canton. (Value: "GEO_REGION_TYPE_CANTON")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCity
 *        The geographic region is a city. (Value: "GEO_REGION_TYPE_CITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCityRegion
 *        The geographic region is a city region. (Value:
 *        "GEO_REGION_TYPE_CITY_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCongressionalDistrict
 *        The geographic region is a congressional district. (Value:
 *        "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCountry
 *        The geographic region is a country. (Value: "GEO_REGION_TYPE_COUNTRY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeCounty
 *        The geographic region is a county. (Value: "GEO_REGION_TYPE_COUNTY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeDepartment
 *        The geographic region targeting type is department. (Value:
 *        "GEO_REGION_TYPE_DEPARTMENT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeDistrict
 *        The geographic region is a district. (Value:
 *        "GEO_REGION_TYPE_DISTRICT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeDmaRegion
 *        The geographic region is a designated market area (DMA) region.
 *        (Value: "GEO_REGION_TYPE_DMA_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeGovernorate
 *        The geographic region is a governorate. (Value:
 *        "GEO_REGION_TYPE_GOVERNORATE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeMetro
 *        The geographic region type is metro. (Value: "GEO_REGION_TYPE_METRO")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeMunicipality
 *        The geographic region is a municipality. (Value:
 *        "GEO_REGION_TYPE_MUNICIPALITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeNeighborhood
 *        The geographic region is a neighborhood. (Value:
 *        "GEO_REGION_TYPE_NEIGHBORHOOD")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeOkrug
 *        The geographic region is an okrug. (Value: "GEO_REGION_TYPE_OKRUG")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeOther
 *        The geographic region type is other. (Value: "GEO_REGION_TYPE_OTHER")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypePostalCode
 *        The geographic region targeting type is postal code. (Value:
 *        "GEO_REGION_TYPE_POSTAL_CODE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypePrefecture
 *        The geographic region is a prefecture. (Value:
 *        "GEO_REGION_TYPE_PREFECTURE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeProvince
 *        The geographic region is a province. (Value:
 *        "GEO_REGION_TYPE_PROVINCE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeRegion
 *        The geographic region type is region. (Value:
 *        "GEO_REGION_TYPE_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeState
 *        The geographic region is a state. (Value: "GEO_REGION_TYPE_STATE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeTerritory
 *        The geographic region is a territory. (Value:
 *        "GEO_REGION_TYPE_TERRITORY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeTvRegion
 *        The geographic region is a TV region. (Value:
 *        "GEO_REGION_TYPE_TV_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnionTerritory
 *        The geographic region is a union territory. (Value:
 *        "GEO_REGION_TYPE_UNION_TERRITORY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeUniversity
 *        The geographic region is a university. (Value:
 *        "GEO_REGION_TYPE_UNIVERSITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionAssignedTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnknown
 *        The geographic region type is unknown. (Value:
 *        "GEO_REGION_TYPE_UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *geoRegionType;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_GEO_REGION`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Search terms for geo region targeting options.
 */
@interface GTLRDisplayVideo_GeoRegionSearchTerms : GTLRObject

/**
 *  The search query for the desired geo region. The query can be a prefix, e.g.
 *  "New Yor", "Seattle", "USA", etc.
 */
@property(nonatomic, copy, nullable) NSString *geoRegionQuery;

@end


/**
 *  Represents a targetable geographic region. This will be populated in the
 *  geo_region_details field when targeting_type is `TARGETING_TYPE_GEO_REGION`.
 */
@interface GTLRDisplayVideo_GeoRegionTargetingOptionDetails : GTLRObject

/**
 *  Output only. The display name of the geographic region (e.g., "Ontario,
 *  Canada").
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The type of geographic region targeting.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeAirport
 *        The geographic region is an airport. (Value:
 *        "GEO_REGION_TYPE_AIRPORT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeArrondissement
 *        The geographic region is an arrondissement. (Value:
 *        "GEO_REGION_TYPE_ARRONDISSEMENT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeAutonomousCommunity
 *        The geographic region is an autonomous community. (Value:
 *        "GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeBorough
 *        The geographic region is a borough. (Value: "GEO_REGION_TYPE_BOROUGH")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCanton
 *        The geographic region is a canton. (Value: "GEO_REGION_TYPE_CANTON")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCity
 *        The geographic region is a city. (Value: "GEO_REGION_TYPE_CITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCityRegion
 *        The geographic region is a city region. (Value:
 *        "GEO_REGION_TYPE_CITY_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCongressionalDistrict
 *        The geographic region is a congressional district. (Value:
 *        "GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCountry
 *        The geographic region is a country. (Value: "GEO_REGION_TYPE_COUNTRY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeCounty
 *        The geographic region is a county. (Value: "GEO_REGION_TYPE_COUNTY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeDepartment
 *        The geographic region targeting type is department. (Value:
 *        "GEO_REGION_TYPE_DEPARTMENT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeDistrict
 *        The geographic region is a district. (Value:
 *        "GEO_REGION_TYPE_DISTRICT")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeDmaRegion
 *        The geographic region is a designated market area (DMA) region.
 *        (Value: "GEO_REGION_TYPE_DMA_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeGovernorate
 *        The geographic region is a governorate. (Value:
 *        "GEO_REGION_TYPE_GOVERNORATE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeMetro
 *        The geographic region type is metro. (Value: "GEO_REGION_TYPE_METRO")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeMunicipality
 *        The geographic region is a municipality. (Value:
 *        "GEO_REGION_TYPE_MUNICIPALITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeNeighborhood
 *        The geographic region is a neighborhood. (Value:
 *        "GEO_REGION_TYPE_NEIGHBORHOOD")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeOkrug
 *        The geographic region is an okrug. (Value: "GEO_REGION_TYPE_OKRUG")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeOther
 *        The geographic region type is other. (Value: "GEO_REGION_TYPE_OTHER")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypePostalCode
 *        The geographic region targeting type is postal code. (Value:
 *        "GEO_REGION_TYPE_POSTAL_CODE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypePrefecture
 *        The geographic region is a prefecture. (Value:
 *        "GEO_REGION_TYPE_PREFECTURE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeProvince
 *        The geographic region is a province. (Value:
 *        "GEO_REGION_TYPE_PROVINCE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeRegion
 *        The geographic region type is region. (Value:
 *        "GEO_REGION_TYPE_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeState
 *        The geographic region is a state. (Value: "GEO_REGION_TYPE_STATE")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeTerritory
 *        The geographic region is a territory. (Value:
 *        "GEO_REGION_TYPE_TERRITORY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeTvRegion
 *        The geographic region is a TV region. (Value:
 *        "GEO_REGION_TYPE_TV_REGION")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnionTerritory
 *        The geographic region is a union territory. (Value:
 *        "GEO_REGION_TYPE_UNION_TERRITORY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeUniversity
 *        The geographic region is a university. (Value:
 *        "GEO_REGION_TYPE_UNIVERSITY")
 *    @arg @c kGTLRDisplayVideo_GeoRegionTargetingOptionDetails_GeoRegionType_GeoRegionTypeUnknown
 *        The geographic region type is unknown. (Value:
 *        "GEO_REGION_TYPE_UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *geoRegionType;

@end


/**
 *  Describes a Google audience resource. Includes Google audience lists.
 */
@interface GTLRDisplayVideo_GoogleAudience : GTLRObject

/** Output only. The display name of the Google audience. . */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The unique ID of the Google audience. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *googleAudienceId;

/**
 *  Output only. The type of Google audience. .
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeAffinity
 *        Affinity type Google audience. (Value:
 *        "GOOGLE_AUDIENCE_TYPE_AFFINITY")
 *    @arg @c kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeExtendedDemographic
 *        Extended-Demographic type Google audience. (Value:
 *        "GOOGLE_AUDIENCE_TYPE_EXTENDED_DEMOGRAPHIC")
 *    @arg @c kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeInMarket
 *        In-Market type Google audience. (Value:
 *        "GOOGLE_AUDIENCE_TYPE_IN_MARKET")
 *    @arg @c kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeInstalledApps
 *        Installed-Apps type Google audience. (Value:
 *        "GOOGLE_AUDIENCE_TYPE_INSTALLED_APPS")
 *    @arg @c kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeLifeEvent
 *        Life-Event type Google audience. (Value:
 *        "GOOGLE_AUDIENCE_TYPE_LIFE_EVENT")
 *    @arg @c kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeNewMobileDevices
 *        New-Mobile-Devices type Google audience. (Value:
 *        "GOOGLE_AUDIENCE_TYPE_NEW_MOBILE_DEVICES")
 *    @arg @c kGTLRDisplayVideo_GoogleAudience_GoogleAudienceType_GoogleAudienceTypeUnspecified
 *        Default value when type is not specified or is unknown. (Value:
 *        "GOOGLE_AUDIENCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *googleAudienceType;

/** Output only. The resource name of the google audience. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Details of Google audience group. All Google audience targeting settings are
 *  logically ‘OR’ of each other.
 */
@interface GTLRDisplayVideo_GoogleAudienceGroup : GTLRObject

/**
 *  Required. All Google audience targeting settings in Google audience group.
 *  Repeated settings with same id will be ignored.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_GoogleAudienceTargetingSetting *> *settings;

@end


/**
 *  Details of Google audience targeting setting.
 */
@interface GTLRDisplayVideo_GoogleAudienceTargetingSetting : GTLRObject

/**
 *  Required. Google audience id of the Google audience targeting setting. This
 *  id is google_audience_id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *googleAudienceId;

@end


/**
 *  Media resource.
 */
@interface GTLRDisplayVideo_GoogleBytestreamMedia : GTLRObject

/** Name of the media resource. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  A guaranteed order. Guaranteed orders are parent entity of guaranteed
 *  inventory sources. When creating a guaranteed inventory source, a guaranteed
 *  order ID must be assigned to the inventory source.
 */
@interface GTLRDisplayVideo_GuaranteedOrder : GTLRObject

/**
 *  Output only. The ID of default advertiser of the guaranteed order. The
 *  default advertiser is either the read_write_advertiser_id or, if that is not
 *  set, the first advertiser listed in read_advertiser_ids. Otherwise, there is
 *  no default advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultAdvertiserId;

/**
 *  The ID of the default campaign that is assigned to the guaranteed order. The
 *  default campaign must belong to the default advertiser.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultCampaignId;

/**
 *  Required. The display name of the guaranteed order. Must be UTF-8 encoded
 *  with a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. Immutable. The exchange where the guaranteed order originated.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdform Adform.
 *        (Value: "EXCHANGE_ADFORM")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdmeta Admeta.
 *        (Value: "EXCHANGE_ADMETA")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdmixer
 *        Admixer. (Value: "EXCHANGE_ADMIXER")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdsmogo
 *        AdsMogo. (Value: "EXCHANGE_ADSMOGO")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAdswizz
 *        AdsWizz. (Value: "EXCHANGE_ADSWIZZ")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAja Aja.
 *        (Value: "EXCHANGE_AJA")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeAppnexus
 *        AppNexus. (Value: "EXCHANGE_APPNEXUS")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeBidswitch
 *        BidSwitch. (Value: "EXCHANGE_BIDSWITCH")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeBrightroll
 *        BrightRoll Exchange for Video from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeBrightrollDisplay
 *        BrightRoll Exchange for Display from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeCadreon
 *        Cadreon. (Value: "EXCHANGE_CADREON")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeDailymotion
 *        Dailymotion. (Value: "EXCHANGE_DAILYMOTION")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeDax DAX.
 *        (Value: "EXCHANGE_DAX")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFive Five.
 *        (Value: "EXCHANGE_FIVE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFluct Fluct.
 *        (Value: "EXCHANGE_FLUCT")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFreewheel
 *        FreeWheel SSP. (Value: "EXCHANGE_FREEWHEEL")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeFyber Fyber.
 *        (Value: "EXCHANGE_FYBER")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeGeniee Geniee.
 *        (Value: "EXCHANGE_GENIEE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeGoogleAdManager
 *        Google Ad Manager. (Value: "EXCHANGE_GOOGLE_AD_MANAGER")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeGumgum GumGum.
 *        (Value: "EXCHANGE_GUMGUM")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeIbillboard
 *        iBILLBOARD. (Value: "EXCHANGE_IBILLBOARD")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeImobile
 *        i-mobile. (Value: "EXCHANGE_IMOBILE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeImproveDigital
 *        Improve Digital. (Value: "EXCHANGE_IMPROVE_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeIndex Index
 *        Exchange. (Value: "EXCHANGE_INDEX")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeInmobi InMobi.
 *        (Value: "EXCHANGE_INMOBI")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeKargo Kargo.
 *        (Value: "EXCHANGE_KARGO")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeMedianet
 *        Media.net. (Value: "EXCHANGE_MEDIANET")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeMicroad
 *        MicroAd. (Value: "EXCHANGE_MICROAD")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeMopub MoPub.
 *        (Value: "EXCHANGE_MOPUB")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeNend Nend.
 *        (Value: "EXCHANGE_NEND")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeNexstarDigital
 *        Nexstar Digital. (Value: "EXCHANGE_NEXSTAR_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOneByAolDisplay
 *        ONE by AOL: Display Market Place. (Value:
 *        "EXCHANGE_ONE_BY_AOL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOneByAolMobile
 *        ONE by AOL: Mobile. (Value: "EXCHANGE_ONE_BY_AOL_MOBILE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOneByAolVideo
 *        ONE by AOL: Video. (Value: "EXCHANGE_ONE_BY_AOL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOoyala Ooyala.
 *        (Value: "EXCHANGE_OOYALA")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOpen8 Open8.
 *        (Value: "EXCHANGE_OPEN8")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeOpenx OpenX.
 *        (Value: "EXCHANGE_OPENX")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePermodo
 *        Permodo. (Value: "EXCHANGE_PERMODO")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePlatformid
 *        PlatformId. (Value: "EXCHANGE_PLATFORMID")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePlatformone
 *        Platform One. (Value: "EXCHANGE_PLATFORMONE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePubmatic
 *        PubMatic. (Value: "EXCHANGE_PUBMATIC")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangePulsepoint
 *        PulsePoint. (Value: "EXCHANGE_PULSEPOINT")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeRedForPublishers
 *        Red For Publishers. (Value: "EXCHANGE_RED_FOR_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeRevenuemax
 *        RevenueMax. (Value: "EXCHANGE_REVENUEMAX")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeRubicon
 *        Rubicon. (Value: "EXCHANGE_RUBICON")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSharethrough
 *        Sharethrough. (Value: "EXCHANGE_SHARETHROUGH")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmaato Smaato.
 *        (Value: "EXCHANGE_SMAATO")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmartclip
 *        SmartClip. (Value: "EXCHANGE_SMARTCLIP")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmartrtb
 *        SmartRTB+. (Value: "EXCHANGE_SMARTRTB")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSmartstreamtv
 *        SmartstreamTv. (Value: "EXCHANGE_SMARTSTREAMTV")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSoundcast
 *        SoundCast. (Value: "EXCHANGE_SOUNDCAST")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSovrn Sovrn.
 *        (Value: "EXCHANGE_SOVRN")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSpotxchange
 *        SpotXchange. (Value: "EXCHANGE_SPOTXCHANGE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeStroer Ströer
 *        SSP. (Value: "EXCHANGE_STROER")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeSupership
 *        Supership. (Value: "EXCHANGE_SUPERSHIP")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTaboola
 *        Taboola. (Value: "EXCHANGE_TABOOLA")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTapjoy Tapjoy.
 *        (Value: "EXCHANGE_TAPJOY")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTeadstv
 *        TeadsTv. (Value: "EXCHANGE_TEADSTV")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTelaria
 *        Telaria. (Value: "EXCHANGE_TELARIA")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTriplelift
 *        TripleLift. (Value: "EXCHANGE_TRIPLELIFT")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTriton Triton.
 *        (Value: "EXCHANGE_TRITON")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeTvn TVN.
 *        (Value: "EXCHANGE_TVN")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeUnited United.
 *        (Value: "EXCHANGE_UNITED")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeUnrulyx
 *        UnrulyX. (Value: "EXCHANGE_UNRULYX")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeUnspecified
 *        Exchange is not specified or is unknown in this version. (Value:
 *        "EXCHANGE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeVistar Vistar.
 *        (Value: "EXCHANGE_VISTAR")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeWaze Waze.
 *        (Value: "EXCHANGE_WAZE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeYieldlab
 *        Yieldlab. (Value: "EXCHANGE_YIELDLAB")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrder_Exchange_ExchangeYieldmo
 *        Yieldmo. (Value: "EXCHANGE_YIELDMO")
 */
@property(nonatomic, copy, nullable) NSString *exchange;

/**
 *  Output only. The unique identifier of the guaranteed order. The guaranteed
 *  order IDs have the format `{exchange}-{legacy_guaranteed_order_id}`.
 */
@property(nonatomic, copy, nullable) NSString *guaranteedOrderId;

/**
 *  Output only. The legacy ID of the guaranteed order. Assigned by the original
 *  exchange. The legacy ID is unique within one exchange, but is not guaranteed
 *  to be unique across all guaranteed orders. This ID is used in SDF and UI.
 */
@property(nonatomic, copy, nullable) NSString *legacyGuaranteedOrderId;

/** Output only. The resource name of the guaranteed order. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The publisher name of the guaranteed order. Must be UTF-8 encoded
 *  with a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *publisherName;

/**
 *  Whether all advertisers of read_write_partner_id have read access to the
 *  guaranteed order. Only applicable if read_write_partner_id is set. If True,
 *  overrides read_advertiser_ids.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readAccessInherited;

/**
 *  The IDs of advertisers with read access to the guaranteed order. This field
 *  must not include the advertiser assigned to read_write_advertiser_id if it
 *  is set. All advertisers in this field must belong to read_write_partner_id
 *  or the same partner as read_write_advertiser_id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *readAdvertiserIds;

/**
 *  The advertiser with read/write access to the guaranteed order. This is also
 *  the default advertiser of the guaranteed order.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readWriteAdvertiserId;

/**
 *  The partner with read/write access to the guaranteed order.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readWritePartnerId;

/** The status settings of the guaranteed order. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GuaranteedOrderStatus *status;

/**
 *  Output only. The timestamp when the guaranteed order was last updated.
 *  Assigned by the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The status settings of the guaranteed order.
 */
@interface GTLRDisplayVideo_GuaranteedOrderStatus : GTLRObject

/**
 *  Output only. The configuration status of the guaranteed order. Acceptable
 *  values are `PENDING` and `COMPLETED`. A guaranteed order must be configured
 *  (fill in the required fields, choose creatives, and select a default
 *  campaign) before it can serve. Currently the configuration action can only
 *  be performed via UI.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_ConfigStatus_Completed The
 *        state after the buyer configures a guaranteed order. (Value:
 *        "COMPLETED")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_ConfigStatus_GuaranteedOrderConfigStatusUnspecified
 *        The approval status is not specified or is unknown in this version.
 *        (Value: "GUARANTEED_ORDER_CONFIG_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_ConfigStatus_Pending The
 *        beginning state of a guaranteed order. The guaranteed order in this
 *        state needs to be configured before it can serve. (Value: "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *configStatus;

/**
 *  The user-provided reason for pausing this guaranteed order. Must be UTF-8
 *  encoded with a maximum length of 100 bytes. Only applicable when
 *  entity_status is set to `ENTITY_STATUS_PAUSED`.
 */
@property(nonatomic, copy, nullable) NSString *entityPauseReason;

/**
 *  Whether or not the guaranteed order is servable. Acceptable values are
 *  `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and
 *  `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusActive
 *        The entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusArchived
 *        The entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusDraft
 *        The entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusPaused
 *        Bidding and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_GuaranteedOrderStatus_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

@end


/**
 *  Details for assigned household income targeting option. This will be
 *  populated in the details field of an AssignedTargetingOption when
 *  targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.
 */
@interface GTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails : GTLRObject

/**
 *  The household income of the audience. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeLower50Percent
 *        The audience is in the lower 50% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_LOWER_50_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop10Percent
 *        The audience is in the top 10% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_10_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop11To20Percent
 *        The audience is in the top 11-20% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop21To30Percent
 *        The audience is in the top 21-30% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop31To40Percent
 *        The audience is in the top 31-40% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop41To50Percent
 *        The audience is in the top 41-50% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnknown
 *        The household income of the audience is unknown. (Value:
 *        "HOUSEHOLD_INCOME_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeAssignedTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnspecified
 *        Default value when household income is not specified in this version.
 *        This enum is a placeholder for default value and does not represent a
 *        real household income option. (Value: "HOUSEHOLD_INCOME_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *householdIncome;

@end


/**
 *  Represents a targetable household income. This will be populated in the
 *  household_income_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_HOUSEHOLD_INCOME`.
 */
@interface GTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails : GTLRObject

/**
 *  Output only. The household income of an audience.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeLower50Percent
 *        The audience is in the lower 50% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_LOWER_50_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop10Percent
 *        The audience is in the top 10% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_10_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop11To20Percent
 *        The audience is in the top 11-20% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop21To30Percent
 *        The audience is in the top 21-30% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop31To40Percent
 *        The audience is in the top 31-40% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeTop41To50Percent
 *        The audience is in the top 41-50% of U.S. household incomes. (Value:
 *        "HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnknown
 *        The household income of the audience is unknown. (Value:
 *        "HOUSEHOLD_INCOME_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails_HouseholdIncome_HouseholdIncomeUnspecified
 *        Default value when household income is not specified in this version.
 *        This enum is a placeholder for default value and does not represent a
 *        real household income option. (Value: "HOUSEHOLD_INCOME_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *householdIncome;

@end


/**
 *  A filtering option that filters entities by their entity IDs.
 */
@interface GTLRDisplayVideo_IdFilter : GTLRObject

/**
 *  YouTube Ads to download by ID. All IDs must belong to the same Advertiser or
 *  Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *adGroupAdIds;

/**
 *  YouTube Ad Groups to download by ID. All IDs must belong to the same
 *  Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *adGroupIds;

/**
 *  Campaigns to download by ID. All IDs must belong to the same Advertiser or
 *  Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *campaignIds;

/**
 *  Insertion Orders to download by ID. All IDs must belong to the same
 *  Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *insertionOrderIds;

/**
 *  Line Items to download by ID. All IDs must belong to the same Advertiser or
 *  Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *lineItemIds;

/**
 *  Media Products to download by ID. All IDs must belong to the same Advertiser
 *  or Partner specified in CreateSdfDownloadTaskRequest.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *mediaProductIds;

@end


/**
 *  A single insertion order.
 */
@interface GTLRDisplayVideo_InsertionOrder : GTLRObject

/**
 *  Output only. The unique ID of the advertiser the insertion order belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  The bidding strategy of the insertion order. By default, fixed_bid is set.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_BiddingStrategy *bidStrategy;

/**
 *  Immutable. The billable outcome of the insertion order.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomePayPerClick
 *        Pay per click. (Value: "BILLABLE_OUTCOME_PAY_PER_CLICK")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomePayPerImpression
 *        Pay per impressions. (Value: "BILLABLE_OUTCOME_PAY_PER_IMPRESSION")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomePayPerViewableImpression
 *        Pay per active view. (Value:
 *        "BILLABLE_OUTCOME_PAY_PER_VIEWABLE_IMPRESSION")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_BillableOutcome_BillableOutcomeUnspecified
 *        Unspecified billable outcome. (Value: "BILLABLE_OUTCOME_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *billableOutcome;

/** Required. The budget allocation settings of the insertion order. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InsertionOrderBudget *budget;

/**
 *  Required. Immutable. The unique ID of the campaign that the insertion order
 *  belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *campaignId;

/**
 *  Required. The display name of the insertion order. Must be UTF-8 encoded
 *  with a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. Controls whether or not the insertion order can spend its budget
 *  and bid on inventory. * For CreateInsertionOrder method, only
 *  `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use
 *  UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE`
 *  after creation. * An insertion order cannot be changed back to
 *  `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order
 *  cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not
 *  active.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusActive
 *        The entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusArchived
 *        The entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusDraft
 *        The entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusPaused
 *        Bidding and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/** Required. The frequency capping setting of the insertion order. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_FrequencyCap *frequencyCap;

/**
 *  Output only. The unique ID of the insertion order. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *insertionOrderId;

/**
 *  The type of insertion order. If this field is unspecified in creation, the
 *  value defaults to `RTB`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_InsertionOrderType_InsertionOrderTypeUnspecified
 *        Insertion order type is not specified or is unknown. (Value:
 *        "INSERTION_ORDER_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_InsertionOrderType_OverTheTop
 *        Over-the-top. (Value: "OVER_THE_TOP")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_InsertionOrderType_Rtb Real-time
 *        bidding. (Value: "RTB")
 */
@property(nonatomic, copy, nullable) NSString *insertionOrderType;

/** Additional integration details of the insertion order. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_IntegrationDetails *integrationDetails;

/** Output only. The resource name of the insertion order. */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The budget spending speed setting of the insertion order. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Pacing *pacing;

/**
 *  The partner costs associated with the insertion order. If absent or empty in
 *  CreateInsertionOrder method, the newly created insertion order will inherit
 *  partner costs from the partner settings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_PartnerCost *> *partnerCosts;

/** Required. Performance goal of the insertion order. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PerformanceGoal *performanceGoal;

/**
 *  Output only. The reservation type of the insertion order.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeInstantReserve
 *        Created with an instant quote. Only applicable to YouTube and partners
 *        line items. (Value: "RESERVATION_TYPE_INSTANT_RESERVE")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeNotGuaranteed
 *        Not created through a guaranteed inventory source. (Value:
 *        "RESERVATION_TYPE_NOT_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypePetraViral
 *        Created through a Petra inventory source. Only applicable to YouTube
 *        and Partners line items. (Value: "RESERVATION_TYPE_PETRA_VIRAL")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeProgrammaticGuaranteed
 *        Created through a programmatic guaranteed inventory source. (Value:
 *        "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeTagGuaranteed
 *        Created through a tag guaranteed inventory source. (Value:
 *        "RESERVATION_TYPE_TAG_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_InsertionOrder_ReservationType_ReservationTypeUnspecified
 *        Reservation type value is not specified or is unknown in this version.
 *        (Value: "RESERVATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reservationType;

/**
 *  Output only. The timestamp when the insertion order was last updated.
 *  Assigned by the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Settings that control how insertion order budget is allocated.
 */
@interface GTLRDisplayVideo_InsertionOrderBudget : GTLRObject

/**
 *  The type of automation used to manage bid and budget for the insertion
 *  order. If this field is unspecified in creation, the value defaults to
 *  `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeBidBudget
 *        Allow the system to automatically adjust bids and shift budget to
 *        owning line items to optimize performance defined by performance_goal.
 *        (Value: "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET")
 *    @arg @c kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeBudget
 *        Automatic budget allocation. Allow the system to automatically shift
 *        budget to owning line items to optimize performance defined by
 *        performance_goal. No automation on bid settings. (Value:
 *        "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET")
 *    @arg @c kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeNone
 *        No automation of bid or budget on insertion order level. Bid and
 *        budget must be manually configured at the line item level. (Value:
 *        "INSERTION_ORDER_AUTOMATION_TYPE_NONE")
 *    @arg @c kGTLRDisplayVideo_InsertionOrderBudget_AutomationType_InsertionOrderAutomationTypeUnspecified
 *        Insertion order automation option is not specified or is unknown in
 *        this version. (Value: "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *automationType;

/**
 *  Required. The list of budget segments. Use a budget segment to specify a
 *  specific budget for a given period of time an insertion order is running.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_InsertionOrderBudgetSegment *> *budgetSegments;

/**
 *  Required. Immutable. The budget unit specifies whether the budget is
 *  currency based or impression based.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InsertionOrderBudget_BudgetUnit_BudgetUnitCurrency
 *        Budgeting in currency amounts. (Value: "BUDGET_UNIT_CURRENCY")
 *    @arg @c kGTLRDisplayVideo_InsertionOrderBudget_BudgetUnit_BudgetUnitImpressions
 *        Budgeting in impression amounts. (Value: "BUDGET_UNIT_IMPRESSIONS")
 *    @arg @c kGTLRDisplayVideo_InsertionOrderBudget_BudgetUnit_BudgetUnitUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "BUDGET_UNIT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *budgetUnit;

@end


/**
 *  Settings that control the budget of a single budget segment.
 */
@interface GTLRDisplayVideo_InsertionOrderBudgetSegment : GTLRObject

/**
 *  Required. The budget amount the insertion order will spend for the given
 *  date_range. The amount is in micros. Must be greater than 0. For example,
 *  500000000 represents 500 standard units of the currency.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *budgetAmountMicros;

/**
 *  The budget_id of the campaign budget that this insertion order budget
 *  segment is a part of.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *campaignBudgetId;

/**
 *  Required. The start and end date settings of the budget segment. They are
 *  resolved relative to the parent advertiser's time zone. * When creating a
 *  new budget segment, both `start_date` and `end_date` must be in the future.
 *  * An existing budget segment with a `start_date` in the past has a mutable
 *  `end_date` but an immutable `start_date`. * `end_date` must be the
 *  `start_date` or later, both before the year 2037.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DateRange *dateRange;

/**
 *  The budget segment description. It can be used to enter Purchase Order
 *  information for each budget segment and have that information printed on the
 *  invoices. Must be UTF-8 encoded.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

@end


/**
 *  Details of Integral Ad Science settings.
 */
@interface GTLRDisplayVideo_IntegralAdScience : GTLRObject

/**
 *  The custom segment ID provided by Integral Ad Science. The ID must be
 *  between `1000001` and `1999999`, inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *customSegmentId;

/**
 *  Display Viewability section (applicable to display line items only).
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability40
 *        Target 40% Viewability or Higher. (Value:
 *        "PERFORMANCE_VIEWABILITY_40")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability50
 *        Target 50% Viewability or Higher. (Value:
 *        "PERFORMANCE_VIEWABILITY_50")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability60
 *        Target 60% Viewability or Higher. (Value:
 *        "PERFORMANCE_VIEWABILITY_60")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewability70
 *        Target 70% Viewability or Higher. (Value:
 *        "PERFORMANCE_VIEWABILITY_70")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_DisplayViewability_PerformanceViewabilityUnspecified
 *        This enum is only a placeholder and it doesn't specify any display
 *        viewability options. (Value: "PERFORMANCE_VIEWABILITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *displayViewability;

/**
 *  Ad Fraud settings.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAdFraudRisk_SuspiciousActivityHmr
 *        Ad Fraud - Exclude High and Moderate Risk. (Value:
 *        "SUSPICIOUS_ACTIVITY_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAdFraudRisk_SuspiciousActivityHr
 *        Ad Fraud - Exclude High Risk. (Value: "SUSPICIOUS_ACTIVITY_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAdFraudRisk_SuspiciousActivityUnspecified
 *        This enum is only a placeholder and it doesn't specify any ad fraud
 *        prevention options. (Value: "SUSPICIOUS_ACTIVITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedAdFraudRisk;

/**
 *  Brand Safety - **Adult content**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAdultRisk_AdultHmr
 *        Adult - Exclude High and Moderate Risk. (Value: "ADULT_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAdultRisk_AdultHr
 *        Adult - Exclude High Risk. (Value: "ADULT_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAdultRisk_AdultUnspecified
 *        This enum is only a placeholder and it doesn't specify any adult
 *        options. (Value: "ADULT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedAdultRisk;

/**
 *  Brand Safety - **Alcohol**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAlcoholRisk_AlcoholHmr
 *        Alcohol - Exclude High and Moderate Risk. (Value: "ALCOHOL_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAlcoholRisk_AlcoholHr
 *        Alcohol - Exclude High Risk. (Value: "ALCOHOL_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedAlcoholRisk_AlcoholUnspecified
 *        This enum is only a placeholder and it doesn't specify any alcohol
 *        options. (Value: "ALCOHOL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedAlcoholRisk;

/**
 *  Brand Safety - **Drugs**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedDrugsRisk_DrugsHmr
 *        Drugs - Exclude High and Moderate Risk. (Value: "DRUGS_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedDrugsRisk_DrugsHr
 *        Drugs - Exclude High Risk. (Value: "DRUGS_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedDrugsRisk_DrugsUnspecified
 *        This enum is only a placeholder and it doesn't specify any drugs
 *        options. (Value: "DRUGS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedDrugsRisk;

/**
 *  Brand Safety - **Gambling**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedGamblingRisk_GamblingHmr
 *        Gambling - Exclude High and Moderate Risk. (Value: "GAMBLING_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedGamblingRisk_GamblingHr
 *        Gambling - Exclude High Risk. (Value: "GAMBLING_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedGamblingRisk_GamblingUnspecified
 *        This enum is only a placeholder and it doesn't specify any gambling
 *        options. (Value: "GAMBLING_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedGamblingRisk;

/**
 *  Brand Safety - **Hate speech**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedHateSpeechRisk_HateSpeechHmr
 *        Hate Speech - Exclude High and Moderate Risk. (Value:
 *        "HATE_SPEECH_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedHateSpeechRisk_HateSpeechHr
 *        Hate Speech - Exclude High Risk. (Value: "HATE_SPEECH_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedHateSpeechRisk_HateSpeechUnspecified
 *        This enum is only a placeholder and it doesn't specify any hate speech
 *        options. (Value: "HATE_SPEECH_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedHateSpeechRisk;

/**
 *  Brand Safety - **Illegal downloads**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedIllegalDownloadsRisk_IllegalDownloadsHmr
 *        Illegal Downloads - Exclude High and Moderate Risk. (Value:
 *        "ILLEGAL_DOWNLOADS_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedIllegalDownloadsRisk_IllegalDownloadsHr
 *        Illegal Downloads - Exclude High Risk. (Value: "ILLEGAL_DOWNLOADS_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedIllegalDownloadsRisk_IllegalDownloadsUnspecified
 *        This enum is only a placeholder and it doesn't specify any illegal
 *        downloads options. (Value: "ILLEGAL_DOWNLOADS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedIllegalDownloadsRisk;

/**
 *  Brand Safety - **Offensive language**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedOffensiveLanguageRisk_OffensiveLanguageHmr
 *        Offensive Language - Exclude High and Moderate Risk. (Value:
 *        "OFFENSIVE_LANGUAGE_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedOffensiveLanguageRisk_OffensiveLanguageHr
 *        Offensive Language - Exclude High Risk. (Value:
 *        "OFFENSIVE_LANGUAGE_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedOffensiveLanguageRisk_OffensiveLanguageUnspecified
 *        This enum is only a placeholder and it doesn't specify any language
 *        options. (Value: "OFFENSIVE_LANGUAGE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedOffensiveLanguageRisk;

/**
 *  Brand Safety - **Violence**.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedViolenceRisk_ViolenceHmr
 *        Violence - Exclude High and Moderate Risk. (Value: "VIOLENCE_HMR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedViolenceRisk_ViolenceHr
 *        Violence - Exclude High Risk. (Value: "VIOLENCE_HR")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_ExcludedViolenceRisk_ViolenceUnspecified
 *        This enum is only a placeholder and it doesn't specify any violence
 *        options. (Value: "VIOLENCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *excludedViolenceRisk;

/**
 *  Brand Safety - **Unrateable**.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *excludeUnrateable;

/**
 *  True advertising quality (applicable to Display line items only).
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq1000 TRAQ
 *        score 1000. (Value: "TRAQ_1000")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq250 TRAQ
 *        score 250-1000. (Value: "TRAQ_250")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq500 TRAQ
 *        score 500-1000. (Value: "TRAQ_500")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq600 TRAQ
 *        score 600-1000. (Value: "TRAQ_600")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq700 TRAQ
 *        score 700-1000. (Value: "TRAQ_700")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq750 TRAQ
 *        score 750-1000. (Value: "TRAQ_750")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_Traq875 TRAQ
 *        score 875-1000. (Value: "TRAQ_875")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_TraqScoreOption_TraqUnspecified
 *        This enum is only a placeholder and it doesn't specify any true
 *        advertising quality scores. (Value: "TRAQ_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *traqScoreOption;

/**
 *  Video Viewability Section (applicable to video line items only).
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability40
 *        40%+ in view (IAB video viewability standard). (Value:
 *        "VIDEO_VIEWABILITY_40")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability50
 *        50%+ in view (IAB video viewability standard). (Value:
 *        "VIDEO_VIEWABILITY_50")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability60
 *        60%+ in view (IAB video viewability standard). (Value:
 *        "VIDEO_VIEWABILITY_60")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewability70
 *        70%+ in view (IAB video viewability standard). (Value:
 *        "VIDEO_VIEWABILITY_70")
 *    @arg @c kGTLRDisplayVideo_IntegralAdScience_VideoViewability_VideoViewabilityUnspecified
 *        This enum is only a placeholder and it doesn't specify any video
 *        viewability options. (Value: "VIDEO_VIEWABILITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *videoViewability;

@end


/**
 *  Integration details of an entry.
 */
@interface GTLRDisplayVideo_IntegrationDetails : GTLRObject

/**
 *  Additional details of the entry in string format. Must be UTF-8 encoded with
 *  a length of no more than 1000 characters.
 */
@property(nonatomic, copy, nullable) NSString *details;

/**
 *  An external identifier to be associated with the entry. The integration code
 *  will show up together with the entry in many places in the system, for
 *  example, reporting. Must be UTF-8 encoded with a length of no more than 500
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *integrationCode;

@end


/**
 *  An inventory source.
 */
@interface GTLRDisplayVideo_InventorySource : GTLRObject

/**
 *  Whether the inventory source has a guaranteed or non-guaranteed delivery.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySource_Commitment_InventorySourceCommitmentGuaranteed
 *        The commitment is guaranteed delivery. (Value:
 *        "INVENTORY_SOURCE_COMMITMENT_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Commitment_InventorySourceCommitmentNonGuaranteed
 *        The commitment is non-guaranteed delivery. (Value:
 *        "INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Commitment_InventorySourceCommitmentUnspecified
 *        The commitment is not specified or is unknown in this version. (Value:
 *        "INVENTORY_SOURCE_COMMITMENT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *commitment;

/**
 *  The creative requirements of the inventory source. Not applicable for
 *  auction packages.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CreativeConfig *> *creativeConfigs;

/**
 *  The ID in the exchange space that uniquely identifies the inventory source.
 *  Must be unique across buyers within each exchange but not necessarily unique
 *  across exchanges.
 */
@property(nonatomic, copy, nullable) NSString *dealId;

/**
 *  The delivery method of the inventory source. * For non-guaranteed inventory
 *  sources, the only acceptable value is
 *  `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory
 *  sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and
 *  `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySource_DeliveryMethod_InventorySourceDeliveryMethodProgrammatic
 *        The delivery method is programmatic. (Value:
 *        "INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC")
 *    @arg @c kGTLRDisplayVideo_InventorySource_DeliveryMethod_InventorySourceDeliveryMethodTag
 *        The delivery method is tag. (Value:
 *        "INVENTORY_SOURCE_DELIVERY_METHOD_TAG")
 *    @arg @c kGTLRDisplayVideo_InventorySource_DeliveryMethod_InventorySourceDeliveryMethodUnspecified
 *        The delivery method is not specified or is unknown in this version.
 *        (Value: "INVENTORY_SOURCE_DELIVERY_METHOD_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *deliveryMethod;

/**
 *  The display name of the inventory source. Must be UTF-8 encoded with a
 *  maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The exchange to which the inventory source belongs.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdform Adform.
 *        (Value: "EXCHANGE_ADFORM")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdmeta Admeta.
 *        (Value: "EXCHANGE_ADMETA")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdmixer
 *        Admixer. (Value: "EXCHANGE_ADMIXER")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdsmogo
 *        AdsMogo. (Value: "EXCHANGE_ADSMOGO")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAdswizz
 *        AdsWizz. (Value: "EXCHANGE_ADSWIZZ")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAja Aja.
 *        (Value: "EXCHANGE_AJA")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeAppnexus
 *        AppNexus. (Value: "EXCHANGE_APPNEXUS")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeBidswitch
 *        BidSwitch. (Value: "EXCHANGE_BIDSWITCH")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeBrightroll
 *        BrightRoll Exchange for Video from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeBrightrollDisplay
 *        BrightRoll Exchange for Display from Yahoo!. (Value:
 *        "EXCHANGE_BRIGHTROLL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeCadreon
 *        Cadreon. (Value: "EXCHANGE_CADREON")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeDailymotion
 *        Dailymotion. (Value: "EXCHANGE_DAILYMOTION")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeDax DAX.
 *        (Value: "EXCHANGE_DAX")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFive Five.
 *        (Value: "EXCHANGE_FIVE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFluct Fluct.
 *        (Value: "EXCHANGE_FLUCT")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFreewheel
 *        FreeWheel SSP. (Value: "EXCHANGE_FREEWHEEL")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeFyber Fyber.
 *        (Value: "EXCHANGE_FYBER")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeGeniee Geniee.
 *        (Value: "EXCHANGE_GENIEE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeGoogleAdManager
 *        Google Ad Manager. (Value: "EXCHANGE_GOOGLE_AD_MANAGER")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeGumgum GumGum.
 *        (Value: "EXCHANGE_GUMGUM")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeIbillboard
 *        iBILLBOARD. (Value: "EXCHANGE_IBILLBOARD")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeImobile
 *        i-mobile. (Value: "EXCHANGE_IMOBILE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeImproveDigital
 *        Improve Digital. (Value: "EXCHANGE_IMPROVE_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeIndex Index
 *        Exchange. (Value: "EXCHANGE_INDEX")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeInmobi InMobi.
 *        (Value: "EXCHANGE_INMOBI")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeKargo Kargo.
 *        (Value: "EXCHANGE_KARGO")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeMedianet
 *        Media.net. (Value: "EXCHANGE_MEDIANET")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeMicroad
 *        MicroAd. (Value: "EXCHANGE_MICROAD")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeMopub MoPub.
 *        (Value: "EXCHANGE_MOPUB")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeNend Nend.
 *        (Value: "EXCHANGE_NEND")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeNexstarDigital
 *        Nexstar Digital. (Value: "EXCHANGE_NEXSTAR_DIGITAL")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOneByAolDisplay
 *        ONE by AOL: Display Market Place. (Value:
 *        "EXCHANGE_ONE_BY_AOL_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOneByAolMobile
 *        ONE by AOL: Mobile. (Value: "EXCHANGE_ONE_BY_AOL_MOBILE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOneByAolVideo
 *        ONE by AOL: Video. (Value: "EXCHANGE_ONE_BY_AOL_VIDEO")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOoyala Ooyala.
 *        (Value: "EXCHANGE_OOYALA")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOpen8 Open8.
 *        (Value: "EXCHANGE_OPEN8")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeOpenx OpenX.
 *        (Value: "EXCHANGE_OPENX")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangePermodo
 *        Permodo. (Value: "EXCHANGE_PERMODO")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangePlatformid
 *        PlatformId. (Value: "EXCHANGE_PLATFORMID")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangePlatformone
 *        Platform One. (Value: "EXCHANGE_PLATFORMONE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangePubmatic
 *        PubMatic. (Value: "EXCHANGE_PUBMATIC")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangePulsepoint
 *        PulsePoint. (Value: "EXCHANGE_PULSEPOINT")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeRedForPublishers
 *        Red For Publishers. (Value: "EXCHANGE_RED_FOR_PUBLISHERS")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeRevenuemax
 *        RevenueMax. (Value: "EXCHANGE_REVENUEMAX")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeRubicon
 *        Rubicon. (Value: "EXCHANGE_RUBICON")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSharethrough
 *        Sharethrough. (Value: "EXCHANGE_SHARETHROUGH")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmaato Smaato.
 *        (Value: "EXCHANGE_SMAATO")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmartclip
 *        SmartClip. (Value: "EXCHANGE_SMARTCLIP")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmartrtb
 *        SmartRTB+. (Value: "EXCHANGE_SMARTRTB")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSmartstreamtv
 *        SmartstreamTv. (Value: "EXCHANGE_SMARTSTREAMTV")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSoundcast
 *        SoundCast. (Value: "EXCHANGE_SOUNDCAST")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSovrn Sovrn.
 *        (Value: "EXCHANGE_SOVRN")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSpotxchange
 *        SpotXchange. (Value: "EXCHANGE_SPOTXCHANGE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeStroer Ströer
 *        SSP. (Value: "EXCHANGE_STROER")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeSupership
 *        Supership. (Value: "EXCHANGE_SUPERSHIP")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTaboola
 *        Taboola. (Value: "EXCHANGE_TABOOLA")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTapjoy Tapjoy.
 *        (Value: "EXCHANGE_TAPJOY")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTeadstv
 *        TeadsTv. (Value: "EXCHANGE_TEADSTV")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTelaria
 *        Telaria. (Value: "EXCHANGE_TELARIA")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTriplelift
 *        TripleLift. (Value: "EXCHANGE_TRIPLELIFT")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTriton Triton.
 *        (Value: "EXCHANGE_TRITON")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeTvn TVN.
 *        (Value: "EXCHANGE_TVN")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeUnited United.
 *        (Value: "EXCHANGE_UNITED")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeUnrulyx
 *        UnrulyX. (Value: "EXCHANGE_UNRULYX")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeUnspecified
 *        Exchange is not specified or is unknown in this version. (Value:
 *        "EXCHANGE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeVistar Vistar.
 *        (Value: "EXCHANGE_VISTAR")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeWaze Waze.
 *        (Value: "EXCHANGE_WAZE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeYieldlab
 *        Yieldlab. (Value: "EXCHANGE_YIELDLAB")
 *    @arg @c kGTLRDisplayVideo_InventorySource_Exchange_ExchangeYieldmo
 *        Yieldmo. (Value: "EXCHANGE_YIELDMO")
 */
@property(nonatomic, copy, nullable) NSString *exchange;

/**
 *  Immutable. The ID of the guaranteed order that this inventory source belongs
 *  to. Only applicable when commitment is
 *  `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`.
 */
@property(nonatomic, copy, nullable) NSString *guaranteedOrderId;

/**
 *  Output only. The unique ID of the inventory source. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inventorySourceId;

/**
 *  Output only. The product type of the inventory source, denoting the way
 *  through which it sells inventory.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_AuctionPackage
 *        The inventory source sells inventory through Auction Package.
 *        Modifying inventory sources of this product type are not supported via
 *        API. (Value: "AUCTION_PACKAGE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_GuaranteedPackage
 *        The inventory source sells inventory through Guaranteed Package.
 *        Modifying inventory sources of this product type are not supported via
 *        API. (Value: "GUARANTEED_PACKAGE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_InstantReserve
 *        The inventory source sells inventory through Instant Reserve.
 *        Modifying inventory sources of this product type are not supported via
 *        API. (Value: "INSTANT_RESERVE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_InventorySourceProductTypeUnspecified
 *        The product type is not specified or is unknown in this version.
 *        Modifying inventory sources of this product type are not supported via
 *        API. (Value: "INVENTORY_SOURCE_PRODUCT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_PreferredDeal
 *        The inventory source sells inventory through Preferred Deal. (Value:
 *        "PREFERRED_DEAL")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_PrivateAuction
 *        The inventory source sells inventory through Private Auction. (Value:
 *        "PRIVATE_AUCTION")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_ProgrammaticGuaranteed
 *        The inventory source sells inventory through Programmatic Guaranteed.
 *        (Value: "PROGRAMMATIC_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_ProgrammaticTv
 *        The inventory source sells inventory through Programmtic TV. Modifying
 *        inventory sources of this product type are not supported via API.
 *        (Value: "PROGRAMMATIC_TV")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_TagGuaranteed
 *        The inventory source sells inventory through Tag Guaranteed. (Value:
 *        "TAG_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceProductType_YoutubeReserve
 *        The inventory source sells inventory through YouTube Reserve. (Value:
 *        "YOUTUBE_RESERVE")
 */
@property(nonatomic, copy, nullable) NSString *inventorySourceProductType;

/**
 *  Denotes the type of the inventory source.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceType_InventorySourceTypeAuctionPackage
 *        Auction package. (Value: "INVENTORY_SOURCE_TYPE_AUCTION_PACKAGE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceType_InventorySourceTypePrivate
 *        Private inventory source. (Value: "INVENTORY_SOURCE_TYPE_PRIVATE")
 *    @arg @c kGTLRDisplayVideo_InventorySource_InventorySourceType_InventorySourceTypeUnspecified
 *        The inventory source type is not specified or is unknown in this
 *        version. (Value: "INVENTORY_SOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *inventorySourceType;

/** Output only. The resource name of the inventory source. */
@property(nonatomic, copy, nullable) NSString *name;

/** The publisher/seller name of the inventory source. */
@property(nonatomic, copy, nullable) NSString *publisherName;

/** Required. The rate details of the inventory source. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_RateDetails *rateDetails;

/**
 *  Output only. The IDs of advertisers with read-only access to the inventory
 *  source.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *readAdvertiserIds;

/**
 *  Output only. The IDs of partners with read-only access to the inventory
 *  source. All advertisers of partners in this field inherit read-only access
 *  to the inventory source.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *readPartnerIds;

/**
 *  The partner or advertisers that have read/write access to the inventory
 *  source. Output only when commitment is
 *  `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`, in which case the read/write
 *  accessors are inherited from the parent guaranteed order. Required when
 *  commitment is `INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED`. If commitment is
 *  `INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED` and a partner is set in this
 *  field, all advertisers under this partner will automatically have read-only
 *  access to the inventory source. These advertisers will not be included in
 *  read_advertiser_ids.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceAccessors *readWriteAccessors;

/** The status settings of the inventory source. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceStatus *status;

/**
 *  Immutable. The unique ID of the sub-site property assigned to this inventory
 *  source.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *subSitePropertyId;

/** The time range when this inventory source starts and stops serving. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_TimeRange *timeRange;

/**
 *  Output only. The timestamp when the inventory source was last updated.
 *  Assigned by the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The partner or advertisers with access to the inventory source.
 */
@interface GTLRDisplayVideo_InventorySourceAccessors : GTLRObject

/**
 *  The advertisers with access to the inventory source. All advertisers must
 *  belong to the same partner.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceAccessorsAdvertiserAccessors *advertisers;

/** The partner with access to the inventory source. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_InventorySourceAccessorsPartnerAccessor *partner;

@end


/**
 *  The advertisers with access to the inventory source.
 */
@interface GTLRDisplayVideo_InventorySourceAccessorsAdvertiserAccessors : GTLRObject

/**
 *  The IDs of the advertisers.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *advertiserIds;

@end


/**
 *  The partner with access to the inventory source.
 */
@interface GTLRDisplayVideo_InventorySourceAccessorsPartnerAccessor : GTLRObject

/**
 *  The ID of the partner.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

@end


/**
 *  Targeting details for inventory source. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_INVENTORY_SOURCE`.
 */
@interface GTLRDisplayVideo_InventorySourceAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. ID of the inventory source. Should refer to the
 *  inventory_source_id field of an InventorySource resource.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inventorySourceId;

@end


/**
 *  The configuration for display creatives.
 */
@interface GTLRDisplayVideo_InventorySourceDisplayCreativeConfig : GTLRObject

/**
 *  The size requirements for display creatives that can be assigned to the
 *  inventory source.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Dimensions *creativeSize;

@end


/**
 *  A filtering option for filtering on Inventory Source entities.
 */
@interface GTLRDisplayVideo_InventorySourceFilter : GTLRObject

/**
 *  Inventory Sources to download by ID. All IDs must belong to the same
 *  Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Leave empty
 *  to download all Inventory Sources for the selected Advertiser or Partner.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *inventorySourceIds;

@end


/**
 *  A collection of targetable inventory sources.
 */
@interface GTLRDisplayVideo_InventorySourceGroup : GTLRObject

/**
 *  Required. The display name of the inventory source group. Must be UTF-8
 *  encoded with a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The unique ID of the inventory source group. Assigned by the
 *  system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inventorySourceGroupId;

/** Output only. The resource name of the inventory source group. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Targeting details for inventory source group. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`.
 */
@interface GTLRDisplayVideo_InventorySourceGroupAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. ID of the inventory source group. Should refer to the
 *  inventory_source_group_id field of an InventorySourceGroup resource.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inventorySourceGroupId;

@end


/**
 *  The status related settings of the inventory source.
 */
@interface GTLRDisplayVideo_InventorySourceStatus : GTLRObject

/**
 *  Output only. The configuration status of the inventory source. Only
 *  applicable for guaranteed inventory sources. Acceptable values are
 *  `INVENTORY_SOURCE_CONFIG_STATUS_PENDING` and
 *  `INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED`. An inventory source must be
 *  configured (fill in the required fields, choose creatives, and select a
 *  default campaign) before it can serve.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_ConfigStatus_InventorySourceConfigStatusCompleted
 *        The state after the buyer configures a guaranteed inventory source.
 *        (Value: "INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_ConfigStatus_InventorySourceConfigStatusPending
 *        The beginning state of a guaranteed inventory source. The inventory
 *        source in this state needs to be configured. (Value:
 *        "INVENTORY_SOURCE_CONFIG_STATUS_PENDING")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_ConfigStatus_InventorySourceConfigStatusUnspecified
 *        The approval status is not specified or is unknown in this version.
 *        (Value: "INVENTORY_SOURCE_CONFIG_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *configStatus;

/**
 *  The user-provided reason for pausing this inventory source. Must not exceed
 *  100 characters. Only applicable when entity_status is set to
 *  `ENTITY_STATUS_PAUSED`.
 */
@property(nonatomic, copy, nullable) NSString *entityPauseReason;

/**
 *  Whether or not the inventory source is servable. Acceptable values are
 *  `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and
 *  `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusActive
 *        The entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusArchived
 *        The entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusDraft
 *        The entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusPaused
 *        Bidding and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/**
 *  Output only. The seller-provided reason for pausing this inventory source.
 *  Only applicable for inventory sources synced directly from the publishers
 *  and when seller_status is set to `ENTITY_STATUS_PAUSED`.
 */
@property(nonatomic, copy, nullable) NSString *sellerPauseReason;

/**
 *  Output only. The status set by the seller for the inventory source. Only
 *  applicable for inventory sources synced directly from the publishers.
 *  Acceptable values are `ENTITY_STATUS_ACTIVE` and `ENTITY_STATUS_PAUSED`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusActive
 *        The entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusArchived
 *        The entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusDraft
 *        The entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusPaused
 *        Bidding and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_InventorySourceStatus_SellerStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *sellerStatus;

@end


/**
 *  The configuration for video creatives.
 */
@interface GTLRDisplayVideo_InventorySourceVideoCreativeConfig : GTLRObject

/**
 *  The duration requirements for the video creatives that can be assigned to
 *  the inventory source.
 */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

@end


/**
 *  A single invoice.
 */
@interface GTLRDisplayVideo_Invoice : GTLRObject

/**
 *  The budget grouping ID for this invoice. This field will only be set if the
 *  invoice level of the corresponding billing profile was set to "Budget
 *  invoice grouping ID".
 */
@property(nonatomic, copy, nullable) NSString *budgetInvoiceGroupingId;

/**
 *  The list of summarized information for each budget associated with this
 *  invoice. This field will only be set if the invoice detail level of the
 *  corresponding billing profile was set to "Budget level PO".
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_BudgetSummary *> *budgetSummaries;

/**
 *  The ID of the original invoice being adjusted by this invoice, if
 *  applicable. May appear on the invoice PDF as `Reference invoice number`. If
 *  replaced_invoice_ids is set, this field will be empty.
 */
@property(nonatomic, copy, nullable) NSString *correctedInvoiceId;

/** The currency used in the invoice in ISO 4217 format. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/** The display name of the invoice. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The date when the invoice is due. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Date *dueDate;

/** The unique ID of the invoice. */
@property(nonatomic, copy, nullable) NSString *invoiceId;

/**
 *  The type of invoice document.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Invoice_InvoiceType_InvoiceTypeCredit The
 *        invoice has a negative amount. (Value: "INVOICE_TYPE_CREDIT")
 *    @arg @c kGTLRDisplayVideo_Invoice_InvoiceType_InvoiceTypeInvoice The
 *        invoice has a positive amount. (Value: "INVOICE_TYPE_INVOICE")
 *    @arg @c kGTLRDisplayVideo_Invoice_InvoiceType_InvoiceTypeUnspecified Not
 *        specified or is unknown in this version. (Value:
 *        "INVOICE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *invoiceType;

/** The date when the invoice was issued. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Date *issueDate;

/** The resource name of the invoice. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The total amount of costs or adjustments not tied to a particular budget, in
 *  micros of the invoice's currency. For example, if currency_code is `USD`,
 *  then 1000000 represents one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nonBudgetMicros;

/**
 *  The ID of the payments account the invoice belongs to. Appears on the
 *  invoice PDF as `Billing Account Number`.
 */
@property(nonatomic, copy, nullable) NSString *paymentsAccountId;

/**
 *  The ID of the payments profile the invoice belongs to. Appears on the
 *  invoice PDF as `Billing ID`.
 */
@property(nonatomic, copy, nullable) NSString *paymentsProfileId;

/**
 *  The URL to download a PDF copy of the invoice. This URL is user specific and
 *  requires a valid OAuth 2.0 access token to access. The access token must be
 *  provided in an `Authorization: Bearer` HTTP header and be authorized for one
 *  of the following scopes: *
 *  `https://www.googleapis.com/auth/display-video-mediaplanning` *
 *  `https://www.googleapis.com/auth/display-video` The URL will be valid for 7
 *  days after retrieval of this invoice object or until this invoice is
 *  retrieved again.
 */
@property(nonatomic, copy, nullable) NSString *pdfUrl;

/** Purchase order number associated with the invoice. */
@property(nonatomic, copy, nullable) NSString *purchaseOrderNumber;

/**
 *  The ID(s) of any originally issued invoice that is being cancelled by this
 *  invoice, if applicable. Multiple invoices may be listed if those invoices
 *  are being consolidated into a single invoice. May appear on invoice PDF as
 *  `Replaced invoice numbers`. If corrected_invoice_id is set, this field will
 *  be empty.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *replacedInvoiceIds;

/** The service start and end dates which are covered by this invoice. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DateRange *serviceDateRange;

/**
 *  The pre-tax subtotal amount, in micros of the invoice's currency. For
 *  example, if currency_code is `USD`, then 1000000 represents one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *subtotalAmountMicros;

/**
 *  The invoice total amount, in micros of the invoice's currency. For example,
 *  if currency_code is `USD`, then 1000000 represents one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalAmountMicros;

/**
 *  The sum of all taxes in invoice, in micros of the invoice's currency. For
 *  example, if currency_code is `USD`, then 1000000 represents one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalTaxAmountMicros;

@end


/**
 *  Details for assigned keyword targeting option. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_KEYWORD`.
 */
@interface GTLRDisplayVideo_KeywordAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. The keyword, for example `car insurance`. Positive keyword cannot
 *  be offensive word. Must be UTF-8 encoded with a maximum size of 255 bytes.
 *  Maximum number of characters is 80. Maximum number of words is 10.
 */
@property(nonatomic, copy, nullable) NSString *keyword;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

@end


/**
 *  Details for assigned language targeting option. This will be populated in
 *  the details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_LANGUAGE`.
 */
@interface GTLRDisplayVideo_LanguageAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the language (e.g., "French"). */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted. All assigned language
 *  targeting options on the same resource must have the same value for this
 *  field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_LANGUAGE`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable language. This will be populated in the
 *  language_details field when targeting_type is `TARGETING_TYPE_LANGUAGE`.
 */
@interface GTLRDisplayVideo_LanguageTargetingOptionDetails : GTLRObject

/** Output only. The display name of the language (e.g., "French"). */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  A single line item.
 */
@interface GTLRDisplayVideo_LineItem : GTLRObject

/**
 *  Output only. The unique ID of the advertiser the line item belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/** Required. The bidding strategy of the line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_BiddingStrategy *bidStrategy;

/** Required. The budget allocation setting of the line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_LineItemBudget *budget;

/**
 *  Output only. The unique ID of the campaign that the line item belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *campaignId;

/** The conversion tracking setting of the line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ConversionCountingConfig *conversionCounting;

/**
 *  The IDs of the creatives associated with the line item.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *creativeIds;

/**
 *  Required. The display name of the line item. Must be UTF-8 encoded with a
 *  maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. Controls whether or not the line item can spend its budget and bid
 *  on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is
 *  allowed. To activate a line item, use UpdateLineItem method and update the
 *  status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be
 *  changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the
 *  line item's parent insertion order is not active, the line item can't spend
 *  its budget even if its own status is `ENTITY_STATUS_ACTIVE`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusActive The
 *        entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusArchived The
 *        entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusDraft The
 *        entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusPaused Bidding
 *        and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_LineItem_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/**
 *  Whether to exclude new exchanges from automatically being targeted by the
 *  line item. This field is false by default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *excludeNewExchanges;

/** Required. The start and end time of the line item's flight. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_LineItemFlight *flight;

/**
 *  Required. The impression frequency cap settings of the line item. The
 *  max_impressions field in this settings object must be used if assigning a
 *  limited cap.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_FrequencyCap *frequencyCap;

/**
 *  Required. Immutable. The unique ID of the insertion order that the line item
 *  belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *insertionOrderId;

/** Integration details of the line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_IntegrationDetails *integrationDetails;

/**
 *  Output only. The unique ID of the line item. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lineItemId;

/**
 *  Required. Immutable. The type of the line item.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeAudioDefault
 *        RTB Audio ads sold for a variety of environments. (Value:
 *        "LINE_ITEM_TYPE_AUDIO_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeDisplayDefault
 *        Image, HTML5, native, or rich media ads. (Value:
 *        "LINE_ITEM_TYPE_DISPLAY_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeDisplayMobileAppInstall
 *        Display ads that drive installs of an app. (Value:
 *        "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeDisplayMobileAppInventory
 *        Display ads served on mobile app inventory. Line items of this type
 *        and their targeting cannot be created or updated using the API.
 *        (Value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeUnspecified
 *        Type value is not specified or is unknown in this version. Line items
 *        of this type and their targeting cannot be created or updated using
 *        the API. (Value: "LINE_ITEM_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoDefault
 *        Video ads sold on a CPM basis for a variety of environments. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoMobileAppInstall
 *        Video ads that drive installs of an app. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoMobileAppInventory
 *        Video ads served on mobile app inventory. Line items of this type and
 *        their targeting cannot be created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeVideoOverTheTop
 *        Over-the-top ads present in OTT insertion orders. This type is only
 *        applicable to line items with an insertion order of
 *        insertion_order_type `OVER_THE_TOP`. (Value:
 *        "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersAction
 *        YouTube video ads that promote conversions. Line items of this type
 *        and their targeting cannot be created or updated using the API.
 *        (Value: "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_ACTION")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersAudio
 *        YouTube audio ads. Line items of this type and their targeting cannot
 *        be created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_AUDIO")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersNonSkippable
 *        YouTube video ads (up to 15 seconds) that cannot be skipped. Line
 *        items of this type and their targeting cannot be created or updated
 *        using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_NON_SKIPPABLE")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersReach
 *        YouTube video ads that optimize reaching more unique users at lower
 *        cost. May include bumper ads, skippable in-stream ads, or a mix of
 *        types. Line items of this type and their targeting cannot be created
 *        or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_REACH")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersSimple
 *        Default YouTube video ads. Line items of this type and their targeting
 *        cannot be created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_SIMPLE")
 *    @arg @c kGTLRDisplayVideo_LineItem_LineItemType_LineItemTypeYoutubeAndPartnersVideoSequence
 *        YouTube video ads that show a story in a particular sequence using a
 *        mix of formats. Line items of this type and their targeting cannot be
 *        created or updated using the API. (Value:
 *        "LINE_ITEM_TYPE_YOUTUBE_AND_PARTNERS_VIDEO_SEQUENCE")
 */
@property(nonatomic, copy, nullable) NSString *lineItemType;

/**
 *  The mobile app promoted by the line item. This is applicable only when
 *  line_item_type is either `LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL` or
 *  `LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_MobileApp *mobileApp;

/** Output only. The resource name of the line item. */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The budget spending speed setting of the line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Pacing *pacing;

/**
 *  The partner costs associated with the line item. If absent or empty in
 *  CreateLineItem method, the newly created line item will inherit partner
 *  costs from its parent insertion order.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_PartnerCost *> *partnerCosts;

/** Required. The partner revenue model setting of the line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PartnerRevenueModel *partnerRevenueModel;

/**
 *  Output only. The reservation type of the line item.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeInstantReserve
 *        Created with an instant quote. Only applicable to YouTube and partners
 *        line items. (Value: "RESERVATION_TYPE_INSTANT_RESERVE")
 *    @arg @c kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeNotGuaranteed
 *        Not created through a guaranteed inventory source. (Value:
 *        "RESERVATION_TYPE_NOT_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypePetraViral
 *        Created through a Petra inventory source. Only applicable to YouTube
 *        and Partners line items. (Value: "RESERVATION_TYPE_PETRA_VIRAL")
 *    @arg @c kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeProgrammaticGuaranteed
 *        Created through a programmatic guaranteed inventory source. (Value:
 *        "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeTagGuaranteed
 *        Created through a tag guaranteed inventory source. (Value:
 *        "RESERVATION_TYPE_TAG_GUARANTEED")
 *    @arg @c kGTLRDisplayVideo_LineItem_ReservationType_ReservationTypeUnspecified
 *        Reservation type value is not specified or is unknown in this version.
 *        (Value: "RESERVATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reservationType;

/**
 *  The [targeting expansion](//support.google.com/displayvideo/answer/10191558)
 *  settings of the line item. This config is only applicable when eligible
 *  audience list targeting is assigned to the line item. Beginning November 7,
 *  2022, these settings may represent the [optimized targeting
 *  feature](//support.google.com/displayvideo/answer/12060859) in place of
 *  targeting expansion. This feature will be rolled out to all partners by
 *  November 9, 2022.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_TargetingExpansionConfig *targetingExpansion;

/**
 *  Output only. The timestamp when the line item was last updated. Assigned by
 *  the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Output only. The warning messages generated by the line item. These warnings
 *  do not block saving the line item, but some may block the line item from
 *  running.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *warningMessages;

/** Output only. Settings specific to YouTube and Partners line items. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_YoutubeAndPartnersSettings *youtubeAndPartnersSettings;

@end


/**
 *  Wrapper object associating an assigned_targeting_option resource and the
 *  line item it is assigned to.
 */
@interface GTLRDisplayVideo_LineItemAssignedTargetingOption : GTLRObject

/** The assigned targeting option resource. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AssignedTargetingOption *assignedTargetingOption;

/**
 *  The ID of the line item the assigned targeting option is assigned to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lineItemId;

@end


/**
 *  Settings that control how budget is allocated.
 */
@interface GTLRDisplayVideo_LineItemBudget : GTLRObject

/**
 *  Required. The type of the budget allocation.
 *  `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is only applicable when
 *  automatic budget allocation is enabled for the parent insertion order.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeAutomatic
 *        Automatic budget allocation is enabled for the line item. (Value:
 *        "LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC")
 *    @arg @c kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeFixed
 *        A fixed max budget amount is allocated for the line item. (Value:
 *        "LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED")
 *    @arg @c kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeUnlimited
 *        No budget limit is applied to the line item. (Value:
 *        "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED")
 *    @arg @c kGTLRDisplayVideo_LineItemBudget_BudgetAllocationType_LineItemBudgetAllocationTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *budgetAllocationType;

/**
 *  Output only. The budget unit specifies whether the budget is currency based
 *  or impression based. This value is inherited from the parent insertion
 *  order.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_LineItemBudget_BudgetUnit_BudgetUnitCurrency
 *        Budgeting in currency amounts. (Value: "BUDGET_UNIT_CURRENCY")
 *    @arg @c kGTLRDisplayVideo_LineItemBudget_BudgetUnit_BudgetUnitImpressions
 *        Budgeting in impression amounts. (Value: "BUDGET_UNIT_IMPRESSIONS")
 *    @arg @c kGTLRDisplayVideo_LineItemBudget_BudgetUnit_BudgetUnitUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "BUDGET_UNIT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *budgetUnit;

/**
 *  The maximum budget amount the line item will spend. Must be greater than 0.
 *  When budget_allocation_type is: *
 *  `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is immutable and is
 *  set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if
 *  budget_unit is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum
 *  budget amount to spend, in micros of the advertiser's currency. For example,
 *  1500000 represents 1.5 standard units of the currency. -
 *  `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of
 *  impressions to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this
 *  field is not applicable and will be ignored by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxAmount;

@end


/**
 *  Settings that control the active duration of a line item.
 */
@interface GTLRDisplayVideo_LineItemFlight : GTLRObject

/**
 *  The flight start and end dates of the line item. They are resolved relative
 *  to the parent advertiser's time zone. * Required when flight_date_type is
 *  `LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM`. Output only otherwise. * When creating
 *  a new flight, both `start_date` and `end_date` must be in the future. * An
 *  existing flight with a `start_date` in the past has a mutable `end_date` but
 *  an immutable `start_date`. * `end_date` must be the `start_date` or later,
 *  both before the year 2037.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DateRange *dateRange;

/**
 *  Required. The type of the line item's flight dates.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_LineItemFlight_FlightDateType_LineItemFlightDateTypeCustom
 *        The line item uses its own custom flight dates. (Value:
 *        "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM")
 *    @arg @c kGTLRDisplayVideo_LineItemFlight_FlightDateType_LineItemFlightDateTypeInherited
 *        The line item's flight dates are inherited from its parent insertion
 *        order. (Value: "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED")
 *    @arg @c kGTLRDisplayVideo_LineItemFlight_FlightDateType_LineItemFlightDateTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *flightDateType;

@end


/**
 *  Response message for ListAdvertiserAssignedTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListAdvertiserAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent
 *  ListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of
 *  results. This token will be absent if there are no more
 *  assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListAdvertisersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "advertisers" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListAdvertisersResponse : GTLRCollectionObject

/**
 *  The list of advertisers. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Advertiser *> *advertisers;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListAdvertisers` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for
 *  AssignedInventorySourceService.ListAssignedInventorySources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedInventorySources" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListAssignedInventorySourcesResponse : GTLRCollectionObject

/**
 *  The list of assigned inventory sources. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedInventorySource *> *assignedInventorySources;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListAssignedInventorySources`
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for AssignedLocationService.ListAssignedLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedLocations" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListAssignedLocationsResponse : GTLRCollectionObject

/**
 *  The list of assigned locations. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedLocation *> *assignedLocations;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListAssignedLocations` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListCampaignAssignedTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListCampaignAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent ListCampaignAssignedTargetingOptionsRequest
 *  to fetch the next page of results. This token will be absent if there are no
 *  more assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListCampaignsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "campaigns" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListCampaignsResponse : GTLRCollectionObject

/**
 *  The list of campaigns. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Campaign *> *campaigns;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListCampaigns` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListChannelsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "channels" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListChannelsResponse : GTLRCollectionObject

/**
 *  The list of channels. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Channel *> *channels;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListChannels` method to retrieve
 *  the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListCombinedAudiencesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "combinedAudiences" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListCombinedAudiencesResponse : GTLRCollectionObject

/**
 *  The list of combined audiences. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CombinedAudience *> *combinedAudiences;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListCombinedAudiences` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListCreativesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "creatives" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListCreativesResponse : GTLRCollectionObject

/**
 *  The list of creatives. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Creative *> *creatives;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListCreativesRequest` method to
 *  retrieve the next page of results. If this field is null, it means this is
 *  the last page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListCustomBiddingAlgorithmsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "customBiddingAlgorithms" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListCustomBiddingAlgorithmsResponse : GTLRCollectionObject

/**
 *  The list of custom bidding algorithms. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CustomBiddingAlgorithm *> *customBiddingAlgorithms;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to
 *  `ListCustomBiddingAlgorithmsRequest` method to retrieve the next page of
 *  results. If this field is null, it means this is the last page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListCustomBiddingScriptsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "customBiddingScripts" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListCustomBiddingScriptsResponse : GTLRCollectionObject

/**
 *  The list of custom bidding scripts. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CustomBiddingScript *> *customBiddingScripts;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListCustomBiddingScriptsRequest`
 *  method to retrieve the next page of results. If this field is null, it means
 *  this is the last page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListCustomListsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "customLists" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListCustomListsResponse : GTLRCollectionObject

/**
 *  The list of custom lists. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_CustomList *> *customLists;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListCustomLists` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListFirstAndThirdPartyAudiencesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "firstAndThirdPartyAudiences" property. If returned as the result
 *        of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListFirstAndThirdPartyAudiencesResponse : GTLRCollectionObject

/**
 *  The list of first and third party audiences. Audience size properties will
 *  not be included. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_FirstAndThirdPartyAudience *> *firstAndThirdPartyAudiences;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListFirstAndThirdPartyAudiences`
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListGoogleAudiencesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "googleAudiences" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_ListGoogleAudiencesResponse : GTLRCollectionObject

/**
 *  The list of Google audiences. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_GoogleAudience *> *googleAudiences;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListGoogleAudiences` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListGuaranteedOrdersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "guaranteedOrders" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_ListGuaranteedOrdersResponse : GTLRCollectionObject

/**
 *  The list of guaranteed orders. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_GuaranteedOrder *> *guaranteedOrders;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListGuaranteedOrders` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListInsertionOrderAssignedTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListInsertionOrderAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent
 *  ListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page of
 *  results. This token will be absent if there are no more
 *  assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListInsertionOrdersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "insertionOrders" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_ListInsertionOrdersResponse : GTLRCollectionObject

/**
 *  The list of insertion orders. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_InsertionOrder *> *insertionOrders;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListInsertionOrders` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for InventorySourceGroupService.ListInventorySourceGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "inventorySourceGroups" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListInventorySourceGroupsResponse : GTLRCollectionObject

/**
 *  The list of inventory source groups. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_InventorySourceGroup *> *inventorySourceGroups;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListInventorySourceGroups`
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListInventorySourcesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "inventorySources" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_ListInventorySourcesResponse : GTLRCollectionObject

/**
 *  The list of inventory sources. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_InventorySource *> *inventorySources;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListInventorySources` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListInvoicesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "invoices" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListInvoicesResponse : GTLRCollectionObject

/**
 *  The list of invoices. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Invoice *> *invoices;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListInvoices` method to retrieve
 *  the next page of results. This token will be absent if there are no more
 *  invoices to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListLineItemAssignedTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListLineItemAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent ListLineItemAssignedTargetingOptionsRequest
 *  to fetch the next page of results. This token will be absent if there are no
 *  more assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListLineItemsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "lineItems" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListLineItemsResponse : GTLRCollectionObject

/**
 *  The list of line items. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_LineItem *> *lineItems;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListLineItems` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListLocationListsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locationLists" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListLocationListsResponse : GTLRCollectionObject

/**
 *  The list of location lists. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_LocationList *> *locationLists;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListLocationLists` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListManualTriggersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "manualTriggers" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_ListManualTriggersResponse : GTLRCollectionObject

/**
 *  The list of manual triggers. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ManualTrigger *> *manualTriggers;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListManualTriggers` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for NegativeKeywordListService.ListNegativeKeywordLists.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "negativeKeywordLists" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListNegativeKeywordListsResponse : GTLRCollectionObject

/**
 *  The list of negative keyword lists. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_NegativeKeywordList *> *negativeKeywordLists;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListNegativeKeywordLists` method
 *  to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for NegativeKeywordService.ListNegativeKeywords.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "negativeKeywords" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_ListNegativeKeywordsResponse : GTLRCollectionObject

/**
 *  The list of negative keywords. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_NegativeKeyword *> *negativeKeywords;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListNegativeKeywords` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListPartnerAssignedTargetingOptionsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assignedTargetingOptions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDisplayVideo_ListPartnerAssignedTargetingOptionsResponse : GTLRCollectionObject

/**
 *  The list of assigned targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedTargetingOption *> *assignedTargetingOptions;

/**
 *  A token identifying the next page of results. This value should be specified
 *  as the pageToken in a subsequent ListPartnerAssignedTargetingOptionsRequest
 *  to fetch the next page of results. This token will be absent if there are no
 *  more assigned_targeting_options to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDisplayVideo_ListPartnersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "partners" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListPartnersResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListPartners` method to retrieve
 *  the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of partners. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Partner *> *partners;

@end


/**
 *  Response message for SiteService.ListSites.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sites" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListSitesResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListSites` method to retrieve
 *  the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of sites. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Site *> *sites;

@end


/**
 *  Response message for ListTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "targetingOptions" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_ListTargetingOptionsResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListTargetingOptions` method to
 *  retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of targeting options. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_TargetingOption *> *targetingOptions;

@end


/**
 *  GTLRDisplayVideo_ListUsersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "users" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDisplayVideo_ListUsersResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `ListUsers` method to retrieve
 *  the next page of results. This token will be absent if there are no more
 *  results to return.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of users. This list will be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_User *> *users;

@end


/**
 *  A list of locations used for targeting.
 */
@interface GTLRDisplayVideo_LocationList : GTLRObject

/**
 *  Required. Immutable. The unique ID of the advertiser the location list
 *  belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  Required. The display name of the location list. Must be UTF-8 encoded with
 *  a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The unique ID of the location list. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *locationListId;

/**
 *  Required. Immutable. The type of location. All locations in the list will
 *  share this type.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_LocationList_LocationType_TargetingLocationTypeProximity
 *        The type for proximity geo location. (Value:
 *        "TARGETING_LOCATION_TYPE_PROXIMITY")
 *    @arg @c kGTLRDisplayVideo_LocationList_LocationType_TargetingLocationTypeRegional
 *        The type for regional geo location. (Value:
 *        "TARGETING_LOCATION_TYPE_REGIONAL")
 *    @arg @c kGTLRDisplayVideo_LocationList_LocationType_TargetingLocationTypeUnspecified
 *        Default value when type is not specified or is unknown. (Value:
 *        "TARGETING_LOCATION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *locationType;

/** Output only. The resource name of the location list. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Specifies how many days into the past to look when determining whether to
 *  record a conversion.
 */
@interface GTLRDisplayVideo_LookbackWindow : GTLRObject

/**
 *  Lookback window, in days, from the last time a given user clicked on one of
 *  your ads.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clickDays;

/**
 *  Lookback window, in days, from the last time a given user viewed one of your
 *  ads.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *impressionDays;

@end


/**
 *  GTLRDisplayVideo_LookupInvoiceCurrencyResponse
 */
@interface GTLRDisplayVideo_LookupInvoiceCurrencyResponse : GTLRObject

/** Currency used by the advertiser in ISO 4217 format. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

@end


/**
 *  A single manual trigger in Display & Video 360.
 */
@interface GTLRDisplayVideo_ManualTrigger : GTLRObject

/**
 *  Required. The maximum duration of each activation in minutes. Must be
 *  between 1 and 360 inclusive. After this duration, the trigger will be
 *  automatically deactivated.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *activationDurationMinutes;

/**
 *  Required. Immutable. The unique ID of the advertiser that the manual trigger
 *  belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  Required. The display name of the manual trigger. Must be UTF-8 encoded with
 *  a maximum size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The timestamp of the trigger's latest activation. */
@property(nonatomic, strong, nullable) GTLRDateTime *latestActivationTime;

/** Output only. The resource name of the manual trigger. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The state of the manual trigger. Will be set to the `INACTIVE`
 *  state upon creation.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ManualTrigger_State_Active The trigger is
 *        currently active (activated). (Value: "ACTIVE")
 *    @arg @c kGTLRDisplayVideo_ManualTrigger_State_Inactive The trigger is
 *        currently inactive and ready to be activated. (Value: "INACTIVE")
 *    @arg @c kGTLRDisplayVideo_ManualTrigger_State_StateUnspecified Default
 *        value when state is not specified or is unknown in this version.
 *        (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The unique ID of the manual trigger.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *triggerId;

@end


/**
 *  A strategy that automatically adjusts the bid to optimize a specified
 *  performance goal while spending the full budget.
 */
@interface GTLRDisplayVideo_MaximizeSpendBidStrategy : GTLRObject

/**
 *  The ID of the Custom Bidding Algorithm used by this strategy. Only
 *  applicable when performance_goal_type is set to
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customBiddingAlgorithmId;

/**
 *  The maximum average CPM that may be bid, in micros of the advertiser's
 *  currency. Must be greater than or equal to a billable unit of the given
 *  currency. For example, 1500000 represents 1.5 standard units of the
 *  currency.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxAverageCpmBidAmountMicros;

/**
 *  Required. The type of the performance goal that the bidding strategy tries
 *  to minimize while spending the full budget.
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for
 *  this strategy.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeAvViewed
 *        Viewable impressions. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED")
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCiva
 *        Completed inview and audible views. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA")
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpa
 *        Cost per action. (Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA")
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpc
 *        Cost per click. (Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC")
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCustomAlgo
 *        Custom bidding algorithm. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO")
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeIvoTen
 *        Inview time over 10 secs views. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN")
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_MaximizeSpendBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeViewableCpm
 *        Viewable CPM. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM")
 */
@property(nonatomic, copy, nullable) NSString *performanceGoalType;

/**
 *  Whether the strategy takes deal floor prices into account.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *raiseBidForDeals;

@end


/**
 *  Measurement settings of a partner.
 */
@interface GTLRDisplayVideo_MeasurementConfig : GTLRObject

/**
 *  Whether or not to report DV360 cost to CM360.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dv360ToCmCostReportingEnabled;

/**
 *  Whether or not to include DV360 data in CM360 data transfer reports.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dv360ToCmDataSharingEnabled;

@end


/**
 *  A mobile app promoted by a mobile app install line item.
 */
@interface GTLRDisplayVideo_MobileApp : GTLRObject

/**
 *  Required. The ID of the app provided by the platform store. Android apps are
 *  identified by the bundle ID used by Android's Play store, such as
 *  `com.google.android.gm`. iOS apps are identified by a nine-digit app ID used
 *  by Apple's App store, such as `422689480`.
 */
@property(nonatomic, copy, nullable) NSString *appId;

/** Output only. The app name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The app platform.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_MobileApp_Platform_Android Android platform.
 *        (Value: "ANDROID")
 *    @arg @c kGTLRDisplayVideo_MobileApp_Platform_Ios iOS platform. (Value:
 *        "IOS")
 *    @arg @c kGTLRDisplayVideo_MobileApp_Platform_PlatformUnspecified Platform
 *        is not specified. (Value: "PLATFORM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *platform;

/** Output only. The app publisher. */
@property(nonatomic, copy, nullable) NSString *publisher;

@end


/**
 *  Wrapper message for a list of mobile device IDs defining Customer Match
 *  audience members.
 */
@interface GTLRDisplayVideo_MobileDeviceIdList : GTLRObject

/**
 *  A list of mobile device IDs defining Customer Match audience members. The
 *  size of mobile_device_ids mustn't be greater than 500,000.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *mobileDeviceIds;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRDisplayVideo_Money : GTLRObject

/** The three-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount. The value must be between
 *  -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos`
 *  must be positive or zero. If `units` is zero, `nanos` can be positive, zero,
 *  or negative. If `units` is negative, `nanos` must be negative or zero. For
 *  example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount. For example if `currencyCode` is `"USD"`,
 *  then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end


/**
 *  Details for native content position assigned targeting option. This will be
 *  populated in the native_content_position_details field when targeting_type
 *  is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`. Explicitly targeting all
 *  options is not supported. Remove all native content position targeting
 *  options to achieve this effect.
 */
@interface GTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails : GTLRObject

/**
 *  The content position. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionInArticle
 *        Native content position is in-article, i.e., ads appear between the
 *        paragraphs of pages. (Value: "NATIVE_CONTENT_POSITION_IN_ARTICLE")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionInFeed
 *        Native content position is in-feed, i.e., ads appear in a scrollable
 *        stream of content. A feed is typically editorial (e.g. a list of
 *        articles or news) or listings (e.g. a list of products or services).
 *        (Value: "NATIVE_CONTENT_POSITION_IN_FEED")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionPeripheral
 *        Native content position is peripheral, i.e., ads appear outside of
 *        core content on pages, such as the right- or left-hand side of the
 *        page. (Value: "NATIVE_CONTENT_POSITION_PERIPHERAL")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionRecommendation
 *        Native content position is recommendation, i.e., ads appear in
 *        sections for recommended content. (Value:
 *        "NATIVE_CONTENT_POSITION_RECOMMENDATION")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionUnknown
 *        The native content position is unknown. (Value:
 *        "NATIVE_CONTENT_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionAssignedTargetingOptionDetails_ContentPosition_NativeContentPositionUnspecified
 *        Native content position is not specified in this version. This enum is
 *        a place holder for a default value and does not represent a real
 *        native content position. (Value:
 *        "NATIVE_CONTENT_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentPosition;

@end


/**
 *  Represents a targetable native content position. This will be populated in
 *  the native_content_position_details field when targeting_type is
 *  `TARGETING_TYPE_NATIVE_CONTENT_POSITION`.
 */
@interface GTLRDisplayVideo_NativeContentPositionTargetingOptionDetails : GTLRObject

/**
 *  Output only. The content position.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionInArticle
 *        Native content position is in-article, i.e., ads appear between the
 *        paragraphs of pages. (Value: "NATIVE_CONTENT_POSITION_IN_ARTICLE")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionInFeed
 *        Native content position is in-feed, i.e., ads appear in a scrollable
 *        stream of content. A feed is typically editorial (e.g. a list of
 *        articles or news) or listings (e.g. a list of products or services).
 *        (Value: "NATIVE_CONTENT_POSITION_IN_FEED")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionPeripheral
 *        Native content position is peripheral, i.e., ads appear outside of
 *        core content on pages, such as the right- or left-hand side of the
 *        page. (Value: "NATIVE_CONTENT_POSITION_PERIPHERAL")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionRecommendation
 *        Native content position is recommendation, i.e., ads appear in
 *        sections for recommended content. (Value:
 *        "NATIVE_CONTENT_POSITION_RECOMMENDATION")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionUnknown
 *        The native content position is unknown. (Value:
 *        "NATIVE_CONTENT_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_NativeContentPositionTargetingOptionDetails_ContentPosition_NativeContentPositionUnspecified
 *        Native content position is not specified in this version. This enum is
 *        a place holder for a default value and does not represent a real
 *        native content position. (Value:
 *        "NATIVE_CONTENT_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentPosition;

@end


/**
 *  A negatively targeted keyword that belongs to a negative keyword list.
 */
@interface GTLRDisplayVideo_NegativeKeyword : GTLRObject

/**
 *  Required. Immutable. The negatively targeted keyword, for example `car
 *  insurance`. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum
 *  number of characters is 80. Maximum number of words is 10. Valid characters
 *  are restricted to ASCII characters only. The only URL-escaping permitted is
 *  for representing whitespace between words. Leading or trailing whitespace is
 *  ignored.
 */
@property(nonatomic, copy, nullable) NSString *keywordValue;

/** Output only. The resource name of the negative keyword. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  A list of negative keywords used for targeting.
 */
@interface GTLRDisplayVideo_NegativeKeywordList : GTLRObject

/**
 *  Output only. The unique ID of the advertiser the negative keyword list
 *  belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  Required. The display name of the negative keyword list. Must be UTF-8
 *  encoded with a maximum size of 255 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The resource name of the negative keyword list. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The unique ID of the negative keyword list. Assigned by the
 *  system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negativeKeywordListId;

/**
 *  Output only. Number of line items that are directly targeting this negative
 *  keyword list.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetedLineItemCount;

@end


/**
 *  Targeting details for negative keyword list. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`.
 */
@interface GTLRDisplayVideo_NegativeKeywordListAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. ID of the negative keyword list. Should refer to the
 *  negative_keyword_list_id field of a NegativeKeywordList resource.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negativeKeywordListId;

@end


/**
 *  OBA Icon for a Creative
 */
@interface GTLRDisplayVideo_ObaIcon : GTLRObject

/**
 *  Required. The click tracking URL of the OBA icon. Only URLs of the following
 *  domains are allowed: * https://info.evidon.com * https://l.betrad.com
 */
@property(nonatomic, copy, nullable) NSString *clickTrackingUrl;

/** The dimensions of the OBA icon. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Dimensions *dimensions;

/**
 *  Required. The landing page URL of the OBA icon. Only URLs of the following
 *  domains are allowed: * https://info.evidon.com * https://l.betrad.com
 */
@property(nonatomic, copy, nullable) NSString *landingPageUrl;

/**
 *  The position of the OBA icon on the creative.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionLowerLeft At the
 *        lower left side of the creative. (Value:
 *        "OBA_ICON_POSITION_LOWER_LEFT")
 *    @arg @c kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionLowerRight At
 *        the lower right side of the creative. (Value:
 *        "OBA_ICON_POSITION_LOWER_RIGHT")
 *    @arg @c kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionUnspecified The
 *        OBA icon position is not specified. (Value:
 *        "OBA_ICON_POSITION_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionUpperLeft At the
 *        upper left side of the creative. (Value:
 *        "OBA_ICON_POSITION_UPPER_LEFT")
 *    @arg @c kGTLRDisplayVideo_ObaIcon_Position_ObaIconPositionUpperRight At
 *        the upper right side of the creative. (Value:
 *        "OBA_ICON_POSITION_UPPER_RIGHT")
 */
@property(nonatomic, copy, nullable) NSString *position;

/** The program of the OBA icon. For example: “AdChoices”. */
@property(nonatomic, copy, nullable) NSString *program;

/** The MIME type of the OBA icon resource. */
@property(nonatomic, copy, nullable) NSString *resourceMimeType;

/** The URL of the OBA icon resource. */
@property(nonatomic, copy, nullable) NSString *resourceUrl;

/**
 *  Required. The view tracking URL of the OBA icon. Only URLs of the following
 *  domains are allowed: * https://info.evidon.com * https://l.betrad.com
 */
@property(nonatomic, copy, nullable) NSString *viewTrackingUrl;

@end


/**
 *  Represents a targetable Open Measurement enabled inventory type. This will
 *  be populated in the details field of an AssignedTargetingOption when
 *  targeting_type is `TARGETING_TYPE_OMID`.
 */
@interface GTLRDisplayVideo_OmidAssignedTargetingOptionDetails : GTLRObject

/**
 *  The type of Open Measurement enabled inventory. Output only in v1. Required
 *  in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_OmidAssignedTargetingOptionDetails_Omid_OmidForMobileDisplayAds
 *        Open Measurement enabled mobile display inventory. (Value:
 *        "OMID_FOR_MOBILE_DISPLAY_ADS")
 *    @arg @c kGTLRDisplayVideo_OmidAssignedTargetingOptionDetails_Omid_OmidUnspecified
 *        Default value when omid targeting is not specified in this version.
 *        (Value: "OMID_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *omid;

@end


/**
 *  Represents a targetable Open Measurement enabled inventory type. This will
 *  be populated in the omid_details field when targeting_type is
 *  `TARGETING_TYPE_OMID`.
 */
@interface GTLRDisplayVideo_OmidTargetingOptionDetails : GTLRObject

/**
 *  Output only. The type of Open Measurement enabled inventory.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_OmidTargetingOptionDetails_Omid_OmidForMobileDisplayAds
 *        Open Measurement enabled mobile display inventory. (Value:
 *        "OMID_FOR_MOBILE_DISPLAY_ADS")
 *    @arg @c kGTLRDisplayVideo_OmidTargetingOptionDetails_Omid_OmidUnspecified
 *        Default value when omid targeting is not specified in this version.
 *        (Value: "OMID_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *omid;

@end


/**
 *  On screen position targeting option details. This will be populated in the
 *  on_screen_position_details field when targeting_type is
 *  `TARGETING_TYPE_ON_SCREEN_POSITION`.
 */
@interface GTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The ad type to target. Only applicable to insertion order
 *  targeting and new line items supporting the specified ad type will inherit
 *  this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`,
 *  the setting will be inherited by new line item when line_item_type is
 *  `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be
 *  inherited by new line item when line_item_type is
 *  `LINE_ITEM_TYPE_VIDEO_DEFAULT`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeAudio
 *        Audio creatives, e.g. audio ads that play during audio content.
 *        (Value: "AD_TYPE_AUDIO")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeDisplay
 *        Display creatives, e.g. image and HTML5. (Value: "AD_TYPE_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeUnspecified
 *        Ad type is not specified or is unknown in this version. (Value:
 *        "AD_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_AdType_AdTypeVideo
 *        Video creatives, e.g. video ads that play during streaming content in
 *        video players. (Value: "AD_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *adType;

/**
 *  Output only. The on screen position.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionAboveTheFold
 *        The ad is located above the fold. (Value:
 *        "ON_SCREEN_POSITION_ABOVE_THE_FOLD")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionBelowTheFold
 *        The ad is located below the fold. (Value:
 *        "ON_SCREEN_POSITION_BELOW_THE_FOLD")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnknown
 *        The ad position is unknown on the screen. (Value:
 *        "ON_SCREEN_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionAssignedTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnspecified
 *        On screen position is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real on
 *        screen position. (Value: "ON_SCREEN_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *onScreenPosition;

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_ON_SCREEN_POSITION`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable on screen position, which could be used by display
 *  and video ads. This will be populated in the on_screen_position_details
 *  field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.
 */
@interface GTLRDisplayVideo_OnScreenPositionTargetingOptionDetails : GTLRObject

/**
 *  Output only. The on screen position.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionAboveTheFold
 *        The ad is located above the fold. (Value:
 *        "ON_SCREEN_POSITION_ABOVE_THE_FOLD")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionBelowTheFold
 *        The ad is located below the fold. (Value:
 *        "ON_SCREEN_POSITION_BELOW_THE_FOLD")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnknown
 *        The ad position is unknown on the screen. (Value:
 *        "ON_SCREEN_POSITION_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_OnScreenPositionTargetingOptionDetails_OnScreenPosition_OnScreenPositionUnspecified
 *        On screen position is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real on
 *        screen position. (Value: "ON_SCREEN_POSITION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *onScreenPosition;

@end


/**
 *  Assigned operating system targeting option details. This will be populated
 *  in the operating_system_details field when targeting_type is
 *  `TARGETING_TYPE_OPERATING_SYSTEM`.
 */
@interface GTLRDisplayVideo_OperatingSystemAssignedTargetingOptionDetails : GTLRObject

/** Output only. The display name of the operating system. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The targeting option ID populated in targeting_option_id field
 *  when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable operating system. This will be populated in the
 *  operating_system_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_OPERATING_SYSTEM`.
 */
@interface GTLRDisplayVideo_OperatingSystemTargetingOptionDetails : GTLRObject

/** Output only. The display name of the operating system. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRDisplayVideo_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDisplayVideo_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDisplayVideo_Operation_Response : GTLRObject
@end


/**
 *  Settings that control the rate at which a budget is spent.
 */
@interface GTLRDisplayVideo_Pacing : GTLRObject

/**
 *  Maximum number of impressions to serve every day. Applicable when the budget
 *  is impression based. Must be greater than 0.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dailyMaxImpressions;

/**
 *  Maximum currency amount to spend every day in micros of advertiser's
 *  currency. Applicable when the budget is currency based. Must be greater than
 *  0. For example, for 1.5 standard unit of the currency, set this field to
 *  1500000. The value assigned will be rounded to whole billable units for the
 *  relevant currency by the following rules: any positive value less than a
 *  single billable unit will be rounded up to one billable unit and any value
 *  larger than a single billable unit will be rounded down to the nearest
 *  billable value. For example, if the currency's billable unit is 0.01, and
 *  this field is set to 10257770, it will round down to 10250000, a value of
 *  10.25. If set to 505, it will round up to 10000, a value of 0.01.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dailyMaxMicros;

/**
 *  Required. The time period in which the pacing budget will be spent. When
 *  automatic budget allocation is enabled at the insertion order via
 *  auto_budget_allocation, this field is output only and defaults to
 *  `PACING_PERIOD_FLIGHT`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Pacing_PacingPeriod_PacingPeriodDaily The pacing
 *        setting will be applied on daily basis. (Value: "PACING_PERIOD_DAILY")
 *    @arg @c kGTLRDisplayVideo_Pacing_PacingPeriod_PacingPeriodFlight The
 *        pacing setting will be applied to the whole flight duration. (Value:
 *        "PACING_PERIOD_FLIGHT")
 *    @arg @c kGTLRDisplayVideo_Pacing_PacingPeriod_PacingPeriodUnspecified
 *        Period value is not specified or is unknown in this version. (Value:
 *        "PACING_PERIOD_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *pacingPeriod;

/**
 *  Required. The type of pacing that defines how the budget amount will be
 *  spent across the pacing_period.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Pacing_PacingType_PacingTypeAhead Only
 *        applicable to `PACING_PERIOD_FLIGHT` pacing period. Ahead pacing
 *        attempts to spend faster than evenly, to make sure the entire budget
 *        is spent by the end of the flight. (Value: "PACING_TYPE_AHEAD")
 *    @arg @c kGTLRDisplayVideo_Pacing_PacingType_PacingTypeAsap Spend all of
 *        pacing budget amount as quick as possible. (Value: "PACING_TYPE_ASAP")
 *    @arg @c kGTLRDisplayVideo_Pacing_PacingType_PacingTypeEven Spend a
 *        consistent budget amount every period of time. (Value:
 *        "PACING_TYPE_EVEN")
 *    @arg @c kGTLRDisplayVideo_Pacing_PacingType_PacingTypeUnspecified Pacing
 *        mode value is not specified or is unknown in this version. (Value:
 *        "PACING_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *pacingType;

@end


/**
 *  Details for assigned parental status targeting option. This will be
 *  populated in the details field of an AssignedTargetingOption when
 *  targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`.
 */
@interface GTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails : GTLRObject

/**
 *  The parental status of the audience. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusNotAParent
 *        The audience is not a parent. (Value: "PARENTAL_STATUS_NOT_A_PARENT")
 *    @arg @c kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusParent
 *        The audience is a parent. (Value: "PARENTAL_STATUS_PARENT")
 *    @arg @c kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusUnknown
 *        The parental status of the audience is unknown. (Value:
 *        "PARENTAL_STATUS_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ParentalStatusAssignedTargetingOptionDetails_ParentalStatus_ParentalStatusUnspecified
 *        Default value when parental status is not specified in this version.
 *        This enum is a place holder for default value and does not represent a
 *        real parental status option. (Value: "PARENTAL_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *parentalStatus;

@end


/**
 *  Represents a targetable parental status. This will be populated in the
 *  parental_status_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_PARENTAL_STATUS`.
 */
@interface GTLRDisplayVideo_ParentalStatusTargetingOptionDetails : GTLRObject

/**
 *  Output only. The parental status of an audience.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusNotAParent
 *        The audience is not a parent. (Value: "PARENTAL_STATUS_NOT_A_PARENT")
 *    @arg @c kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusParent
 *        The audience is a parent. (Value: "PARENTAL_STATUS_PARENT")
 *    @arg @c kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusUnknown
 *        The parental status of the audience is unknown. (Value:
 *        "PARENTAL_STATUS_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_ParentalStatusTargetingOptionDetails_ParentalStatus_ParentalStatusUnspecified
 *        Default value when parental status is not specified in this version.
 *        This enum is a place holder for default value and does not represent a
 *        real parental status option. (Value: "PARENTAL_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *parentalStatus;

@end


/**
 *  A filtering option that filters on selected file types belonging to a chosen
 *  set of filter entities.
 */
@interface GTLRDisplayVideo_ParentEntityFilter : GTLRObject

/** Required. File types that will be returned. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *fileType;

/**
 *  The IDs of the specified filter type. This is used to filter entities to
 *  fetch. If filter type is not `FILTER_TYPE_NONE`, at least one ID must be
 *  specified.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *filterIds;

/**
 *  Required. Filter type used to filter fetched entities.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeAdvertiserId
 *        Advertiser ID. If selected, all filter IDs must be Advertiser IDs that
 *        belong to the Partner specified in CreateSdfDownloadTaskRequest.
 *        (Value: "FILTER_TYPE_ADVERTISER_ID")
 *    @arg @c kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeCampaignId
 *        Campaign ID. If selected, all filter IDs must be Campaign IDs that
 *        belong to the Advertiser or Partner specified in
 *        CreateSdfDownloadTaskRequest. (Value: "FILTER_TYPE_CAMPAIGN_ID")
 *    @arg @c kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeInsertionOrderId
 *        Insertion Order ID. If selected, all filter IDs must be Insertion
 *        Order IDs that belong to the Advertiser or Partner specified in
 *        CreateSdfDownloadTaskRequest. Can only be used for downloading
 *        `FILE_TYPE_INSERTION_ORDER`, `FILE_TYPE_LINE_ITEM`,
 *        `FILE_TYPE_AD_GROUP`, and `FILE_TYPE_AD`. (Value:
 *        "FILTER_TYPE_INSERTION_ORDER_ID")
 *    @arg @c kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeLineItemId
 *        Line Item ID. If selected, all filter IDs must be Line Item IDs that
 *        belong to the Advertiser or Partner specified in
 *        CreateSdfDownloadTaskRequest. Can only be used for downloading
 *        `FILE_TYPE_LINE_ITEM`, `FILE_TYPE_AD_GROUP`, and `FILE_TYPE_AD`.
 *        (Value: "FILTER_TYPE_LINE_ITEM_ID")
 *    @arg @c kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeMediaProductId
 *        Media Product ID. If selected, all filter IDs must be Media Product
 *        IDs that belong to the Advertiser or Partner specified in
 *        CreateSdfDownloadTaskRequest. Can only be used for downloading
 *        `FILE_TYPE_MEDIA_PRODUCT`. (Value: "FILTER_TYPE_MEDIA_PRODUCT_ID")
 *    @arg @c kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeNone If
 *        selected, no filter will be applied to the download. Can only be used
 *        if an Advertiser is specified in CreateSdfDownloadTaskRequest. (Value:
 *        "FILTER_TYPE_NONE")
 *    @arg @c kGTLRDisplayVideo_ParentEntityFilter_FilterType_FilterTypeUnspecified
 *        Default value when type is unspecified or is unknown in this version.
 *        (Value: "FILTER_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *filterType;

@end


/**
 *  A single partner in Display & Video 360 (DV360).
 */
@interface GTLRDisplayVideo_Partner : GTLRObject

/** Ad server related settings of the partner. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PartnerAdServerConfig *adServerConfig;

/** Settings that control how partner data may be accessed. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PartnerDataAccessConfig *dataAccessConfig;

/**
 *  The display name of the partner. Must be UTF-8 encoded with a maximum size
 *  of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The status of the partner.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusActive The
 *        entity is enabled to bid and spend budget. (Value:
 *        "ENTITY_STATUS_ACTIVE")
 *    @arg @c kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusArchived The
 *        entity is archived. Bidding and budget spending are disabled. An
 *        entity can be deleted after archived. Deleted entities cannot be
 *        retrieved. (Value: "ENTITY_STATUS_ARCHIVED")
 *    @arg @c kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusDraft The
 *        entity is under draft. Bidding and budget spending are disabled.
 *        (Value: "ENTITY_STATUS_DRAFT")
 *    @arg @c kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusPaused Bidding
 *        and budget spending are paused for the entity. (Value:
 *        "ENTITY_STATUS_PAUSED")
 *    @arg @c kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusScheduledForDeletion
 *        The entity is scheduled for deletion. (Value:
 *        "ENTITY_STATUS_SCHEDULED_FOR_DELETION")
 *    @arg @c kGTLRDisplayVideo_Partner_EntityStatus_EntityStatusUnspecified
 *        Default value when status is not specified or is unknown in this
 *        version. (Value: "ENTITY_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityStatus;

/** Settings that control which exchanges are enabled for the partner. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ExchangeConfig *exchangeConfig;

/** General settings of the partner. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PartnerGeneralConfig *generalConfig;

/** Output only. The resource name of the partner. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The unique ID of the partner. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

/**
 *  Output only. The timestamp when the partner was last updated. Assigned by
 *  the system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Ad server related settings of a partner.
 */
@interface GTLRDisplayVideo_PartnerAdServerConfig : GTLRObject

/** Measurement settings of a partner. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_MeasurementConfig *measurementConfig;

@end


/**
 *  Settings that control a partner cost. A partner cost is any type of expense
 *  involved in running a campaign, other than the costs of purchasing
 *  impressions (which is called the media cost) and using third-party audience
 *  segment data (data fee). Some examples of partner costs include the fees for
 *  using DV360, a third-party ad server, or a third-party ad serving
 *  verification service.
 */
@interface GTLRDisplayVideo_PartnerCost : GTLRObject

/**
 *  Required. The type of the partner cost.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdlingoFee
 *        The cost is charged for using AdLingo. (Value:
 *        "PARTNER_COST_TYPE_ADLINGO_FEE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdloox The
 *        cost is charged for using Adloox. (Value: "PARTNER_COST_TYPE_ADLOOX")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdlooxPrebid
 *        The cost is charged for using Adloox Pre-Bid. (Value:
 *        "PARTNER_COST_TYPE_ADLOOX_PREBID")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdsafe The
 *        cost is charged for using AdSafe. (Value: "PARTNER_COST_TYPE_ADSAFE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAdxpose The
 *        cost is charged for using AdExpose. (Value:
 *        "PARTNER_COST_TYPE_ADXPOSE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAgencyTradingDesk
 *        The cost is charged for using an Agency Trading Desk. (Value:
 *        "PARTNER_COST_TYPE_AGENCY_TRADING_DESK")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeAggregateKnowledge
 *        The cost is charged for using Aggregate Knowledge. (Value:
 *        "PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeComscoreVce
 *        The cost is charged for using comScore vCE. (Value:
 *        "PARTNER_COST_TYPE_COMSCORE_VCE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee1
 *        The cost is charged as custom fee 1. (Value:
 *        "PARTNER_COST_TYPE_CUSTOM_FEE_1")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee2
 *        The cost is charged as custom fee 2. (Value:
 *        "PARTNER_COST_TYPE_CUSTOM_FEE_2")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee3
 *        The cost is charged as custom fee 3. (Value:
 *        "PARTNER_COST_TYPE_CUSTOM_FEE_3")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee4
 *        The cost is charged as custom fee 4. (Value:
 *        "PARTNER_COST_TYPE_CUSTOM_FEE_4")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeCustomFee5
 *        The cost is charged as custom fee 5. (Value:
 *        "PARTNER_COST_TYPE_CUSTOM_FEE_5")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDataManagementPlatform
 *        The cost is charged for using a Data Management Platform. (Value:
 *        "PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDefault The
 *        default cost type. (Value: "PARTNER_COST_TYPE_DEFAULT")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDoubleVerify
 *        The cost is charged for using DoubleVerify. (Value:
 *        "PARTNER_COST_TYPE_DOUBLE_VERIFY")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDoubleVerifyPrebid
 *        The cost is charged for using DoubleVerify Pre-Bid. (Value:
 *        "PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeDv360Fee The
 *        cost is charged for using DV360. (Value:
 *        "PARTNER_COST_TYPE_DV360_FEE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeEvidon The
 *        cost is charged for using Evidon. (Value: "PARTNER_COST_TYPE_EVIDON")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeIntegralAdSciencePrebid
 *        The cost is charged for using Integral Ad Science Pre-Bid. (Value:
 *        "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeIntegralAdScienceVideo
 *        The cost is charged for using Integral Ad Science Video. (Value:
 *        "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeMediaCostData
 *        The cost is charged for using media cost data. (Value:
 *        "PARTNER_COST_TYPE_MEDIA_COST_DATA")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeMoatVideo
 *        The cost is charged for using MOAT Video. (Value:
 *        "PARTNER_COST_TYPE_MOAT_VIDEO")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeNielsenDar
 *        The cost is charged for using Nielsen Digital Ad Ratings. (Value:
 *        "PARTNER_COST_TYPE_NIELSEN_DAR")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeShopLocal
 *        The cost is charged for using ShopLocal. (Value:
 *        "PARTNER_COST_TYPE_SHOP_LOCAL")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeTeracent The
 *        cost is charged for using Teracent. (Value:
 *        "PARTNER_COST_TYPE_TERACENT")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeThirdPartyAdServer
 *        The cost is charged for using a third-party ad server. (Value:
 *        "PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeTrustMetrics
 *        The cost is charged for using TrustMetrics. (Value:
 *        "PARTNER_COST_TYPE_TRUST_METRICS")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "PARTNER_COST_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_CostType_PartnerCostTypeVizu The
 *        cost is charged for using Vizu. (Value: "PARTNER_COST_TYPE_VIZU")
 */
@property(nonatomic, copy, nullable) NSString *costType;

/**
 *  The CPM fee amount in micros of advertiser's currency. Applicable when the
 *  fee_type is `PARTNER_FEE_TYPE_CPM_FEE`. Must be greater than or equal to 0.
 *  For example, for 1.5 standard unit of the advertiser's currency, set this
 *  field to 1500000.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *feeAmount;

/**
 *  The media fee percentage in millis (1/1000 of a percent). Applicable when
 *  the fee_type is `PARTNER_FEE_TYPE_MEDIA_FEE`. Must be greater than or equal
 *  to 0. For example: 100 represents 0.1%.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *feePercentageMillis;

/**
 *  Required. The fee type for this partner cost.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PartnerCost_FeeType_PartnerCostFeeTypeCpmFee The
 *        partner cost is a fixed CPM fee. Not applicable when the partner cost
 *        cost_type is one of: * `PARTNER_COST_TYPE_MEDIA_COST_DATA` *
 *        `PARTNER_COST_TYPE_DV360_FEE`. (Value:
 *        "PARTNER_COST_FEE_TYPE_CPM_FEE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_FeeType_PartnerCostFeeTypeMediaFee
 *        The partner cost is a percentage surcharge based on the media cost.
 *        Not applicable when the partner cost_type is one of: *
 *        `PARTNER_COST_TYPE_SHOP_LOCAL` * `PARTNER_COST_TYPE_TRUST_METRICS` *
 *        `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO` *
 *        `PARTNER_COST_TYPE_MOAT_VIDEO`. (Value:
 *        "PARTNER_COST_FEE_TYPE_MEDIA_FEE")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_FeeType_PartnerCostFeeTypeUnspecified
 *        Value is not specified or is unknown in this version. (Value:
 *        "PARTNER_COST_FEE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *feeType;

/**
 *  The invoice type for this partner cost. * Required when cost_type is one of:
 *  - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` -
 *  `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PartnerCost_InvoiceType_PartnerCostInvoiceTypeDv360
 *        Partner cost is billed through DV360. (Value:
 *        "PARTNER_COST_INVOICE_TYPE_DV360")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_InvoiceType_PartnerCostInvoiceTypePartner
 *        Partner cost is billed by the partner. (Value:
 *        "PARTNER_COST_INVOICE_TYPE_PARTNER")
 *    @arg @c kGTLRDisplayVideo_PartnerCost_InvoiceType_PartnerCostInvoiceTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "PARTNER_COST_INVOICE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *invoiceType;

@end


/**
 *  Settings that control how partner related data may be accessed.
 */
@interface GTLRDisplayVideo_PartnerDataAccessConfig : GTLRObject

/**
 *  Structured Data Files (SDF) settings for the partner. The SDF configuration
 *  for the partner.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_SdfConfig *sdfConfig;

@end


/**
 *  General settings of a partner.
 */
@interface GTLRDisplayVideo_PartnerGeneralConfig : GTLRObject

/** Immutable. Partner's currency in ISO 4217 format. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Immutable. The standard TZ database name of the partner's time zone. For
 *  example, `America/New_York`. See more at:
 *  https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  Settings that control how partner revenue is calculated.
 */
@interface GTLRDisplayVideo_PartnerRevenueModel : GTLRObject

/**
 *  Required. The markup amount of the partner revenue model. Must be greater
 *  than or equal to 0. * When the markup_type is set to be
 *  `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`, this field represents the CPM
 *  markup in micros of advertiser's currency. For example, 1500000 represents
 *  1.5 standard units of the currency. * When the markup_type is set to be
 *  `PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP`, this field represents
 *  the media cost percent markup in millis. For example, 100 represents 0.1%
 *  (decimal 0.001). * When the markup_type is set to be
 *  `PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP`, this field
 *  represents the total media cost percent markup in millis. For example, 100
 *  represents 0.1% (decimal 0.001).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *markupAmount;

/**
 *  Required. The markup type of the partner revenue model.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeCpm
 *        Calculate the partner revenue based on a fixed CPM. (Value:
 *        "PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM")
 *    @arg @c kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeMediaCostMarkup
 *        Calculate the partner revenue based on a percentage surcharge of its
 *        media cost. (Value:
 *        "PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP")
 *    @arg @c kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeTotalMediaCostMarkup
 *        Calculate the partner revenue based on a percentage surcharge of its
 *        total media cost, which includes all partner costs and data costs.
 *        (Value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP")
 *    @arg @c kGTLRDisplayVideo_PartnerRevenueModel_MarkupType_PartnerRevenueModelMarkupTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *markupType;

@end


/**
 *  Settings that control the performance goal of a campaign or insertion order.
 */
@interface GTLRDisplayVideo_PerformanceGoal : GTLRObject

/**
 *  The goal amount, in micros of the advertiser's currency. Applicable when
 *  performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` *
 *  `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` *
 *  `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_VCPM` For example
 *  1500000 represents 1.5 standard units of the currency.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *performanceGoalAmountMicros;

/**
 *  The decimal representation of the goal percentage in micros. Applicable when
 *  performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` *
 *  `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_CLICK_CVR` *
 *  `PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR` * `PERFORMANCE_GOAL_TYPE_VTR` *
 *  `PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE` *
 *  `PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE` For example, 70000 represents
 *  7% (decimal 0.07).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *performanceGoalPercentageMicros;

/**
 *  A key performance indicator (KPI) string, which can be empty. Must be UTF-8
 *  encoded with a length of no more than 100 characters. Applicable when
 *  performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`.
 */
@property(nonatomic, copy, nullable) NSString *performanceGoalString;

/**
 *  Required. The type of the performance goal.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeAudioCompletionRate
 *        The performance goal is set in audio completion rate (complete audio
 *        listens per impression) percentage. (Value:
 *        "PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeClickCvr
 *        The performance goal is set in click conversion rate (conversions per
 *        click) percentage. (Value: "PERFORMANCE_GOAL_TYPE_CLICK_CVR")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpa
 *        The performance goal is set in CPA (cost per action). (Value:
 *        "PERFORMANCE_GOAL_TYPE_CPA")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpc
 *        The performance goal is set in CPC (cost per click). (Value:
 *        "PERFORMANCE_GOAL_TYPE_CPC")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpe
 *        The performance goal is set in CPE (cost per engagement). (Value:
 *        "PERFORMANCE_GOAL_TYPE_CPE")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpiavc
 *        The performance goal is set as CPIAVC (cost per impression audible and
 *        visible at completion). (Value: "PERFORMANCE_GOAL_TYPE_CPIAVC")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCpm
 *        The performance goal is set in CPM (cost per mille). (Value:
 *        "PERFORMANCE_GOAL_TYPE_CPM")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeCtr
 *        The performance goal is set in CTR (click-through rate) percentage.
 *        (Value: "PERFORMANCE_GOAL_TYPE_CTR")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeImpressionCvr
 *        The performance goal is set in impression conversion rate (conversions
 *        per impression) percentage. (Value:
 *        "PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeOther
 *        The performance goal is set to Other. (Value:
 *        "PERFORMANCE_GOAL_TYPE_OTHER")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeUnspecified
 *        Performance goal type is not specified or is unknown in this version.
 *        (Value: "PERFORMANCE_GOAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeVcpm
 *        The performance goal is set in VCPM (cost per thousand viewable
 *        impressions). (Value: "PERFORMANCE_GOAL_TYPE_VCPM")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeVideoCompletionRate
 *        The performance goal is set in video completion rate (complete video
 *        views per impression) percentage. (Value:
 *        "PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeViewability
 *        The performance goal is set in Viewability percentage. (Value:
 *        "PERFORMANCE_GOAL_TYPE_VIEWABILITY")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoal_PerformanceGoalType_PerformanceGoalTypeVtr
 *        The performance goal is set in YouTube view rate (YouTube views per
 *        impression) percentage. (Value: "PERFORMANCE_GOAL_TYPE_VTR")
 */
@property(nonatomic, copy, nullable) NSString *performanceGoalType;

@end


/**
 *  A strategy that automatically adjusts the bid to meet or beat a specified
 *  performance goal.
 */
@interface GTLRDisplayVideo_PerformanceGoalBidStrategy : GTLRObject

/**
 *  The ID of the Custom Bidding Algorithm used by this strategy. Only
 *  applicable when performance_goal_type is set to
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customBiddingAlgorithmId;

/**
 *  The maximum average CPM that may be bid, in micros of the advertiser's
 *  currency. Must be greater than or equal to a billable unit of the given
 *  currency. Not applicable when performance_goal_type is set to
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`. For example, 1500000
 *  represents 1.5 standard units of the currency.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxAverageCpmBidAmountMicros;

/**
 *  Required. The performance goal the bidding strategy will attempt to meet or
 *  beat, in micros of the advertiser's currency or in micro of the ROAS (Return
 *  On Advertising Spend) value which is also based on advertiser's currency.
 *  Must be greater than or equal to a billable unit of the given currency and
 *  smaller or equal to upper bounds. Each performance_goal_type has its upper
 *  bound: * when performance_goal_type is
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA`, upper bound is 10000.00 USD. *
 *  when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC`,
 *  upper bound is 1000.00 USD. * when performance_goal_type is
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, upper bound is
 *  1000.00 USD. * when performance_goal_type is
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`, upper bound is 1000.00
 *  and lower bound is 0.01. Example: If set to
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, the bid price will be
 *  based on the probability that each available impression will be viewable.
 *  For example, if viewable CPM target is $2 and an impression is 40% likely to
 *  be viewable, the bid price will be $0.80 CPM (40% of $2). For example,
 *  1500000 represents 1.5 standard units of the currency or ROAS value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *performanceGoalAmountMicros;

/**
 *  Required. The type of the performance goal that the bidding strategy will
 *  try to meet or beat. For line item level usage, the value must be one of: *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` *
 *  `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeAvViewed
 *        Viewable impressions. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCiva
 *        Completed inview and audible views. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpa
 *        Cost per action. (Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCpc
 *        Cost per click. (Value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeCustomAlgo
 *        Custom bidding algorithm. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeIvoTen
 *        Inview time over 10 secs views. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_PerformanceGoalBidStrategy_PerformanceGoalType_BiddingStrategyPerformanceGoalTypeViewableCpm
 *        Viewable CPM. (Value:
 *        "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM")
 */
@property(nonatomic, copy, nullable) NSString *performanceGoalType;

@end


/**
 *  Details for assigned POI targeting option. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_POI`.
 */
@interface GTLRDisplayVideo_PoiAssignedTargetingOptionDetails : GTLRObject

/**
 *  Output only. The display name of a POI, e.g. "Times Square", "Space Needle",
 *  followed by its full address if available.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Latitude of the POI rounding to 6th decimal place.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  Output only. Longitude of the POI rounding to 6th decimal place.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

/**
 *  Required. The radius of the area around the POI that will be targeted. The
 *  units of the radius are specified by proximity_radius_unit. Must be 1 to 800
 *  if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is
 *  `DISTANCE_UNIT_MILES`.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proximityRadiusAmount;

/**
 *  Required. The unit of distance by which the targeting radius is measured.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PoiAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitKilometers
 *        Kilometers. (Value: "DISTANCE_UNIT_KILOMETERS")
 *    @arg @c kGTLRDisplayVideo_PoiAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitMiles
 *        Miles. (Value: "DISTANCE_UNIT_MILES")
 *    @arg @c kGTLRDisplayVideo_PoiAssignedTargetingOptionDetails_ProximityRadiusUnit_DistanceUnitUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "DISTANCE_UNIT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *proximityRadiusUnit;

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_POI`. Accepted POI targeting option IDs can be retrieved
 *  using SearchTargetingOptions. If targeting a specific latitude/longitude
 *  coordinate removed from an address or POI name, you can generate the
 *  necessary targeting option ID by rounding the desired coordinate values to
 *  the 6th decimal place, removing the decimals, and concatenating the string
 *  values separated by a semicolon. For example, you can target the
 *  latitude/longitude pair of 40.7414691, -74.003387 using the targeting option
 *  ID "40741469;-74003387".
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Search terms for POI targeting options.
 */
@interface GTLRDisplayVideo_PoiSearchTerms : GTLRObject

/**
 *  The search query for the desired POI name, street address, or coordinate of
 *  the desired POI. The query can be a prefix, e.g. "Times squar",
 *  "40.7505045,-73.99562", "315 W 44th St", etc.
 */
@property(nonatomic, copy, nullable) NSString *poiQuery;

@end


/**
 *  Represents a targetable point of interest(POI). This will be populated in
 *  the poi_details field when targeting_type is `TARGETING_TYPE_POI`.
 */
@interface GTLRDisplayVideo_PoiTargetingOptionDetails : GTLRObject

/**
 *  Output only. The display name of a POI(e.g. "Times Square", "Space Needle"),
 *  followed by its full address if available.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Latitude of the POI rounding to 6th decimal place.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  Output only. Longitude of the POI rounding to 6th decimal place.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end


/**
 *  Settings specific to the Mediaocean Prisma tool.
 */
@interface GTLRDisplayVideo_PrismaConfig : GTLRObject

/**
 *  Required. Relevant client, product, and estimate codes from the Mediaocean
 *  Prisma tool.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PrismaCpeCode *prismaCpeCode;

/**
 *  Required. The Prisma type.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeAudio Audio
 *        type. (Value: "PRISMA_TYPE_AUDIO")
 *    @arg @c kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeDisplay
 *        Display type. (Value: "PRISMA_TYPE_DISPLAY")
 *    @arg @c kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeFee Fee type.
 *        (Value: "PRISMA_TYPE_FEE")
 *    @arg @c kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeSearch Search
 *        type. (Value: "PRISMA_TYPE_SEARCH")
 *    @arg @c kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeSocial Social
 *        type. (Value: "PRISMA_TYPE_SOCIAL")
 *    @arg @c kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeUnspecified
 *        Type is not specified or unknown in this version. (Value:
 *        "PRISMA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_PrismaConfig_PrismaType_PrismaTypeVideo Video
 *        type. (Value: "PRISMA_TYPE_VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *prismaType;

/** Required. The entity allocated this budget (DSP, site, etc.). */
@property(nonatomic, copy, nullable) NSString *supplier;

@end


/**
 *  Google Payments Center supports searching and filtering on the component
 *  fields of this code.
 */
@interface GTLRDisplayVideo_PrismaCpeCode : GTLRObject

/** The Prisma client code. */
@property(nonatomic, copy, nullable) NSString *prismaClientCode;

/** The Prisma estimate code. */
@property(nonatomic, copy, nullable) NSString *prismaEstimateCode;

/** The Prisma product code. */
@property(nonatomic, copy, nullable) NSString *prismaProductCode;

@end


/**
 *  Targeting details for proximity location list. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.
 */
@interface GTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. ID of the proximity location list. Should refer to the
 *  location_list_id field of a LocationList resource whose type is
 *  `TARGETING_LOCATION_TYPE_PROXIMITY`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proximityLocationListId;

/**
 *  Required. Radius expressed in the distance units set in
 *  proximity_radius_unit. This represents the size of the area around a chosen
 *  location that will be targeted. Radius should be between 1 and 500 miles or
 *  800 kilometers.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proximityRadius;

/**
 *  Required. Radius distance units.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails_ProximityRadiusUnit_ProximityRadiusUnitKilometers
 *        Radius distance unit in kilometeres (Value:
 *        "PROXIMITY_RADIUS_UNIT_KILOMETERS")
 *    @arg @c kGTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails_ProximityRadiusUnit_ProximityRadiusUnitMiles
 *        Radius distance unit in miles. (Value: "PROXIMITY_RADIUS_UNIT_MILES")
 *    @arg @c kGTLRDisplayVideo_ProximityLocationListAssignedTargetingOptionDetails_ProximityRadiusUnit_ProximityRadiusUnitUnspecified
 *        Default value when distance units is not specified in this version.
 *        This enum is a place holder for default value and does not represent a
 *        real distance unit. (Value: "PROXIMITY_RADIUS_UNIT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *proximityRadiusUnit;

@end


/**
 *  Publisher review status for the creative.
 */
@interface GTLRDisplayVideo_PublisherReviewStatus : GTLRObject

/** The publisher reviewing the creative. */
@property(nonatomic, copy, nullable) NSString *publisherName;

/**
 *  Status of the publisher review.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusApproved
 *        The creative is approved. (Value: "REVIEW_STATUS_APPROVED")
 *    @arg @c kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusPending
 *        The creative is pending review. (Value: "REVIEW_STATUS_PENDING")
 *    @arg @c kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusRejected
 *        The creative is rejected. (Value: "REVIEW_STATUS_REJECTED")
 *    @arg @c kGTLRDisplayVideo_PublisherReviewStatus_Status_ReviewStatusUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "REVIEW_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  The rate related settings of the inventory source.
 */
@interface GTLRDisplayVideo_RateDetails : GTLRObject

/**
 *  The rate type. Acceptable values are `INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED`,
 *  `INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR`, and
 *  `INVENTORY_SOURCE_RATE_TYPE_CPD`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeCpd
 *        The rate type is Cost per Day. (Value:
 *        "INVENTORY_SOURCE_RATE_TYPE_CPD")
 *    @arg @c kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeCpmFixed
 *        The rate type is CPM (Fixed). (Value:
 *        "INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED")
 *    @arg @c kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeCpmFloor
 *        The rate type is CPM (Floor). (Value:
 *        "INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR")
 *    @arg @c kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeFlat
 *        The rate type is Flat. (Value: "INVENTORY_SOURCE_RATE_TYPE_FLAT")
 *    @arg @c kGTLRDisplayVideo_RateDetails_InventorySourceRateType_InventorySourceRateTypeUnspecified
 *        The rate type is not specified or is unknown in this version. (Value:
 *        "INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *inventorySourceRateType;

/**
 *  Output only. The amount that the buyer has committed to spending on the
 *  inventory source up front. Only applicable for guaranteed inventory sources.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Money *minimumSpend;

/** The rate for the inventory source. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Money *rate;

/**
 *  Required for guaranteed inventory sources. The number of impressions
 *  guaranteed by the seller.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unitsPurchased;

@end


/**
 *  Targeting details for regional location list. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.
 */
@interface GTLRDisplayVideo_RegionalLocationListAssignedTargetingOptionDetails : GTLRObject

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. ID of the regional location list. Should refer to the
 *  location_list_id field of a LocationList resource whose type is
 *  `TARGETING_LOCATION_TYPE_REGIONAL`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *regionalLocationListId;

@end


/**
 *  Request message for NegativeKeywordService.ReplaceNegativeKeywords.
 */
@interface GTLRDisplayVideo_ReplaceNegativeKeywordsRequest : GTLRObject

/**
 *  The negative keywords that will replace the existing keywords in the
 *  negative keyword list, specified as a list of NegativeKeywords.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_NegativeKeyword *> *newNegativeKeywords NS_RETURNS_NOT_RETAINED;

@end


/**
 *  Response message for NegativeKeywordService.ReplaceNegativeKeywords.
 */
@interface GTLRDisplayVideo_ReplaceNegativeKeywordsResponse : GTLRObject

/**
 *  The full list of negative keywords now present in the negative keyword list.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_NegativeKeyword *> *negativeKeywords;

@end


/**
 *  Request message for SiteService.ReplaceSites.
 */
@interface GTLRDisplayVideo_ReplaceSitesRequest : GTLRObject

/**
 *  The ID of the advertiser that owns the parent channel.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  The sites that will replace the existing sites assigned to the channel,
 *  specified as a list of Sites.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Site *> *newSites NS_RETURNS_NOT_RETAINED;

/**
 *  The ID of the partner that owns the parent channel.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerId;

@end


/**
 *  Response message for SiteService.ReplaceSites.
 */
@interface GTLRDisplayVideo_ReplaceSitesResponse : GTLRObject

/** The list of sites in the channel after replacing. */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Site *> *sites;

@end


/**
 *  Review statuses for the creative.
 */
@interface GTLRDisplayVideo_ReviewStatusInfo : GTLRObject

/**
 *  Represents the basic approval needed for a creative to begin serving.
 *  Summary of creative_and_landing_page_review_status and
 *  content_and_policy_review_status.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusApprovedServable
 *        Both creative & landing page review and content & policy review are
 *        approved. The creative is servable. (Value:
 *        "APPROVAL_STATUS_APPROVED_SERVABLE")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusPendingNotServable
 *        The creative is still under review and not servable. (Value:
 *        "APPROVAL_STATUS_PENDING_NOT_SERVABLE")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusPendingServable
 *        The creative has passed creative & landing page review and is
 *        servable, but is awaiting additional content & policy review. (Value:
 *        "APPROVAL_STATUS_PENDING_SERVABLE")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusRejectedNotServable
 *        There is an issue with the creative that must be fixed before it can
 *        serve. (Value: "APPROVAL_STATUS_REJECTED_NOT_SERVABLE")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ApprovalStatus_ApprovalStatusUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "APPROVAL_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *approvalStatus;

/**
 *  Content and policy review status for the creative.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusApproved
 *        The creative is approved. (Value: "REVIEW_STATUS_APPROVED")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusPending
 *        The creative is pending review. (Value: "REVIEW_STATUS_PENDING")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusRejected
 *        The creative is rejected. (Value: "REVIEW_STATUS_REJECTED")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_ContentAndPolicyReviewStatus_ReviewStatusUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "REVIEW_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentAndPolicyReviewStatus;

/**
 *  Creative and landing page review status for the creative.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusApproved
 *        The creative is approved. (Value: "REVIEW_STATUS_APPROVED")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusPending
 *        The creative is pending review. (Value: "REVIEW_STATUS_PENDING")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusRejected
 *        The creative is rejected. (Value: "REVIEW_STATUS_REJECTED")
 *    @arg @c kGTLRDisplayVideo_ReviewStatusInfo_CreativeAndLandingPageReviewStatus_ReviewStatusUnspecified
 *        Type value is not specified or is unknown in this version. (Value:
 *        "REVIEW_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *creativeAndLandingPageReviewStatus;

/** Exchange review statuses for the creative. */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ExchangeReviewStatus *> *exchangeReviewStatuses;

/** Publisher review statuses for the creative. */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_PublisherReviewStatus *> *publisherReviewStatuses;

@end


/**
 *  An error message for a custom bidding script.
 */
@interface GTLRDisplayVideo_ScriptError : GTLRObject

/**
 *  The column number in the script where the error was thrown.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *column;

/**
 *  The type of error.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ScriptError_ErrorCode_DeprecatedSyntax The
 *        script uses deprecated syntax. (Value: "DEPRECATED_SYNTAX")
 *    @arg @c kGTLRDisplayVideo_ScriptError_ErrorCode_ErrorCodeUnspecified The
 *        script error is not specified or is unknown in this version. (Value:
 *        "ERROR_CODE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ScriptError_ErrorCode_InternalError Internal
 *        errors were thrown while processing the script. (Value:
 *        "INTERNAL_ERROR")
 *    @arg @c kGTLRDisplayVideo_ScriptError_ErrorCode_SyntaxError The script has
 *        a syntax error. (Value: "SYNTAX_ERROR")
 */
@property(nonatomic, copy, nullable) NSString *errorCode;

/** The detailed error message. */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/**
 *  The line number in the script where the error was thrown.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *line;

@end


/**
 *  Structured Data File (SDF) related settings.
 */
@interface GTLRDisplayVideo_SdfConfig : GTLRObject

/**
 *  An administrator email address to which the SDF processing status reports
 *  will be sent.
 */
@property(nonatomic, copy, nullable) NSString *adminEmail;

/**
 *  Required. The version of SDF being used.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion31 SDF version 3.1
 *        (Value: "SDF_VERSION_3_1")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion4 SDF version 4
 *        (Value: "SDF_VERSION_4")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion41 SDF version 4.1
 *        (Value: "SDF_VERSION_4_1")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion42 SDF version 4.2
 *        (Value: "SDF_VERSION_4_2")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion5 SDF version 5.
 *        (Value: "SDF_VERSION_5")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion51 SDF version 5.1
 *        (Value: "SDF_VERSION_5_1")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion52 SDF version 5.2
 *        (Value: "SDF_VERSION_5_2")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion53 SDF version 5.3
 *        (Value: "SDF_VERSION_5_3")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion54 SDF version 5.4
 *        (Value: "SDF_VERSION_5_4")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersion55 SDF version 5.5
 *        (Value: "SDF_VERSION_5_5")
 *    @arg @c kGTLRDisplayVideo_SdfConfig_Version_SdfVersionUnspecified SDF
 *        version value is not specified or is unknown in this version. (Value:
 *        "SDF_VERSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Type for the response returned by
 *  [SdfDownloadTaskService.CreateSdfDownloadTask].
 */
@interface GTLRDisplayVideo_SdfDownloadTask : GTLRObject

/**
 *  A resource name to be used in media.download to Download the prepared files.
 *  Resource names have the format `download/sdfdownloadtasks/media/{media_id}`.
 *  `media_id` will be made available by the long running operation service once
 *  the task status is done.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  Type for the metadata returned by
 *  [SdfDownloadTaskService.CreateSdfDownloadTask].
 */
@interface GTLRDisplayVideo_SdfDownloadTaskMetadata : GTLRObject

/** The time when the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The time when execution was completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The SDF version used to execute this download task.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion31 SDF
 *        version 3.1 (Value: "SDF_VERSION_3_1")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion4 SDF
 *        version 4 (Value: "SDF_VERSION_4")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion41 SDF
 *        version 4.1 (Value: "SDF_VERSION_4_1")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion42 SDF
 *        version 4.2 (Value: "SDF_VERSION_4_2")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion5 SDF
 *        version 5. (Value: "SDF_VERSION_5")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion51 SDF
 *        version 5.1 (Value: "SDF_VERSION_5_1")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion52 SDF
 *        version 5.2 (Value: "SDF_VERSION_5_2")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion53 SDF
 *        version 5.3 (Value: "SDF_VERSION_5_3")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion54 SDF
 *        version 5.4 (Value: "SDF_VERSION_5_4")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersion55 SDF
 *        version 5.5 (Value: "SDF_VERSION_5_5")
 *    @arg @c kGTLRDisplayVideo_SdfDownloadTaskMetadata_Version_SdfVersionUnspecified
 *        SDF version value is not specified or is unknown in this version.
 *        (Value: "SDF_VERSION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Request message for SearchTargetingOptions.
 */
@interface GTLRDisplayVideo_SearchTargetingOptionsRequest : GTLRObject

/**
 *  Required. The Advertiser this request is being made in the context of.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertiserId;

/**
 *  Search terms for Business Chain targeting options. Can only be used when
 *  targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_BusinessChainSearchTerms *businessChainSearchTerms;

/**
 *  Search terms for geo region targeting options. Can only be used when
 *  targeting_type is `TARGETING_TYPE_GEO_REGION`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GeoRegionSearchTerms *geoRegionSearchTerms;

/**
 *  Requested page size. Must be between `1` and `200`. If unspecified will
 *  default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value
 *  is specified.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A token identifying a page of results the server should return. Typically,
 *  this is the value of next_page_token returned from the previous call to
 *  `SearchTargetingOptions` method. If not specified, the first page of results
 *  will be returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Search terms for POI targeting options. Can only be used when targeting_type
 *  is `TARGETING_TYPE_POI`.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PoiSearchTerms *poiSearchTerms;

@end


/**
 *  Response message for SearchTargetingOptions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "targetingOptions" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDisplayVideo_SearchTargetingOptionsResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  page_token field in the subsequent call to `SearchTargetingOptions` method
 *  to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of targeting options that match the search criteria. This list will
 *  be absent if empty.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_TargetingOption *> *targetingOptions;

@end


/**
 *  Targeting details for sensitive category. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.
 */
@interface GTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. An enum for the DV360 Sensitive category content classified to be
 *  EXCLUDED.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryAdult
 *        Adult or pornographic text, image, or video content. (Value:
 *        "SENSITIVE_CATEGORY_ADULT")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryAlcohol
 *        Contains content related to alcoholic beverages, alcohol brands,
 *        recipes, etc. (Value: "SENSITIVE_CATEGORY_ALCOHOL")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryDerogatory
 *        Content that may be construed as biased against individuals, groups,
 *        or organizations based on criteria such as race, religion, disability,
 *        sex, age, veteran status, sexual orientation, gender identity, or
 *        political affiliation. May also indicate discussion of such content,
 *        for instance, in an academic or journalistic context. (Value:
 *        "SENSITIVE_CATEGORY_DEROGATORY")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryDownloadsSharing
 *        Content related to audio, video, or software downloads. (Value:
 *        "SENSITIVE_CATEGORY_DOWNLOADS_SHARING")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryDrugs
 *        Contains content related to the recreational use of legal or illegal
 *        drugs, as well as to drug paraphernalia or cultivation. (Value:
 *        "SENSITIVE_CATEGORY_DRUGS")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryEmbeddedVideo
 *        YouTube videos embedded on websites outside of YouTube.com. Only
 *        applicable to YouTube and Partners line items. (Value:
 *        "SENSITIVE_CATEGORY_EMBEDDED_VIDEO")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryGambling
 *        Contains content related to betting or wagering in a real-world or
 *        online setting. (Value: "SENSITIVE_CATEGORY_GAMBLING")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryLiveStreamingVideo
 *        Video of live events streamed over the internet. Only applicable to
 *        YouTube and Partners line items. (Value:
 *        "SENSITIVE_CATEGORY_LIVE_STREAMING_VIDEO")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryPolitics
 *        Political news and media, including discussions of social,
 *        governmental, and public policy. (Value:
 *        "SENSITIVE_CATEGORY_POLITICS")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryProfanity
 *        Prominent use of words considered indecent, such as curse words and
 *        sexual slang. Pages with only very occasional usage, such as news
 *        sites that might include such words in a quotation, are not included.
 *        (Value: "SENSITIVE_CATEGORY_PROFANITY")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryReligion
 *        Content related to religious thought or beliefs. (Value:
 *        "SENSITIVE_CATEGORY_RELIGION")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategorySensitiveSocialIssues
 *        Issues that evoke strong, opposing views and spark debate. These
 *        include issues that are controversial in most countries and markets
 *        (such as abortion), as well as those that are controversial in
 *        specific countries and markets (such as immigration reform in the
 *        United States). (Value: "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryShocking
 *        Content which may be considered shocking or disturbing, such as
 *        violent news stories, stunts, or toilet humor. (Value:
 *        "SENSITIVE_CATEGORY_SHOCKING")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategorySuggestive
 *        Adult content, as well as suggestive content that's not explicitly
 *        pornographic. This category includes all pages categorized as adult.
 *        (Value: "SENSITIVE_CATEGORY_SUGGESTIVE")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryTobacco
 *        Contains content related to tobacco and tobacco accessories, including
 *        lighters, humidors, ashtrays, etc. (Value:
 *        "SENSITIVE_CATEGORY_TOBACCO")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryTragedy
 *        Content related to death, disasters, accidents, war, etc. (Value:
 *        "SENSITIVE_CATEGORY_TRAGEDY")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryTransportationAccidents
 *        Content related to motor vehicle, aviation or other transportation
 *        accidents. (Value: "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryUnspecified
 *        This enum is only a placeholder and doesn't specify a DV360 sensitive
 *        category. (Value: "SENSITIVE_CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryViolence
 *        Content which may be considered graphically violent, gory, gruesome,
 *        or shocking, such as street fighting videos, accident photos,
 *        descriptions of torture, etc. (Value: "SENSITIVE_CATEGORY_VIOLENCE")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryAssignedTargetingOptionDetails_ExcludedSensitiveCategory_SensitiveCategoryWeapons
 *        Contains content related to personal weapons, including knives, guns,
 *        small firearms, and ammunition. Selecting either "weapons" or
 *        "sensitive social issues" will result in selecting both. (Value:
 *        "SENSITIVE_CATEGORY_WEAPONS")
 */
@property(nonatomic, copy, nullable) NSString *excludedSensitiveCategory;

@end


/**
 *  Represents a targetable sensitive category. This will be populated in the
 *  sensitive_category_details field of the TargetingOption when targeting_type
 *  is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.
 */
@interface GTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails : GTLRObject

/**
 *  Output only. An enum for the DV360 Sensitive category content classifier.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryAdult
 *        Adult or pornographic text, image, or video content. (Value:
 *        "SENSITIVE_CATEGORY_ADULT")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryAlcohol
 *        Contains content related to alcoholic beverages, alcohol brands,
 *        recipes, etc. (Value: "SENSITIVE_CATEGORY_ALCOHOL")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryDerogatory
 *        Content that may be construed as biased against individuals, groups,
 *        or organizations based on criteria such as race, religion, disability,
 *        sex, age, veteran status, sexual orientation, gender identity, or
 *        political affiliation. May also indicate discussion of such content,
 *        for instance, in an academic or journalistic context. (Value:
 *        "SENSITIVE_CATEGORY_DEROGATORY")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryDownloadsSharing
 *        Content related to audio, video, or software downloads. (Value:
 *        "SENSITIVE_CATEGORY_DOWNLOADS_SHARING")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryDrugs
 *        Contains content related to the recreational use of legal or illegal
 *        drugs, as well as to drug paraphernalia or cultivation. (Value:
 *        "SENSITIVE_CATEGORY_DRUGS")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryEmbeddedVideo
 *        YouTube videos embedded on websites outside of YouTube.com. Only
 *        applicable to YouTube and Partners line items. (Value:
 *        "SENSITIVE_CATEGORY_EMBEDDED_VIDEO")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryGambling
 *        Contains content related to betting or wagering in a real-world or
 *        online setting. (Value: "SENSITIVE_CATEGORY_GAMBLING")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryLiveStreamingVideo
 *        Video of live events streamed over the internet. Only applicable to
 *        YouTube and Partners line items. (Value:
 *        "SENSITIVE_CATEGORY_LIVE_STREAMING_VIDEO")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryPolitics
 *        Political news and media, including discussions of social,
 *        governmental, and public policy. (Value:
 *        "SENSITIVE_CATEGORY_POLITICS")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryProfanity
 *        Prominent use of words considered indecent, such as curse words and
 *        sexual slang. Pages with only very occasional usage, such as news
 *        sites that might include such words in a quotation, are not included.
 *        (Value: "SENSITIVE_CATEGORY_PROFANITY")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryReligion
 *        Content related to religious thought or beliefs. (Value:
 *        "SENSITIVE_CATEGORY_RELIGION")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategorySensitiveSocialIssues
 *        Issues that evoke strong, opposing views and spark debate. These
 *        include issues that are controversial in most countries and markets
 *        (such as abortion), as well as those that are controversial in
 *        specific countries and markets (such as immigration reform in the
 *        United States). (Value: "SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryShocking
 *        Content which may be considered shocking or disturbing, such as
 *        violent news stories, stunts, or toilet humor. (Value:
 *        "SENSITIVE_CATEGORY_SHOCKING")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategorySuggestive
 *        Adult content, as well as suggestive content that's not explicitly
 *        pornographic. This category includes all pages categorized as adult.
 *        (Value: "SENSITIVE_CATEGORY_SUGGESTIVE")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryTobacco
 *        Contains content related to tobacco and tobacco accessories, including
 *        lighters, humidors, ashtrays, etc. (Value:
 *        "SENSITIVE_CATEGORY_TOBACCO")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryTragedy
 *        Content related to death, disasters, accidents, war, etc. (Value:
 *        "SENSITIVE_CATEGORY_TRAGEDY")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryTransportationAccidents
 *        Content related to motor vehicle, aviation or other transportation
 *        accidents. (Value: "SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryUnspecified
 *        This enum is only a placeholder and doesn't specify a DV360 sensitive
 *        category. (Value: "SENSITIVE_CATEGORY_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryViolence
 *        Content which may be considered graphically violent, gory, gruesome,
 *        or shocking, such as street fighting videos, accident photos,
 *        descriptions of torture, etc. (Value: "SENSITIVE_CATEGORY_VIOLENCE")
 *    @arg @c kGTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails_SensitiveCategory_SensitiveCategoryWeapons
 *        Contains content related to personal weapons, including knives, guns,
 *        small firearms, and ammunition. Selecting either "weapons" or
 *        "sensitive social issues" will result in selecting both. (Value:
 *        "SENSITIVE_CATEGORY_WEAPONS")
 */
@property(nonatomic, copy, nullable) NSString *sensitiveCategory;

@end


/**
 *  A single site. Sites are apps or websites belonging to a channel.
 */
@interface GTLRDisplayVideo_Site : GTLRObject

/** Output only. The resource name of the site. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The app ID or URL of the site. Must be UTF-8 encoded with a
 *  maximum length of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *urlOrAppId;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRDisplayVideo_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDisplayVideo_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDisplayVideo_Status_Details_Item : GTLRObject
@end


/**
 *  Details for assigned sub-exchange targeting option. This will be populated
 *  in the details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_SUB_EXCHANGE`.
 */
@interface GTLRDisplayVideo_SubExchangeAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. The targeting_option_id of a TargetingOption of type
 *  `TARGETING_TYPE_SUB_EXCHANGE`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

@end


/**
 *  Represents a targetable sub-exchange. This will be populated in the
 *  sub_exchange_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_SUB_EXCHANGE`.
 */
@interface GTLRDisplayVideo_SubExchangeTargetingOptionDetails : GTLRObject

/** Output only. The display name of the sub-exchange. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Settings that control the targeting expansion of the line item. Targeting
 *  expansion allows the line item to reach a larger audience based on the
 *  original audience list and the targeting expansion level. Beginning November
 *  7, 2022, these settings may represent the [optimized targeting
 *  feature](//support.google.com/displayvideo/answer/12060859) in place of
 *  targeting expansion. This feature will be rolled out to all partners by
 *  November 9, 2022.
 */
@interface GTLRDisplayVideo_TargetingExpansionConfig : GTLRObject

/**
 *  Required. Whether to exclude first-party audiences from use in targeting
 *  expansion or optimized targeting. Similar audiences of the excluded
 *  first-party lists will not be excluded. Only applicable when a first-party
 *  audience is positively targeted (directly or included in a combined
 *  audience), otherwise this selection will be ignored.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *excludeFirstPartyAudience;

/**
 *  Required. Magnitude of expansion for applicable targeting under this line
 *  item. Beginning November 7, 2022, the behavior of this field will change in
 *  the following ways with the replacement of targeting expansion with
 *  [optimized targeting](//support.google.com/displayvideo/answer/12060859): *
 *  This field will represent the optimized targeting checkbox, with a
 *  `NO_EXPANSION` value representing optimized targeting turned off and a
 *  `LEAST_EXPANSION` value representing optimized targeting turned on. *
 *  `NO_EXPANSION` will be the default value for the field and will be
 *  automatically assigned if you do not set the field. * If you set the field
 *  to any value other than `NO_EXPANSION`, it will automatically be set to
 *  `LEAST_EXPANSION`.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_BalancedExpansion
 *        Moderate targeting expansion, medium reach. (Value:
 *        "BALANCED_EXPANSION")
 *    @arg @c kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_LeastExpansion
 *        Conservative targeting expansion, lowest reach. (Value:
 *        "LEAST_EXPANSION")
 *    @arg @c kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_MoreExpansion
 *        Moderately aggressive targeting expansion, higher reach. (Value:
 *        "MORE_EXPANSION")
 *    @arg @c kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_MostExpansion
 *        Aggressive targeting expansion, highest reach. (Value:
 *        "MOST_EXPANSION")
 *    @arg @c kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_NoExpansion
 *        Targeting expansion off. (Value: "NO_EXPANSION")
 *    @arg @c kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_SomeExpansion
 *        Moderately conservative targeting expansion, lower reach. (Value:
 *        "SOME_EXPANSION")
 *    @arg @c kGTLRDisplayVideo_TargetingExpansionConfig_TargetingExpansionLevel_TargetingExpansionLevelUnspecified
 *        Targeting expansion level is not specified or is unknown in this
 *        version. (Value: "TARGETING_EXPANSION_LEVEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *targetingExpansionLevel;

@end


/**
 *  Represents a single targeting option, which is a targetable concept in
 *  DV360.
 */
@interface GTLRDisplayVideo_TargetingOption : GTLRObject

/** Age range details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AgeRangeTargetingOptionDetails *ageRangeDetails;

/** App category details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AppCategoryTargetingOptionDetails *appCategoryDetails;

/** Audio content type details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AudioContentTypeTargetingOptionDetails *audioContentTypeDetails;

/** Authorized seller status resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_AuthorizedSellerStatusTargetingOptionDetails *authorizedSellerStatusDetails;

/** Browser details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_BrowserTargetingOptionDetails *browserDetails;

/** Business chain resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_BusinessChainTargetingOptionDetails *businessChainDetails;

/** Carrier and ISP details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CarrierAndIspTargetingOptionDetails *carrierAndIspDetails;

/** Category resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_CategoryTargetingOptionDetails *categoryDetails;

/** Content duration resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentDurationTargetingOptionDetails *contentDurationDetails;

/** Content genre resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentGenreTargetingOptionDetails *contentGenreDetails;

/** Content instream position details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentInstreamPositionTargetingOptionDetails *contentInstreamPositionDetails;

/** Content outstream position details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentOutstreamPositionTargetingOptionDetails *contentOutstreamPositionDetails;

/** Content stream type resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ContentStreamTypeTargetingOptionDetails *contentStreamTypeDetails;

/** Device make and model resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DeviceMakeModelTargetingOptionDetails *deviceMakeModelDetails;

/** Device type details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DeviceTypeTargetingOptionDetails *deviceTypeDetails;

/** Digital content label details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DigitalContentLabelTargetingOptionDetails *digitalContentLabelDetails;

/** Environment details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_EnvironmentTargetingOptionDetails *environmentDetails;

/** Exchange details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ExchangeTargetingOptionDetails *exchangeDetails;

/** Gender details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GenderTargetingOptionDetails *genderDetails;

/** Geographic region resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_GeoRegionTargetingOptionDetails *geoRegionDetails;

/** Household income details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_HouseholdIncomeTargetingOptionDetails *householdIncomeDetails;

/** Language resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_LanguageTargetingOptionDetails *languageDetails;

/** Output only. The resource name for this targeting option. */
@property(nonatomic, copy, nullable) NSString *name;

/** Native content position details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_NativeContentPositionTargetingOptionDetails *nativeContentPositionDetails;

/** Open Measurement enabled inventory details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_OmidTargetingOptionDetails *omidDetails;

/** On screen position details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_OnScreenPositionTargetingOptionDetails *onScreenPositionDetails;

/** Operating system resources details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_OperatingSystemTargetingOptionDetails *operatingSystemDetails;

/** Parental status details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ParentalStatusTargetingOptionDetails *parentalStatusDetails;

/** POI resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_PoiTargetingOptionDetails *poiDetails;

/** Sensitive Category details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_SensitiveCategoryTargetingOptionDetails *sensitiveCategoryDetails;

/** Sub-exchange details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_SubExchangeTargetingOptionDetails *subExchangeDetails;

/**
 *  Output only. A unique identifier for this targeting option. The tuple
 *  {`targeting_type`, `targeting_option_id`} will be unique.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

/**
 *  Output only. The type of this targeting option.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAgeRange
 *        Target ads to a specific age range (for example, 18-24). (Value:
 *        "TARGETING_TYPE_AGE_RANGE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeApp
 *        Target a specific app (for example, Angry Birds). (Value:
 *        "TARGETING_TYPE_APP")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAppCategory
 *        Target an app category (for example, education or puzzle games).
 *        (Value: "TARGETING_TYPE_APP_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAudienceGroup
 *        Target ads to an audience or groups of audiences. Singleton field, at
 *        most one can exist on a single Lineitem at a time. (Value:
 *        "TARGETING_TYPE_AUDIENCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAudioContentType
 *        Target ads to a specific audio content type. (Value:
 *        "TARGETING_TYPE_AUDIO_CONTENT_TYPE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeAuthorizedSellerStatus
 *        Target ads to ads.txt authorized sellers. (Value:
 *        "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeBrowser
 *        Target ads to specific web browsers (for example, Chrome). (Value:
 *        "TARGETING_TYPE_BROWSER")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeBusinessChain
 *        Target ads around locations of a business chain within a specific geo
 *        region. (Value: "TARGETING_TYPE_BUSINESS_CHAIN")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeCarrierAndIsp
 *        Target ads to a specific network carrier or internet service provider
 *        (ISP) (for example, Comcast or Orange). (Value:
 *        "TARGETING_TYPE_CARRIER_AND_ISP")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeCategory
 *        Target ads to a specific content category (for example, arts &
 *        entertainment). (Value: "TARGETING_TYPE_CATEGORY")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeChannel
 *        Target a channel (a custom group of related websites or apps). (Value:
 *        "TARGETING_TYPE_CHANNEL")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentDuration
 *        Target ads to a specific video content duration. (Value:
 *        "TARGETING_TYPE_CONTENT_DURATION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentGenre
 *        Target ads to a specific content genre. (Value:
 *        "TARGETING_TYPE_CONTENT_GENRE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentInstreamPosition
 *        Target video or audio ads in a specific content instream position (for
 *        example, pre-roll, mid-roll, or post-roll). (Value:
 *        "TARGETING_TYPE_CONTENT_INSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentOutstreamPosition
 *        Target ads in a specific content outstream position. (Value:
 *        "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeContentStreamType
 *        Target ads to a specific video content stream type. (Value:
 *        "TARGETING_TYPE_CONTENT_STREAM_TYPE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDayAndTime
 *        Target ads during a chosen time period on a specific day. (Value:
 *        "TARGETING_TYPE_DAY_AND_TIME")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDeviceMakeModel
 *        Target ads to a specific device make or model (for example, Roku or
 *        Samsung). (Value: "TARGETING_TYPE_DEVICE_MAKE_MODEL")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDeviceType
 *        Target ads to a specific device type (for example, tablet or connected
 *        TV). (Value: "TARGETING_TYPE_DEVICE_TYPE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeDigitalContentLabelExclusion
 *        Filter web sites by specific digital content label ratings (for
 *        example, DL-MA: suitable only for mature audiences). (Value:
 *        "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeEnvironment
 *        Target ads to a specific environment (for example, web or app).
 *        (Value: "TARGETING_TYPE_ENVIRONMENT")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeExchange
 *        Purchase impressions from specific exchanges. (Value:
 *        "TARGETING_TYPE_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeGender
 *        Target ads to a specific gender (for example, female or male). (Value:
 *        "TARGETING_TYPE_GENDER")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeGeoRegion
 *        Target ads to a specific regional location (for example, a city or
 *        state). (Value: "TARGETING_TYPE_GEO_REGION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeHouseholdIncome
 *        Target ads to a specific household income range (for example, top
 *        10%). (Value: "TARGETING_TYPE_HOUSEHOLD_INCOME")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeInventorySource
 *        Purchase impressions from specific deals and auction packages. (Value:
 *        "TARGETING_TYPE_INVENTORY_SOURCE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeInventorySourceGroup
 *        Purchase impressions from a group of deals and auction packages.
 *        (Value: "TARGETING_TYPE_INVENTORY_SOURCE_GROUP")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeKeyword
 *        Target ads to a specific keyword (for example, dog or retriever).
 *        (Value: "TARGETING_TYPE_KEYWORD")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeLanguage
 *        Target ads to a specific language (for example, English or Japanese).
 *        (Value: "TARGETING_TYPE_LANGUAGE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeNativeContentPosition
 *        Target ads to a specific native content position. (Value:
 *        "TARGETING_TYPE_NATIVE_CONTENT_POSITION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeNegativeKeywordList
 *        Target ads to a specific negative keyword list. (Value:
 *        "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeOmid
 *        Target ads in an Open Measurement enabled inventory. (Value:
 *        "TARGETING_TYPE_OMID")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeOnScreenPosition
 *        Target ads in a specific on screen position. (Value:
 *        "TARGETING_TYPE_ON_SCREEN_POSITION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeOperatingSystem
 *        Target ads to a specific operating system (for example, macOS).
 *        (Value: "TARGETING_TYPE_OPERATING_SYSTEM")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeParentalStatus
 *        Target ads to a specific parental status (for example, parent or not a
 *        parent). (Value: "TARGETING_TYPE_PARENTAL_STATUS")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypePoi
 *        Target ads around a specific point of interest, such as a notable
 *        building, a street address, or latitude/longitude coordinates. (Value:
 *        "TARGETING_TYPE_POI")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeProximityLocationList
 *        Target ads to the specified points of interest on a proximity location
 *        list. (Value: "TARGETING_TYPE_PROXIMITY_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeRegionalLocationList
 *        Target ads to the specified regions on a regional location list.
 *        (Value: "TARGETING_TYPE_REGIONAL_LOCATION_LIST")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeSensitiveCategoryExclusion
 *        Filter website content by sensitive categories (for example, adult).
 *        (Value: "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeSubExchange
 *        Purchase impressions from specific sub-exchanges. (Value:
 *        "TARGETING_TYPE_SUB_EXCHANGE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeThirdPartyVerifier
 *        Filter web sites through third party verification (for example, IAS or
 *        DoubleVerify). (Value: "TARGETING_TYPE_THIRD_PARTY_VERIFIER")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeUnspecified
 *        Default value when type is not specified or is unknown in this
 *        version. (Value: "TARGETING_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeUrl
 *        Target a specific url (for example, quora.com). (Value:
 *        "TARGETING_TYPE_URL")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeUserRewardedContent
 *        Target user rewarded content for video ads. (Value:
 *        "TARGETING_TYPE_USER_REWARDED_CONTENT")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeVideoPlayerSize
 *        Target a specific video player size for video ads. (Value:
 *        "TARGETING_TYPE_VIDEO_PLAYER_SIZE")
 *    @arg @c kGTLRDisplayVideo_TargetingOption_TargetingType_TargetingTypeViewability
 *        Target ads to a specific viewability (for example, 80% viewable).
 *        (Value: "TARGETING_TYPE_VIEWABILITY")
 */
@property(nonatomic, copy, nullable) NSString *targetingType;

/** User rewarded content details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_UserRewardedContentTargetingOptionDetails *userRewardedContentDetails;

/** Video player size details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails *videoPlayerSizeDetails;

/** Viewability resource details. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_ViewabilityTargetingOptionDetails *viewabilityDetails;

@end


/**
 *  Settings for advertisers that use third-party ad servers only.
 */
@interface GTLRDisplayVideo_ThirdPartyOnlyConfig : GTLRObject

/**
 *  Whether or not order ID reporting for pixels is enabled. This value cannot
 *  be changed once set to `true`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pixelOrderIdReportingEnabled;

@end


/**
 *  Tracking URLs from third parties to track interactions with an audio or a
 *  video creative.
 */
@interface GTLRDisplayVideo_ThirdPartyUrl : GTLRObject

/**
 *  The type of interaction needs to be tracked by the tracking URL
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoComplete
 *        Used to track the number of times the audio or video plays to the end.
 *        (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_COMPLETE")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoCustom
 *        Used to track the number of times a user performs a custom click, such
 *        as clicking on a video hot spot. (Value:
 *        "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_CUSTOM")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoFirstQuartile
 *        Used to track the number of times the audio or video plays to 25% of
 *        its length. (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FIRST_QUARTILE")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoFullscreen
 *        Used to track the number of times a user expands the player to
 *        full-screen size. (Value:
 *        "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FULLSCREEN")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoMidpoint
 *        Used to track the number of times the audio or video plays to 50% of
 *        its length. (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MIDPOINT")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoMute
 *        Used to track the number of times a user mutes the audio or video.
 *        (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MUTE")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoPause
 *        Used to track the number of times a user pauses the audio or video.
 *        (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PAUSE")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoProgress
 *        Used to track the number of times the audio or video plays to an
 *        offset determined by the progress_offset. (Value:
 *        "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PROGRESS")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoRewind
 *        Used to track the number of times a user replays the audio or video.
 *        (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_REWIND")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoSkip
 *        Used to track the number of times the audio or video was skipped.
 *        (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_SKIP")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoStart
 *        Used to track the number of times a user starts the audio or video.
 *        (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_START")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoStop
 *        Used to track the number of times a user stops the audio or video.
 *        (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_STOP")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeAudioVideoThirdQuartile
 *        Used to track the number of times the audio or video plays to 75% of
 *        its length. (Value: "THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_THIRD_QUARTILE")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeClickTracking
 *        Used to track user clicks on the audio or video. (Value:
 *        "THIRD_PARTY_URL_TYPE_CLICK_TRACKING")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeImpression
 *        Used to count impressions of the creative after the audio or video
 *        buffering is complete. (Value: "THIRD_PARTY_URL_TYPE_IMPRESSION")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyUrl_Type_ThirdPartyUrlTypeUnspecified
 *        The type of third-party URL is unspecified or is unknown in this
 *        version. (Value: "THIRD_PARTY_URL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Tracking URL used to track the interaction. Provide a URL with optional path
 *  or query string, beginning with `https:`. For example,
 *  https://www.example.com/path
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Settings that control how third-party measurement vendors are configured.
 */
@interface GTLRDisplayVideo_ThirdPartyVendorConfig : GTLRObject

/**
 *  The ID used by the platform of the third-party vendor to identify the line
 *  item.
 */
@property(nonatomic, copy, nullable) NSString *placementId;

/**
 *  The third-party measurement vendor.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorComscore
 *        Comscore. (Value: "THIRD_PARTY_VENDOR_COMSCORE")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorDoubleVerify
 *        DoubleVerify. (Value: "THIRD_PARTY_VENDOR_DOUBLE_VERIFY")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorDynata
 *        Dynata. (Value: "THIRD_PARTY_VENDOR_DYNATA")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorIntegralAdScience
 *        Integral Ad Science. (Value: "THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorKantar
 *        Kantar. (Value: "THIRD_PARTY_VENDOR_KANTAR")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorMeetrics
 *        Meetrics. (Value: "THIRD_PARTY_VENDOR_MEETRICS")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorMoat
 *        Moat. (Value: "THIRD_PARTY_VENDOR_MOAT")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorNielsen
 *        Nielsen. (Value: "THIRD_PARTY_VENDOR_NIELSEN")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorTelemetry
 *        Telemetry. (Value: "THIRD_PARTY_VENDOR_TELEMETRY")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorUnspecified
 *        Unknown third-party vendor. (Value: "THIRD_PARTY_VENDOR_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_ThirdPartyVendorConfig_Vendor_ThirdPartyVendorZefr
 *        ZEFR. (Value: "THIRD_PARTY_VENDOR_ZEFR")
 */
@property(nonatomic, copy, nullable) NSString *vendor;

@end


/**
 *  Assigned third party verifier targeting option details. This will be
 *  populated in the details field of an AssignedTargetingOption when
 *  targeting_type is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`.
 */
@interface GTLRDisplayVideo_ThirdPartyVerifierAssignedTargetingOptionDetails : GTLRObject

/** Third party brand verifier -- Adloox. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Adloox *adloox;

/** Third party brand verifier -- DoubleVerify. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_DoubleVerify *doubleVerify;

/** Third party brand verifier -- Integral Ad Science. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_IntegralAdScience *integralAdScience;

@end


/**
 *  A time range.
 */
@interface GTLRDisplayVideo_TimeRange : GTLRObject

/** Required. The upper bound of a time range, inclusive. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Required. The lower bound of a time range, inclusive. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Timer event of the creative.
 */
@interface GTLRDisplayVideo_TimerEvent : GTLRObject

/** Required. The name of the timer event. */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The name used to identify this timer event in reports. */
@property(nonatomic, copy, nullable) NSString *reportingName;

@end


/**
 *  Settings that control the behavior of a single Floodlight activity config.
 */
@interface GTLRDisplayVideo_TrackingFloodlightActivityConfig : GTLRObject

/**
 *  Required. The ID of the Floodlight activity.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *floodlightActivityId;

/**
 *  Required. The number of days after an ad has been clicked in which a
 *  conversion may be counted. Must be between 0 and 90 inclusive.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *postClickLookbackWindowDays;

/**
 *  Required. The number of days after an ad has been viewed in which a
 *  conversion may be counted. Must be between 0 and 90 inclusive.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *postViewLookbackWindowDays;

@end


/**
 *  Represents information about the transcoded audio or video file.
 */
@interface GTLRDisplayVideo_Transcode : GTLRObject

/**
 *  The bit rate for the audio stream of the transcoded video, or the bit rate
 *  for the transcoded audio, in kilobits per second.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *audioBitRateKbps;

/**
 *  The sample rate for the audio stream of the transcoded video, or the sample
 *  rate for the transcoded audio, in hertz.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *audioSampleRateHz;

/**
 *  The transcoding bit rate of the transcoded video, in kilobits per second.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bitRateKbps;

/** The dimensions of the transcoded video. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_Dimensions *dimensions;

/**
 *  The size of the transcoded file, in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fileSizeBytes;

/**
 *  The frame rate of the transcoded video, in frames per second.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *frameRate;

/** The MIME type of the transcoded file. */
@property(nonatomic, copy, nullable) NSString *mimeType;

/** The name of the transcoded file. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates if the transcoding was successful.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *transcoded;

@end


/**
 *  A creative identifier provided by a registry that is unique across all
 *  platforms. This is part of the VAST 4.0 standard.
 */
@interface GTLRDisplayVideo_UniversalAdId : GTLRObject

/**
 *  The unique creative identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The registry provides unique creative identifiers.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryAdId
 *        Use Ad-ID to provide the Universal Ad ID. (Value:
 *        "UNIVERSAL_AD_REGISTRY_AD_ID")
 *    @arg @c kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryClearcast
 *        Use clearcast.co.uk to provide the Universal Ad ID. (Value:
 *        "UNIVERSAL_AD_REGISTRY_CLEARCAST")
 *    @arg @c kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryCm Use
 *        Campaign Manager 360 to provide the Universal Ad ID. (Value:
 *        "UNIVERSAL_AD_REGISTRY_CM")
 *    @arg @c kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryDv360
 *        Use Display & Video 360 to provide the Universal Ad ID. (Value:
 *        "UNIVERSAL_AD_REGISTRY_DV360")
 *    @arg @c kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryOther
 *        Use a custom provider to provide the Universal Ad ID. (Value:
 *        "UNIVERSAL_AD_REGISTRY_OTHER")
 *    @arg @c kGTLRDisplayVideo_UniversalAdId_Registry_UniversalAdRegistryUnspecified
 *        The Universal Ad registry is unspecified or is unknown in this
 *        version. (Value: "UNIVERSAL_AD_REGISTRY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *registry;

@end


/**
 *  Details for assigned URL targeting option. This will be populated in the
 *  details field of an AssignedTargetingOption when targeting_type is
 *  `TARGETING_TYPE_URL`.
 */
@interface GTLRDisplayVideo_UrlAssignedTargetingOptionDetails : GTLRObject

/**
 *  Indicates if this option is being negatively targeted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negative;

/**
 *  Required. The URL, for example `example.com`. DV360 supports two levels of
 *  subdirectory targeting, for example
 *  `www.example.com/one-subdirectory-level/second-level`, and five levels of
 *  subdomain targeting, for example `five.four.three.two.one.example.com`.
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  A single user in Display & Video 360.
 */
@interface GTLRDisplayVideo_User : GTLRObject

/**
 *  The assigned user roles. Required in CreateUser. Output only in UpdateUser.
 *  Can only be updated through BulkEditAssignedUserRoles.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_AssignedUserRole *> *assignedUserRoles;

/**
 *  Required. The display name of the user. Must be UTF-8 encoded with a maximum
 *  size of 240 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Required. Immutable. The email address used to identify the user. */
@property(nonatomic, copy, nullable) NSString *email;

/** Output only. The resource name of the user. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The unique ID of the user. Assigned by the system.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *userId;

@end


/**
 *  User rewarded content targeting option details. This will be populated in
 *  the user_rewarded_content_details field when targeting_type is
 *  `TARGETING_TYPE_USER_REWARDED_CONTENT`.
 */
@interface GTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails : GTLRObject

/**
 *  Required. The targeting_option_id field when targeting_type is
 *  `TARGETING_TYPE_USER_REWARDED_CONTENT`.
 */
@property(nonatomic, copy, nullable) NSString *targetingOptionId;

/**
 *  Output only. User rewarded content status for video ads.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails_UserRewardedContent_UserRewardedContentNotUserRewarded
 *        Represents all other ads besides user-rewarded. (Value:
 *        "USER_REWARDED_CONTENT_NOT_USER_REWARDED")
 *    @arg @c kGTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails_UserRewardedContent_UserRewardedContentUnspecified
 *        User rewarded content is not specified or is unknown in this version.
 *        (Value: "USER_REWARDED_CONTENT_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_UserRewardedContentAssignedTargetingOptionDetails_UserRewardedContent_UserRewardedContentUserRewarded
 *        Represents ads where the user will see a reward after viewing. (Value:
 *        "USER_REWARDED_CONTENT_USER_REWARDED")
 */
@property(nonatomic, copy, nullable) NSString *userRewardedContent;

@end


/**
 *  Represents a targetable user rewarded content status for video ads only.
 *  This will be populated in the user_rewarded_content_details field when
 *  targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.
 */
@interface GTLRDisplayVideo_UserRewardedContentTargetingOptionDetails : GTLRObject

/**
 *  Output only. User rewarded content status for video ads.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_UserRewardedContentTargetingOptionDetails_UserRewardedContent_UserRewardedContentNotUserRewarded
 *        Represents all other ads besides user-rewarded. (Value:
 *        "USER_REWARDED_CONTENT_NOT_USER_REWARDED")
 *    @arg @c kGTLRDisplayVideo_UserRewardedContentTargetingOptionDetails_UserRewardedContent_UserRewardedContentUnspecified
 *        User rewarded content is not specified or is unknown in this version.
 *        (Value: "USER_REWARDED_CONTENT_UNSPECIFIED")
 *    @arg @c kGTLRDisplayVideo_UserRewardedContentTargetingOptionDetails_UserRewardedContent_UserRewardedContentUserRewarded
 *        Represents ads where the user will see a reward after viewing. (Value:
 *        "USER_REWARDED_CONTENT_USER_REWARDED")
 */
@property(nonatomic, copy, nullable) NSString *userRewardedContent;

@end


/**
 *  Video player size targeting option details. This will be populated in the
 *  video_player_size_details field when targeting_type is
 *  `TARGETING_TYPE_VIDEO_PLAYER_SIZE`. Explicitly targeting all options is not
 *  supported. Remove all video player size targeting options to achieve this
 *  effect.
 */
@interface GTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails : GTLRObject

/**
 *  The video player size. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeHd
 *        The dimensions of the video player are 1280×720 or greater (desktop),
 *        or over 90% of the screen covered (mobile). (Value:
 *        "VIDEO_PLAYER_SIZE_HD")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeLarge
 *        The dimensions of the video player are between 400x300 and 1280x720
 *        pixels (desktop), or 20% to 90% of the screen covered (mobile).
 *        (Value: "VIDEO_PLAYER_SIZE_LARGE")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeSmall
 *        The dimensions of the video player are less than 400×300 (desktop), or
 *        up to 20% of screen covered (mobile). (Value:
 *        "VIDEO_PLAYER_SIZE_SMALL")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnknown
 *        The dimensions of the video player are unknown. (Value:
 *        "VIDEO_PLAYER_SIZE_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeAssignedTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnspecified
 *        Video player size is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real video
 *        player size. (Value: "VIDEO_PLAYER_SIZE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *videoPlayerSize;

@end


/**
 *  Represents a targetable video player size. This will be populated in the
 *  video_player_size_details field when targeting_type is
 *  `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.
 */
@interface GTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails : GTLRObject

/**
 *  Output only. The video player size.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeHd
 *        The dimensions of the video player are 1280×720 or greater (desktop),
 *        or over 90% of the screen covered (mobile). (Value:
 *        "VIDEO_PLAYER_SIZE_HD")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeLarge
 *        The dimensions of the video player are between 400x300 and 1280x720
 *        pixels (desktop), or 20% to 90% of the screen covered (mobile).
 *        (Value: "VIDEO_PLAYER_SIZE_LARGE")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeSmall
 *        The dimensions of the video player are less than 400×300 (desktop), or
 *        up to 20% of screen covered (mobile). (Value:
 *        "VIDEO_PLAYER_SIZE_SMALL")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnknown
 *        The dimensions of the video player are unknown. (Value:
 *        "VIDEO_PLAYER_SIZE_UNKNOWN")
 *    @arg @c kGTLRDisplayVideo_VideoPlayerSizeTargetingOptionDetails_VideoPlayerSize_VideoPlayerSizeUnspecified
 *        Video player size is not specified in this version. This enum is a
 *        place holder for a default value and does not represent a real video
 *        player size. (Value: "VIDEO_PLAYER_SIZE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *videoPlayerSize;

@end


/**
 *  Assigned viewability targeting option details. This will be populated in the
 *  viewability_details field of an AssignedTargetingOption when targeting_type
 *  is `TARGETING_TYPE_VIEWABILITY`.
 */
@interface GTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails : GTLRObject

/**
 *  The predicted viewability percentage. Output only in v1. Required in v2.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability10PercentOrMore
 *        Bid only on impressions that are at least 10% likely to be viewable.
 *        (Value: "VIEWABILITY_10_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability20PercentOrMore
 *        Bid only on impressions that are at least 20% likely to be viewable.
 *        (Value: "VIEWABILITY_20_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability30PercentOrMore
 *        Bid only on impressions that are at least 30% likely to be viewable.
 *        (Value: "VIEWABILITY_30_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability40PercentOrMore
 *        Bid only on impressions that are at least 40% likely to be viewable.
 *        (Value: "VIEWABILITY_40_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability50PercentOrMore
 *        Bid only on impressions that are at least 50% likely to be viewable.
 *        (Value: "VIEWABILITY_50_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability60PercentOrMore
 *        Bid only on impressions that are at least 60% likely to be viewable.
 *        (Value: "VIEWABILITY_60_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability70PercentOrMore
 *        Bid only on impressions that are at least 70% likely to be viewable.
 *        (Value: "VIEWABILITY_70_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability80PercentOrMore
 *        Bid only on impressions that are at least 80% likely to be viewable.
 *        (Value: "VIEWABILITY_80_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_Viewability90PercentOrMore
 *        Bid only on impressions that are at least 90% likely to be viewable.
 *        (Value: "VIEWABILITY_90_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityAssignedTargetingOptionDetails_Viewability_ViewabilityUnspecified
 *        Default value when viewability is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        viewability option. (Value: "VIEWABILITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *viewability;

@end


/**
 *  Represents a targetable viewability. This will be populated in the
 *  viewability_details field of a TargetingOption when targeting_type is
 *  `TARGETING_TYPE_VIEWABILITY`.
 */
@interface GTLRDisplayVideo_ViewabilityTargetingOptionDetails : GTLRObject

/**
 *  Output only. The predicted viewability percentage.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability10PercentOrMore
 *        Bid only on impressions that are at least 10% likely to be viewable.
 *        (Value: "VIEWABILITY_10_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability20PercentOrMore
 *        Bid only on impressions that are at least 20% likely to be viewable.
 *        (Value: "VIEWABILITY_20_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability30PercentOrMore
 *        Bid only on impressions that are at least 30% likely to be viewable.
 *        (Value: "VIEWABILITY_30_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability40PercentOrMore
 *        Bid only on impressions that are at least 40% likely to be viewable.
 *        (Value: "VIEWABILITY_40_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability50PercentOrMore
 *        Bid only on impressions that are at least 50% likely to be viewable.
 *        (Value: "VIEWABILITY_50_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability60PercentOrMore
 *        Bid only on impressions that are at least 60% likely to be viewable.
 *        (Value: "VIEWABILITY_60_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability70PercentOrMore
 *        Bid only on impressions that are at least 70% likely to be viewable.
 *        (Value: "VIEWABILITY_70_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability80PercentOrMore
 *        Bid only on impressions that are at least 80% likely to be viewable.
 *        (Value: "VIEWABILITY_80_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_Viewability90PercentOrMore
 *        Bid only on impressions that are at least 90% likely to be viewable.
 *        (Value: "VIEWABILITY_90_PERCENT_OR_MORE")
 *    @arg @c kGTLRDisplayVideo_ViewabilityTargetingOptionDetails_Viewability_ViewabilityUnspecified
 *        Default value when viewability is not specified in this version. This
 *        enum is a placeholder for default value and does not represent a real
 *        viewability option. (Value: "VIEWABILITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *viewability;

@end


/**
 *  Settings that control the bid strategy for YouTube and Partners resources.
 */
@interface GTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy : GTLRObject

/**
 *  The type of the bidding strategy.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeManualCpm
 *        A bidding strategy that pays a configurable amount per impression.
 *        (Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeManualCpv
 *        A bidding strategy that pays a configurable amount per video view.
 *        (Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeMaximizeConversions
 *        A bidding strategy that automatically maximizes number of conversions
 *        given a daily budget. (Value:
 *        "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSIONS")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeMaximizeLift
 *        An automated bidding strategy that sets bids to achieve maximum lift.
 *        (Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_LIFT")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeTargetCpa
 *        A bidding strategy that automatically optimizes conversions per
 *        dollar. (Value:
 *        "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeTargetCpm
 *        A bidding strategy that pays a configurable amount per impression.
 *        (Value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy_Type_YoutubeAndPartnersBiddingStrategyTypeUnspecified
 *        Type is not specified or unknown. (Value:
 *        "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  The value used by the bidding strategy. When the bidding strategy is
 *  assigned at the line item level, this field is only applicable for the
 *  following strategy types: *
 *  `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA` When the bidding
 *  strategy is assigned at the ad group level, this field is only applicable
 *  for the following strategy types: *
 *  `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM` *
 *  `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV` *
 *  `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA` *
 *  `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM` If not using an
 *  applicable strategy, the value of this field will be 0.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Settings that control what YouTube related inventories the YouTube and
 *  Partners line item will target.
 */
@interface GTLRDisplayVideo_YoutubeAndPartnersInventorySourceConfig : GTLRObject

/**
 *  Whether to target inventory on the YouTube search results page.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeYoutubeSearch;

/**
 *  Whether to target inventory on a collection of partner sites and apps that
 *  follow the same brand safety standards as YouTube.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeYoutubeVideoPartners;

/**
 *  Whether to target inventory of channels and videos on YouTube and YouTube
 *  videos embedded on other sites.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeYoutubeVideos;

@end


/**
 *  Settings for YouTube and Partners line items.
 */
@interface GTLRDisplayVideo_YoutubeAndPartnersSettings : GTLRObject

/** The bidding strategy of the YouTube and Partners line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_YoutubeAndPartnersBiddingStrategy *biddingStrategy;

/**
 *  The kind of content on which the YouTube and Partners ads will be shown.
 *
 *  Likely values:
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryExpanded
 *        A category including all content across YouTube and video partners
 *        that meets standards for monetization. (Value:
 *        "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_EXPANDED")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryLimited
 *        A category consisting of a reduced range of content that meets
 *        heightened requirements, especially regarding inappropriate language
 *        and sexual suggestiveness. (Value:
 *        "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_LIMITED")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryStandard
 *        A category consisting of a wide range of content appropriate for most
 *        brands. The content is based off of YouTube's [advertiser-friendly
 *        content
 *        guidelines](https://support.google.com/youtube/answer/6162278).
 *        (Value: "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_STANDARD")
 *    @arg @c kGTLRDisplayVideo_YoutubeAndPartnersSettings_ContentCategory_YoutubeAndPartnersContentCategoryUnspecified
 *        Content category is not specified or is unknown in this version.
 *        (Value: "YOUTUBE_AND_PARTNERS_CONTENT_CATEGORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *contentCategory;

/**
 *  Settings that control what YouTube and Partners inventories the line item
 *  will target.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_YoutubeAndPartnersInventorySourceConfig *inventorySourceSettings;

/** The third-party measurement settings of the line item. */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_YoutubeAndPartnersThirdPartyMeasurementSettings *thirdPartyMeasurementSettings;

/**
 *  The view frequency cap settings of the line item. The max_views field in
 *  this settings object must be used if assigning a limited cap.
 */
@property(nonatomic, strong, nullable) GTLRDisplayVideo_FrequencyCap *viewFrequencyCap;

@end


/**
 *  Settings that control what third-party vendors are measuring specific line
 *  item metrics.
 */
@interface GTLRDisplayVideo_YoutubeAndPartnersThirdPartyMeasurementSettings : GTLRObject

/**
 *  The third-party vendors measuring brand lift. The following third-party
 *  vendors are applicable: * `THIRD_PARTY_VENDOR_DYNATA` *
 *  `THIRD_PARTY_VENDOR_KANTAR`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ThirdPartyVendorConfig *> *brandLiftVendorConfigs;

/**
 *  The third-party vendors measuring brand safety. The following third-party
 *  vendors are applicable: * `THIRD_PARTY_VENDOR_ZERF` *
 *  `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
 *  `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ThirdPartyVendorConfig *> *brandSafetyVendorConfigs;

/**
 *  The third-party vendors measuring reach. The following third-party vendors
 *  are applicable: * `THIRD_PARTY_VENDOR_NIELSEN` *
 *  `THIRD_PARTY_VENDOR_COMSCORE` * `THIRD_PARTY_VENDOR_KANTAR`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ThirdPartyVendorConfig *> *reachVendorConfigs;

/**
 *  The third-party vendors measuring viewability. The following third-party
 *  vendors are applicable: * `THIRD_PARTY_VENDOR_MOAT` *
 *  `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` *
 *  `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE` * `THIRD_PARTY_VENDOR_COMSCORE` *
 *  `THIRD_PARTY_VENDOR_TELEMETRY` * `THIRD_PARTY_VENDOR_MEETRICS`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDisplayVideo_ThirdPartyVendorConfig *> *viewabilityVendorConfigs;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
