// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Run Admin API (run/v2)
// Description:
//   Deploy and manage user provided container images that scale automatically
//   based on incoming requests. The Cloud Run Admin API v1 follows the Knative
//   Serving API specification, while v2 is aligned with Google Cloud AIP-based
//   API standards, as described in https://google.aip.dev/.
// Documentation:
//   https://cloud.google.com/run/

#import <GoogleAPIClientForREST/GTLRCloudRunObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRCloudRun_GoogleCloudRunV2Condition.executionReason
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_ExecutionReason_Cancelled = @"CANCELLED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_ExecutionReason_Cancelling = @"CANCELLING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_ExecutionReason_Deleted = @"DELETED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_ExecutionReason_ExecutionReasonUndefined = @"EXECUTION_REASON_UNDEFINED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_ExecutionReason_JobStatusServicePollingError = @"JOB_STATUS_SERVICE_POLLING_ERROR";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_ExecutionReason_NonZeroExitCode = @"NON_ZERO_EXIT_CODE";

// GTLRCloudRun_GoogleCloudRunV2Condition.reason
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_CommonReasonUndefined = @"COMMON_REASON_UNDEFINED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_ContainerImageAuthorizationCheckFailed = @"CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_ContainerImageUnauthorized = @"CONTAINER_IMAGE_UNAUTHORIZED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_ContainerMissing = @"CONTAINER_MISSING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_ContainerPermissionDenied = @"CONTAINER_PERMISSION_DENIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_EncryptionKeyCheckFailed = @"ENCRYPTION_KEY_CHECK_FAILED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_EncryptionKeyPermissionDenied = @"ENCRYPTION_KEY_PERMISSION_DENIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_ImmediateRetry = @"IMMEDIATE_RETRY";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_Internal = @"INTERNAL";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_PostponedRetry = @"POSTPONED_RETRY";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_ProgressDeadlineExceeded = @"PROGRESS_DEADLINE_EXCEEDED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_RevisionFailed = @"REVISION_FAILED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_SecretsAccessCheckFailed = @"SECRETS_ACCESS_CHECK_FAILED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_Unknown = @"UNKNOWN";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Reason_WaitingForOperation = @"WAITING_FOR_OPERATION";

// GTLRCloudRun_GoogleCloudRunV2Condition.revisionReason
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_ActiveRevisionLimitReached = @"ACTIVE_REVISION_LIMIT_REACHED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_CustomizedPathResponsePending = @"CUSTOMIZED_PATH_RESPONSE_PENDING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_HealthCheckContainerError = @"HEALTH_CHECK_CONTAINER_ERROR";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_HealthCheckSkipped = @"HEALTH_CHECK_SKIPPED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_MinInstancesNotProvisioned = @"MIN_INSTANCES_NOT_PROVISIONED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_MinInstancesWarming = @"MIN_INSTANCES_WARMING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_NoDeployment = @"NO_DEPLOYMENT";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_Pending = @"PENDING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_Recreating = @"RECREATING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_Reserve = @"RESERVE";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_Retired = @"RETIRED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_Retiring = @"RETIRING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_RevisionReason_RevisionReasonUndefined = @"REVISION_REASON_UNDEFINED";

// GTLRCloudRun_GoogleCloudRunV2Condition.severity
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Severity_Error = @"ERROR";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Severity_Info = @"INFO";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_Severity_Warning = @"WARNING";

// GTLRCloudRun_GoogleCloudRunV2Condition.state
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_State_ConditionFailed = @"CONDITION_FAILED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_State_ConditionPending = @"CONDITION_PENDING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_State_ConditionReconciling = @"CONDITION_RECONCILING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_State_ConditionSucceeded = @"CONDITION_SUCCEEDED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Condition_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2EmptyDirVolumeSource.medium
NSString * const kGTLRCloudRun_GoogleCloudRunV2EmptyDirVolumeSource_Medium_MediumUnspecified = @"MEDIUM_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2EmptyDirVolumeSource_Medium_Memory = @"MEMORY";

// GTLRCloudRun_GoogleCloudRunV2Execution.launchStage
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_Alpha = @"ALPHA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_Beta = @"BETA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_Deprecated = @"DEPRECATED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_EarlyAccess = @"EARLY_ACCESS";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_Ga = @"GA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_LaunchStageUnspecified = @"LAUNCH_STAGE_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_Prelaunch = @"PRELAUNCH";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Execution_LaunchStage_Unimplemented = @"UNIMPLEMENTED";

// GTLRCloudRun_GoogleCloudRunV2ExecutionReference.completionStatus
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExecutionReference_CompletionStatus_CompletionStatusUnspecified = @"COMPLETION_STATUS_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExecutionReference_CompletionStatus_ExecutionCancelled = @"EXECUTION_CANCELLED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExecutionReference_CompletionStatus_ExecutionFailed = @"EXECUTION_FAILED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExecutionReference_CompletionStatus_ExecutionPending = @"EXECUTION_PENDING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExecutionReference_CompletionStatus_ExecutionRunning = @"EXECUTION_RUNNING";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExecutionReference_CompletionStatus_ExecutionSucceeded = @"EXECUTION_SUCCEEDED";

// GTLRCloudRun_GoogleCloudRunV2ExportStatusResponse.operationState
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExportStatusResponse_OperationState_Finished = @"FINISHED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExportStatusResponse_OperationState_InProgress = @"IN_PROGRESS";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ExportStatusResponse_OperationState_OperationStateUnspecified = @"OPERATION_STATE_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2ImageExportStatus.exportJobState
NSString * const kGTLRCloudRun_GoogleCloudRunV2ImageExportStatus_ExportJobState_ExportJobStateUnspecified = @"EXPORT_JOB_STATE_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ImageExportStatus_ExportJobState_Finished = @"FINISHED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ImageExportStatus_ExportJobState_InProgress = @"IN_PROGRESS";

// GTLRCloudRun_GoogleCloudRunV2Job.launchStage
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_Alpha = @"ALPHA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_Beta = @"BETA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_Deprecated = @"DEPRECATED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_EarlyAccess = @"EARLY_ACCESS";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_Ga = @"GA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_LaunchStageUnspecified = @"LAUNCH_STAGE_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_Prelaunch = @"PRELAUNCH";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Job_LaunchStage_Unimplemented = @"UNIMPLEMENTED";

// GTLRCloudRun_GoogleCloudRunV2Revision.encryptionKeyRevocationAction
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_EncryptionKeyRevocationAction_EncryptionKeyRevocationActionUnspecified = @"ENCRYPTION_KEY_REVOCATION_ACTION_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_EncryptionKeyRevocationAction_PreventNew = @"PREVENT_NEW";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_EncryptionKeyRevocationAction_Shutdown = @"SHUTDOWN";

// GTLRCloudRun_GoogleCloudRunV2Revision.executionEnvironment
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_ExecutionEnvironment_ExecutionEnvironmentGen1 = @"EXECUTION_ENVIRONMENT_GEN1";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_ExecutionEnvironment_ExecutionEnvironmentGen2 = @"EXECUTION_ENVIRONMENT_GEN2";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_ExecutionEnvironment_ExecutionEnvironmentUnspecified = @"EXECUTION_ENVIRONMENT_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2Revision.launchStage
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_Alpha = @"ALPHA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_Beta = @"BETA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_Deprecated = @"DEPRECATED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_EarlyAccess = @"EARLY_ACCESS";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_Ga = @"GA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_LaunchStageUnspecified = @"LAUNCH_STAGE_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_Prelaunch = @"PRELAUNCH";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Revision_LaunchStage_Unimplemented = @"UNIMPLEMENTED";

// GTLRCloudRun_GoogleCloudRunV2RevisionTemplate.executionEnvironment
NSString * const kGTLRCloudRun_GoogleCloudRunV2RevisionTemplate_ExecutionEnvironment_ExecutionEnvironmentGen1 = @"EXECUTION_ENVIRONMENT_GEN1";
NSString * const kGTLRCloudRun_GoogleCloudRunV2RevisionTemplate_ExecutionEnvironment_ExecutionEnvironmentGen2 = @"EXECUTION_ENVIRONMENT_GEN2";
NSString * const kGTLRCloudRun_GoogleCloudRunV2RevisionTemplate_ExecutionEnvironment_ExecutionEnvironmentUnspecified = @"EXECUTION_ENVIRONMENT_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2Service.ingress
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_Ingress_IngressTrafficAll = @"INGRESS_TRAFFIC_ALL";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_Ingress_IngressTrafficInternalLoadBalancer = @"INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_Ingress_IngressTrafficInternalOnly = @"INGRESS_TRAFFIC_INTERNAL_ONLY";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_Ingress_IngressTrafficNone = @"INGRESS_TRAFFIC_NONE";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_Ingress_IngressTrafficUnspecified = @"INGRESS_TRAFFIC_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2Service.launchStage
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_Alpha = @"ALPHA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_Beta = @"BETA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_Deprecated = @"DEPRECATED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_EarlyAccess = @"EARLY_ACCESS";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_Ga = @"GA";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_LaunchStageUnspecified = @"LAUNCH_STAGE_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_Prelaunch = @"PRELAUNCH";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Service_LaunchStage_Unimplemented = @"UNIMPLEMENTED";

// GTLRCloudRun_GoogleCloudRunV2ServiceScaling.scalingMode
NSString * const kGTLRCloudRun_GoogleCloudRunV2ServiceScaling_ScalingMode_Automatic = @"AUTOMATIC";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ServiceScaling_ScalingMode_Manual = @"MANUAL";
NSString * const kGTLRCloudRun_GoogleCloudRunV2ServiceScaling_ScalingMode_ScalingModeUnspecified = @"SCALING_MODE_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2Task.executionEnvironment
NSString * const kGTLRCloudRun_GoogleCloudRunV2Task_ExecutionEnvironment_ExecutionEnvironmentGen1 = @"EXECUTION_ENVIRONMENT_GEN1";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Task_ExecutionEnvironment_ExecutionEnvironmentGen2 = @"EXECUTION_ENVIRONMENT_GEN2";
NSString * const kGTLRCloudRun_GoogleCloudRunV2Task_ExecutionEnvironment_ExecutionEnvironmentUnspecified = @"EXECUTION_ENVIRONMENT_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2TaskTemplate.executionEnvironment
NSString * const kGTLRCloudRun_GoogleCloudRunV2TaskTemplate_ExecutionEnvironment_ExecutionEnvironmentGen1 = @"EXECUTION_ENVIRONMENT_GEN1";
NSString * const kGTLRCloudRun_GoogleCloudRunV2TaskTemplate_ExecutionEnvironment_ExecutionEnvironmentGen2 = @"EXECUTION_ENVIRONMENT_GEN2";
NSString * const kGTLRCloudRun_GoogleCloudRunV2TaskTemplate_ExecutionEnvironment_ExecutionEnvironmentUnspecified = @"EXECUTION_ENVIRONMENT_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2TrafficTarget.type
NSString * const kGTLRCloudRun_GoogleCloudRunV2TrafficTarget_Type_TrafficTargetAllocationTypeLatest = @"TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST";
NSString * const kGTLRCloudRun_GoogleCloudRunV2TrafficTarget_Type_TrafficTargetAllocationTypeRevision = @"TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION";
NSString * const kGTLRCloudRun_GoogleCloudRunV2TrafficTarget_Type_TrafficTargetAllocationTypeUnspecified = @"TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2TrafficTargetStatus.type
NSString * const kGTLRCloudRun_GoogleCloudRunV2TrafficTargetStatus_Type_TrafficTargetAllocationTypeLatest = @"TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST";
NSString * const kGTLRCloudRun_GoogleCloudRunV2TrafficTargetStatus_Type_TrafficTargetAllocationTypeRevision = @"TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION";
NSString * const kGTLRCloudRun_GoogleCloudRunV2TrafficTargetStatus_Type_TrafficTargetAllocationTypeUnspecified = @"TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED";

// GTLRCloudRun_GoogleCloudRunV2VpcAccess.egress
NSString * const kGTLRCloudRun_GoogleCloudRunV2VpcAccess_Egress_AllTraffic = @"ALL_TRAFFIC";
NSString * const kGTLRCloudRun_GoogleCloudRunV2VpcAccess_Egress_PrivateRangesOnly = @"PRIVATE_RANGES_ONLY";
NSString * const kGTLRCloudRun_GoogleCloudRunV2VpcAccess_Egress_VpcEgressUnspecified = @"VPC_EGRESS_UNSPECIFIED";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalResult.decision
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalResult_Decision_Approved = @"APPROVED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalResult_Decision_DecisionUnspecified = @"DECISION_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalResult_Decision_Rejected = @"REJECTED";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1Build.status
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Cancelled = @"CANCELLED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Expired = @"EXPIRED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Failure = @"FAILURE";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_InternalError = @"INTERNAL_ERROR";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Pending = @"PENDING";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Queued = @"QUEUED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_StatusUnknown = @"STATUS_UNKNOWN";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Success = @"SUCCESS";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Timeout = @"TIMEOUT";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Status_Working = @"WORKING";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval.state
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval_State_Approved = @"APPROVED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval_State_Cancelled = @"CANCELLED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval_State_Pending = @"PENDING";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval_State_Rejected = @"REJECTED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions.defaultLogsBucketBehavior
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_DefaultLogsBucketBehavior_DefaultLogsBucketBehaviorUnspecified = @"DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_DefaultLogsBucketBehavior_RegionalUserOwnedBucket = @"REGIONAL_USER_OWNED_BUCKET";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions.logging
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_Logging_CloudLoggingOnly = @"CLOUD_LOGGING_ONLY";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_Logging_GcsOnly = @"GCS_ONLY";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_Logging_Legacy = @"LEGACY";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_Logging_LoggingUnspecified = @"LOGGING_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_Logging_None = @"NONE";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_Logging_StackdriverOnly = @"STACKDRIVER_ONLY";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions.logStreamingOption
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_LogStreamingOption_StreamDefault = @"STREAM_DEFAULT";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_LogStreamingOption_StreamOff = @"STREAM_OFF";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_LogStreamingOption_StreamOn = @"STREAM_ON";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions.machineType
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_MachineType_E2Highcpu32 = @"E2_HIGHCPU_32";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_MachineType_E2Highcpu8 = @"E2_HIGHCPU_8";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_MachineType_E2Medium = @"E2_MEDIUM";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_MachineType_N1Highcpu32 = @"N1_HIGHCPU_32";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_MachineType_N1Highcpu8 = @"N1_HIGHCPU_8";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_MachineType_Unspecified = @"UNSPECIFIED";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions.requestedVerifyOption
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_RequestedVerifyOption_NotVerified = @"NOT_VERIFIED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_RequestedVerifyOption_Verified = @"VERIFIED";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions.sourceProvenanceHash
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_SourceProvenanceHash_Md5 = @"MD5";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_SourceProvenanceHash_None = @"NONE";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_SourceProvenanceHash_Sha256 = @"SHA256";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_SourceProvenanceHash_Sha512 = @"SHA512";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions.substitutionOption
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_SubstitutionOption_AllowLoose = @"ALLOW_LOOSE";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions_SubstitutionOption_MustMatch = @"MUST_MATCH";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep.status
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Cancelled = @"CANCELLED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Expired = @"EXPIRED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Failure = @"FAILURE";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_InternalError = @"INTERNAL_ERROR";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Pending = @"PENDING";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Queued = @"QUEUED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_StatusUnknown = @"STATUS_UNKNOWN";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Success = @"SUCCESS";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Timeout = @"TIMEOUT";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep_Status_Working = @"WORKING";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo.type
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo_Type_FailureTypeUnspecified = @"FAILURE_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo_Type_FetchSourceFailed = @"FETCH_SOURCE_FAILED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo_Type_LoggingFailure = @"LOGGING_FAILURE";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo_Type_PushFailed = @"PUSH_FAILED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo_Type_PushImageNotFound = @"PUSH_IMAGE_NOT_FOUND";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo_Type_PushNotAuthorized = @"PUSH_NOT_AUTHORIZED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo_Type_UserBuildStep = @"USER_BUILD_STEP";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash.type
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash_Type_Md5 = @"MD5";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash_Type_None = @"NONE";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash_Type_Sha256 = @"SHA256";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash_Type_Sha512 = @"SHA512";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSource.sourceFetcher
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSource_SourceFetcher_GcsFetcher = @"GCS_FETCHER";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSource_SourceFetcher_Gsutil = @"GSUTIL";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSource_SourceFetcher_SourceFetcherUnspecified = @"SOURCE_FETCHER_UNSPECIFIED";

// GTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning.priority
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning_Priority_Alert = @"ALERT";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning_Priority_Info = @"INFO";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning_Priority_PriorityUnspecified = @"PRIORITY_UNSPECIFIED";
NSString * const kGTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning_Priority_Warning = @"WARNING";

// GTLRCloudRun_GoogleIamV1AuditLogConfig.logType
NSString * const kGTLRCloudRun_GoogleIamV1AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCloudRun_GoogleIamV1AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRCloudRun_GoogleIamV1AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCloudRun_GoogleIamV1AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2BinaryAuthorization
//

@implementation GTLRCloudRun_GoogleCloudRunV2BinaryAuthorization
@dynamic breakglassJustification, policy, useDefault;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2BuildpacksBuild
//

@implementation GTLRCloudRun_GoogleCloudRunV2BuildpacksBuild
@dynamic baseImage, cacheImageUri, enableAutomaticUpdates, environmentVariables,
         functionTarget, runtime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2BuildpacksBuild_EnvironmentVariables
//

@implementation GTLRCloudRun_GoogleCloudRunV2BuildpacksBuild_EnvironmentVariables

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2CancelExecutionRequest
//

@implementation GTLRCloudRun_GoogleCloudRunV2CancelExecutionRequest
@dynamic ETag, validateOnly;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2CloudSqlInstance
//

@implementation GTLRCloudRun_GoogleCloudRunV2CloudSqlInstance
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Condition
//

@implementation GTLRCloudRun_GoogleCloudRunV2Condition
@dynamic executionReason, lastTransitionTime, message, reason, revisionReason,
         severity, state, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Container
//

@implementation GTLRCloudRun_GoogleCloudRunV2Container
@dynamic args, command, dependsOn, env, image, livenessProbe, name, ports,
         resources, startupProbe, volumeMounts, workingDir;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"command" : [NSString class],
    @"dependsOn" : [NSString class],
    @"env" : [GTLRCloudRun_GoogleCloudRunV2EnvVar class],
    @"ports" : [GTLRCloudRun_GoogleCloudRunV2ContainerPort class],
    @"volumeMounts" : [GTLRCloudRun_GoogleCloudRunV2VolumeMount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ContainerOverride
//

@implementation GTLRCloudRun_GoogleCloudRunV2ContainerOverride
@dynamic args, clearArgs, env, name;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"env" : [GTLRCloudRun_GoogleCloudRunV2EnvVar class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ContainerPort
//

@implementation GTLRCloudRun_GoogleCloudRunV2ContainerPort
@dynamic containerPort, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2DockerBuild
//

@implementation GTLRCloudRun_GoogleCloudRunV2DockerBuild
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2EmptyDirVolumeSource
//

@implementation GTLRCloudRun_GoogleCloudRunV2EmptyDirVolumeSource
@dynamic medium, sizeLimit;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2EnvVar
//

@implementation GTLRCloudRun_GoogleCloudRunV2EnvVar
@dynamic name, value, valueSource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2EnvVarSource
//

@implementation GTLRCloudRun_GoogleCloudRunV2EnvVarSource
@dynamic secretKeyRef;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Execution
//

@implementation GTLRCloudRun_GoogleCloudRunV2Execution
@dynamic annotations, cancelledCount, completionTime, conditions, createTime,
         deleteTime, ETag, expireTime, failedCount, generation, job, labels,
         launchStage, logUri, name, observedGeneration, parallelism,
         reconciling, retriedCount, runningCount, satisfiesPzs, startTime,
         succeededCount, taskCount, templateProperty, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"templateProperty" : @"template"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCloudRun_GoogleCloudRunV2Condition class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Execution_Annotations
//

@implementation GTLRCloudRun_GoogleCloudRunV2Execution_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Execution_Labels
//

@implementation GTLRCloudRun_GoogleCloudRunV2Execution_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ExecutionReference
//

@implementation GTLRCloudRun_GoogleCloudRunV2ExecutionReference
@dynamic completionStatus, completionTime, createTime, deleteTime, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ExecutionTemplate
//

@implementation GTLRCloudRun_GoogleCloudRunV2ExecutionTemplate
@dynamic annotations, labels, parallelism, taskCount, templateProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"templateProperty" : @"template" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ExecutionTemplate_Annotations
//

@implementation GTLRCloudRun_GoogleCloudRunV2ExecutionTemplate_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ExecutionTemplate_Labels
//

@implementation GTLRCloudRun_GoogleCloudRunV2ExecutionTemplate_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ExportImageRequest
//

@implementation GTLRCloudRun_GoogleCloudRunV2ExportImageRequest
@dynamic destinationRepo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ExportImageResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2ExportImageResponse
@dynamic operationId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ExportStatusResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2ExportStatusResponse
@dynamic imageExportStatuses, operationId, operationState;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageExportStatuses" : [GTLRCloudRun_GoogleCloudRunV2ImageExportStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2GCSVolumeSource
//

@implementation GTLRCloudRun_GoogleCloudRunV2GCSVolumeSource
@dynamic bucket, readOnly;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2GRPCAction
//

@implementation GTLRCloudRun_GoogleCloudRunV2GRPCAction
@dynamic port, service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2HTTPGetAction
//

@implementation GTLRCloudRun_GoogleCloudRunV2HTTPGetAction
@dynamic httpHeaders, path, port;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"httpHeaders" : [GTLRCloudRun_GoogleCloudRunV2HTTPHeader class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2HTTPHeader
//

@implementation GTLRCloudRun_GoogleCloudRunV2HTTPHeader
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ImageExportStatus
//

@implementation GTLRCloudRun_GoogleCloudRunV2ImageExportStatus
@dynamic exportedImageDigest, exportJobState, status, tag;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Job
//

@implementation GTLRCloudRun_GoogleCloudRunV2Job
@dynamic annotations, binaryAuthorization, client, clientVersion, conditions,
         createTime, creator, deleteTime, ETag, executionCount, expireTime,
         generation, labels, lastModifier, latestCreatedExecution, launchStage,
         name, observedGeneration, reconciling, runExecutionToken, satisfiesPzs,
         startExecutionToken, templateProperty, terminalCondition, uid,
         updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"templateProperty" : @"template"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCloudRun_GoogleCloudRunV2Condition class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Job_Annotations
//

@implementation GTLRCloudRun_GoogleCloudRunV2Job_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Job_Labels
//

@implementation GTLRCloudRun_GoogleCloudRunV2Job_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ListExecutionsResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2ListExecutionsResponse
@dynamic executions, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"executions" : [GTLRCloudRun_GoogleCloudRunV2Execution class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"executions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ListJobsResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2ListJobsResponse
@dynamic jobs, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jobs" : [GTLRCloudRun_GoogleCloudRunV2Job class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"jobs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ListRevisionsResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2ListRevisionsResponse
@dynamic nextPageToken, revisions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"revisions" : [GTLRCloudRun_GoogleCloudRunV2Revision class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"revisions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ListServicesResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2ListServicesResponse
@dynamic nextPageToken, services;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"services" : [GTLRCloudRun_GoogleCloudRunV2Service class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"services";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ListTasksResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2ListTasksResponse
@dynamic nextPageToken, tasks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tasks" : [GTLRCloudRun_GoogleCloudRunV2Task class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"tasks";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Metadata
//

@implementation GTLRCloudRun_GoogleCloudRunV2Metadata
@dynamic metadata;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2NetworkInterface
//

@implementation GTLRCloudRun_GoogleCloudRunV2NetworkInterface
@dynamic network, subnetwork, tags;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2NFSVolumeSource
//

@implementation GTLRCloudRun_GoogleCloudRunV2NFSVolumeSource
@dynamic path, readOnly, server;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2NodeSelector
//

@implementation GTLRCloudRun_GoogleCloudRunV2NodeSelector
@dynamic accelerator;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Overrides
//

@implementation GTLRCloudRun_GoogleCloudRunV2Overrides
@dynamic containerOverrides, taskCount, timeout;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"containerOverrides" : [GTLRCloudRun_GoogleCloudRunV2ContainerOverride class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Probe
//

@implementation GTLRCloudRun_GoogleCloudRunV2Probe
@dynamic failureThreshold, grpc, httpGet, initialDelaySeconds, periodSeconds,
         tcpSocket, timeoutSeconds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ResourceRequirements
//

@implementation GTLRCloudRun_GoogleCloudRunV2ResourceRequirements
@dynamic cpuIdle, limits, startupCpuBoost;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ResourceRequirements_Limits
//

@implementation GTLRCloudRun_GoogleCloudRunV2ResourceRequirements_Limits

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Revision
//

@implementation GTLRCloudRun_GoogleCloudRunV2Revision
@dynamic annotations, conditions, containers, createTime, deleteTime,
         encryptionKey, encryptionKeyRevocationAction,
         encryptionKeyShutdownDuration, ETag, executionEnvironment, expireTime,
         generation, labels, launchStage, logUri, maxInstanceRequestConcurrency,
         name, nodeSelector, observedGeneration, reconciling, satisfiesPzs,
         scaling, scalingStatus, service, serviceAccount, serviceMesh,
         sessionAffinity, timeout, uid, updateTime, volumes, vpcAccess;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCloudRun_GoogleCloudRunV2Condition class],
    @"containers" : [GTLRCloudRun_GoogleCloudRunV2Container class],
    @"volumes" : [GTLRCloudRun_GoogleCloudRunV2Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Revision_Annotations
//

@implementation GTLRCloudRun_GoogleCloudRunV2Revision_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Revision_Labels
//

@implementation GTLRCloudRun_GoogleCloudRunV2Revision_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2RevisionScaling
//

@implementation GTLRCloudRun_GoogleCloudRunV2RevisionScaling
@dynamic maxInstanceCount, minInstanceCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2RevisionScalingStatus
//

@implementation GTLRCloudRun_GoogleCloudRunV2RevisionScalingStatus
@dynamic desiredMinInstanceCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2RevisionTemplate
//

@implementation GTLRCloudRun_GoogleCloudRunV2RevisionTemplate
@dynamic annotations, containers, encryptionKey, executionEnvironment,
         healthCheckDisabled, labels, maxInstanceRequestConcurrency,
         nodeSelector, revision, scaling, serviceAccount, serviceMesh,
         sessionAffinity, timeout, volumes, vpcAccess;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"containers" : [GTLRCloudRun_GoogleCloudRunV2Container class],
    @"volumes" : [GTLRCloudRun_GoogleCloudRunV2Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2RevisionTemplate_Annotations
//

@implementation GTLRCloudRun_GoogleCloudRunV2RevisionTemplate_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2RevisionTemplate_Labels
//

@implementation GTLRCloudRun_GoogleCloudRunV2RevisionTemplate_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2RunJobRequest
//

@implementation GTLRCloudRun_GoogleCloudRunV2RunJobRequest
@dynamic ETag, overrides, validateOnly;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2SecretKeySelector
//

@implementation GTLRCloudRun_GoogleCloudRunV2SecretKeySelector
@dynamic secret, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2SecretVolumeSource
//

@implementation GTLRCloudRun_GoogleCloudRunV2SecretVolumeSource
@dynamic defaultMode, items, secret;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCloudRun_GoogleCloudRunV2VersionToPath class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Service
//

@implementation GTLRCloudRun_GoogleCloudRunV2Service
@dynamic annotations, binaryAuthorization, client, clientVersion, conditions,
         createTime, creator, customAudiences, defaultUriDisabled, deleteTime,
         descriptionProperty, ETag, expireTime, generation, ingress, labels,
         lastModifier, latestCreatedRevision, latestReadyRevision, launchStage,
         name, observedGeneration, reconciling, satisfiesPzs, scaling,
         templateProperty, terminalCondition, traffic, trafficStatuses, uid,
         updateTime, uri, urls;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag",
    @"templateProperty" : @"template"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCloudRun_GoogleCloudRunV2Condition class],
    @"customAudiences" : [NSString class],
    @"traffic" : [GTLRCloudRun_GoogleCloudRunV2TrafficTarget class],
    @"trafficStatuses" : [GTLRCloudRun_GoogleCloudRunV2TrafficTargetStatus class],
    @"urls" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Service_Annotations
//

@implementation GTLRCloudRun_GoogleCloudRunV2Service_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Service_Labels
//

@implementation GTLRCloudRun_GoogleCloudRunV2Service_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ServiceMesh
//

@implementation GTLRCloudRun_GoogleCloudRunV2ServiceMesh
@dynamic mesh;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2ServiceScaling
//

@implementation GTLRCloudRun_GoogleCloudRunV2ServiceScaling
@dynamic minInstanceCount, scalingMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2StorageSource
//

@implementation GTLRCloudRun_GoogleCloudRunV2StorageSource
@dynamic bucket, generation, object;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2SubmitBuildRequest
//

@implementation GTLRCloudRun_GoogleCloudRunV2SubmitBuildRequest
@dynamic buildpackBuild, dockerBuild, imageUri, serviceAccount, storageSource,
         tags, workerPool;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2SubmitBuildResponse
//

@implementation GTLRCloudRun_GoogleCloudRunV2SubmitBuildResponse
@dynamic baseImageUri, baseImageWarning, buildOperation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Task
//

@implementation GTLRCloudRun_GoogleCloudRunV2Task
@dynamic annotations, completionTime, conditions, containers, createTime,
         deleteTime, encryptionKey, ETag, execution, executionEnvironment,
         expireTime, generation, index, job, labels, lastAttemptResult, logUri,
         maxRetries, name, observedGeneration, reconciling, retried,
         satisfiesPzs, scheduledTime, serviceAccount, startTime, timeout, uid,
         updateTime, volumes, vpcAccess;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCloudRun_GoogleCloudRunV2Condition class],
    @"containers" : [GTLRCloudRun_GoogleCloudRunV2Container class],
    @"volumes" : [GTLRCloudRun_GoogleCloudRunV2Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Task_Annotations
//

@implementation GTLRCloudRun_GoogleCloudRunV2Task_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Task_Labels
//

@implementation GTLRCloudRun_GoogleCloudRunV2Task_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2TaskAttemptResult
//

@implementation GTLRCloudRun_GoogleCloudRunV2TaskAttemptResult
@dynamic exitCode, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2TaskTemplate
//

@implementation GTLRCloudRun_GoogleCloudRunV2TaskTemplate
@dynamic containers, encryptionKey, executionEnvironment, maxRetries,
         serviceAccount, timeout, volumes, vpcAccess;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"containers" : [GTLRCloudRun_GoogleCloudRunV2Container class],
    @"volumes" : [GTLRCloudRun_GoogleCloudRunV2Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2TCPSocketAction
//

@implementation GTLRCloudRun_GoogleCloudRunV2TCPSocketAction
@dynamic port;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2TrafficTarget
//

@implementation GTLRCloudRun_GoogleCloudRunV2TrafficTarget
@dynamic percent, revision, tag, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2TrafficTargetStatus
//

@implementation GTLRCloudRun_GoogleCloudRunV2TrafficTargetStatus
@dynamic percent, revision, tag, type, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2VersionToPath
//

@implementation GTLRCloudRun_GoogleCloudRunV2VersionToPath
@dynamic mode, path, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2Volume
//

@implementation GTLRCloudRun_GoogleCloudRunV2Volume
@dynamic cloudSqlInstance, emptyDir, gcs, name, nfs, secret;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2VolumeMount
//

@implementation GTLRCloudRun_GoogleCloudRunV2VolumeMount
@dynamic mountPath, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleCloudRunV2VpcAccess
//

@implementation GTLRCloudRun_GoogleCloudRunV2VpcAccess
@dynamic connector, egress, networkInterfaces;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkInterfaces" : [GTLRCloudRun_GoogleCloudRunV2NetworkInterface class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalConfig
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalConfig
@dynamic approvalRequired;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalResult
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1ApprovalResult
@dynamic approvalTime, approverAccount, comment, decision, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1ArtifactObjects
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1ArtifactObjects
@dynamic location, paths, timing;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"paths" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Artifacts
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Artifacts
@dynamic images, mavenArtifacts, npmPackages, objects, pythonPackages;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"images" : [NSString class],
    @"mavenArtifacts" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1MavenArtifact class],
    @"npmPackages" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1NpmPackage class],
    @"pythonPackages" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1PythonPackage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Build
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Build
@dynamic approval, artifacts, availableSecrets, buildTriggerId, createTime,
         failureInfo, finishTime, gitConfig, identifier, images, logsBucket,
         logUrl, name, options, projectId, queueTtl, results, secrets,
         serviceAccount, source, sourceProvenance, startTime, status,
         statusDetail, steps, substitutions, tags, timeout, timing, warnings;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"images" : [NSString class],
    @"secrets" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1Secret class],
    @"steps" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep class],
    @"tags" : [NSString class],
    @"warnings" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Substitutions
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Substitutions

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Timing
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Build_Timing

+ (Class)classForAdditionalProperties {
  return [GTLRCloudRun_GoogleDevtoolsCloudbuildV1TimeSpan class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildApproval
@dynamic config, result, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOperationMetadata
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOperationMetadata
@dynamic build;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildOptions
@dynamic automapSubstitutions, defaultLogsBucketBehavior, diskSizeGb,
         dynamicSubstitutions, env, logging, logStreamingOption, machineType,
         pool, requestedVerifyOption, secretEnv, sourceProvenanceHash,
         substitutionOption, volumes, workerPool;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"env" : [NSString class],
    @"secretEnv" : [NSString class],
    @"sourceProvenanceHash" : [NSString class],
    @"volumes" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuildStep
@dynamic allowExitCodes, allowFailure, args, automapSubstitutions, dir,
         entrypoint, env, exitCode, identifier, name, pullTiming, script,
         secretEnv, status, timeout, timing, volumes, waitFor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowExitCodes" : [NSNumber class],
    @"args" : [NSString class],
    @"env" : [NSString class],
    @"secretEnv" : [NSString class],
    @"volumes" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1Volume class],
    @"waitFor" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuiltImage
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuiltImage
@dynamic digest, name, pushTiming;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1ConnectedRepository
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1ConnectedRepository
@dynamic dir, repository, revision;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1DeveloperConnectConfig
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1DeveloperConnectConfig
@dynamic dir, gitRepositoryLink, revision;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1FailureInfo
@dynamic detail, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1FileHashes
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1FileHashes
@dynamic fileHash;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fileHash" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1GitConfig
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1GitConfig
@dynamic http;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1GitSource
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1GitSource
@dynamic dir, revision, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Hash
@dynamic type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1HttpConfig
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1HttpConfig
@dynamic proxySecretVersionName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1InlineSecret
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1InlineSecret
@dynamic envMap, kmsKeyName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1InlineSecret_EnvMap
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1InlineSecret_EnvMap

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1MavenArtifact
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1MavenArtifact
@dynamic artifactId, groupId, path, repository, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1NpmPackage
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1NpmPackage
@dynamic packagePath, repository;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1PoolOption
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1PoolOption
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1PythonPackage
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1PythonPackage
@dynamic paths, repository;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"paths" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1RepoSource
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1RepoSource
@dynamic branchName, commitSha, dir, invertRegex, projectId, repoName,
         substitutions, tagName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1RepoSource_Substitutions
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1RepoSource_Substitutions

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Results
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Results
@dynamic artifactManifest, artifactTiming, buildStepImages, buildStepOutputs,
         images, mavenArtifacts, npmPackages, numArtifacts, pythonPackages;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"buildStepImages" : [NSString class],
    @"buildStepOutputs" : [NSString class],
    @"images" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1BuiltImage class],
    @"mavenArtifacts" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedMavenArtifact class],
    @"npmPackages" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedNpmPackage class],
    @"pythonPackages" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedPythonPackage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Secret
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Secret
@dynamic kmsKeyName, secretEnv;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Secret_SecretEnv
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Secret_SecretEnv

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1SecretManagerSecret
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1SecretManagerSecret
@dynamic env, versionName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Secrets
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Secrets
@dynamic inlineProperty, secretManager;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"inlineProperty" : @"inline" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"inline" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1InlineSecret class],
    @"secretManager" : [GTLRCloudRun_GoogleDevtoolsCloudbuildV1SecretManagerSecret class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Source
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Source
@dynamic connectedRepository, developerConnectConfig, gitSource, repoSource,
         storageSource, storageSourceManifest;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1SourceProvenance
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1SourceProvenance
@dynamic fileHashes, resolvedConnectedRepository, resolvedGitSource,
         resolvedRepoSource, resolvedStorageSource,
         resolvedStorageSourceManifest;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1SourceProvenance_FileHashes
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1SourceProvenance_FileHashes

+ (Class)classForAdditionalProperties {
  return [GTLRCloudRun_GoogleDevtoolsCloudbuildV1FileHashes class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSource
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSource
@dynamic bucket, generation, object, sourceFetcher;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSourceManifest
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1StorageSourceManifest
@dynamic bucket, generation, object;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1TimeSpan
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1TimeSpan
@dynamic endTime, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedMavenArtifact
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedMavenArtifact
@dynamic fileHashes, pushTiming, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedNpmPackage
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedNpmPackage
@dynamic fileHashes, pushTiming, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedPythonPackage
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1UploadedPythonPackage
@dynamic fileHashes, pushTiming, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Volume
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Volume
@dynamic name, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning
//

@implementation GTLRCloudRun_GoogleDevtoolsCloudbuildV1Warning
@dynamic priority, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleIamV1AuditConfig
//

@implementation GTLRCloudRun_GoogleIamV1AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRCloudRun_GoogleIamV1AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleIamV1AuditLogConfig
//

@implementation GTLRCloudRun_GoogleIamV1AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleIamV1Binding
//

@implementation GTLRCloudRun_GoogleIamV1Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleIamV1Policy
//

@implementation GTLRCloudRun_GoogleIamV1Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRCloudRun_GoogleIamV1AuditConfig class],
    @"bindings" : [GTLRCloudRun_GoogleIamV1Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleIamV1SetIamPolicyRequest
//

@implementation GTLRCloudRun_GoogleIamV1SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleIamV1TestIamPermissionsRequest
//

@implementation GTLRCloudRun_GoogleIamV1TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleIamV1TestIamPermissionsResponse
//

@implementation GTLRCloudRun_GoogleIamV1TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleLongrunningListOperationsResponse
//

@implementation GTLRCloudRun_GoogleLongrunningListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRCloudRun_GoogleLongrunningOperation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleLongrunningOperation
//

@implementation GTLRCloudRun_GoogleLongrunningOperation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleLongrunningOperation_Metadata
//

@implementation GTLRCloudRun_GoogleLongrunningOperation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleLongrunningOperation_Response
//

@implementation GTLRCloudRun_GoogleLongrunningOperation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleLongrunningWaitOperationRequest
//

@implementation GTLRCloudRun_GoogleLongrunningWaitOperationRequest
@dynamic timeout;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleProtobufEmpty
//

@implementation GTLRCloudRun_GoogleProtobufEmpty
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleRpcStatus
//

@implementation GTLRCloudRun_GoogleRpcStatus
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRCloudRun_GoogleRpcStatus_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleRpcStatus_Details_Item
//

@implementation GTLRCloudRun_GoogleRpcStatus_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_GoogleTypeExpr
//

@implementation GTLRCloudRun_GoogleTypeExpr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_Proto2BridgeMessageSet
//

@implementation GTLRCloudRun_Proto2BridgeMessageSet
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudRun_UtilStatusProto
//

@implementation GTLRCloudRun_UtilStatusProto
@dynamic canonicalCode, code, message, messageSet, space;
@end
