// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   VMware Engine API (vmwareengine/v1)
// Description:
//   The Google VMware Engine API lets you programmatically manage VMware
//   environments.
// Documentation:
//   https://cloud.google.com/solutions/vmware-as-a-service

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRVMwareEngineObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other VMware Engine query classes.
 */
@interface GTLRVMwareEngineQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: vmwareengine.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsGet : GTLRVMwareEngineQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: vmwareengine.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsList : GTLRVMwareEngineQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRVMwareEngine_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new network policy in a given VMware Engine network of a project
 *  and location (region). A new network policy cannot be created if another
 *  network policy already exists in the same scope.
 *
 *  Method: vmwareengine.projects.locations.networkPolicies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesCreate : GTLRVMwareEngineQuery

/**
 *  Required. The user-provided identifier of the network policy to be created.
 *  This identifier must be unique within parent
 *  `projects/{my-project}/locations/{us-central1}/networkPolicies` and becomes
 *  the final token in the name URI. The identifier must meet the following
 *  requirements: * Only contains 1-63 alphanumeric characters and hyphens *
 *  Begins with an alphabetical character * Ends with a non-hyphen character *
 *  Not formatted as a UUID * Complies with [RFC
 *  1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
 */
@property(nonatomic, copy, nullable) NSString *networkPolicyId;

/**
 *  Required. The resource name of the location (region) to create the new
 *  network policy in. Resource names are schemeless URIs that follow the
 *  conventions in https://cloud.google.com/apis/design/resource_names. For
 *  example: `projects/my-project/locations/us-central1`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Creates a new network policy in a given VMware Engine network of a project
 *  and location (region). A new network policy cannot be created if another
 *  network policy already exists in the same scope.
 *
 *  @param object The @c GTLRVMwareEngine_NetworkPolicy to include in the query.
 *  @param parent Required. The resource name of the location (region) to create
 *    the new network policy in. Resource names are schemeless URIs that follow
 *    the conventions in https://cloud.google.com/apis/design/resource_names.
 *    For example: `projects/my-project/locations/us-central1`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesCreate
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_NetworkPolicy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a `NetworkPolicy` resource. A network policy cannot be deleted when
 *  `NetworkService.state` is set to `RECONCILING` for either its external IP or
 *  internet access service.
 *
 *  Method: vmwareengine.projects.locations.networkPolicies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesDelete : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the network policy to delete. Resource names
 *  are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Deletes a `NetworkPolicy` resource. A network policy cannot be deleted when
 *  `NetworkService.state` is set to `RECONCILING` for either its external IP or
 *  internet access service.
 *
 *  @param name Required. The resource name of the network policy to delete.
 *    Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a `NetworkPolicy` resource by its resource name.
 *
 *  Method: vmwareengine.projects.locations.networkPolicies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesGet : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the network policy to retrieve. Resource
 *  names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_NetworkPolicy.
 *
 *  Retrieves a `NetworkPolicy` resource by its resource name.
 *
 *  @param name Required. The resource name of the network policy to retrieve.
 *    Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists `NetworkPolicy` resources in a specified project and location.
 *
 *  Method: vmwareengine.projects.locations.networkPolicies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesList : GTLRVMwareEngineQuery

/**
 *  A filter expression that matches resources returned in the response. The
 *  expression must specify the field name, a comparison operator, and the value
 *  that you want to use for filtering. The value must be a string, a number, or
 *  a boolean. The comparison operator must be `=`, `!=`, `>`, or `<`. For
 *  example, if you are filtering a list of network policies, you can exclude
 *  the ones named `example-policy` by specifying `name != "example-policy"`. To
 *  filter on multiple expressions, provide each separate expression within
 *  parentheses. For example: ``` (name = "example-policy") (createTime >
 *  "2021-04-12T08:15:10.40Z") ``` By default, each expression is an `AND`
 *  expression. However, you can include `AND` and `OR` expressions explicitly.
 *  For example: ``` (name = "example-policy-1") AND (createTime >
 *  "2021-04-12T08:15:10.40Z") OR (name = "example-policy-2") ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Sorts list results by a certain order. By default, returned results are
 *  ordered by `name` in ascending order. You can also sort results in
 *  descending order based on the `name` value using `orderBy="name desc"`.
 *  Currently, only ordering by `name` is supported.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of network policies to return in one page. The service
 *  may return fewer than this value. The maximum value is coerced to 1000. The
 *  default value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListNetworkPolicies` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListNetworkPolicies` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location (region) to query for network
 *  policies. Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListNetworkPoliciesResponse.
 *
 *  Lists `NetworkPolicy` resources in a specified project and location.
 *
 *  @param parent Required. The resource name of the location (region) to query
 *    for network policies. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example: `projects/my-project/locations/us-central1`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies a `NetworkPolicy` resource. Only the following fields can be
 *  updated: `internet_access`, `external_ip`, `edge_services_cidr`. Only fields
 *  specified in `updateMask` are applied. When updating a network policy, the
 *  external IP network service can only be disabled if there are no external IP
 *  addresses present in the scope of the policy. Also, a `NetworkService`
 *  cannot be updated when `NetworkService.state` is set to `RECONCILING`.
 *  During operation processing, the resource is temporarily in the `ACTIVE`
 *  state before the operation fully completes. For that period of time, you
 *  can't update the resource. Use the operation status to determine when the
 *  processing fully completes.
 *
 *  Method: vmwareengine.projects.locations.networkPolicies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesPatch : GTLRVMwareEngineQuery

/**
 *  Output only. The resource name of this network policy. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  `NetworkPolicy` resource by the update. The fields specified in the
 *  `update_mask` are relative to the resource, not the full request. A field
 *  will be overwritten if it is in the mask. If the user does not provide a
 *  mask then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Modifies a `NetworkPolicy` resource. Only the following fields can be
 *  updated: `internet_access`, `external_ip`, `edge_services_cidr`. Only fields
 *  specified in `updateMask` are applied. When updating a network policy, the
 *  external IP network service can only be disabled if there are no external IP
 *  addresses present in the scope of the policy. Also, a `NetworkService`
 *  cannot be updated when `NetworkService.state` is set to `RECONCILING`.
 *  During operation processing, the resource is temporarily in the `ACTIVE`
 *  state before the operation fully completes. For that period of time, you
 *  can't update the resource. Use the operation status to determine when the
 *  processing fully completes.
 *
 *  @param object The @c GTLRVMwareEngine_NetworkPolicy to include in the query.
 *  @param name Output only. The resource name of this network policy. Resource
 *    names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsNetworkPoliciesPatch
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_NetworkPolicy *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details of a single `NodeType`.
 *
 *  Method: vmwareengine.projects.locations.nodeTypes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsNodeTypesGet : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the node type to retrieve. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-proj/locations/us-central1-a/nodeTypes/standard-72`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_NodeType.
 *
 *  Gets details of a single `NodeType`.
 *
 *  @param name Required. The resource name of the node type to retrieve.
 *    Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-proj/locations/us-central1-a/nodeTypes/standard-72`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsNodeTypesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists node types
 *
 *  Method: vmwareengine.projects.locations.nodeTypes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsNodeTypesList : GTLRVMwareEngineQuery

/**
 *  A filter expression that matches resources returned in the response. The
 *  expression must specify the field name, a comparison operator, and the value
 *  that you want to use for filtering. The value must be a string, a number, or
 *  a boolean. The comparison operator must be `=`, `!=`, `>`, or `<`. For
 *  example, if you are filtering a list of node types, you can exclude the ones
 *  named `standard-72` by specifying `name != "standard-72"`. To filter on
 *  multiple expressions, provide each separate expression within parentheses.
 *  For example: ``` (name = "standard-72") (virtual_cpu_count > 2) ``` By
 *  default, each expression is an `AND` expression. However, you can include
 *  `AND` and `OR` expressions explicitly. For example: ``` (name =
 *  "standard-96") AND (virtual_cpu_count > 2) OR (name = "standard-72") ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of node types to return in one page. The service may
 *  return fewer than this value. The maximum value is coerced to 1000. The
 *  default value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListNodeTypes` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListNodeTypes` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location to be queried for node types.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListNodeTypesResponse.
 *
 *  Lists node types
 *
 *  @param parent Required. The resource name of the location to be queried for
 *    node types. Resource names are schemeless URIs that follow the conventions
 *    in https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsNodeTypesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: vmwareengine.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsOperationsDelete : GTLRVMwareEngineQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: vmwareengine.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsOperationsGet : GTLRVMwareEngineQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: vmwareengine.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsOperationsList : GTLRVMwareEngineQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRVMwareEngine_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new cluster in a given private cloud. Creating a new cluster
 *  provides additional nodes for use in the parent private cloud and requires
 *  sufficient [node quota](https://cloud.google.com/vmware-engine/quotas).
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersCreate : GTLRVMwareEngineQuery

/**
 *  Required. The user-provided identifier of the new `Cluster`. This identifier
 *  must be unique among clusters within the parent and becomes the final token
 *  in the name URI. The identifier must meet the following requirements: * Only
 *  contains 1-63 alphanumeric characters and hyphens * Begins with an
 *  alphabetical character * Ends with a non-hyphen character * Not formatted as
 *  a UUID * Complies with [RFC
 *  1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
 */
@property(nonatomic, copy, nullable) NSString *clusterId;

/**
 *  Required. The resource name of the private cloud to create a new cluster in.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The request ID must be a valid UUID with the exception that zero
 *  UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. True if you want the request to be validated and not executed;
 *  false otherwise.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Creates a new cluster in a given private cloud. Creating a new cluster
 *  provides additional nodes for use in the parent private cloud and requires
 *  sufficient [node quota](https://cloud.google.com/vmware-engine/quotas).
 *
 *  @param object The @c GTLRVMwareEngine_Cluster to include in the query.
 *  @param parent Required. The resource name of the private cloud to create a
 *    new cluster in. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersCreate
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_Cluster *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a `Cluster` resource. To avoid unintended data loss, migrate or
 *  gracefully shut down any workloads running on the cluster before deletion.
 *  You cannot delete the management cluster of a private cloud using this
 *  method.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersDelete : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the cluster to delete. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The request ID must be a valid UUID with the exception that zero
 *  UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Deletes a `Cluster` resource. To avoid unintended data loss, migrate or
 *  gracefully shut down any workloads running on the cluster before deletion.
 *  You cannot delete the management cluster of a private cloud using this
 *  method.
 *
 *  @param name Required. The resource name of the cluster to delete. Resource
 *    names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a `Cluster` resource by its resource name.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersGet : GTLRVMwareEngineQuery

/**
 *  Required. The cluster resource name to retrieve. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_Cluster.
 *
 *  Retrieves a `Cluster` resource by its resource name.
 *
 *  @param name Required. The cluster resource name to retrieve. Resource names
 *    are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersGetIamPolicy : GTLRVMwareEngineQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists `Cluster` resources in a given private cloud.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersList : GTLRVMwareEngineQuery

/**
 *  To filter on multiple expressions, provide each separate expression within
 *  parentheses. For example: ``` (name = "example-cluster") (nodeCount = "3")
 *  ``` By default, each expression is an `AND` expression. However, you can
 *  include `AND` and `OR` expressions explicitly. For example: ``` (name =
 *  "example-cluster-1") AND (createTime > "2021-04-12T08:15:10.40Z") OR (name =
 *  "example-cluster-2") ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Sorts list results by a certain order. By default, returned results are
 *  ordered by `name` in ascending order. You can also sort results in
 *  descending order based on the `name` value using `orderBy="name desc"`.
 *  Currently, only ordering by `name` is supported.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of clusters to return in one page. The service may return
 *  fewer than this value. The maximum value is coerced to 1000. The default
 *  value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListClusters` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListClusters` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the private cloud to query for clusters.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListClustersResponse.
 *
 *  Lists `Cluster` resources in a given private cloud.
 *
 *  @param parent Required. The resource name of the private cloud to query for
 *    clusters. Resource names are schemeless URIs that follow the conventions
 *    in https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies a `Cluster` resource. Only fields specified in `updateMask` are
 *  applied. During operation processing, the resource is temporarily in the
 *  `ACTIVE` state before the operation fully completes. For that period of
 *  time, you can't update the resource. Use the operation status to determine
 *  when the processing fully completes.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersPatch : GTLRVMwareEngineQuery

/**
 *  Output only. The resource name of this cluster. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The request ID must be a valid UUID with the exception that zero
 *  UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  `Cluster` resource by the update. The fields specified in the `updateMask`
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. True if you want the request to be validated and not executed;
 *  false otherwise.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Modifies a `Cluster` resource. Only fields specified in `updateMask` are
 *  applied. During operation processing, the resource is temporarily in the
 *  `ACTIVE` state before the operation fully completes. For that period of
 *  time, you can't update the resource. Use the operation status to determine
 *  when the processing fully completes.
 *
 *  @param object The @c GTLRVMwareEngine_Cluster to include in the query.
 *  @param name Output only. The resource name of this cluster. Resource names
 *    are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersPatch
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_Cluster *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersSetIamPolicy : GTLRVMwareEngineQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRVMwareEngine_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.clusters.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersTestIamPermissions : GTLRVMwareEngineQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRVMwareEngine_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsClustersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new `PrivateCloud` resource in a given project and location.
 *  Private clouds of type `STANDARD` and `TIME_LIMITED` are zonal resources,
 *  `STRETCHED` private clouds are regional. Creating a private cloud also
 *  creates a [management
 *  cluster](https://cloud.google.com/vmware-engine/docs/concepts-vmware-components)
 *  for that private cloud.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsCreate : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the location to create the new private cloud
 *  in. Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The user-provided identifier of the private cloud to be created.
 *  This identifier must be unique among each `PrivateCloud` within the parent
 *  and becomes the final token in the name URI. The identifier must meet the
 *  following requirements: * Only contains 1-63 alphanumeric characters and
 *  hyphens * Begins with an alphabetical character * Ends with a non-hyphen
 *  character * Not formatted as a UUID * Complies with [RFC
 *  1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
 */
@property(nonatomic, copy, nullable) NSString *privateCloudId;

/**
 *  Optional. The request ID must be a valid UUID with the exception that zero
 *  UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. True if you want the request to be validated and not executed;
 *  false otherwise.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Creates a new `PrivateCloud` resource in a given project and location.
 *  Private clouds of type `STANDARD` and `TIME_LIMITED` are zonal resources,
 *  `STRETCHED` private clouds are regional. Creating a private cloud also
 *  creates a [management
 *  cluster](https://cloud.google.com/vmware-engine/docs/concepts-vmware-components)
 *  for that private cloud.
 *
 *  @param object The @c GTLRVMwareEngine_PrivateCloud to include in the query.
 *  @param parent Required. The resource name of the location to create the new
 *    private cloud in. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example: `projects/my-project/locations/us-central1-a`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_PrivateCloud *)object
                         parent:(NSString *)parent;

@end

/**
 *  Schedules a `PrivateCloud` resource for deletion. A `PrivateCloud` resource
 *  scheduled for deletion has `PrivateCloud.state` set to `DELETED` and
 *  `expireTime` set to the time when deletion is final and can no longer be
 *  reversed. The delete operation is marked as done as soon as the
 *  `PrivateCloud` is successfully scheduled for deletion (this also applies
 *  when `delayHours` is set to zero), and the operation is not kept in pending
 *  state until `PrivateCloud` is purged. `PrivateCloud` can be restored using
 *  `UndeletePrivateCloud` method before the `expireTime` elapses. When
 *  `expireTime` is reached, deletion is final and all private cloud resources
 *  are irreversibly removed and billing stops. During the final removal
 *  process, `PrivateCloud.state` is set to `PURGING`. `PrivateCloud` can be
 *  polled using standard `GET` method for the whole period of deletion and
 *  purging. It will not be returned only when it is completely purged.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsDelete : GTLRVMwareEngineQuery

/**
 *  Optional. Time delay of the deletion specified in hours. The default value
 *  is `3`. Specifying a non-zero value for this field changes the value of
 *  `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
 *  deletion time. Deletion can be cancelled before `expire_time` elapses using
 *  VmwareEngine.UndeletePrivateCloud. Specifying a value of `0` for this field
 *  instead begins the deletion process and ceases billing immediately. During
 *  the final deletion process, the value of `PrivateCloud.state` becomes
 *  `PURGING`.
 */
@property(nonatomic, assign) NSInteger delayHours;

/**
 *  Optional. If set to true, cascade delete is enabled and all children of this
 *  private cloud resource are also deleted. When this flag is set to false, the
 *  private cloud will not be deleted if there are any children other than the
 *  management cluster. The management cluster is always deleted.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The resource name of the private cloud to delete. Resource names
 *  are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The request ID must be a valid UUID with the exception that zero
 *  UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Schedules a `PrivateCloud` resource for deletion. A `PrivateCloud` resource
 *  scheduled for deletion has `PrivateCloud.state` set to `DELETED` and
 *  `expireTime` set to the time when deletion is final and can no longer be
 *  reversed. The delete operation is marked as done as soon as the
 *  `PrivateCloud` is successfully scheduled for deletion (this also applies
 *  when `delayHours` is set to zero), and the operation is not kept in pending
 *  state until `PrivateCloud` is purged. `PrivateCloud` can be restored using
 *  `UndeletePrivateCloud` method before the `expireTime` elapses. When
 *  `expireTime` is reached, deletion is final and all private cloud resources
 *  are irreversibly removed and billing stops. During the final removal
 *  process, `PrivateCloud.state` is set to `PURGING`. `PrivateCloud` can be
 *  polled using standard `GET` method for the whole period of deletion and
 *  purging. It will not be returned only when it is completely purged.
 *
 *  @param name Required. The resource name of the private cloud to delete.
 *    Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a `PrivateCloud` resource by its resource name.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsGet : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private cloud to retrieve. Resource names
 *  are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_PrivateCloud.
 *
 *  Retrieves a `PrivateCloud` resource by its resource name.
 *
 *  @param name Required. The resource name of the private cloud to retrieve.
 *    Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsGetIamPolicy : GTLRVMwareEngineQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Creates a new HCX activation key in a given private cloud.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysCreate : GTLRVMwareEngineQuery

/**
 *  Required. The user-provided identifier of the `HcxActivationKey` to be
 *  created. This identifier must be unique among `HcxActivationKey` resources
 *  within the parent and becomes the final token in the name URI. The
 *  identifier must meet the following requirements: * Only contains 1-63
 *  alphanumeric characters and hyphens * Begins with an alphabetical character
 *  * Ends with a non-hyphen character * Not formatted as a UUID * Complies with
 *  [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
 */
@property(nonatomic, copy, nullable) NSString *hcxActivationKeyId;

/**
 *  Required. The resource name of the private cloud to create the key for.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A request ID to identify requests. Specify a unique request ID so that if
 *  you must retry your request, the server will know to ignore the request if
 *  it has already been completed. The server guarantees that a request doesn't
 *  result in creation of duplicate commitments for at least 60 minutes. For
 *  example, consider a situation where you make an initial request and the
 *  request times out. If you make the request again with the same request ID,
 *  the server can check if original operation with the same request ID was
 *  received, and if so, will ignore the second request. This prevents clients
 *  from accidentally creating duplicate commitments. The request ID must be a
 *  valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Creates a new HCX activation key in a given private cloud.
 *
 *  @param object The @c GTLRVMwareEngine_HcxActivationKey to include in the
 *    query.
 *  @param parent Required. The resource name of the private cloud to create the
 *    key for. Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysCreate
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_HcxActivationKey *)object
                         parent:(NSString *)parent;

@end

/**
 *  Retrieves a `HcxActivationKey` resource by its resource name.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysGet : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the HCX activation key to retrieve. Resource
 *  names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/privateClouds/my-cloud/hcxActivationKeys/my-key`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_HcxActivationKey.
 *
 *  Retrieves a `HcxActivationKey` resource by its resource name.
 *
 *  @param name Required. The resource name of the HCX activation key to
 *    retrieve. Resource names are schemeless URIs that follow the conventions
 *    in https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/privateClouds/my-cloud/hcxActivationKeys/my-key`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysGetIamPolicy : GTLRVMwareEngineQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists `HcxActivationKey` resources in a given private cloud.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysList : GTLRVMwareEngineQuery

/**
 *  The maximum number of HCX activation keys to return in one page. The service
 *  may return fewer than this value. The maximum value is coerced to 1000. The
 *  default value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListHcxActivationKeys` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListHcxActivationKeys` must match the call that provided the
 *  page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the private cloud to be queried for HCX
 *  activation keys. Resource names are schemeless URIs that follow the
 *  conventions in https://cloud.google.com/apis/design/resource_names. For
 *  example: `projects/my-project/locations/us-central1/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListHcxActivationKeysResponse.
 *
 *  Lists `HcxActivationKey` resources in a given private cloud.
 *
 *  @param parent Required. The resource name of the private cloud to be queried
 *    for HCX activation keys. Resource names are schemeless URIs that follow
 *    the conventions in https://cloud.google.com/apis/design/resource_names.
 *    For example:
 *    `projects/my-project/locations/us-central1/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysSetIamPolicy : GTLRVMwareEngineQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRVMwareEngine_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysTestIamPermissions : GTLRVMwareEngineQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRVMwareEngine_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsHcxActivationKeysTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists `PrivateCloud` resources in a given project and location.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsList : GTLRVMwareEngineQuery

/**
 *  A filter expression that matches resources returned in the response. The
 *  expression must specify the field name, a comparison operator, and the value
 *  that you want to use for filtering. The value must be a string, a number, or
 *  a boolean. The comparison operator must be `=`, `!=`, `>`, or `<`. For
 *  example, if you are filtering a list of private clouds, you can exclude the
 *  ones named `example-pc` by specifying `name != "example-pc"`. You can also
 *  filter nested fields. For example, you could specify
 *  `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
 *  only if they have a matching address in their network configuration. To
 *  filter on multiple expressions, provide each separate expression within
 *  parentheses. For example: ``` (name = "example-pc") (createTime >
 *  "2021-04-12T08:15:10.40Z") ``` By default, each expression is an `AND`
 *  expression. However, you can include `AND` and `OR` expressions explicitly.
 *  For example: ``` (name = "private-cloud-1") AND (createTime >
 *  "2021-04-12T08:15:10.40Z") OR (name = "private-cloud-2") ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Sorts list results by a certain order. By default, returned results are
 *  ordered by `name` in ascending order. You can also sort results in
 *  descending order based on the `name` value using `orderBy="name desc"`.
 *  Currently, only ordering by `name` is supported.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of private clouds to return in one page. The service may
 *  return fewer than this value. The maximum value is coerced to 1000. The
 *  default value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListPrivateClouds` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListPrivateClouds` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the private cloud to be queried for clusters.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListPrivateCloudsResponse.
 *
 *  Lists `PrivateCloud` resources in a given project and location.
 *
 *  @param parent Required. The resource name of the private cloud to be queried
 *    for clusters. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example: `projects/my-project/locations/us-central1-a`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies a `PrivateCloud` resource. Only the following fields can be
 *  updated: `description`. Only fields specified in `updateMask` are applied.
 *  During operation processing, the resource is temporarily in the `ACTIVE`
 *  state before the operation fully completes. For that period of time, you
 *  can't update the resource. Use the operation status to determine when the
 *  processing fully completes.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsPatch : GTLRVMwareEngineQuery

/**
 *  Output only. The resource name of this private cloud. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The request ID must be a valid UUID with the exception that zero
 *  UUID is not supported (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  `PrivateCloud` resource by the update. The fields specified in `updateMask`
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Modifies a `PrivateCloud` resource. Only the following fields can be
 *  updated: `description`. Only fields specified in `updateMask` are applied.
 *  During operation processing, the resource is temporarily in the `ACTIVE`
 *  state before the operation fully completes. For that period of time, you
 *  can't update the resource. Use the operation status to determine when the
 *  processing fully completes.
 *
 *  @param object The @c GTLRVMwareEngine_PrivateCloud to include in the query.
 *  @param name Output only. The resource name of this private cloud. Resource
 *    names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsPatch
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_PrivateCloud *)object
                           name:(NSString *)name;

@end

/**
 *  Resets credentials of the NSX appliance.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.resetNsxCredentials
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsResetNsxCredentials : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private cloud to reset credentials for.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *privateCloud;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Resets credentials of the NSX appliance.
 *
 *  @param object The @c GTLRVMwareEngine_ResetNsxCredentialsRequest to include
 *    in the query.
 *  @param privateCloud Required. The resource name of the private cloud to
 *    reset credentials for. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsResetNsxCredentials
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_ResetNsxCredentialsRequest *)object
                   privateCloud:(NSString *)privateCloud;

@end

/**
 *  Resets credentials of the Vcenter appliance.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.resetVcenterCredentials
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsResetVcenterCredentials : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private cloud to reset credentials for.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *privateCloud;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Resets credentials of the Vcenter appliance.
 *
 *  @param object The @c GTLRVMwareEngine_ResetVcenterCredentialsRequest to
 *    include in the query.
 *  @param privateCloud Required. The resource name of the private cloud to
 *    reset credentials for. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsResetVcenterCredentials
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_ResetVcenterCredentialsRequest *)object
                   privateCloud:(NSString *)privateCloud;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSetIamPolicy : GTLRVMwareEngineQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRVMwareEngine_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets details of credentials for NSX appliance.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.showNsxCredentials
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsShowNsxCredentials : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private cloud to be queried for
 *  credentials. Resource names are schemeless URIs that follow the conventions
 *  in https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *privateCloud;

/**
 *  Fetches a @c GTLRVMwareEngine_Credentials.
 *
 *  Gets details of credentials for NSX appliance.
 *
 *  @param privateCloud Required. The resource name of the private cloud to be
 *    queried for credentials. Resource names are schemeless URIs that follow
 *    the conventions in https://cloud.google.com/apis/design/resource_names.
 *    For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsShowNsxCredentials
 */
+ (instancetype)queryWithPrivateCloud:(NSString *)privateCloud;

@end

/**
 *  Gets details of credentials for Vcenter appliance.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.showVcenterCredentials
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsShowVcenterCredentials : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private cloud to be queried for
 *  credentials. Resource names are schemeless URIs that follow the conventions
 *  in https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *privateCloud;

/**
 *  Fetches a @c GTLRVMwareEngine_Credentials.
 *
 *  Gets details of credentials for Vcenter appliance.
 *
 *  @param privateCloud Required. The resource name of the private cloud to be
 *    queried for credentials. Resource names are schemeless URIs that follow
 *    the conventions in https://cloud.google.com/apis/design/resource_names.
 *    For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsShowVcenterCredentials
 */
+ (instancetype)queryWithPrivateCloud:(NSString *)privateCloud;

@end

/**
 *  Gets details of a single subnet.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.subnets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSubnetsGet : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the subnet to retrieve. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_Subnet.
 *
 *  Gets details of a single subnet.
 *
 *  @param name Required. The resource name of the subnet to retrieve. Resource
 *    names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSubnetsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists subnets in a given private cloud.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.subnets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSubnetsList : GTLRVMwareEngineQuery

/**
 *  The maximum number of subnets to return in one page. The service may return
 *  fewer than this value. The maximum value is coerced to 1000. The default
 *  value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListSubnetsRequest` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListSubnetsRequest` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the private cloud to be queried for subnets.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListSubnetsResponse.
 *
 *  Lists subnets in a given private cloud.
 *
 *  @param parent Required. The resource name of the private cloud to be queried
 *    for subnets. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSubnetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single subnet. Only fields specified in
 *  `update_mask` are applied. *Note*: This API is synchronous and always
 *  returns a successful `google.longrunning.Operation` (LRO). The returned LRO
 *  will only have `done` and `response` fields.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.subnets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSubnetsPatch : GTLRVMwareEngineQuery

/**
 *  Output only. The resource name of this subnet. Resource names are schemeless
 *  URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  `Subnet` resource by the update. The fields specified in the `update_mask`
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Updates the parameters of a single subnet. Only fields specified in
 *  `update_mask` are applied. *Note*: This API is synchronous and always
 *  returns a successful `google.longrunning.Operation` (LRO). The returned LRO
 *  will only have `done` and `response` fields.
 *
 *  @param object The @c GTLRVMwareEngine_Subnet to include in the query.
 *  @param name Output only. The resource name of this subnet. Resource names
 *    are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsSubnetsPatch
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_Subnet *)object
                           name:(NSString *)name;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsTestIamPermissions : GTLRVMwareEngineQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRVMwareEngine_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRVMwareEngine_TestIamPermissionsRequest to include
 *    in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Restores a private cloud that was previously scheduled for deletion by
 *  `DeletePrivateCloud`. A `PrivateCloud` resource scheduled for deletion has
 *  `PrivateCloud.state` set to `DELETED` and `PrivateCloud.expireTime` set to
 *  the time when deletion can no longer be reversed.
 *
 *  Method: vmwareengine.projects.locations.privateClouds.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsUndelete : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private cloud scheduled for deletion.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Restores a private cloud that was previously scheduled for deletion by
 *  `DeletePrivateCloud`. A `PrivateCloud` resource scheduled for deletion has
 *  `PrivateCloud.state` set to `DELETED` and `PrivateCloud.expireTime` set to
 *  the time when deletion can no longer be reversed.
 *
 *  @param object The @c GTLRVMwareEngine_UndeletePrivateCloudRequest to include
 *    in the query.
 *  @param name Required. The resource name of the private cloud scheduled for
 *    deletion. Resource names are schemeless URIs that follow the conventions
 *    in https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateCloudsUndelete
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_UndeletePrivateCloudRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new private connection that can be used for accessing private
 *  Clouds.
 *
 *  Method: vmwareengine.projects.locations.privateConnections.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsCreate : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the location to create the new private
 *  connection in. Private connection is a regional resource. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The user-provided identifier of the new private connection. This
 *  identifier must be unique among private connection resources within the
 *  parent and becomes the final token in the name URI. The identifier must meet
 *  the following requirements: * Only contains 1-63 alphanumeric characters and
 *  hyphens * Begins with an alphabetical character * Ends with a non-hyphen
 *  character * Not formatted as a UUID * Complies with [RFC
 *  1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
 */
@property(nonatomic, copy, nullable) NSString *privateConnectionId;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Creates a new private connection that can be used for accessing private
 *  Clouds.
 *
 *  @param object The @c GTLRVMwareEngine_PrivateConnection to include in the
 *    query.
 *  @param parent Required. The resource name of the location to create the new
 *    private connection in. Private connection is a regional resource. Resource
 *    names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsCreate
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_PrivateConnection *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a `PrivateConnection` resource. When a private connection is deleted
 *  for a VMware Engine network, the connected network becomes inaccessible to
 *  that VMware Engine network.
 *
 *  Method: vmwareengine.projects.locations.privateConnections.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsDelete : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private connection to be deleted.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/privateConnections/my-connection`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Deletes a `PrivateConnection` resource. When a private connection is deleted
 *  for a VMware Engine network, the connected network becomes inaccessible to
 *  that VMware Engine network.
 *
 *  @param name Required. The resource name of the private connection to be
 *    deleted. Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/privateConnections/my-connection`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a `PrivateConnection` resource by its resource name. The resource
 *  contains details of the private connection, such as connected network,
 *  routing mode and state.
 *
 *  Method: vmwareengine.projects.locations.privateConnections.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsGet : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the private connection to retrieve. Resource
 *  names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/privateConnections/my-connection`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_PrivateConnection.
 *
 *  Retrieves a `PrivateConnection` resource by its resource name. The resource
 *  contains details of the private connection, such as connected network,
 *  routing mode and state.
 *
 *  @param name Required. The resource name of the private connection to
 *    retrieve. Resource names are schemeless URIs that follow the conventions
 *    in https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/privateConnections/my-connection`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists `PrivateConnection` resources in a given project and location.
 *
 *  Method: vmwareengine.projects.locations.privateConnections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsList : GTLRVMwareEngineQuery

/**
 *  A filter expression that matches resources returned in the response. The
 *  expression must specify the field name, a comparison operator, and the value
 *  that you want to use for filtering. The value must be a string, a number, or
 *  a boolean. The comparison operator must be `=`, `!=`, `>`, or `<`. For
 *  example, if you are filtering a list of private connections, you can exclude
 *  the ones named `example-connection` by specifying `name !=
 *  "example-connection"`. To filter on multiple expressions, provide each
 *  separate expression within parentheses. For example: ``` (name =
 *  "example-connection") (createTime > "2022-09-22T08:15:10.40Z") ``` By
 *  default, each expression is an `AND` expression. However, you can include
 *  `AND` and `OR` expressions explicitly. For example: ``` (name =
 *  "example-connection-1") AND (createTime > "2021-04-12T08:15:10.40Z") OR
 *  (name = "example-connection-2") ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Sorts list results by a certain order. By default, returned results are
 *  ordered by `name` in ascending order. You can also sort results in
 *  descending order based on the `name` value using `orderBy="name desc"`.
 *  Currently, only ordering by `name` is supported.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of private connections to return in one page. The maximum
 *  value is coerced to 1000. The default value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListPrivateConnections` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListPrivateConnections` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location to query for private
 *  connections. Resource names are schemeless URIs that follow the conventions
 *  in https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListPrivateConnectionsResponse.
 *
 *  Lists `PrivateConnection` resources in a given project and location.
 *
 *  @param parent Required. The resource name of the location to query for
 *    private connections. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example: `projects/my-project/locations/us-central1`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies a `PrivateConnection` resource. Only `description` and
 *  `routing_mode` fields can be updated. Only fields specified in `updateMask`
 *  are applied.
 *
 *  Method: vmwareengine.projects.locations.privateConnections.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsPatch : GTLRVMwareEngineQuery

/**
 *  Output only. The resource name of the private connection. Resource names are
 *  schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-central1/privateConnections/my-connection`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  `PrivateConnection` resource by the update. The fields specified in the
 *  `update_mask` are relative to the resource, not the full request. A field
 *  will be overwritten if it is in the mask. If the user does not provide a
 *  mask then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Modifies a `PrivateConnection` resource. Only `description` and
 *  `routing_mode` fields can be updated. Only fields specified in `updateMask`
 *  are applied.
 *
 *  @param object The @c GTLRVMwareEngine_PrivateConnection to include in the
 *    query.
 *  @param name Output only. The resource name of the private connection.
 *    Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-central1/privateConnections/my-connection`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsPatch
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_PrivateConnection *)object
                           name:(NSString *)name;

@end

/**
 *  Lists the private connection routes exchanged over a peering connection.
 *
 *  Method: vmwareengine.projects.locations.privateConnections.peeringRoutes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsPeeringRoutesList : GTLRVMwareEngineQuery

/**
 *  The maximum number of peering routes to return in one page. The service may
 *  return fewer than this value. The maximum value is coerced to 1000. The
 *  default value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListPrivateConnectionPeeringRoutes` must match
 *  the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the private connection to retrieve peering
 *  routes from. Resource names are schemeless URIs that follow the conventions
 *  in https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/us-west1/privateConnections/my-connection`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListPrivateConnectionPeeringRoutesResponse.
 *
 *  Lists the private connection routes exchanged over a peering connection.
 *
 *  @param parent Required. The resource name of the private connection to
 *    retrieve peering routes from. Resource names are schemeless URIs that
 *    follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/us-west1/privateConnections/my-connection`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsPrivateConnectionsPeeringRoutesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new VMware Engine network that can be used by a private cloud.
 *
 *  Method: vmwareengine.projects.locations.vmwareEngineNetworks.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksCreate : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the location to create the new VMware Engine
 *  network in. A VMware Engine network of type `LEGACY` is a regional resource,
 *  and a VMware Engine network of type `STANDARD` is a global resource.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/global`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. The user-provided identifier of the new VMware Engine network.
 *  This identifier must be unique among VMware Engine network resources within
 *  the parent and becomes the final token in the name URI. The identifier must
 *  meet the following requirements: * For networks of type LEGACY, adheres to
 *  the format: `{region-id}-default`. Replace `{region-id}` with the region
 *  where you want to create the VMware Engine network. For example,
 *  "us-central1-default". * Only contains 1-63 alphanumeric characters and
 *  hyphens * Begins with an alphabetical character * Ends with a non-hyphen
 *  character * Not formatted as a UUID * Complies with [RFC
 *  1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
 */
@property(nonatomic, copy, nullable) NSString *vmwareEngineNetworkId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Creates a new VMware Engine network that can be used by a private cloud.
 *
 *  @param object The @c GTLRVMwareEngine_Network to include in the query.
 *  @param parent Required. The resource name of the location to create the new
 *    VMware Engine network in. A VMware Engine network of type `LEGACY` is a
 *    regional resource, and a VMware Engine network of type `STANDARD` is a
 *    global resource. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example: `projects/my-project/locations/global`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksCreate
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_Network *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a `VmwareEngineNetwork` resource. You can only delete a VMware
 *  Engine network after all resources that refer to it are deleted. For
 *  example, a private cloud, a network peering, and a network policy can all
 *  refer to the same VMware Engine network.
 *
 *  Method: vmwareengine.projects.locations.vmwareEngineNetworks.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksDelete : GTLRVMwareEngineQuery

/**
 *  Optional. Checksum used to ensure that the user-provided value is up to date
 *  before the server processes the request. The server compares provided
 *  checksum with the current checksum of the resource. If the user-provided
 *  value is out of date, this request returns an `ABORTED` error.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The resource name of the VMware Engine network to be deleted.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Deletes a `VmwareEngineNetwork` resource. You can only delete a VMware
 *  Engine network after all resources that refer to it are deleted. For
 *  example, a private cloud, a network peering, and a network policy can all
 *  refer to the same VMware Engine network.
 *
 *  @param name Required. The resource name of the VMware Engine network to be
 *    deleted. Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a `VmwareEngineNetwork` resource by its resource name. The
 *  resource contains details of the VMware Engine network, such as its VMware
 *  Engine network type, peered networks in a service project, and state (for
 *  example, `CREATING`, `ACTIVE`, `DELETING`).
 *
 *  Method: vmwareengine.projects.locations.vmwareEngineNetworks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksGet : GTLRVMwareEngineQuery

/**
 *  Required. The resource name of the VMware Engine network to retrieve.
 *  Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRVMwareEngine_Network.
 *
 *  Retrieves a `VmwareEngineNetwork` resource by its resource name. The
 *  resource contains details of the VMware Engine network, such as its VMware
 *  Engine network type, peered networks in a service project, and state (for
 *  example, `CREATING`, `ACTIVE`, `DELETING`).
 *
 *  @param name Required. The resource name of the VMware Engine network to
 *    retrieve. Resource names are schemeless URIs that follow the conventions
 *    in https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists `VmwareEngineNetwork` resources in a given project and location.
 *
 *  Method: vmwareengine.projects.locations.vmwareEngineNetworks.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksList : GTLRVMwareEngineQuery

/**
 *  A filter expression that matches resources returned in the response. The
 *  expression must specify the field name, a comparison operator, and the value
 *  that you want to use for filtering. The value must be a string, a number, or
 *  a boolean. The comparison operator must be `=`, `!=`, `>`, or `<`. For
 *  example, if you are filtering a list of network peerings, you can exclude
 *  the ones named `example-network` by specifying `name != "example-network"`.
 *  To filter on multiple expressions, provide each separate expression within
 *  parentheses. For example: ``` (name = "example-network") (createTime >
 *  "2021-04-12T08:15:10.40Z") ``` By default, each expression is an `AND`
 *  expression. However, you can include `AND` and `OR` expressions explicitly.
 *  For example: ``` (name = "example-network-1") AND (createTime >
 *  "2021-04-12T08:15:10.40Z") OR (name = "example-network-2") ```
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Sorts list results by a certain order. By default, returned results are
 *  ordered by `name` in ascending order. You can also sort results in
 *  descending order based on the `name` value using `orderBy="name desc"`.
 *  Currently, only ordering by `name` is supported.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of results to return in one page. The maximum value is
 *  coerced to 1000. The default value of this field is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListVmwareEngineNetworks` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListVmwareEngineNetworks` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the location to query for VMware Engine
 *  networks. Resource names are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/global`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRVMwareEngine_ListVmwareEngineNetworksResponse.
 *
 *  Lists `VmwareEngineNetwork` resources in a given project and location.
 *
 *  @param parent Required. The resource name of the location to query for
 *    VMware Engine networks. Resource names are schemeless URIs that follow the
 *    conventions in https://cloud.google.com/apis/design/resource_names. For
 *    example: `projects/my-project/locations/global`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies a VMware Engine network resource. Only the following fields can be
 *  updated: `description`. Only fields specified in `updateMask` are applied.
 *
 *  Method: vmwareengine.projects.locations.vmwareEngineNetworks.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeVMwareEngineCloudPlatform
 */
@interface GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksPatch : GTLRVMwareEngineQuery

/**
 *  Output only. The resource name of the VMware Engine network. Resource names
 *  are schemeless URIs that follow the conventions in
 *  https://cloud.google.com/apis/design/resource_names. For example:
 *  `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server guarantees that a
 *  request doesn't result in creation of duplicate commitments for at least 60
 *  minutes. For example, consider a situation where you make an initial request
 *  and the request times out. If you make the request again with the same
 *  request ID, the server can check if original operation with the same request
 *  ID was received, and if so, will ignore the second request. This prevents
 *  clients from accidentally creating duplicate commitments. The request ID
 *  must be a valid UUID with the exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  VMware Engine network resource by the update. The fields specified in the
 *  `update_mask` are relative to the resource, not the full request. A field
 *  will be overwritten if it is in the mask. If the user does not provide a
 *  mask then all fields will be overwritten. Only the following fields can be
 *  updated: `description`.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRVMwareEngine_Operation.
 *
 *  Modifies a VMware Engine network resource. Only the following fields can be
 *  updated: `description`. Only fields specified in `updateMask` are applied.
 *
 *  @param object The @c GTLRVMwareEngine_Network to include in the query.
 *  @param name Output only. The resource name of the VMware Engine network.
 *    Resource names are schemeless URIs that follow the conventions in
 *    https://cloud.google.com/apis/design/resource_names. For example:
 *    `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
 *
 *  @return GTLRVMwareEngineQuery_ProjectsLocationsVmwareEngineNetworksPatch
 */
+ (instancetype)queryWithObject:(GTLRVMwareEngine_Network *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
