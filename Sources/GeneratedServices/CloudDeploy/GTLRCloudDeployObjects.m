// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Deploy API (clouddeploy/v1)
// Documentation:
//   https://cloud.google.com/deploy/

#import <GoogleAPIClientForREST/GTLRCloudDeployObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRCloudDeploy_AuditLogConfig.logType
NSString * const kGTLRCloudDeploy_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCloudDeploy_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRCloudDeploy_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCloudDeploy_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRCloudDeploy_AutomationEvent.type
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_AutomationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_AutomationRun.state
NSString * const kGTLRCloudDeploy_AutomationRun_State_Aborted  = @"ABORTED";
NSString * const kGTLRCloudDeploy_AutomationRun_State_Cancelled = @"CANCELLED";
NSString * const kGTLRCloudDeploy_AutomationRun_State_Failed   = @"FAILED";
NSString * const kGTLRCloudDeploy_AutomationRun_State_InProgress = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_AutomationRun_State_Pending  = @"PENDING";
NSString * const kGTLRCloudDeploy_AutomationRun_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_AutomationRun_State_Succeeded = @"SUCCEEDED";

// GTLRCloudDeploy_AutomationRunEvent.type
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_AutomationRunEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_CustomTargetTypeNotificationEvent.type
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_CustomTargetTypeNotificationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_DeliveryPipelineNotificationEvent.type
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_DeliveryPipelineNotificationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_DeployJobRun.failureCause
NSString * const kGTLRCloudDeploy_DeployJobRun_FailureCause_CloudBuildRequestFailed = @"CLOUD_BUILD_REQUEST_FAILED";
NSString * const kGTLRCloudDeploy_DeployJobRun_FailureCause_CloudBuildUnavailable = @"CLOUD_BUILD_UNAVAILABLE";
NSString * const kGTLRCloudDeploy_DeployJobRun_FailureCause_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRCloudDeploy_DeployJobRun_FailureCause_DeployFeatureNotSupported = @"DEPLOY_FEATURE_NOT_SUPPORTED";
NSString * const kGTLRCloudDeploy_DeployJobRun_FailureCause_ExecutionFailed = @"EXECUTION_FAILED";
NSString * const kGTLRCloudDeploy_DeployJobRun_FailureCause_FailureCauseUnspecified = @"FAILURE_CAUSE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_DeployJobRun_FailureCause_MissingResourcesForCanary = @"MISSING_RESOURCES_FOR_CANARY";

// GTLRCloudDeploy_DeployPolicyEvaluationEvent.invoker
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Invoker_DeployAutomation = @"DEPLOY_AUTOMATION";
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Invoker_InvokerUnspecified = @"INVOKER_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Invoker_User = @"USER";

// GTLRCloudDeploy_DeployPolicyEvaluationEvent.overrides
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Overrides_PolicyOverridden = @"POLICY_OVERRIDDEN";
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Overrides_PolicySuspended = @"POLICY_SUSPENDED";
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Overrides_PolicyVerdictOverrideUnspecified = @"POLICY_VERDICT_OVERRIDE_UNSPECIFIED";

// GTLRCloudDeploy_DeployPolicyEvaluationEvent.verdict
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Verdict_AllowedByPolicy = @"ALLOWED_BY_POLICY";
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Verdict_DeniedByPolicy = @"DENIED_BY_POLICY";
NSString * const kGTLRCloudDeploy_DeployPolicyEvaluationEvent_Verdict_PolicyVerdictUnspecified = @"POLICY_VERDICT_UNSPECIFIED";

// GTLRCloudDeploy_DeployPolicyNotificationEvent.type
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_DeployPolicyNotificationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_ExecutionConfig.usages
NSString * const kGTLRCloudDeploy_ExecutionConfig_Usages_Deploy = @"DEPLOY";
NSString * const kGTLRCloudDeploy_ExecutionConfig_Usages_ExecutionEnvironmentUsageUnspecified = @"EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_ExecutionConfig_Usages_Postdeploy = @"POSTDEPLOY";
NSString * const kGTLRCloudDeploy_ExecutionConfig_Usages_Predeploy = @"PREDEPLOY";
NSString * const kGTLRCloudDeploy_ExecutionConfig_Usages_Render = @"RENDER";
NSString * const kGTLRCloudDeploy_ExecutionConfig_Usages_Verify = @"VERIFY";

// GTLRCloudDeploy_Job.state
NSString * const kGTLRCloudDeploy_Job_State_Aborted          = @"ABORTED";
NSString * const kGTLRCloudDeploy_Job_State_Disabled         = @"DISABLED";
NSString * const kGTLRCloudDeploy_Job_State_Failed           = @"FAILED";
NSString * const kGTLRCloudDeploy_Job_State_Ignored          = @"IGNORED";
NSString * const kGTLRCloudDeploy_Job_State_InProgress       = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_Job_State_Pending          = @"PENDING";
NSString * const kGTLRCloudDeploy_Job_State_Skipped          = @"SKIPPED";
NSString * const kGTLRCloudDeploy_Job_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_Job_State_Succeeded        = @"SUCCEEDED";

// GTLRCloudDeploy_JobRun.state
NSString * const kGTLRCloudDeploy_JobRun_State_Failed          = @"FAILED";
NSString * const kGTLRCloudDeploy_JobRun_State_InProgress      = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_JobRun_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_JobRun_State_Succeeded       = @"SUCCEEDED";
NSString * const kGTLRCloudDeploy_JobRun_State_Terminated      = @"TERMINATED";
NSString * const kGTLRCloudDeploy_JobRun_State_Terminating     = @"TERMINATING";

// GTLRCloudDeploy_JobRunNotificationEvent.type
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_JobRunNotificationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_Phase.state
NSString * const kGTLRCloudDeploy_Phase_State_Aborted          = @"ABORTED";
NSString * const kGTLRCloudDeploy_Phase_State_Failed           = @"FAILED";
NSString * const kGTLRCloudDeploy_Phase_State_InProgress       = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_Phase_State_Pending          = @"PENDING";
NSString * const kGTLRCloudDeploy_Phase_State_Skipped          = @"SKIPPED";
NSString * const kGTLRCloudDeploy_Phase_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_Phase_State_Succeeded        = @"SUCCEEDED";

// GTLRCloudDeploy_PostdeployJobRun.failureCause
NSString * const kGTLRCloudDeploy_PostdeployJobRun_FailureCause_CloudBuildRequestFailed = @"CLOUD_BUILD_REQUEST_FAILED";
NSString * const kGTLRCloudDeploy_PostdeployJobRun_FailureCause_CloudBuildUnavailable = @"CLOUD_BUILD_UNAVAILABLE";
NSString * const kGTLRCloudDeploy_PostdeployJobRun_FailureCause_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRCloudDeploy_PostdeployJobRun_FailureCause_ExecutionFailed = @"EXECUTION_FAILED";
NSString * const kGTLRCloudDeploy_PostdeployJobRun_FailureCause_FailureCauseUnspecified = @"FAILURE_CAUSE_UNSPECIFIED";

// GTLRCloudDeploy_PredeployJobRun.failureCause
NSString * const kGTLRCloudDeploy_PredeployJobRun_FailureCause_CloudBuildRequestFailed = @"CLOUD_BUILD_REQUEST_FAILED";
NSString * const kGTLRCloudDeploy_PredeployJobRun_FailureCause_CloudBuildUnavailable = @"CLOUD_BUILD_UNAVAILABLE";
NSString * const kGTLRCloudDeploy_PredeployJobRun_FailureCause_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRCloudDeploy_PredeployJobRun_FailureCause_ExecutionFailed = @"EXECUTION_FAILED";
NSString * const kGTLRCloudDeploy_PredeployJobRun_FailureCause_FailureCauseUnspecified = @"FAILURE_CAUSE_UNSPECIFIED";

// GTLRCloudDeploy_Release.renderState
NSString * const kGTLRCloudDeploy_Release_RenderState_Failed   = @"FAILED";
NSString * const kGTLRCloudDeploy_Release_RenderState_InProgress = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_Release_RenderState_RenderStateUnspecified = @"RENDER_STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_Release_RenderState_Succeeded = @"SUCCEEDED";

// GTLRCloudDeploy_ReleaseNotificationEvent.type
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_ReleaseNotificationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_ReleaseRenderEvent.releaseRenderState
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_ReleaseRenderState_Failed = @"FAILED";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_ReleaseRenderState_InProgress = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_ReleaseRenderState_RenderStateUnspecified = @"RENDER_STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_ReleaseRenderState_Succeeded = @"SUCCEEDED";

// GTLRCloudDeploy_ReleaseRenderEvent.type
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_ReleaseRenderEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_Retry.backoffMode
NSString * const kGTLRCloudDeploy_Retry_BackoffMode_BackoffModeExponential = @"BACKOFF_MODE_EXPONENTIAL";
NSString * const kGTLRCloudDeploy_Retry_BackoffMode_BackoffModeLinear = @"BACKOFF_MODE_LINEAR";
NSString * const kGTLRCloudDeploy_Retry_BackoffMode_BackoffModeUnspecified = @"BACKOFF_MODE_UNSPECIFIED";

// GTLRCloudDeploy_RetryAttempt.state
NSString * const kGTLRCloudDeploy_RetryAttempt_State_RepairStateAborted = @"REPAIR_STATE_ABORTED";
NSString * const kGTLRCloudDeploy_RetryAttempt_State_RepairStateCancelled = @"REPAIR_STATE_CANCELLED";
NSString * const kGTLRCloudDeploy_RetryAttempt_State_RepairStateFailed = @"REPAIR_STATE_FAILED";
NSString * const kGTLRCloudDeploy_RetryAttempt_State_RepairStateInProgress = @"REPAIR_STATE_IN_PROGRESS";
NSString * const kGTLRCloudDeploy_RetryAttempt_State_RepairStatePending = @"REPAIR_STATE_PENDING";
NSString * const kGTLRCloudDeploy_RetryAttempt_State_RepairStateSucceeded = @"REPAIR_STATE_SUCCEEDED";
NSString * const kGTLRCloudDeploy_RetryAttempt_State_RepairStateUnspecified = @"REPAIR_STATE_UNSPECIFIED";

// GTLRCloudDeploy_RetryPhase.backoffMode
NSString * const kGTLRCloudDeploy_RetryPhase_BackoffMode_BackoffModeExponential = @"BACKOFF_MODE_EXPONENTIAL";
NSString * const kGTLRCloudDeploy_RetryPhase_BackoffMode_BackoffModeLinear = @"BACKOFF_MODE_LINEAR";
NSString * const kGTLRCloudDeploy_RetryPhase_BackoffMode_BackoffModeUnspecified = @"BACKOFF_MODE_UNSPECIFIED";

// GTLRCloudDeploy_RollbackAttempt.state
NSString * const kGTLRCloudDeploy_RollbackAttempt_State_RepairStateAborted = @"REPAIR_STATE_ABORTED";
NSString * const kGTLRCloudDeploy_RollbackAttempt_State_RepairStateCancelled = @"REPAIR_STATE_CANCELLED";
NSString * const kGTLRCloudDeploy_RollbackAttempt_State_RepairStateFailed = @"REPAIR_STATE_FAILED";
NSString * const kGTLRCloudDeploy_RollbackAttempt_State_RepairStateInProgress = @"REPAIR_STATE_IN_PROGRESS";
NSString * const kGTLRCloudDeploy_RollbackAttempt_State_RepairStatePending = @"REPAIR_STATE_PENDING";
NSString * const kGTLRCloudDeploy_RollbackAttempt_State_RepairStateSucceeded = @"REPAIR_STATE_SUCCEEDED";
NSString * const kGTLRCloudDeploy_RollbackAttempt_State_RepairStateUnspecified = @"REPAIR_STATE_UNSPECIFIED";

// GTLRCloudDeploy_Rollout.approvalState
NSString * const kGTLRCloudDeploy_Rollout_ApprovalState_ApprovalStateUnspecified = @"APPROVAL_STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_Rollout_ApprovalState_Approved = @"APPROVED";
NSString * const kGTLRCloudDeploy_Rollout_ApprovalState_DoesNotNeedApproval = @"DOES_NOT_NEED_APPROVAL";
NSString * const kGTLRCloudDeploy_Rollout_ApprovalState_NeedsApproval = @"NEEDS_APPROVAL";
NSString * const kGTLRCloudDeploy_Rollout_ApprovalState_Rejected = @"REJECTED";

// GTLRCloudDeploy_Rollout.deployFailureCause
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_CloudBuildRequestFailed = @"CLOUD_BUILD_REQUEST_FAILED";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_CloudBuildUnavailable = @"CLOUD_BUILD_UNAVAILABLE";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_ExecutionFailed = @"EXECUTION_FAILED";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_FailureCauseUnspecified = @"FAILURE_CAUSE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_OperationFeatureNotSupported = @"OPERATION_FEATURE_NOT_SUPPORTED";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_ReleaseAbandoned = @"RELEASE_ABANDONED";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_ReleaseFailed = @"RELEASE_FAILED";
NSString * const kGTLRCloudDeploy_Rollout_DeployFailureCause_VerificationConfigNotFound = @"VERIFICATION_CONFIG_NOT_FOUND";

// GTLRCloudDeploy_Rollout.state
NSString * const kGTLRCloudDeploy_Rollout_State_ApprovalRejected = @"APPROVAL_REJECTED";
NSString * const kGTLRCloudDeploy_Rollout_State_Cancelled      = @"CANCELLED";
NSString * const kGTLRCloudDeploy_Rollout_State_Cancelling     = @"CANCELLING";
NSString * const kGTLRCloudDeploy_Rollout_State_Failed         = @"FAILED";
NSString * const kGTLRCloudDeploy_Rollout_State_Halted         = @"HALTED";
NSString * const kGTLRCloudDeploy_Rollout_State_InProgress     = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_Rollout_State_Pending        = @"PENDING";
NSString * const kGTLRCloudDeploy_Rollout_State_PendingApproval = @"PENDING_APPROVAL";
NSString * const kGTLRCloudDeploy_Rollout_State_PendingRelease = @"PENDING_RELEASE";
NSString * const kGTLRCloudDeploy_Rollout_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_Rollout_State_Succeeded      = @"SUCCEEDED";

// GTLRCloudDeploy_RolloutNotificationEvent.type
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_RolloutNotificationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_RolloutRestriction.actions
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_Advance = @"ADVANCE";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_Approve = @"APPROVE";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_Cancel = @"CANCEL";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_Create = @"CREATE";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_IgnoreJob = @"IGNORE_JOB";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_RetryJob = @"RETRY_JOB";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_Rollback = @"ROLLBACK";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_RolloutActionsUnspecified = @"ROLLOUT_ACTIONS_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Actions_TerminateJobrun = @"TERMINATE_JOBRUN";

// GTLRCloudDeploy_RolloutRestriction.invokers
NSString * const kGTLRCloudDeploy_RolloutRestriction_Invokers_DeployAutomation = @"DEPLOY_AUTOMATION";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Invokers_InvokerUnspecified = @"INVOKER_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_RolloutRestriction_Invokers_User = @"USER";

// GTLRCloudDeploy_RolloutUpdateEvent.rolloutUpdateType
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Advanced = @"ADVANCED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_AdvanceRequired = @"ADVANCE_REQUIRED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_ApprovalRequired = @"APPROVAL_REQUIRED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Approved = @"APPROVED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Cancelled = @"CANCELLED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Cancelling = @"CANCELLING";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Failed = @"FAILED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Halted = @"HALTED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_InProgress = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Pending = @"PENDING";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_PendingRelease = @"PENDING_RELEASE";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Rejected = @"REJECTED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_RolloutUpdateTypeUnspecified = @"ROLLOUT_UPDATE_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_RolloutUpdateType_Succeeded = @"SUCCEEDED";

// GTLRCloudDeploy_RolloutUpdateEvent.type
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_RolloutUpdateEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_SkaffoldSupportedCondition.skaffoldSupportState
NSString * const kGTLRCloudDeploy_SkaffoldSupportedCondition_SkaffoldSupportState_SkaffoldSupportStateMaintenanceMode = @"SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE";
NSString * const kGTLRCloudDeploy_SkaffoldSupportedCondition_SkaffoldSupportState_SkaffoldSupportStateSupported = @"SKAFFOLD_SUPPORT_STATE_SUPPORTED";
NSString * const kGTLRCloudDeploy_SkaffoldSupportedCondition_SkaffoldSupportState_SkaffoldSupportStateUnspecified = @"SKAFFOLD_SUPPORT_STATE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_SkaffoldSupportedCondition_SkaffoldSupportState_SkaffoldSupportStateUnsupported = @"SKAFFOLD_SUPPORT_STATE_UNSUPPORTED";

// GTLRCloudDeploy_TargetNotificationEvent.type
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeDeployPolicyEvaluation = @"TYPE_DEPLOY_POLICY_EVALUATION";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeProcessAborted = @"TYPE_PROCESS_ABORTED";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypePubsubNotificationFailure = @"TYPE_PUBSUB_NOTIFICATION_FAILURE";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeRenderStatuesChange = @"TYPE_RENDER_STATUES_CHANGE";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeResourceDeleted = @"TYPE_RESOURCE_DELETED";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeResourceStateChange = @"TYPE_RESOURCE_STATE_CHANGE";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeRestrictionViolated = @"TYPE_RESTRICTION_VIOLATED";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeRolloutUpdate = @"TYPE_ROLLOUT_UPDATE";
NSString * const kGTLRCloudDeploy_TargetNotificationEvent_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudDeploy_TargetRender.failureCause
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_CloudBuildRequestFailed = @"CLOUD_BUILD_REQUEST_FAILED";
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_CloudBuildUnavailable = @"CLOUD_BUILD_UNAVAILABLE";
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_CustomActionNotFound = @"CUSTOM_ACTION_NOT_FOUND";
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_DeploymentStrategyNotSupported = @"DEPLOYMENT_STRATEGY_NOT_SUPPORTED";
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_ExecutionFailed = @"EXECUTION_FAILED";
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_FailureCauseUnspecified = @"FAILURE_CAUSE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_RenderFeatureNotSupported = @"RENDER_FEATURE_NOT_SUPPORTED";
NSString * const kGTLRCloudDeploy_TargetRender_FailureCause_VerificationConfigNotFound = @"VERIFICATION_CONFIG_NOT_FOUND";

// GTLRCloudDeploy_TargetRender.renderingState
NSString * const kGTLRCloudDeploy_TargetRender_RenderingState_Failed = @"FAILED";
NSString * const kGTLRCloudDeploy_TargetRender_RenderingState_InProgress = @"IN_PROGRESS";
NSString * const kGTLRCloudDeploy_TargetRender_RenderingState_Succeeded = @"SUCCEEDED";
NSString * const kGTLRCloudDeploy_TargetRender_RenderingState_TargetRenderStateUnspecified = @"TARGET_RENDER_STATE_UNSPECIFIED";

// GTLRCloudDeploy_VerifyJobRun.failureCause
NSString * const kGTLRCloudDeploy_VerifyJobRun_FailureCause_CloudBuildRequestFailed = @"CLOUD_BUILD_REQUEST_FAILED";
NSString * const kGTLRCloudDeploy_VerifyJobRun_FailureCause_CloudBuildUnavailable = @"CLOUD_BUILD_UNAVAILABLE";
NSString * const kGTLRCloudDeploy_VerifyJobRun_FailureCause_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRCloudDeploy_VerifyJobRun_FailureCause_ExecutionFailed = @"EXECUTION_FAILED";
NSString * const kGTLRCloudDeploy_VerifyJobRun_FailureCause_FailureCauseUnspecified = @"FAILURE_CAUSE_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_VerifyJobRun_FailureCause_VerificationConfigNotFound = @"VERIFICATION_CONFIG_NOT_FOUND";

// GTLRCloudDeploy_WeeklyWindow.daysOfWeek
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_DayOfWeekUnspecified = @"DAY_OF_WEEK_UNSPECIFIED";
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_Friday = @"FRIDAY";
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_Monday = @"MONDAY";
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_Saturday = @"SATURDAY";
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_Sunday = @"SUNDAY";
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_Thursday = @"THURSDAY";
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_Tuesday = @"TUESDAY";
NSString * const kGTLRCloudDeploy_WeeklyWindow_DaysOfWeek_Wednesday = @"WEDNESDAY";

// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AbandonReleaseRequest
//

@implementation GTLRCloudDeploy_AbandonReleaseRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AbandonReleaseResponse
//

@implementation GTLRCloudDeploy_AbandonReleaseResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AdvanceChildRolloutJob
//

@implementation GTLRCloudDeploy_AdvanceChildRolloutJob
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AdvanceChildRolloutJobRun
//

@implementation GTLRCloudDeploy_AdvanceChildRolloutJobRun
@dynamic rollout, rolloutPhaseId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AdvanceRolloutOperation
//

@implementation GTLRCloudDeploy_AdvanceRolloutOperation
@dynamic destinationPhase, rollout, sourcePhase, wait;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AdvanceRolloutRequest
//

@implementation GTLRCloudDeploy_AdvanceRolloutRequest
@dynamic overrideDeployPolicy, phaseId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrideDeployPolicy" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AdvanceRolloutResponse
//

@implementation GTLRCloudDeploy_AdvanceRolloutResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AdvanceRolloutRule
//

@implementation GTLRCloudDeploy_AdvanceRolloutRule
@dynamic condition, identifier, sourcePhases, wait;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sourcePhases" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AnthosCluster
//

@implementation GTLRCloudDeploy_AnthosCluster
@dynamic membership;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ApproveRolloutRequest
//

@implementation GTLRCloudDeploy_ApproveRolloutRequest
@dynamic approved, overrideDeployPolicy;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrideDeployPolicy" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ApproveRolloutResponse
//

@implementation GTLRCloudDeploy_ApproveRolloutResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AssociatedEntities
//

@implementation GTLRCloudDeploy_AssociatedEntities
@dynamic anthosClusters, gkeClusters;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"anthosClusters" : [GTLRCloudDeploy_AnthosCluster class],
    @"gkeClusters" : [GTLRCloudDeploy_GkeCluster class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AuditConfig
//

@implementation GTLRCloudDeploy_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRCloudDeploy_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AuditLogConfig
//

@implementation GTLRCloudDeploy_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Automation
//

@implementation GTLRCloudDeploy_Automation
@dynamic annotations, createTime, descriptionProperty, ETag, labels, name,
         rules, selector, serviceAccount, suspended, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRCloudDeploy_AutomationRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Automation_Annotations
//

@implementation GTLRCloudDeploy_Automation_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Automation_Labels
//

@implementation GTLRCloudDeploy_Automation_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AutomationEvent
//

@implementation GTLRCloudDeploy_AutomationEvent
@dynamic automation, message, pipelineUid, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AutomationResourceSelector
//

@implementation GTLRCloudDeploy_AutomationResourceSelector
@dynamic targets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targets" : [GTLRCloudDeploy_TargetAttribute class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AutomationRolloutMetadata
//

@implementation GTLRCloudDeploy_AutomationRolloutMetadata
@dynamic advanceAutomationRuns, promoteAutomationRun, repairAutomationRuns;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advanceAutomationRuns" : [NSString class],
    @"repairAutomationRuns" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AutomationRule
//

@implementation GTLRCloudDeploy_AutomationRule
@dynamic advanceRolloutRule, promoteReleaseRule, repairRolloutRule,
         timedPromoteReleaseRule;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AutomationRuleCondition
//

@implementation GTLRCloudDeploy_AutomationRuleCondition
@dynamic targetsPresentCondition, timedPromoteReleaseCondition;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AutomationRun
//

@implementation GTLRCloudDeploy_AutomationRun
@dynamic advanceRolloutOperation, automationId, automationSnapshot, createTime,
         ETag, expireTime, name, policyViolation, promoteReleaseOperation,
         repairRolloutOperation, ruleId, serviceAccount, state,
         stateDescription, targetId, timedPromoteReleaseOperation, updateTime,
         waitUntilTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_AutomationRunEvent
//

@implementation GTLRCloudDeploy_AutomationRunEvent
@dynamic automationId, automationRun, destinationTargetId, message, pipelineUid,
         ruleId, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Binding
//

@implementation GTLRCloudDeploy_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_BuildArtifact
//

@implementation GTLRCloudDeploy_BuildArtifact
@dynamic image, tag;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Canary
//

@implementation GTLRCloudDeploy_Canary
@dynamic canaryDeployment, customCanaryDeployment, runtimeConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CanaryDeployment
//

@implementation GTLRCloudDeploy_CanaryDeployment
@dynamic percentages, postdeploy, predeploy, verify;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"percentages" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CancelAutomationRunRequest
//

@implementation GTLRCloudDeploy_CancelAutomationRunRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CancelAutomationRunResponse
//

@implementation GTLRCloudDeploy_CancelAutomationRunResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CancelOperationRequest
//

@implementation GTLRCloudDeploy_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CancelRolloutRequest
//

@implementation GTLRCloudDeploy_CancelRolloutRequest
@dynamic overrideDeployPolicy;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrideDeployPolicy" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CancelRolloutResponse
//

@implementation GTLRCloudDeploy_CancelRolloutResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ChildRolloutJobs
//

@implementation GTLRCloudDeploy_ChildRolloutJobs
@dynamic advanceRolloutJobs, createRolloutJobs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advanceRolloutJobs" : [GTLRCloudDeploy_Job class],
    @"createRolloutJobs" : [GTLRCloudDeploy_Job class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CloudRunConfig
//

@implementation GTLRCloudDeploy_CloudRunConfig
@dynamic automaticTrafficControl, canaryRevisionTags, priorRevisionTags,
         stableRevisionTags;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"canaryRevisionTags" : [NSString class],
    @"priorRevisionTags" : [NSString class],
    @"stableRevisionTags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CloudRunLocation
//

@implementation GTLRCloudDeploy_CloudRunLocation
@dynamic location;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CloudRunMetadata
//

@implementation GTLRCloudDeploy_CloudRunMetadata
@dynamic job, revision, service, serviceUrls;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceUrls" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CloudRunRenderMetadata
//

@implementation GTLRCloudDeploy_CloudRunRenderMetadata
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Config
//

@implementation GTLRCloudDeploy_Config
@dynamic defaultSkaffoldVersion, name, supportedVersions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"supportedVersions" : [GTLRCloudDeploy_SkaffoldVersion class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CreateChildRolloutJob
//

@implementation GTLRCloudDeploy_CreateChildRolloutJob
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CreateChildRolloutJobRun
//

@implementation GTLRCloudDeploy_CreateChildRolloutJobRun
@dynamic rollout, rolloutPhaseId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomCanaryDeployment
//

@implementation GTLRCloudDeploy_CustomCanaryDeployment
@dynamic phaseConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"phaseConfigs" : [GTLRCloudDeploy_PhaseConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomMetadata
//

@implementation GTLRCloudDeploy_CustomMetadata
@dynamic values;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomMetadata_Values
//

@implementation GTLRCloudDeploy_CustomMetadata_Values

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomTarget
//

@implementation GTLRCloudDeploy_CustomTarget
@dynamic customTargetType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomTargetDeployMetadata
//

@implementation GTLRCloudDeploy_CustomTargetDeployMetadata
@dynamic skipMessage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomTargetSkaffoldActions
//

@implementation GTLRCloudDeploy_CustomTargetSkaffoldActions
@dynamic deployAction, includeSkaffoldModules, renderAction;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includeSkaffoldModules" : [GTLRCloudDeploy_SkaffoldModules class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomTargetType
//

@implementation GTLRCloudDeploy_CustomTargetType
@dynamic annotations, createTime, customActions, customTargetTypeId,
         descriptionProperty, ETag, labels, name, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomTargetType_Annotations
//

@implementation GTLRCloudDeploy_CustomTargetType_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomTargetType_Labels
//

@implementation GTLRCloudDeploy_CustomTargetType_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_CustomTargetTypeNotificationEvent
//

@implementation GTLRCloudDeploy_CustomTargetTypeNotificationEvent
@dynamic customTargetType, customTargetTypeUid, message, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Date
//

@implementation GTLRCloudDeploy_Date
@dynamic day, month, year;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DefaultPool
//

@implementation GTLRCloudDeploy_DefaultPool
@dynamic artifactStorage, serviceAccount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeliveryPipeline
//

@implementation GTLRCloudDeploy_DeliveryPipeline
@dynamic annotations, condition, createTime, descriptionProperty, ETag, labels,
         name, serialPipeline, suspended, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeliveryPipeline_Annotations
//

@implementation GTLRCloudDeploy_DeliveryPipeline_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeliveryPipeline_Labels
//

@implementation GTLRCloudDeploy_DeliveryPipeline_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeliveryPipelineAttribute
//

@implementation GTLRCloudDeploy_DeliveryPipelineAttribute
@dynamic identifier, labels;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeliveryPipelineAttribute_Labels
//

@implementation GTLRCloudDeploy_DeliveryPipelineAttribute_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeliveryPipelineNotificationEvent
//

@implementation GTLRCloudDeploy_DeliveryPipelineNotificationEvent
@dynamic deliveryPipeline, message, pipelineUid, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployArtifact
//

@implementation GTLRCloudDeploy_DeployArtifact
@dynamic artifactUri, manifestPaths;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"manifestPaths" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployJob
//

@implementation GTLRCloudDeploy_DeployJob
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployJobRun
//

@implementation GTLRCloudDeploy_DeployJobRun
@dynamic artifact, build, failureCause, failureMessage, metadata;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployJobRunMetadata
//

@implementation GTLRCloudDeploy_DeployJobRunMetadata
@dynamic cloudRun, custom, customTarget;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeploymentJobs
//

@implementation GTLRCloudDeploy_DeploymentJobs
@dynamic deployJob, postdeployJob, predeployJob, verifyJob;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployParameters
//

@implementation GTLRCloudDeploy_DeployParameters
@dynamic matchTargetLabels, values;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployParameters_MatchTargetLabels
//

@implementation GTLRCloudDeploy_DeployParameters_MatchTargetLabels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployParameters_Values
//

@implementation GTLRCloudDeploy_DeployParameters_Values

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployPolicy
//

@implementation GTLRCloudDeploy_DeployPolicy
@dynamic annotations, createTime, descriptionProperty, ETag, labels, name,
         rules, selectors, suspended, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRCloudDeploy_PolicyRule class],
    @"selectors" : [GTLRCloudDeploy_DeployPolicyResourceSelector class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployPolicy_Annotations
//

@implementation GTLRCloudDeploy_DeployPolicy_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployPolicy_Labels
//

@implementation GTLRCloudDeploy_DeployPolicy_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployPolicyEvaluationEvent
//

@implementation GTLRCloudDeploy_DeployPolicyEvaluationEvent
@dynamic allowed, deliveryPipeline, deployPolicy, deployPolicyUid, invoker,
         message, overrides, pipelineUid, rule, ruleType, target, targetUid,
         verdict;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrides" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployPolicyNotificationEvent
//

@implementation GTLRCloudDeploy_DeployPolicyNotificationEvent
@dynamic deployPolicy, deployPolicyUid, message, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_DeployPolicyResourceSelector
//

@implementation GTLRCloudDeploy_DeployPolicyResourceSelector
@dynamic deliveryPipeline, target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Empty
//

@implementation GTLRCloudDeploy_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ExecutionConfig
//

@implementation GTLRCloudDeploy_ExecutionConfig
@dynamic artifactStorage, defaultPool, executionTimeout, privatePool,
         serviceAccount, usages, verbose, workerPool;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"usages" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Expr
//

@implementation GTLRCloudDeploy_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_GatewayServiceMesh
//

@implementation GTLRCloudDeploy_GatewayServiceMesh
@dynamic deployment, httpRoute, podSelectorLabel, routeDestinations,
         routeUpdateWaitTime, service, stableCutbackDuration;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_GkeCluster
//

@implementation GTLRCloudDeploy_GkeCluster
@dynamic cluster, dnsEndpoint, internalIp, proxyUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_IgnoreJobRequest
//

@implementation GTLRCloudDeploy_IgnoreJobRequest
@dynamic jobId, overrideDeployPolicy, phaseId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrideDeployPolicy" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_IgnoreJobResponse
//

@implementation GTLRCloudDeploy_IgnoreJobResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Job
//

@implementation GTLRCloudDeploy_Job
@dynamic advanceChildRolloutJob, createChildRolloutJob, deployJob, identifier,
         jobRun, postdeployJob, predeployJob, skipMessage, state, verifyJob;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_JobRun
//

@implementation GTLRCloudDeploy_JobRun
@dynamic advanceChildRolloutJobRun, createChildRolloutJobRun, createTime,
         deployJobRun, endTime, ETag, jobId, name, phaseId, postdeployJobRun,
         predeployJobRun, startTime, state, uid, verifyJobRun;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_JobRunNotificationEvent
//

@implementation GTLRCloudDeploy_JobRunNotificationEvent
@dynamic jobRun, message, pipelineUid, releaseProperty, releaseUid, rollout,
         rolloutUid, targetId, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"releaseProperty" : @"release" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_KubernetesConfig
//

@implementation GTLRCloudDeploy_KubernetesConfig
@dynamic gatewayServiceMesh, serviceNetworking;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListAutomationRunsResponse
//

@implementation GTLRCloudDeploy_ListAutomationRunsResponse
@dynamic automationRuns, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"automationRuns" : [GTLRCloudDeploy_AutomationRun class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"automationRuns";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListAutomationsResponse
//

@implementation GTLRCloudDeploy_ListAutomationsResponse
@dynamic automations, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"automations" : [GTLRCloudDeploy_Automation class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"automations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListCustomTargetTypesResponse
//

@implementation GTLRCloudDeploy_ListCustomTargetTypesResponse
@dynamic customTargetTypes, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customTargetTypes" : [GTLRCloudDeploy_CustomTargetType class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"customTargetTypes";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListDeliveryPipelinesResponse
//

@implementation GTLRCloudDeploy_ListDeliveryPipelinesResponse
@dynamic deliveryPipelines, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"deliveryPipelines" : [GTLRCloudDeploy_DeliveryPipeline class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"deliveryPipelines";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListDeployPoliciesResponse
//

@implementation GTLRCloudDeploy_ListDeployPoliciesResponse
@dynamic deployPolicies, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"deployPolicies" : [GTLRCloudDeploy_DeployPolicy class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"deployPolicies";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListJobRunsResponse
//

@implementation GTLRCloudDeploy_ListJobRunsResponse
@dynamic jobRuns, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jobRuns" : [GTLRCloudDeploy_JobRun class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"jobRuns";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListLocationsResponse
//

@implementation GTLRCloudDeploy_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRCloudDeploy_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListOperationsResponse
//

@implementation GTLRCloudDeploy_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRCloudDeploy_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListReleasesResponse
//

@implementation GTLRCloudDeploy_ListReleasesResponse
@dynamic nextPageToken, releases, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"releases" : [GTLRCloudDeploy_Release class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"releases";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListRolloutsResponse
//

@implementation GTLRCloudDeploy_ListRolloutsResponse
@dynamic nextPageToken, rollouts, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rollouts" : [GTLRCloudDeploy_Rollout class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"rollouts";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ListTargetsResponse
//

@implementation GTLRCloudDeploy_ListTargetsResponse
@dynamic nextPageToken, targets, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targets" : [GTLRCloudDeploy_Target class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"targets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Location
//

@implementation GTLRCloudDeploy_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Location_Labels
//

@implementation GTLRCloudDeploy_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Location_Metadata
//

@implementation GTLRCloudDeploy_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Metadata
//

@implementation GTLRCloudDeploy_Metadata
@dynamic automation, cloudRun, custom;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_MultiTarget
//

@implementation GTLRCloudDeploy_MultiTarget
@dynamic targetIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_OneTimeWindow
//

@implementation GTLRCloudDeploy_OneTimeWindow
@dynamic endDate, endTime, startDate, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Operation
//

@implementation GTLRCloudDeploy_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Operation_Metadata
//

@implementation GTLRCloudDeploy_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Operation_Response
//

@implementation GTLRCloudDeploy_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_OperationMetadata
//

@implementation GTLRCloudDeploy_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Phase
//

@implementation GTLRCloudDeploy_Phase
@dynamic childRolloutJobs, deploymentJobs, identifier, skipMessage, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PhaseArtifact
//

@implementation GTLRCloudDeploy_PhaseArtifact
@dynamic jobManifestsPath, manifestPath, skaffoldConfigPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PhaseConfig
//

@implementation GTLRCloudDeploy_PhaseConfig
@dynamic percentage, phaseId, postdeploy, predeploy, profiles, verify;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"profiles" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PipelineCondition
//

@implementation GTLRCloudDeploy_PipelineCondition
@dynamic pipelineReadyCondition, targetsPresentCondition, targetsTypeCondition;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PipelineReadyCondition
//

@implementation GTLRCloudDeploy_PipelineReadyCondition
@dynamic status, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Policy
//

@implementation GTLRCloudDeploy_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRCloudDeploy_AuditConfig class],
    @"bindings" : [GTLRCloudDeploy_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PolicyRule
//

@implementation GTLRCloudDeploy_PolicyRule
@dynamic rolloutRestriction;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PolicyViolation
//

@implementation GTLRCloudDeploy_PolicyViolation
@dynamic policyViolationDetails;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policyViolationDetails" : [GTLRCloudDeploy_PolicyViolationDetails class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PolicyViolationDetails
//

@implementation GTLRCloudDeploy_PolicyViolationDetails
@dynamic failureMessage, policy, ruleId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Postdeploy
//

@implementation GTLRCloudDeploy_Postdeploy
@dynamic actions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"actions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PostdeployJob
//

@implementation GTLRCloudDeploy_PostdeployJob
@dynamic actions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"actions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PostdeployJobRun
//

@implementation GTLRCloudDeploy_PostdeployJobRun
@dynamic build, failureCause, failureMessage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Predeploy
//

@implementation GTLRCloudDeploy_Predeploy
@dynamic actions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"actions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PredeployJob
//

@implementation GTLRCloudDeploy_PredeployJob
@dynamic actions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"actions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PredeployJobRun
//

@implementation GTLRCloudDeploy_PredeployJobRun
@dynamic build, failureCause, failureMessage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PrivatePool
//

@implementation GTLRCloudDeploy_PrivatePool
@dynamic artifactStorage, serviceAccount, workerPool;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PromoteReleaseOperation
//

@implementation GTLRCloudDeploy_PromoteReleaseOperation
@dynamic phase, rollout, targetId, wait;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_PromoteReleaseRule
//

@implementation GTLRCloudDeploy_PromoteReleaseRule
@dynamic condition, destinationPhase, destinationTargetId, identifier, wait;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Release
//

@implementation GTLRCloudDeploy_Release
@dynamic abandoned, annotations, buildArtifacts, condition, createTime,
         customTargetTypeSnapshots, deliveryPipelineSnapshot, deployParameters,
         descriptionProperty, ETag, labels, name, renderEndTime,
         renderStartTime, renderState, skaffoldConfigPath, skaffoldConfigUri,
         skaffoldVersion, targetArtifacts, targetRenders, targetSnapshots, uid;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"buildArtifacts" : [GTLRCloudDeploy_BuildArtifact class],
    @"customTargetTypeSnapshots" : [GTLRCloudDeploy_CustomTargetType class],
    @"targetSnapshots" : [GTLRCloudDeploy_Target class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Release_Annotations
//

@implementation GTLRCloudDeploy_Release_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Release_DeployParameters
//

@implementation GTLRCloudDeploy_Release_DeployParameters

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Release_Labels
//

@implementation GTLRCloudDeploy_Release_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Release_TargetArtifacts
//

@implementation GTLRCloudDeploy_Release_TargetArtifacts

+ (Class)classForAdditionalProperties {
  return [GTLRCloudDeploy_TargetArtifact class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Release_TargetRenders
//

@implementation GTLRCloudDeploy_Release_TargetRenders

+ (Class)classForAdditionalProperties {
  return [GTLRCloudDeploy_TargetRender class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ReleaseCondition
//

@implementation GTLRCloudDeploy_ReleaseCondition
@dynamic releaseReadyCondition, skaffoldSupportedCondition;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ReleaseNotificationEvent
//

@implementation GTLRCloudDeploy_ReleaseNotificationEvent
@dynamic message, pipelineUid, releaseProperty, releaseUid, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"releaseProperty" : @"release" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ReleaseReadyCondition
//

@implementation GTLRCloudDeploy_ReleaseReadyCondition
@dynamic status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ReleaseRenderEvent
//

@implementation GTLRCloudDeploy_ReleaseRenderEvent
@dynamic message, pipelineUid, releaseProperty, releaseRenderState, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"releaseProperty" : @"release" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RenderMetadata
//

@implementation GTLRCloudDeploy_RenderMetadata
@dynamic cloudRun, custom;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RepairPhase
//

@implementation GTLRCloudDeploy_RepairPhase
@dynamic retry, rollback;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RepairPhaseConfig
//

@implementation GTLRCloudDeploy_RepairPhaseConfig
@dynamic retry, rollback;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RepairRolloutOperation
//

@implementation GTLRCloudDeploy_RepairRolloutOperation
@dynamic currentRepairPhaseIndex, jobId, phaseId, repairPhases, rollout;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"repairPhases" : [GTLRCloudDeploy_RepairPhase class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RepairRolloutRule
//

@implementation GTLRCloudDeploy_RepairRolloutRule
@dynamic condition, identifier, jobs, phases, repairPhases;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jobs" : [NSString class],
    @"phases" : [NSString class],
    @"repairPhases" : [GTLRCloudDeploy_RepairPhaseConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Retry
//

@implementation GTLRCloudDeploy_Retry
@dynamic attempts, backoffMode, wait;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RetryAttempt
//

@implementation GTLRCloudDeploy_RetryAttempt
@dynamic attempt, state, stateDesc, wait;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RetryJobRequest
//

@implementation GTLRCloudDeploy_RetryJobRequest
@dynamic jobId, overrideDeployPolicy, phaseId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrideDeployPolicy" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RetryJobResponse
//

@implementation GTLRCloudDeploy_RetryJobResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RetryPhase
//

@implementation GTLRCloudDeploy_RetryPhase
@dynamic attempts, backoffMode, totalAttempts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"attempts" : [GTLRCloudDeploy_RetryAttempt class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Rollback
//

@implementation GTLRCloudDeploy_Rollback
@dynamic destinationPhase, disableRollbackIfRolloutPending;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RollbackAttempt
//

@implementation GTLRCloudDeploy_RollbackAttempt
@dynamic destinationPhase, disableRollbackIfRolloutPending, rolloutId, state,
         stateDesc;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RollbackTargetConfig
//

@implementation GTLRCloudDeploy_RollbackTargetConfig
@dynamic rollout, startingPhaseId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RollbackTargetRequest
//

@implementation GTLRCloudDeploy_RollbackTargetRequest
@dynamic overrideDeployPolicy, releaseId, rollbackConfig, rolloutId,
         rolloutToRollBack, targetId, validateOnly;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrideDeployPolicy" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RollbackTargetResponse
//

@implementation GTLRCloudDeploy_RollbackTargetResponse
@dynamic rollbackConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Rollout
//

@implementation GTLRCloudDeploy_Rollout
@dynamic activeRepairAutomationRun, annotations, approvalState, approveTime,
         controllerRollout, createTime, deployEndTime, deployFailureCause,
         deployingBuild, deployStartTime, descriptionProperty, enqueueTime,
         ETag, failureReason, labels, metadata, name, phases, rollbackOfRollout,
         rolledBackByRollouts, state, targetId, uid;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"phases" : [GTLRCloudDeploy_Phase class],
    @"rolledBackByRollouts" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Rollout_Annotations
//

@implementation GTLRCloudDeploy_Rollout_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Rollout_Labels
//

@implementation GTLRCloudDeploy_Rollout_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RolloutNotificationEvent
//

@implementation GTLRCloudDeploy_RolloutNotificationEvent
@dynamic message, pipelineUid, releaseProperty, releaseUid, rollout, rolloutUid,
         targetId, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"releaseProperty" : @"release" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RolloutRestriction
//

@implementation GTLRCloudDeploy_RolloutRestriction
@dynamic actions, identifier, invokers, timeWindows;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"actions" : [NSString class],
    @"invokers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RolloutUpdateEvent
//

@implementation GTLRCloudDeploy_RolloutUpdateEvent
@dynamic message, pipelineUid, releaseProperty, releaseUid, rollout,
         rolloutUpdateType, targetId, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"releaseProperty" : @"release" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RouteDestinations
//

@implementation GTLRCloudDeploy_RouteDestinations
@dynamic destinationIds, propagateService;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"destinationIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_RuntimeConfig
//

@implementation GTLRCloudDeploy_RuntimeConfig
@dynamic cloudRun, kubernetes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SerialPipeline
//

@implementation GTLRCloudDeploy_SerialPipeline
@dynamic stages;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"stages" : [GTLRCloudDeploy_Stage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_ServiceNetworking
//

@implementation GTLRCloudDeploy_ServiceNetworking
@dynamic deployment, disablePodOverprovisioning, podSelectorLabel, service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SetIamPolicyRequest
//

@implementation GTLRCloudDeploy_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SkaffoldGCBRepoSource
//

@implementation GTLRCloudDeploy_SkaffoldGCBRepoSource
@dynamic path, ref, repository;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SkaffoldGCSSource
//

@implementation GTLRCloudDeploy_SkaffoldGCSSource
@dynamic path, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SkaffoldGitSource
//

@implementation GTLRCloudDeploy_SkaffoldGitSource
@dynamic path, ref, repo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SkaffoldModules
//

@implementation GTLRCloudDeploy_SkaffoldModules
@dynamic configs, git, googleCloudBuildRepo, googleCloudStorage;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"configs" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SkaffoldSupportedCondition
//

@implementation GTLRCloudDeploy_SkaffoldSupportedCondition
@dynamic maintenanceModeTime, skaffoldSupportState, status,
         supportExpirationTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_SkaffoldVersion
//

@implementation GTLRCloudDeploy_SkaffoldVersion
@dynamic maintenanceModeTime, supportEndDate, supportExpirationTime, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Stage
//

@implementation GTLRCloudDeploy_Stage
@dynamic deployParameters, profiles, strategy, targetId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"deployParameters" : [GTLRCloudDeploy_DeployParameters class],
    @"profiles" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Standard
//

@implementation GTLRCloudDeploy_Standard
@dynamic postdeploy, predeploy, verify;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Status
//

@implementation GTLRCloudDeploy_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRCloudDeploy_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Status_Details_Item
//

@implementation GTLRCloudDeploy_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Strategy
//

@implementation GTLRCloudDeploy_Strategy
@dynamic canary, standard;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Target
//

@implementation GTLRCloudDeploy_Target
@dynamic annotations, anthosCluster, associatedEntities, createTime,
         customTarget, deployParameters, descriptionProperty, ETag,
         executionConfigs, gke, labels, multiTarget, name, requireApproval, run,
         targetId, uid, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"ETag" : @"etag"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"executionConfigs" : [GTLRCloudDeploy_ExecutionConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Target_Annotations
//

@implementation GTLRCloudDeploy_Target_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Target_AssociatedEntities
//

@implementation GTLRCloudDeploy_Target_AssociatedEntities

+ (Class)classForAdditionalProperties {
  return [GTLRCloudDeploy_AssociatedEntities class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Target_DeployParameters
//

@implementation GTLRCloudDeploy_Target_DeployParameters

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Target_Labels
//

@implementation GTLRCloudDeploy_Target_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetArtifact
//

@implementation GTLRCloudDeploy_TargetArtifact
@dynamic artifactUri, manifestPath, phaseArtifacts, skaffoldConfigPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetArtifact_PhaseArtifacts
//

@implementation GTLRCloudDeploy_TargetArtifact_PhaseArtifacts

+ (Class)classForAdditionalProperties {
  return [GTLRCloudDeploy_PhaseArtifact class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetAttribute
//

@implementation GTLRCloudDeploy_TargetAttribute
@dynamic identifier, labels;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetAttribute_Labels
//

@implementation GTLRCloudDeploy_TargetAttribute_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetNotificationEvent
//

@implementation GTLRCloudDeploy_TargetNotificationEvent
@dynamic message, target, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetRender
//

@implementation GTLRCloudDeploy_TargetRender
@dynamic failureCause, failureMessage, metadata, renderingBuild, renderingState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_Targets
//

@implementation GTLRCloudDeploy_Targets
@dynamic destinationTargetId, sourceTargetId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetsPresentCondition
//

@implementation GTLRCloudDeploy_TargetsPresentCondition
@dynamic missingTargets, status, updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"missingTargets" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TargetsTypeCondition
//

@implementation GTLRCloudDeploy_TargetsTypeCondition
@dynamic errorDetails, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TerminateJobRunRequest
//

@implementation GTLRCloudDeploy_TerminateJobRunRequest
@dynamic overrideDeployPolicy;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"overrideDeployPolicy" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TerminateJobRunResponse
//

@implementation GTLRCloudDeploy_TerminateJobRunResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TestIamPermissionsRequest
//

@implementation GTLRCloudDeploy_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TestIamPermissionsResponse
//

@implementation GTLRCloudDeploy_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TimedPromoteReleaseCondition
//

@implementation GTLRCloudDeploy_TimedPromoteReleaseCondition
@dynamic nextPromotionTime, targetsList;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetsList" : [GTLRCloudDeploy_Targets class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TimedPromoteReleaseOperation
//

@implementation GTLRCloudDeploy_TimedPromoteReleaseOperation
@dynamic phase, releaseProperty, targetId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"releaseProperty" : @"release" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TimedPromoteReleaseRule
//

@implementation GTLRCloudDeploy_TimedPromoteReleaseRule
@dynamic condition, destinationPhase, destinationTargetId, identifier, schedule,
         timeZone;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TimeOfDay
//

@implementation GTLRCloudDeploy_TimeOfDay
@dynamic hours, minutes, nanos, seconds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_TimeWindows
//

@implementation GTLRCloudDeploy_TimeWindows
@dynamic oneTimeWindows, timeZone, weeklyWindows;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"oneTimeWindows" : [GTLRCloudDeploy_OneTimeWindow class],
    @"weeklyWindows" : [GTLRCloudDeploy_WeeklyWindow class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_VerifyJob
//

@implementation GTLRCloudDeploy_VerifyJob
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_VerifyJobRun
//

@implementation GTLRCloudDeploy_VerifyJobRun
@dynamic artifactUri, build, eventLogPath, failureCause, failureMessage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudDeploy_WeeklyWindow
//

@implementation GTLRCloudDeploy_WeeklyWindow
@dynamic daysOfWeek, endTime, startTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"daysOfWeek" : [NSString class]
  };
  return map;
}

@end
