// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Deploy API (clouddeploy/v1)
// Documentation:
//   https://cloud.google.com/deploy/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCloudDeployObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Deploy query classes.
 */
@interface GTLRCloudDeployQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new DeliveryPipeline in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesCreate : GTLRCloudDeployQuery

/** Required. ID of the `DeliveryPipeline`. */
@property(nonatomic, copy, nullable) NSString *deliveryPipelineId;

/**
 *  Required. The parent collection in which the `DeliveryPipeline` should be
 *  created. Format should be projects/{project_id}/locations/{location_name}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set to true, the request is validated and the user is provided
 *  with an expected result, but no actual change is made.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Creates a new DeliveryPipeline in a given project and location.
 *
 *  @param object The @c GTLRCloudDeploy_DeliveryPipeline to include in the
 *    query.
 *  @param parent Required. The parent collection in which the
 *    `DeliveryPipeline` should be created. Format should be
 *    projects/{project_id}/locations/{location_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_DeliveryPipeline *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single DeliveryPipeline.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesDelete : GTLRCloudDeployQuery

/**
 *  Optional. If set to true, then deleting an already deleted or non-existing
 *  `DeliveryPipeline` will succeed.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Optional. This checksum is computed by the server based on the value of
 *  other fields, and may be sent on update and delete requests to ensure the
 *  client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. If set to true, all child resources under this pipeline will also
 *  be deleted. Otherwise, the request will only work if the pipeline has no
 *  child resources.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  Required. The name of the `DeliveryPipeline` to delete. Format should be
 *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validate the request and preview the review, but do not
 *  actually post it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Deletes a single DeliveryPipeline.
 *
 *  @param name Required. The name of the `DeliveryPipeline` to delete. Format
 *    should be
 *    projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single DeliveryPipeline.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesGet : GTLRCloudDeployQuery

/**
 *  Required. Name of the `DeliveryPipeline`. Format must be
 *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_DeliveryPipeline.
 *
 *  Gets details of a single DeliveryPipeline.
 *
 *  @param name Required. Name of the `DeliveryPipeline`. Format must be
 *    projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesGetIamPolicy : GTLRCloudDeployQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDeploy_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists DeliveryPipelines in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesList : GTLRCloudDeployQuery

/**
 *  Filter pipelines to be returned. See https://google.aip.dev/160 for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Field to sort by. See https://google.aip.dev/132#ordering for more details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of pipelines to return. The service may return fewer than
 *  this value. If unspecified, at most 50 pipelines will be returned. The
 *  maximum value is 1000; values above 1000 will be set to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListDeliveryPipelines` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other provided
 *  parameters match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of pipelines. Format must
 *  be projects/{project_id}/locations/{location_name}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudDeploy_ListDeliveryPipelinesResponse.
 *
 *  Lists DeliveryPipelines in a given project and location.
 *
 *  @param parent Required. The parent, which owns this collection of pipelines.
 *    Format must be projects/{project_id}/locations/{location_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single DeliveryPipeline.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesPatch : GTLRCloudDeployQuery

/**
 *  Optional. If set to true, updating a `DeliveryPipeline` that does not exist
 *  will result in the creation of a new `DeliveryPipeline`.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Optional. Name of the `DeliveryPipeline`. Format is projects/{project}/
 *  locations/{location}/deliveryPipelines/a-z{0,62}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  `DeliveryPipeline` resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set to true, the request is validated and the user is provided
 *  with an expected result, but no actual change is made.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Updates the parameters of a single DeliveryPipeline.
 *
 *  @param object The @c GTLRCloudDeploy_DeliveryPipeline to include in the
 *    query.
 *  @param name Optional. Name of the `DeliveryPipeline`. Format is
 *    projects/{project}/ locations/{location}/deliveryPipelines/a-z{0,62}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_DeliveryPipeline *)object
                           name:(NSString *)name;

@end

/**
 *  Abandons a Release in the Delivery Pipeline.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.abandon
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesAbandon : GTLRCloudDeployQuery

/**
 *  Required. Name of the Release. Format is
 *  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
 *  releases/{release}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_AbandonReleaseResponse.
 *
 *  Abandons a Release in the Delivery Pipeline.
 *
 *  @param object The @c GTLRCloudDeploy_AbandonReleaseRequest to include in the
 *    query.
 *  @param name Required. Name of the Release. Format is
 *    projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
 *    releases/{release}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesAbandon
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_AbandonReleaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Release in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesCreate : GTLRCloudDeployQuery

/**
 *  Required. The parent collection in which the `Release` should be created.
 *  Format should be
 *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. ID of the `Release`. */
@property(nonatomic, copy, nullable) NSString *releaseId;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set to true, the request is validated and the user is provided
 *  with an expected result, but no actual change is made.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Creates a new Release in a given project and location.
 *
 *  @param object The @c GTLRCloudDeploy_Release to include in the query.
 *  @param parent Required. The parent collection in which the `Release` should
 *    be created. Format should be
 *    projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_Release *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single Release.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesGet : GTLRCloudDeployQuery

/**
 *  Required. Name of the `Release`. Format must be
 *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Release.
 *
 *  Gets details of a single Release.
 *
 *  @param name Required. Name of the `Release`. Format must be
 *    projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Releases in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesList : GTLRCloudDeployQuery

/**
 *  Optional. Filter releases to be returned. See https://google.aip.dev/160 for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Field to sort by. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of `Release` objects to return. The service may
 *  return fewer than this value. If unspecified, at most 50 `Release` objects
 *  will be returned. The maximum value is 1000; values above 1000 will be set
 *  to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListReleases` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  provided parameters match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The `DeliveryPipeline` which owns this collection of `Release`
 *  objects.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudDeploy_ListReleasesResponse.
 *
 *  Lists Releases in a given project and location.
 *
 *  @param parent Required. The `DeliveryPipeline` which owns this collection of
 *    `Release` objects.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Approves a Rollout.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsApprove : GTLRCloudDeployQuery

/**
 *  Required. Name of the Rollout. Format is
 *  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
 *  releases/{release}/rollouts/{rollout}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_ApproveRolloutResponse.
 *
 *  Approves a Rollout.
 *
 *  @param object The @c GTLRCloudDeploy_ApproveRolloutRequest to include in the
 *    query.
 *  @param name Required. Name of the Rollout. Format is
 *    projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
 *    releases/{release}/rollouts/{rollout}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsApprove
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_ApproveRolloutRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Rollout in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsCreate : GTLRCloudDeployQuery

/**
 *  Required. The parent collection in which the `Rollout` should be created.
 *  Format should be
 *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. ID of the `Rollout`. */
@property(nonatomic, copy, nullable) NSString *rolloutId;

/**
 *  Optional. If set to true, the request is validated and the user is provided
 *  with an expected result, but no actual change is made.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Creates a new Rollout in a given project and location.
 *
 *  @param object The @c GTLRCloudDeploy_Rollout to include in the query.
 *  @param parent Required. The parent collection in which the `Rollout` should
 *    be created. Format should be
 *    projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_Rollout *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single Rollout.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsGet : GTLRCloudDeployQuery

/**
 *  Required. Name of the `Rollout`. Format must be
 *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Rollout.
 *
 *  Gets details of a single Rollout.
 *
 *  @param name Required. Name of the `Rollout`. Format must be
 *    projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single JobRun.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsJobRunsGet : GTLRCloudDeployQuery

/**
 *  Required. Name of the `JobRun`. Format must be
 *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_JobRun.
 *
 *  Gets details of a single JobRun.
 *
 *  @param name Required. Name of the `JobRun`. Format must be
 *    projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsJobRunsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists JobRuns in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsJobRunsList : GTLRCloudDeployQuery

/**
 *  Optional. Filter results to be returned. See https://google.aip.dev/160 for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Field to sort by. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of `JobRun` objects to return. The service may
 *  return fewer than this value. If unspecified, at most 50 `JobRun` objects
 *  will be returned. The maximum value is 1000; values above 1000 will be set
 *  to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListJobRuns` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other provided
 *  parameters match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The `Rollout` which owns this collection of `JobRun` objects. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudDeploy_ListJobRunsResponse.
 *
 *  Lists JobRuns in a given project and location.
 *
 *  @param parent Required. The `Rollout` which owns this collection of `JobRun`
 *    objects.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsJobRunsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists Rollouts in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsList : GTLRCloudDeployQuery

/**
 *  Optional. Filter rollouts to be returned. See https://google.aip.dev/160 for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Field to sort by. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of `Rollout` objects to return. The service may
 *  return fewer than this value. If unspecified, at most 50 `Rollout` objects
 *  will be returned. The maximum value is 1000; values above 1000 will be set
 *  to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListRollouts` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  provided parameters match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The `Release` which owns this collection of `Rollout` objects.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudDeploy_ListRolloutsResponse.
 *
 *  Lists Rollouts in a given project and location.
 *
 *  @param parent Required. The `Release` which owns this collection of
 *    `Rollout` objects.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Retries the specified Job in a Rollout.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsRetryJob : GTLRCloudDeployQuery

/**
 *  Required. Name of the Rollout. Format is
 *  projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
 *  releases/{release}/rollouts/{rollout}.
 */
@property(nonatomic, copy, nullable) NSString *rollout;

/**
 *  Fetches a @c GTLRCloudDeploy_RetryJobResponse.
 *
 *  Retries the specified Job in a Rollout.
 *
 *  @param object The @c GTLRCloudDeploy_RetryJobRequest to include in the
 *    query.
 *  @param rollout Required. Name of the Rollout. Format is
 *    projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/
 *    releases/{release}/rollouts/{rollout}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesReleasesRolloutsRetryJob
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_RetryJobRequest *)object
                        rollout:(NSString *)rollout;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesSetIamPolicy : GTLRCloudDeployQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDeploy_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRCloudDeploy_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: clouddeploy.projects.locations.deliveryPipelines.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesTestIamPermissions : GTLRCloudDeployQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDeploy_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRCloudDeploy_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsDeliveryPipelinesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: clouddeploy.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsGet : GTLRCloudDeployQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the configuration for a location.
 *
 *  Method: clouddeploy.projects.locations.getConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsGetConfig : GTLRCloudDeployQuery

/** Required. Name of requested configuration. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Config.
 *
 *  Gets the configuration for a location.
 *
 *  @param name Required. Name of requested configuration.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsGetConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: clouddeploy.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsList : GTLRCloudDeployQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudDeploy_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: clouddeploy.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsOperationsCancel : GTLRCloudDeployQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRCloudDeploy_CancelOperationRequest to include in
 *    the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: clouddeploy.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsOperationsDelete : GTLRCloudDeployQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: clouddeploy.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsOperationsGet : GTLRCloudDeployQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: clouddeploy.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsOperationsList : GTLRCloudDeployQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudDeploy_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new Target in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.targets.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsCreate : GTLRCloudDeployQuery

/**
 *  Required. The parent collection in which the `Target` should be created.
 *  Format should be projects/{project_id}/locations/{location_name}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. ID of the `Target`. */
@property(nonatomic, copy, nullable) NSString *targetId;

/**
 *  Optional. If set to true, the request is validated and the user is provided
 *  with an expected result, but no actual change is made.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Creates a new Target in a given project and location.
 *
 *  @param object The @c GTLRCloudDeploy_Target to include in the query.
 *  @param parent Required. The parent collection in which the `Target` should
 *    be created. Format should be
 *    projects/{project_id}/locations/{location_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_Target *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Target.
 *
 *  Method: clouddeploy.projects.locations.targets.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsDelete : GTLRCloudDeployQuery

/**
 *  Optional. If set to true, then deleting an already deleted or non-existing
 *  DeliveryPipeline will succeed.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Optional. This checksum is computed by the server based on the value of
 *  other fields, and may be sent on update and delete requests to ensure the
 *  client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Required. The name of the `Target` to delete. Format should be
 *  projects/{project_id}/locations/{location_name}/targets/{target_name}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes after the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validate the request and preview the review, but do not
 *  actually post it.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Deletes a single Target.
 *
 *  @param name Required. The name of the `Target` to delete. Format should be
 *    projects/{project_id}/locations/{location_name}/targets/{target_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Target.
 *
 *  Method: clouddeploy.projects.locations.targets.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsGet : GTLRCloudDeployQuery

/**
 *  Required. Name of the `Target`. Format must be
 *  projects/{project_id}/locations/{location_name}/targets/{target_name}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudDeploy_Target.
 *
 *  Gets details of a single Target.
 *
 *  @param name Required. Name of the `Target`. Format must be
 *    projects/{project_id}/locations/{location_name}/targets/{target_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: clouddeploy.projects.locations.targets.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsGetIamPolicy : GTLRCloudDeployQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDeploy_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Targets in a given project and location.
 *
 *  Method: clouddeploy.projects.locations.targets.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsList : GTLRCloudDeployQuery

/**
 *  Optional. Filter targets to be returned. See https://google.aip.dev/160 for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Field to sort by. See https://google.aip.dev/132#ordering for more
 *  details.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of `Target` objects to return. The service may
 *  return fewer than this value. If unspecified, at most 50 `Target` objects
 *  will be returned. The maximum value is 1000; values above 1000 will be set
 *  to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListTargets` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other provided
 *  parameters match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent, which owns this collection of targets. Format must be
 *  projects/{project_id}/locations/{location_name}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudDeploy_ListTargetsResponse.
 *
 *  Lists Targets in a given project and location.
 *
 *  @param parent Required. The parent, which owns this collection of targets.
 *    Format must be projects/{project_id}/locations/{location_name}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Target.
 *
 *  Method: clouddeploy.projects.locations.targets.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsPatch : GTLRCloudDeployQuery

/**
 *  Optional. If set to true, updating a `Target` that does not exist will
 *  result in the creation of a new `Target`.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Optional. Name of the `Target`. Format is
 *  projects/{project}/locations/{location}/targets/a-z{0,62}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Target resource by the update. The fields specified in the update_mask are
 *  relative to the resource, not the full request. A field will be overwritten
 *  if it is in the mask. If the user does not provide a mask then all fields
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set to true, the request is validated and the user is provided
 *  with an expected result, but no actual change is made.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRCloudDeploy_Operation.
 *
 *  Updates the parameters of a single Target.
 *
 *  @param object The @c GTLRCloudDeploy_Target to include in the query.
 *  @param name Optional. Name of the `Target`. Format is
 *    projects/{project}/locations/{location}/targets/a-z{0,62}.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_Target *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: clouddeploy.projects.locations.targets.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsSetIamPolicy : GTLRCloudDeployQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDeploy_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRCloudDeploy_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: clouddeploy.projects.locations.targets.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudDeployCloudPlatform
 */
@interface GTLRCloudDeployQuery_ProjectsLocationsTargetsTestIamPermissions : GTLRCloudDeployQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRCloudDeploy_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRCloudDeploy_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRCloudDeployQuery_ProjectsLocationsTargetsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRCloudDeploy_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
