// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Security Command Center API (securitycenter/v1)
// Description:
//   Security Command Center API provides access to temporal views of assets and
//   findings within an organization.
// Documentation:
//   https://cloud.google.com/security-command-center

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSecurityCommandCenter_Access;
@class GTLRSecurityCommandCenter_AccessReview;
@class GTLRSecurityCommandCenter_Asset;
@class GTLRSecurityCommandCenter_Asset_ResourceProperties;
@class GTLRSecurityCommandCenter_AssetDiscoveryConfig;
@class GTLRSecurityCommandCenter_AssociatedFinding;
@class GTLRSecurityCommandCenter_AuditConfig;
@class GTLRSecurityCommandCenter_AuditLogConfig;
@class GTLRSecurityCommandCenter_Binding;
@class GTLRSecurityCommandCenter_Compliance;
@class GTLRSecurityCommandCenter_Connection;
@class GTLRSecurityCommandCenter_Contact;
@class GTLRSecurityCommandCenter_ContactDetails;
@class GTLRSecurityCommandCenter_Container;
@class GTLRSecurityCommandCenter_Cve;
@class GTLRSecurityCommandCenter_Cvssv3;
@class GTLRSecurityCommandCenter_Database;
@class GTLRSecurityCommandCenter_Detection;
@class GTLRSecurityCommandCenter_Edge;
@class GTLRSecurityCommandCenter_EnvironmentVariable;
@class GTLRSecurityCommandCenter_ExfilResource;
@class GTLRSecurityCommandCenter_Exfiltration;
@class GTLRSecurityCommandCenter_Expr;
@class GTLRSecurityCommandCenter_File;
@class GTLRSecurityCommandCenter_Finding;
@class GTLRSecurityCommandCenter_Finding_Contacts;
@class GTLRSecurityCommandCenter_Finding_ExternalSystems;
@class GTLRSecurityCommandCenter_Finding_SourceProperties;
@class GTLRSecurityCommandCenter_Folder;
@class GTLRSecurityCommandCenter_Geolocation;
@class GTLRSecurityCommandCenter_GetPolicyOptions;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Binding;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_SourceProperties;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Folder;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Resource;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks_Marks;
@class GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Resource;
@class GTLRSecurityCommandCenter_GroupResult;
@class GTLRSecurityCommandCenter_GroupResult_Properties;
@class GTLRSecurityCommandCenter_IamBinding;
@class GTLRSecurityCommandCenter_IamPolicy;
@class GTLRSecurityCommandCenter_Indicator;
@class GTLRSecurityCommandCenter_Kubernetes;
@class GTLRSecurityCommandCenter_Label;
@class GTLRSecurityCommandCenter_ListAssetsResult;
@class GTLRSecurityCommandCenter_ListFindingsResult;
@class GTLRSecurityCommandCenter_MemoryHashSignature;
@class GTLRSecurityCommandCenter_MitreAttack;
@class GTLRSecurityCommandCenter_Node;
@class GTLRSecurityCommandCenter_NodePool;
@class GTLRSecurityCommandCenter_NotificationConfig;
@class GTLRSecurityCommandCenter_Operation;
@class GTLRSecurityCommandCenter_Operation_Metadata;
@class GTLRSecurityCommandCenter_Operation_Response;
@class GTLRSecurityCommandCenter_PathNode;
@class GTLRSecurityCommandCenter_Pod;
@class GTLRSecurityCommandCenter_Policy;
@class GTLRSecurityCommandCenter_Process;
@class GTLRSecurityCommandCenter_ProcessSignature;
@class GTLRSecurityCommandCenter_Reference;
@class GTLRSecurityCommandCenter_Resource;
@class GTLRSecurityCommandCenter_Role;
@class GTLRSecurityCommandCenter_SecurityCenterProperties;
@class GTLRSecurityCommandCenter_SecurityMarks;
@class GTLRSecurityCommandCenter_SecurityMarks_Marks;
@class GTLRSecurityCommandCenter_ServiceAccountDelegationInfo;
@class GTLRSecurityCommandCenter_Source;
@class GTLRSecurityCommandCenter_Status;
@class GTLRSecurityCommandCenter_Status_Details_Item;
@class GTLRSecurityCommandCenter_StreamingConfig;
@class GTLRSecurityCommandCenter_Subject;
@class GTLRSecurityCommandCenter_Vulnerability;
@class GTLRSecurityCommandCenter_YaraRuleSignature;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_AssetDiscoveryConfig.inclusionMode

/**
 *  Asset Discovery will ignore all resources under the projects specified. All
 *  other resources will be retrieved.
 *
 *  Value: "EXCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_Exclude;
/**
 *  Asset Discovery will capture only the resources within the projects
 *  specified. All other resources will be ignored.
 *
 *  Value: "INCLUDE_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_IncludeOnly;
/**
 *  Unspecified. Setting the mode with this value will disable
 *  inclusion/exclusion filtering for Asset Discovery.
 *
 *  Value: "INCLUSION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_InclusionModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Connection.protocol

/**
 *  Encap Security Payload.
 *
 *  Value: "ESP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Connection_Protocol_Esp;
/**
 *  Generic Routing Encapsulation.
 *
 *  Value: "GRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Connection_Protocol_Gre;
/**
 *  Internet Control Message Protocol.
 *
 *  Value: "ICMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Connection_Protocol_Icmp;
/**
 *  Unspecified protocol (not HOPOPT).
 *
 *  Value: "PROTOCOL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Connection_Protocol_ProtocolUnspecified;
/**
 *  Transmission Control Protocol.
 *
 *  Value: "TCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Connection_Protocol_Tcp;
/**
 *  User Datagram Protocol.
 *
 *  Value: "UDP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Connection_Protocol_Udp;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.attackComplexity

/**
 *  A successful attack depends on conditions beyond the attacker's control.
 *  That is, a successful attack cannot be accomplished at will, but requires
 *  the attacker to invest in some measurable amount of effort in preparation or
 *  execution against the vulnerable component before a successful attack can be
 *  expected.
 *
 *  Value: "ATTACK_COMPLEXITY_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackComplexity_AttackComplexityHigh;
/**
 *  Specialized access conditions or extenuating circumstances do not exist. An
 *  attacker can expect repeatable success when attacking the vulnerable
 *  component.
 *
 *  Value: "ATTACK_COMPLEXITY_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackComplexity_AttackComplexityLow;
/**
 *  Invalid value.
 *
 *  Value: "ATTACK_COMPLEXITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackComplexity_AttackComplexityUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.attackVector

/**
 *  The vulnerable component is bound to the network stack, but the attack is
 *  limited at the protocol level to a logically adjacent topology.
 *
 *  Value: "ATTACK_VECTOR_ADJACENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorAdjacent;
/**
 *  The vulnerable component is not bound to the network stack and the
 *  attacker's path is via read/write/execute capabilities.
 *
 *  Value: "ATTACK_VECTOR_LOCAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorLocal;
/**
 *  The vulnerable component is bound to the network stack and the set of
 *  possible attackers extends beyond the other options listed below, up to and
 *  including the entire Internet.
 *
 *  Value: "ATTACK_VECTOR_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorNetwork;
/**
 *  The attack requires the attacker to physically touch or manipulate the
 *  vulnerable component.
 *
 *  Value: "ATTACK_VECTOR_PHYSICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorPhysical;
/**
 *  Invalid value.
 *
 *  Value: "ATTACK_VECTOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.availabilityImpact

/**
 *  High impact.
 *
 *  Value: "IMPACT_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactHigh;
/**
 *  Low impact.
 *
 *  Value: "IMPACT_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactLow;
/**
 *  No impact.
 *
 *  Value: "IMPACT_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactNone;
/**
 *  Invalid value.
 *
 *  Value: "IMPACT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.confidentialityImpact

/**
 *  High impact.
 *
 *  Value: "IMPACT_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactHigh;
/**
 *  Low impact.
 *
 *  Value: "IMPACT_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactLow;
/**
 *  No impact.
 *
 *  Value: "IMPACT_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactNone;
/**
 *  Invalid value.
 *
 *  Value: "IMPACT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.integrityImpact

/**
 *  High impact.
 *
 *  Value: "IMPACT_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactHigh;
/**
 *  Low impact.
 *
 *  Value: "IMPACT_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactLow;
/**
 *  No impact.
 *
 *  Value: "IMPACT_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactNone;
/**
 *  Invalid value.
 *
 *  Value: "IMPACT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.privilegesRequired

/**
 *  The attacker requires privileges that provide significant (e.g.,
 *  administrative) control over the vulnerable component allowing access to
 *  component-wide settings and files.
 *
 *  Value: "PRIVILEGES_REQUIRED_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredHigh;
/**
 *  The attacker requires privileges that provide basic user capabilities that
 *  could normally affect only settings and files owned by a user.
 *  Alternatively, an attacker with Low privileges has the ability to access
 *  only non-sensitive resources.
 *
 *  Value: "PRIVILEGES_REQUIRED_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredLow;
/**
 *  The attacker is unauthorized prior to attack, and therefore does not require
 *  any access to settings or files of the vulnerable system to carry out an
 *  attack.
 *
 *  Value: "PRIVILEGES_REQUIRED_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredNone;
/**
 *  Invalid value.
 *
 *  Value: "PRIVILEGES_REQUIRED_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.scope

/**
 *  An exploited vulnerability can affect resources beyond the security scope
 *  managed by the security authority of the vulnerable component.
 *
 *  Value: "SCOPE_CHANGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_Scope_ScopeChanged;
/**
 *  An exploited vulnerability can only affect resources managed by the same
 *  security authority.
 *
 *  Value: "SCOPE_UNCHANGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_Scope_ScopeUnchanged;
/**
 *  Invalid value.
 *
 *  Value: "SCOPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_Scope_ScopeUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Cvssv3.userInteraction

/**
 *  The vulnerable system can be exploited without interaction from any user.
 *
 *  Value: "USER_INTERACTION_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_UserInteraction_UserInteractionNone;
/**
 *  Successful exploitation of this vulnerability requires a user to take some
 *  action before the vulnerability can be exploited.
 *
 *  Value: "USER_INTERACTION_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_UserInteraction_UserInteractionRequired;
/**
 *  Invalid value.
 *
 *  Value: "USER_INTERACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Cvssv3_UserInteraction_UserInteractionUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Finding.findingClass

/**
 *  Unspecified finding class.
 *
 *  Value: "FINDING_CLASS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_FindingClass_FindingClassUnspecified;
/**
 *  Describes a potential weakness in cloud resource/asset configuration that
 *  increases risk.
 *
 *  Value: "MISCONFIGURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_FindingClass_Misconfiguration;
/**
 *  Describes a security observation that is for informational purposes.
 *
 *  Value: "OBSERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_FindingClass_Observation;
/**
 *  Describes an error that prevents some SCC functionality.
 *
 *  Value: "SCC_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_FindingClass_SccError;
/**
 *  Describes unwanted or malicious activity.
 *
 *  Value: "THREAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_FindingClass_Threat;
/**
 *  Describes a potential weakness in software that increases risk to
 *  Confidentiality & Integrity & Availability.
 *
 *  Value: "VULNERABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_FindingClass_Vulnerability;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Finding.mute

/**
 *  Finding has been muted.
 *
 *  Value: "MUTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Mute_Muted;
/**
 *  Unspecified.
 *
 *  Value: "MUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Mute_MuteUnspecified;
/**
 *  Finding has never been muted/unmuted.
 *
 *  Value: "UNDEFINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Mute_Undefined;
/**
 *  Finding has been unmuted.
 *
 *  Value: "UNMUTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Mute_Unmuted;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Finding.severity

/**
 *  Vulnerability: A critical vulnerability is easily discoverable by an
 *  external actor, exploitable, and results in the direct ability to execute
 *  arbitrary code, exfiltrate data, and otherwise gain additional access and
 *  privileges to cloud resources and workloads. Examples include publicly
 *  accessible unprotected user data, public SSH access with weak or no
 *  passwords, etc. Threat: Indicates a threat that is able to access, modify,
 *  or delete data or execute unauthorized code within existing resources.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Severity_Critical;
/**
 *  Vulnerability: A high risk vulnerability can be easily discovered and
 *  exploited in combination with other vulnerabilities in order to gain direct
 *  access and the ability to execute arbitrary code, exfiltrate data, and
 *  otherwise gain additional access and privileges to cloud resources and
 *  workloads. An example is a database with weak or no passwords that is only
 *  accessible internally. This database could easily be compromised by an actor
 *  that had access to the internal network. Threat: Indicates a threat that is
 *  able to create new computational resources in an environment but not able to
 *  access data or execute code in existing resources.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Severity_High;
/**
 *  Vulnerability: A low risk vulnerability hampers a security organization's
 *  ability to detect vulnerabilities or active threats in their deployment, or
 *  prevents the root cause investigation of security issues. An example is
 *  monitoring and logs being disabled for resource configurations and access.
 *  Threat: Indicates a threat that has obtained minimal access to an
 *  environment but is not able to access data, execute code, or create
 *  resources.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Severity_Low;
/**
 *  Vulnerability: A medium risk vulnerability could be used by an actor to gain
 *  access to resources or privileges that enable them to eventually (through
 *  multiple steps or a complex exploit) gain access and the ability to execute
 *  arbitrary code or exfiltrate data. An example is a service account with
 *  access to more projects than it should have. If an actor gains access to the
 *  service account, they could potentially use that access to manipulate a
 *  project the service account was not intended to. Threat: Indicates a threat
 *  that is able to cause operational impact but may not access data or execute
 *  unauthorized code.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Severity_Medium;
/**
 *  This value is used for findings when a source doesn't write a severity
 *  value.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_Severity_SeverityUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Finding.state

/**
 *  The finding requires attention and has not been addressed yet.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_State_Active;
/**
 *  The finding has been fixed, triaged as a non-issue or otherwise addressed
 *  and is no longer active.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_State_Inactive;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Finding_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse.state

/**
 *  Asset discovery run completed successfully.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Completed;
/**
 *  Asset discovery run state was unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_StateUnspecified;
/**
 *  Asset discovery run was cancelled with tasks still pending, as another run
 *  for the same organization was started with a higher priority.
 *
 *  Value: "SUPERSEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Superseded;
/**
 *  Asset discovery run was killed and terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource.resourceValue

/**
 *  This is a high value resource.
 *
 *  Value: "RESOURCE_VALUE_HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueHigh;
/**
 *  This is a low value resource.
 *
 *  Value: "RESOURCE_VALUE_LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueLow;
/**
 *  This is a medium value resource.
 *
 *  Value: "RESOURCE_VALUE_MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueMedium;
/**
 *  The resource value isn't specified.
 *
 *  Value: "RESOURCE_VALUE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding.severity

/**
 *  Critical severity.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_Critical;
/**
 *  High severity.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_High;
/**
 *  Low severity.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_Low;
/**
 *  Medium severity.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_Medium;
/**
 *  No severity specified. The default value.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_SeverityUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding.state

/**
 *  The finding requires attention and has not been addressed yet.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Active;
/**
 *  The finding has been fixed, triaged as a non-issue or otherwise addressed
 *  and is no longer active.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Inactive;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse.state

/**
 *  Asset discovery run completed successfully.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Completed;
/**
 *  Asset discovery run state was unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_StateUnspecified;
/**
 *  Asset discovery run was cancelled with tasks still pending, as another run
 *  for the same organization was started with a higher priority.
 *
 *  Value: "SUPERSEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Superseded;
/**
 *  Asset discovery run was killed and terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig.resourceValue

/**
 *  High resource value
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_High;
/**
 *  Low resource value
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_Low;
/**
 *  Medium resource value
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_Medium;
/**
 *  No resource value, e.g. ignore these resources
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_None;
/**
 *  Unspecific value
 *
 *  Value: "RESOURCE_VALUE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_ResourceValueUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse.state

/**
 *  Asset discovery run completed successfully.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Completed;
/**
 *  Asset discovery run state was unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_StateUnspecified;
/**
 *  Asset discovery run was cancelled with tasks still pending, as another run
 *  for the same organization was started with a higher priority.
 *
 *  Value: "SUPERSEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Superseded;
/**
 *  Asset discovery run was killed and terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_IamBinding.action

/**
 *  Unspecified.
 *
 *  Value: "ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_IamBinding_Action_ActionUnspecified;
/**
 *  Addition of a Binding.
 *
 *  Value: "ADD"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_IamBinding_Action_Add;
/**
 *  Removal of a Binding.
 *
 *  Value: "REMOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_IamBinding_Action_Remove;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_ListAssetsResult.stateChange

/**
 *  Asset was present at both point(s) in time.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Active;
/**
 *  Asset was added between the points in time.
 *
 *  Value: "ADDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Added;
/**
 *  Asset was removed between the points in time.
 *
 *  Value: "REMOVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Removed;
/**
 *  State change is unused, this is the canonical default for this enum.
 *
 *  Value: "UNUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Unused;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_ListFindingsResult.stateChange

/**
 *  The finding was created between the points in time.
 *
 *  Value: "ADDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Added;
/**
 *  The finding has changed state in some way between the points in time and
 *  existed at both points.
 *
 *  Value: "CHANGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Changed;
/**
 *  The finding at timestamp does not match the filter specified, but it did at
 *  timestamp - compare_duration.
 *
 *  Value: "REMOVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Removed;
/**
 *  The finding has not changed state between the points in time and existed at
 *  both points.
 *
 *  Value: "UNCHANGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unchanged;
/**
 *  State change is unused, this is the canonical default for this enum.
 *
 *  Value: "UNUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unused;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_MitreAttack.additionalTactics

/**
 *  TA0009
 *
 *  Value: "COLLECTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_Collection;
/**
 *  TA0011
 *
 *  Value: "COMMAND_AND_CONTROL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_CommandAndControl;
/**
 *  TA0006
 *
 *  Value: "CREDENTIAL_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_CredentialAccess;
/**
 *  TA0005
 *
 *  Value: "DEFENSE_EVASION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_DefenseEvasion;
/**
 *  TA0007
 *
 *  Value: "DISCOVERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_Discovery;
/**
 *  TA0002
 *
 *  Value: "EXECUTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_Execution;
/**
 *  TA0010
 *
 *  Value: "EXFILTRATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_Exfiltration;
/**
 *  TA0040
 *
 *  Value: "IMPACT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_Impact;
/**
 *  TA0001
 *
 *  Value: "INITIAL_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_InitialAccess;
/**
 *  TA0008
 *
 *  Value: "LATERAL_MOVEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_LateralMovement;
/**
 *  TA0003
 *
 *  Value: "PERSISTENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_Persistence;
/**
 *  TA0004
 *
 *  Value: "PRIVILEGE_ESCALATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_PrivilegeEscalation;
/**
 *  TA0043
 *
 *  Value: "RECONNAISSANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_Reconnaissance;
/**
 *  TA0042
 *
 *  Value: "RESOURCE_DEVELOPMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_ResourceDevelopment;
/**
 *  Unspecified value.
 *
 *  Value: "TACTIC_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTactics_TacticUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_MitreAttack.additionalTechniques

/**
 *  T1548
 *
 *  Value: "ABUSE_ELEVATION_CONTROL_MECHANISM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_AbuseElevationControlMechanism;
/**
 *  T1134
 *
 *  Value: "ACCESS_TOKEN_MANIPULATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_AccessTokenManipulation;
/**
 *  T1098
 *
 *  Value: "ACCOUNT_MANIPULATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_AccountManipulation;
/**
 *  T1595
 *
 *  Value: "ACTIVE_SCANNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ActiveScanning;
/**
 *  T1078.004
 *
 *  Value: "CLOUD_ACCOUNTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_CloudAccounts;
/**
 *  T1069.003
 *
 *  Value: "CLOUD_GROUPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_CloudGroups;
/**
 *  T1059
 *
 *  Value: "COMMAND_AND_SCRIPTING_INTERPRETER"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_CommandAndScriptingInterpreter;
/**
 *  T1543
 *
 *  Value: "CREATE_OR_MODIFY_SYSTEM_PROCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_CreateOrModifySystemProcess;
/**
 *  T1485
 *
 *  Value: "DATA_DESTRUCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_DataDestruction;
/**
 *  T1484
 *
 *  Value: "DOMAIN_POLICY_MODIFICATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_DomainPolicyModification;
/**
 *  T1568
 *
 *  Value: "DYNAMIC_RESOLUTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_DynamicResolution;
/**
 *  T1567
 *
 *  Value: "EXFILTRATION_OVER_WEB_SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ExfiltrationOverWebService;
/**
 *  T1567.002
 *
 *  Value: "EXFILTRATION_TO_CLOUD_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ExfiltrationToCloudStorage;
/**
 *  T1190
 *
 *  Value: "EXPLOIT_PUBLIC_FACING_APPLICATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ExploitPublicFacingApplication;
/**
 *  T1090.002
 *
 *  Value: "EXTERNAL_PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ExternalProxy;
/**
 *  T1562
 *
 *  Value: "IMPAIR_DEFENSES"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ImpairDefenses;
/**
 *  T1105
 *
 *  Value: "INGRESS_TOOL_TRANSFER"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_IngressToolTransfer;
/**
 *  T1078.003
 *
 *  Value: "LOCAL_ACCOUNTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_LocalAccounts;
/**
 *  T1556
 *
 *  Value: "MODIFY_AUTHENTICATION_PROCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ModifyAuthenticationProcess;
/**
 *  T1578
 *
 *  Value: "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ModifyCloudComputeInfrastructure;
/**
 *  T1090.003
 *
 *  Value: "MULTI_HOP_PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_MultiHopProxy;
/**
 *  T1106
 *
 *  Value: "NATIVE_API"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_NativeApi;
/**
 *  T1498
 *
 *  Value: "NETWORK_DENIAL_OF_SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_NetworkDenialOfService;
/**
 *  T1046
 *
 *  Value: "NETWORK_SERVICE_DISCOVERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_NetworkServiceDiscovery;
/**
 *  T1069
 *
 *  Value: "PERMISSION_GROUPS_DISCOVERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_PermissionGroupsDiscovery;
/**
 *  T1090
 *
 *  Value: "PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_Proxy;
/**
 *  T1496
 *
 *  Value: "RESOURCE_HIJACKING"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ResourceHijacking;
/**
 *  T1595.001
 *
 *  Value: "SCANNING_IP_BLOCKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ScanningIpBlocks;
/**
 *  T1129
 *
 *  Value: "SHARED_MODULES"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_SharedModules;
/**
 *  T1098.004
 *
 *  Value: "SSH_AUTHORIZED_KEYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_SshAuthorizedKeys;
/**
 *  T1539
 *
 *  Value: "STEAL_WEB_SESSION_COOKIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_StealWebSessionCookie;
/**
 *  Unspecified value.
 *
 *  Value: "TECHNIQUE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_TechniqueUnspecified;
/**
 *  T1059.004
 *
 *  Value: "UNIX_SHELL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_UnixShell;
/**
 *  T1552
 *
 *  Value: "UNSECURED_CREDENTIALS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_UnsecuredCredentials;
/**
 *  T1078
 *
 *  Value: "VALID_ACCOUNTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_AdditionalTechniques_ValidAccounts;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_MitreAttack.primaryTactic

/**
 *  TA0009
 *
 *  Value: "COLLECTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Collection;
/**
 *  TA0011
 *
 *  Value: "COMMAND_AND_CONTROL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_CommandAndControl;
/**
 *  TA0006
 *
 *  Value: "CREDENTIAL_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_CredentialAccess;
/**
 *  TA0005
 *
 *  Value: "DEFENSE_EVASION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_DefenseEvasion;
/**
 *  TA0007
 *
 *  Value: "DISCOVERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Discovery;
/**
 *  TA0002
 *
 *  Value: "EXECUTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Execution;
/**
 *  TA0010
 *
 *  Value: "EXFILTRATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Exfiltration;
/**
 *  TA0040
 *
 *  Value: "IMPACT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Impact;
/**
 *  TA0001
 *
 *  Value: "INITIAL_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_InitialAccess;
/**
 *  TA0008
 *
 *  Value: "LATERAL_MOVEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_LateralMovement;
/**
 *  TA0003
 *
 *  Value: "PERSISTENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Persistence;
/**
 *  TA0004
 *
 *  Value: "PRIVILEGE_ESCALATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_PrivilegeEscalation;
/**
 *  TA0043
 *
 *  Value: "RECONNAISSANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Reconnaissance;
/**
 *  TA0042
 *
 *  Value: "RESOURCE_DEVELOPMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_ResourceDevelopment;
/**
 *  Unspecified value.
 *
 *  Value: "TACTIC_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_TacticUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_MitreAttack.primaryTechniques

/**
 *  T1548
 *
 *  Value: "ABUSE_ELEVATION_CONTROL_MECHANISM"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_AbuseElevationControlMechanism;
/**
 *  T1134
 *
 *  Value: "ACCESS_TOKEN_MANIPULATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_AccessTokenManipulation;
/**
 *  T1098
 *
 *  Value: "ACCOUNT_MANIPULATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_AccountManipulation;
/**
 *  T1595
 *
 *  Value: "ACTIVE_SCANNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ActiveScanning;
/**
 *  T1078.004
 *
 *  Value: "CLOUD_ACCOUNTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_CloudAccounts;
/**
 *  T1069.003
 *
 *  Value: "CLOUD_GROUPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_CloudGroups;
/**
 *  T1059
 *
 *  Value: "COMMAND_AND_SCRIPTING_INTERPRETER"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_CommandAndScriptingInterpreter;
/**
 *  T1543
 *
 *  Value: "CREATE_OR_MODIFY_SYSTEM_PROCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_CreateOrModifySystemProcess;
/**
 *  T1485
 *
 *  Value: "DATA_DESTRUCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_DataDestruction;
/**
 *  T1484
 *
 *  Value: "DOMAIN_POLICY_MODIFICATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_DomainPolicyModification;
/**
 *  T1568
 *
 *  Value: "DYNAMIC_RESOLUTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_DynamicResolution;
/**
 *  T1567
 *
 *  Value: "EXFILTRATION_OVER_WEB_SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ExfiltrationOverWebService;
/**
 *  T1567.002
 *
 *  Value: "EXFILTRATION_TO_CLOUD_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ExfiltrationToCloudStorage;
/**
 *  T1190
 *
 *  Value: "EXPLOIT_PUBLIC_FACING_APPLICATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ExploitPublicFacingApplication;
/**
 *  T1090.002
 *
 *  Value: "EXTERNAL_PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ExternalProxy;
/**
 *  T1562
 *
 *  Value: "IMPAIR_DEFENSES"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ImpairDefenses;
/**
 *  T1105
 *
 *  Value: "INGRESS_TOOL_TRANSFER"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_IngressToolTransfer;
/**
 *  T1078.003
 *
 *  Value: "LOCAL_ACCOUNTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_LocalAccounts;
/**
 *  T1556
 *
 *  Value: "MODIFY_AUTHENTICATION_PROCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ModifyAuthenticationProcess;
/**
 *  T1578
 *
 *  Value: "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ModifyCloudComputeInfrastructure;
/**
 *  T1090.003
 *
 *  Value: "MULTI_HOP_PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_MultiHopProxy;
/**
 *  T1106
 *
 *  Value: "NATIVE_API"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_NativeApi;
/**
 *  T1498
 *
 *  Value: "NETWORK_DENIAL_OF_SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_NetworkDenialOfService;
/**
 *  T1046
 *
 *  Value: "NETWORK_SERVICE_DISCOVERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_NetworkServiceDiscovery;
/**
 *  T1069
 *
 *  Value: "PERMISSION_GROUPS_DISCOVERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_PermissionGroupsDiscovery;
/**
 *  T1090
 *
 *  Value: "PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_Proxy;
/**
 *  T1496
 *
 *  Value: "RESOURCE_HIJACKING"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ResourceHijacking;
/**
 *  T1595.001
 *
 *  Value: "SCANNING_IP_BLOCKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ScanningIpBlocks;
/**
 *  T1129
 *
 *  Value: "SHARED_MODULES"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_SharedModules;
/**
 *  T1098.004
 *
 *  Value: "SSH_AUTHORIZED_KEYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_SshAuthorizedKeys;
/**
 *  T1539
 *
 *  Value: "STEAL_WEB_SESSION_COOKIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_StealWebSessionCookie;
/**
 *  Unspecified value.
 *
 *  Value: "TECHNIQUE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_TechniqueUnspecified;
/**
 *  T1059.004
 *
 *  Value: "UNIX_SHELL"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_UnixShell;
/**
 *  T1552
 *
 *  Value: "UNSECURED_CREDENTIALS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_UnsecuredCredentials;
/**
 *  T1078
 *
 *  Value: "VALID_ACCOUNTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_MitreAttack_PrimaryTechniques_ValidAccounts;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Role.kind

/**
 *  Kubernetes ClusterRole.
 *
 *  Value: "CLUSTER_ROLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Role_Kind_ClusterRole;
/**
 *  Role type is not specified.
 *
 *  Value: "KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Role_Kind_KindUnspecified;
/**
 *  Kubernetes Role.
 *
 *  Value: "ROLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Role_Kind_Role;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_SetFindingStateRequest.state

/**
 *  The finding requires attention and has not been addressed yet.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Active;
/**
 *  The finding has been fixed, triaged as a non-issue or otherwise addressed
 *  and is no longer active.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Inactive;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetFindingStateRequest_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_SetMuteRequest.mute

/**
 *  Finding has been muted.
 *
 *  Value: "MUTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetMuteRequest_Mute_Muted;
/**
 *  Unspecified.
 *
 *  Value: "MUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetMuteRequest_Mute_MuteUnspecified;
/**
 *  Finding has never been muted/unmuted.
 *
 *  Value: "UNDEFINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetMuteRequest_Mute_Undefined;
/**
 *  Finding has been unmuted.
 *
 *  Value: "UNMUTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_SetMuteRequest_Mute_Unmuted;

// ----------------------------------------------------------------------------
// GTLRSecurityCommandCenter_Subject.kind

/**
 *  Authentication is not specified.
 *
 *  Value: "AUTH_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Subject_Kind_AuthTypeUnspecified;
/**
 *  Collection of users.
 *
 *  Value: "GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Subject_Kind_Group;
/**
 *  Users managed by Kubernetes API with credentials stored as Secrets.
 *
 *  Value: "SERVICEACCOUNT"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Subject_Kind_Serviceaccount;
/**
 *  User with valid certificate.
 *
 *  Value: "USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRSecurityCommandCenter_Subject_Kind_User;

/**
 *  Represents an access event.
 */
@interface GTLRSecurityCommandCenter_Access : GTLRObject

/** Caller's IP address, such as "1.1.1.1". */
@property(nonatomic, copy, nullable) NSString *callerIp;

/** The caller IP's geolocation, which identifies where the call came from. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Geolocation *callerIpGeo;

/** The method that the service account called, e.g. "SetIamPolicy". */
@property(nonatomic, copy, nullable) NSString *methodName;

/**
 *  Associated email, such as "foo\@google.com". The email address of the
 *  authenticated user (or service account on behalf of third party principal)
 *  making the request. For third party identity callers, the
 *  `principal_subject` field is populated instead of this field. For privacy
 *  reasons, the principal email address is sometimes redacted. For more
 *  information, see [Caller identities in audit
 *  logs](https://cloud.google.com/logging/docs/audit#user-id).
 */
@property(nonatomic, copy, nullable) NSString *principalEmail;

/**
 *  A string representing the principal_subject associated with the identity. As
 *  compared to `principal_email`, supports principals that aren't associated
 *  with email addresses, such as third party principals. For most identities,
 *  the format will be `principal://iam.googleapis.com/{identity pool
 *  name}/subjects/{subject}` except for some GKE identities (GKE_WORKLOAD,
 *  FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format
 *  `serviceAccount:{identity pool name}[{subject}]`
 */
@property(nonatomic, copy, nullable) NSString *principalSubject;

/**
 *  Identity delegation history of an authenticated service account that makes
 *  the request. It contains information on the real authorities that try to
 *  access GCP resources by delegating on a service account. When multiple
 *  authorities are present, they are guaranteed to be sorted based on the
 *  original ordering of the identity delegation events.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ServiceAccountDelegationInfo *> *serviceAccountDelegationInfo;

/**
 *  The name of the service account key used to create or exchange credentials
 *  for authenticating the service account making the request. This is a
 *  scheme-less URI full resource name. For example:
 *  "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}"
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountKeyName;

/**
 *  This is the API service that the service account made a call to, e.g.
 *  "iam.googleapis.com"
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  What kind of user agent is associated, e.g. operating system shells,
 *  embedded or stand-alone applications, etc.
 */
@property(nonatomic, copy, nullable) NSString *userAgentFamily;

/**
 *  A string representing a username. This is likely not an IAM principal. For
 *  instance, this may be the system user name if the finding is VM-related, or
 *  this may be some type of application login user name, depending on the type
 *  of finding.
 */
@property(nonatomic, copy, nullable) NSString *userName;

@end


/**
 *  Conveys information about a Kubernetes access review (e.g. kubectl auth
 *  can-i ...) that was involved in a finding.
 */
@interface GTLRSecurityCommandCenter_AccessReview : GTLRObject

/** Group is the API Group of the Resource. "*" means all. */
@property(nonatomic, copy, nullable) NSString *group;

/** Name is the name of the resource being requested. Empty means all. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Namespace of the action being requested. Currently, there is no distinction
 *  between no namespace and all namespaces. Both are represented by "" (empty).
 */
@property(nonatomic, copy, nullable) NSString *ns;

/** Resource is the optional resource type requested. "*" means all. */
@property(nonatomic, copy, nullable) NSString *resource;

/** Subresource is the optional subresource type. */
@property(nonatomic, copy, nullable) NSString *subresource;

/**
 *  Verb is a Kubernetes resource API verb, like: get, list, watch, create,
 *  update, delete, proxy. "*" means all.
 */
@property(nonatomic, copy, nullable) NSString *verb;

/** Version is the API Version of the Resource. "*" means all. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Security Command Center representation of a Google Cloud resource. The Asset
 *  is a Security Command Center resource that captures information about a
 *  single Google Cloud resource. All modifications to an Asset are only within
 *  the context of Security Command Center and don't affect the referenced
 *  Google Cloud resource.
 */
@interface GTLRSecurityCommandCenter_Asset : GTLRObject

/**
 *  The canonical name of the resource. It's either
 *  "organizations/{organization_id}/assets/{asset_id}",
 *  "folders/{folder_id}/assets/{asset_id}" or
 *  "projects/{project_number}/assets/{asset_id}", depending on the closest CRM
 *  ancestor of the resource.
 */
@property(nonatomic, copy, nullable) NSString *canonicalName;

/** The time at which the asset was created in Security Command Center. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Cloud IAM Policy information associated with the Google Cloud resource
 *  described by the Security Command Center asset. This information is managed
 *  and defined by the Google Cloud resource and cannot be modified by the user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_IamPolicy *iamPolicy;

/**
 *  The relative resource name of this asset. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example: "organizations/{organization_id}/assets/{asset_id}".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Resource managed properties. These properties are managed and defined by the
 *  Google Cloud resource and cannot be modified by the user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Asset_ResourceProperties *resourceProperties;

/**
 *  Security Command Center managed properties. These properties are managed by
 *  Security Command Center and cannot be modified by the user.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityCenterProperties *securityCenterProperties;

/**
 *  User specified security marks. These marks are entirely managed by the user
 *  and come from the SecurityMarks resource that belongs to the asset.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityMarks *securityMarks;

/** The time at which the asset was last updated or added in Cloud SCC. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Resource managed properties. These properties are managed and defined by the
 *  Google Cloud resource and cannot be modified by the user.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Asset_ResourceProperties : GTLRObject
@end


/**
 *  The configuration used for Asset Discovery runs.
 */
@interface GTLRSecurityCommandCenter_AssetDiscoveryConfig : GTLRObject

/**
 *  The folder ids to use for filtering asset discovery. It consists of only
 *  digits, e.g., 756619654966.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *folderIds;

/**
 *  The mode to use for filtering asset discovery.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_Exclude
 *        Asset Discovery will ignore all resources under the projects
 *        specified. All other resources will be retrieved. (Value: "EXCLUDE")
 *    @arg @c kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_IncludeOnly
 *        Asset Discovery will capture only the resources within the projects
 *        specified. All other resources will be ignored. (Value:
 *        "INCLUDE_ONLY")
 *    @arg @c kGTLRSecurityCommandCenter_AssetDiscoveryConfig_InclusionMode_InclusionModeUnspecified
 *        Unspecified. Setting the mode with this value will disable
 *        inclusion/exclusion filtering for Asset Discovery. (Value:
 *        "INCLUSION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *inclusionMode;

/** The project ids to use for filtering asset discovery. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *projectIds;

@end


/**
 *  A finding that is associated with this node in the exposure path.
 */
@interface GTLRSecurityCommandCenter_AssociatedFinding : GTLRObject

/**
 *  Canonical name of the associated findings. Example:
 *  organizations/123/sources/456/findings/789
 */
@property(nonatomic, copy, nullable) NSString *canonicalFindingName;

/** The additional taxonomy group within findings from a given source. */
@property(nonatomic, copy, nullable) NSString *findingCategory;

@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRSecurityCommandCenter_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRSecurityCommandCenter_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_AdminRead Admin
 *        reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataRead Data
 *        reads. Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_DataWrite Data
 *        writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRSecurityCommandCenter_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRSecurityCommandCenter_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Request message for bulk findings update. Note: 1. If multiple bulk update
 *  requests match the same resource, the order in which they get executed is
 *  not defined. 2. Once a bulk operation is started, there is no way to stop
 *  it.
 */
@interface GTLRSecurityCommandCenter_BulkMuteFindingsRequest : GTLRObject

/**
 *  Expression that identifies findings that should be updated. The expression
 *  is a list of zero or more restrictions combined via logical operators `AND`
 *  and `OR`. Parentheses are supported, and `OR` has higher precedence than
 *  `AND`. Restrictions have the form ` ` and may have a `-` character in front
 *  of them to indicate negation. The fields map to those defined in the
 *  corresponding resource. The supported operators are: * `=` for all value
 *  types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring
 *  matching, for strings. The supported value types are: * string literals in
 *  quotes. * integer literals without quotes. * boolean literals `true` and
 *  `false` without quotes.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  This can be a mute configuration name or any identifier for mute/unmute of
 *  findings based on the filter.
 */
@property(nonatomic, copy, nullable) NSString *muteAnnotation;

@end


/**
 *  Contains compliance information about a security standard indicating unmet
 *  recommendations.
 */
@interface GTLRSecurityCommandCenter_Compliance : GTLRObject

/** Policies within the standard/benchmark e.g. A.12.4.1 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ids;

/**
 *  Refers to industry wide standards or benchmarks e.g. "cis", "pci", "owasp",
 *  etc.
 */
@property(nonatomic, copy, nullable) NSString *standard;

/** Version of the standard/benchmark e.g. 1.1 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Contains information about the IP connection associated with the finding.
 */
@interface GTLRSecurityCommandCenter_Connection : GTLRObject

/**
 *  Destination IP address. Not present for sockets that are listening and not
 *  connected.
 */
@property(nonatomic, copy, nullable) NSString *destinationIp;

/**
 *  Destination port. Not present for sockets that are listening and not
 *  connected.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *destinationPort;

/**
 *  IANA Internet Protocol Number such as TCP(6) and UDP(17).
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Connection_Protocol_Esp Encap Security
 *        Payload. (Value: "ESP")
 *    @arg @c kGTLRSecurityCommandCenter_Connection_Protocol_Gre Generic Routing
 *        Encapsulation. (Value: "GRE")
 *    @arg @c kGTLRSecurityCommandCenter_Connection_Protocol_Icmp Internet
 *        Control Message Protocol. (Value: "ICMP")
 *    @arg @c kGTLRSecurityCommandCenter_Connection_Protocol_ProtocolUnspecified
 *        Unspecified protocol (not HOPOPT). (Value: "PROTOCOL_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_Connection_Protocol_Tcp Transmission
 *        Control Protocol. (Value: "TCP")
 *    @arg @c kGTLRSecurityCommandCenter_Connection_Protocol_Udp User Datagram
 *        Protocol. (Value: "UDP")
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/** Source IP address. */
@property(nonatomic, copy, nullable) NSString *sourceIp;

/**
 *  Source port.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sourcePort;

@end


/**
 *  Representa a single contact's email address
 */
@interface GTLRSecurityCommandCenter_Contact : GTLRObject

/** An email address e.g. "person123\@company.com" */
@property(nonatomic, copy, nullable) NSString *email;

@end


/**
 *  The details pertaining to specific contacts
 */
@interface GTLRSecurityCommandCenter_ContactDetails : GTLRObject

/** A list of contacts */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Contact *> *contacts;

@end


/**
 *  Container associated with the finding.
 */
@interface GTLRSecurityCommandCenter_Container : GTLRObject

/**
 *  Optional container image id, when provided by the container runtime.
 *  Uniquely identifies the container image launched using a container image
 *  digest.
 */
@property(nonatomic, copy, nullable) NSString *imageId;

/** Container labels, as provided by the container runtime. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Label *> *labels;

/** Container name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Container image URI provided when configuring a pod/container. May identify
 *  a container image version using mutable tags.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  CVE stands for Common Vulnerabilities and Exposures. More information:
 *  https://cve.mitre.org
 */
@interface GTLRSecurityCommandCenter_Cve : GTLRObject

/**
 *  Describe Common Vulnerability Scoring System specified at
 *  https://www.first.org/cvss/v3.1/specification-document
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Cvssv3 *cvssv3;

/**
 *  The unique identifier for the vulnerability. e.g. CVE-2021-34527
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Additional information about the CVE. e.g.
 *  https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Reference *> *references;

/**
 *  Whether upstream fix is available for the CVE.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *upstreamFixAvailable;

@end


/**
 *  Common Vulnerability Scoring System version 3.
 */
@interface GTLRSecurityCommandCenter_Cvssv3 : GTLRObject

/**
 *  This metric describes the conditions beyond the attacker's control that must
 *  exist in order to exploit the vulnerability.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackComplexity_AttackComplexityHigh
 *        A successful attack depends on conditions beyond the attacker's
 *        control. That is, a successful attack cannot be accomplished at will,
 *        but requires the attacker to invest in some measurable amount of
 *        effort in preparation or execution against the vulnerable component
 *        before a successful attack can be expected. (Value:
 *        "ATTACK_COMPLEXITY_HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackComplexity_AttackComplexityLow
 *        Specialized access conditions or extenuating circumstances do not
 *        exist. An attacker can expect repeatable success when attacking the
 *        vulnerable component. (Value: "ATTACK_COMPLEXITY_LOW")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackComplexity_AttackComplexityUnspecified
 *        Invalid value. (Value: "ATTACK_COMPLEXITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *attackComplexity;

/**
 *  Base Metrics Represents the intrinsic characteristics of a vulnerability
 *  that are constant over time and across user environments. This metric
 *  reflects the context by which vulnerability exploitation is possible.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorAdjacent
 *        The vulnerable component is bound to the network stack, but the attack
 *        is limited at the protocol level to a logically adjacent topology.
 *        (Value: "ATTACK_VECTOR_ADJACENT")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorLocal
 *        The vulnerable component is not bound to the network stack and the
 *        attacker's path is via read/write/execute capabilities. (Value:
 *        "ATTACK_VECTOR_LOCAL")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorNetwork
 *        The vulnerable component is bound to the network stack and the set of
 *        possible attackers extends beyond the other options listed below, up
 *        to and including the entire Internet. (Value: "ATTACK_VECTOR_NETWORK")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorPhysical
 *        The attack requires the attacker to physically touch or manipulate the
 *        vulnerable component. (Value: "ATTACK_VECTOR_PHYSICAL")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AttackVector_AttackVectorUnspecified
 *        Invalid value. (Value: "ATTACK_VECTOR_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *attackVector;

/**
 *  This metric measures the impact to the availability of the impacted
 *  component resulting from a successfully exploited vulnerability.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactHigh
 *        High impact. (Value: "IMPACT_HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactLow Low
 *        impact. (Value: "IMPACT_LOW")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactNone No
 *        impact. (Value: "IMPACT_NONE")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_AvailabilityImpact_ImpactUnspecified
 *        Invalid value. (Value: "IMPACT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *availabilityImpact;

/**
 *  The base score is a function of the base metric scores.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *baseScore;

/**
 *  This metric measures the impact to the confidentiality of the information
 *  resources managed by a software component due to a successfully exploited
 *  vulnerability.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactHigh
 *        High impact. (Value: "IMPACT_HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactLow
 *        Low impact. (Value: "IMPACT_LOW")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactNone
 *        No impact. (Value: "IMPACT_NONE")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_ConfidentialityImpact_ImpactUnspecified
 *        Invalid value. (Value: "IMPACT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *confidentialityImpact;

/**
 *  This metric measures the impact to integrity of a successfully exploited
 *  vulnerability.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactHigh High
 *        impact. (Value: "IMPACT_HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactLow Low
 *        impact. (Value: "IMPACT_LOW")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactNone No
 *        impact. (Value: "IMPACT_NONE")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_IntegrityImpact_ImpactUnspecified
 *        Invalid value. (Value: "IMPACT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *integrityImpact;

/**
 *  This metric describes the level of privileges an attacker must possess
 *  before successfully exploiting the vulnerability.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredHigh
 *        The attacker requires privileges that provide significant (e.g.,
 *        administrative) control over the vulnerable component allowing access
 *        to component-wide settings and files. (Value:
 *        "PRIVILEGES_REQUIRED_HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredLow
 *        The attacker requires privileges that provide basic user capabilities
 *        that could normally affect only settings and files owned by a user.
 *        Alternatively, an attacker with Low privileges has the ability to
 *        access only non-sensitive resources. (Value:
 *        "PRIVILEGES_REQUIRED_LOW")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredNone
 *        The attacker is unauthorized prior to attack, and therefore does not
 *        require any access to settings or files of the vulnerable system to
 *        carry out an attack. (Value: "PRIVILEGES_REQUIRED_NONE")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_PrivilegesRequired_PrivilegesRequiredUnspecified
 *        Invalid value. (Value: "PRIVILEGES_REQUIRED_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *privilegesRequired;

/**
 *  The Scope metric captures whether a vulnerability in one vulnerable
 *  component impacts resources in components beyond its security scope.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_Scope_ScopeChanged An exploited
 *        vulnerability can affect resources beyond the security scope managed
 *        by the security authority of the vulnerable component. (Value:
 *        "SCOPE_CHANGED")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_Scope_ScopeUnchanged An
 *        exploited vulnerability can only affect resources managed by the same
 *        security authority. (Value: "SCOPE_UNCHANGED")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_Scope_ScopeUnspecified Invalid
 *        value. (Value: "SCOPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  This metric captures the requirement for a human user, other than the
 *  attacker, to participate in the successful compromise of the vulnerable
 *  component.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_UserInteraction_UserInteractionNone
 *        The vulnerable system can be exploited without interaction from any
 *        user. (Value: "USER_INTERACTION_NONE")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_UserInteraction_UserInteractionRequired
 *        Successful exploitation of this vulnerability requires a user to take
 *        some action before the vulnerability can be exploited. (Value:
 *        "USER_INTERACTION_REQUIRED")
 *    @arg @c kGTLRSecurityCommandCenter_Cvssv3_UserInteraction_UserInteractionUnspecified
 *        Invalid value. (Value: "USER_INTERACTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *userInteraction;

@end


/**
 *  Represents database access information, such as queries. A database may be a
 *  sub-resource of an instance (as in the case of CloudSQL instances or Cloud
 *  Spanner instances), or the database instance itself. Some database resources
 *  may not have the full resource name populated because these resource types
 *  are not yet supported by Cloud Asset Inventory (e.g. CloudSQL databases). In
 *  these cases only the display name will be provided.
 */
@interface GTLRSecurityCommandCenter_Database : GTLRObject

/** The human readable name of the database the user connected to. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The target usernames/roles/groups of a SQL privilege grant (not an IAM
 *  policy change).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *grantees;

/**
 *  The full resource name of the database the user connected to, if it is
 *  supported by CAI. (https://google.aip.dev/122#full-resource-names)
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The SQL statement associated with the relevant access. */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  The username used to connect to the DB. This may not necessarily be an IAM
 *  principal, and has no required format.
 */
@property(nonatomic, copy, nullable) NSString *userName;

@end


/**
 *  Memory hash detection contributing to the binary family match.
 */
@interface GTLRSecurityCommandCenter_Detection : GTLRObject

/**
 *  The name of the binary associated with the memory hash signature detection.
 */
@property(nonatomic, copy, nullable) NSString *binary;

/**
 *  The percentage of memory page hashes in the signature that were matched.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentPagesMatched;

@end


/**
 *  Represents a connection between a source node and a destination node in this
 *  exposure path.
 */
@interface GTLRSecurityCommandCenter_Edge : GTLRObject

/** This is the resource name of the destination node. */
@property(nonatomic, copy, nullable) NSString *destination;

/** This is the resource name of the source node. */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRSecurityCommandCenter_Empty : GTLRObject
@end


/**
 *  EnvironmentVariable is a name-value pair to store environment variables for
 *  Process.
 */
@interface GTLRSecurityCommandCenter_EnvironmentVariable : GTLRObject

/** Environment variable name as a JSON encoded string. */
@property(nonatomic, copy, nullable) NSString *name;

/** Environment variable value as a JSON encoded string. */
@property(nonatomic, copy, nullable) NSString *val;

@end


/**
 *  Resource that has been exfiltrated or exfiltrated_to.
 */
@interface GTLRSecurityCommandCenter_ExfilResource : GTLRObject

/**
 *  Subcomponents of the asset that is exfiltrated - these could be URIs used
 *  during exfiltration, table names, databases, filenames, etc. For example,
 *  multiple tables may be exfiltrated from the same CloudSQL instance, or
 *  multiple files from the same Cloud Storage bucket.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *components;

/** Resource's URI (https://google.aip.dev/122#full-resource-names) */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Exfiltration represents a data exfiltration attempt of one or more sources
 *  to one or more targets. Sources represent the source of data that is
 *  exfiltrated, and Targets represents the destination the data was copied to.
 */
@interface GTLRSecurityCommandCenter_Exfiltration : GTLRObject

/**
 *  If there are multiple sources, then the data is considered "joined" between
 *  them. For instance, BigQuery can join multiple tables, and each table would
 *  be considered a source.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ExfilResource *> *sources;

/**
 *  If there are multiple targets, each target would get a complete copy of the
 *  "joined" source data.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ExfilResource *> *targets;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRSecurityCommandCenter_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  File information about the related binary/library used by an executable, or
 *  the script used by a script interpreter
 */
@interface GTLRSecurityCommandCenter_File : GTLRObject

/**
 *  Prefix of the file contents as a JSON encoded string. (Currently only
 *  populated for Malicious Script Executed findings.)
 */
@property(nonatomic, copy, nullable) NSString *contents;

/**
 *  The length in bytes of the file prefix that was hashed. If hashed_size ==
 *  size, any hashes reported represent the entire file.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hashedSize;

/**
 *  True when the hash covers only a prefix of the file.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partiallyHashed;

/** Absolute path of the file as a JSON encoded string. */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  SHA256 hash of the first hashed_size bytes of the file encoded as a hex
 *  string. If hashed_size == size, sha256 represents the SHA256 hash of the
 *  entire file.
 */
@property(nonatomic, copy, nullable) NSString *sha256;

/**
 *  Size of the file in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

@end


/**
 *  Security Command Center finding. A finding is a record of assessment data
 *  like security, risk, health, or privacy, that is ingested into Security
 *  Command Center for presentation, notification, analysis, policy testing, and
 *  enforcement. For example, a cross-site scripting (XSS) vulnerability in an
 *  App Engine application is a finding.
 */
@interface GTLRSecurityCommandCenter_Finding : GTLRObject

/**
 *  Access details associated to the Finding, such as more information on the
 *  caller, which method was accessed, from where, etc.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Access *access;

/**
 *  The canonical name of the finding. It's either
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
 *  "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or
 *  "projects/{project_number}/sources/{source_id}/findings/{finding_id}",
 *  depending on the closest CRM ancestor of the resource associated with the
 *  finding.
 */
@property(nonatomic, copy, nullable) NSString *canonicalName;

/**
 *  The additional taxonomy group within findings from a given source. This
 *  field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
 */
@property(nonatomic, copy, nullable) NSString *category;

/**
 *  Contains compliance information for security standards associated to the
 *  finding.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Compliance *> *compliances;

/**
 *  Contains information about the IP connection associated with the finding.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Connection *> *connections;

/**
 *  Output only. Map containing the points of contact for the given finding. The
 *  key represents the type of contact, while the value contains a list of all
 *  the contacts that pertain. Please refer to:
 *  https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories
 *  { "security": { "contacts": [ { "email": "person1\@company.com" }, {
 *  "email": "person2\@company.com" } ] } }
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding_Contacts *contacts;

/**
 *  Containers associated with the finding. containers provides information for
 *  both Kubernetes and non-Kubernetes containers.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Container *> *containers;

/** The time at which the finding was created in Security Command Center. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Database associated with the finding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Database *database;

/**
 *  Contains more detail about the finding.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The time the finding was first detected. If an existing finding is updated,
 *  then this is the time the update occurred. For example, if the finding
 *  represents an open firewall, this property captures the time the detector
 *  believes the firewall became open. The accuracy is determined by the
 *  detector. If the finding is later resolved, then this time reflects when the
 *  finding was resolved. This must not be set to a value greater than the
 *  current timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/** Represents exfiltration associated with the Finding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Exfiltration *exfiltration;

/**
 *  Output only. Third party SIEM/SOAR fields within SCC, contains external
 *  system information and external system finding fields.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding_ExternalSystems *externalSystems;

/**
 *  The URI that, if available, points to a web page outside of Security Command
 *  Center where additional information about the finding can be found. This
 *  field is guaranteed to be either empty or a well formed URL.
 */
@property(nonatomic, copy, nullable) NSString *externalUri;

/**
 *  The class of the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Finding_FindingClass_FindingClassUnspecified
 *        Unspecified finding class. (Value: "FINDING_CLASS_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_FindingClass_Misconfiguration
 *        Describes a potential weakness in cloud resource/asset configuration
 *        that increases risk. (Value: "MISCONFIGURATION")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_FindingClass_Observation
 *        Describes a security observation that is for informational purposes.
 *        (Value: "OBSERVATION")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_FindingClass_SccError Describes
 *        an error that prevents some SCC functionality. (Value: "SCC_ERROR")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_FindingClass_Threat Describes
 *        unwanted or malicious activity. (Value: "THREAT")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_FindingClass_Vulnerability
 *        Describes a potential weakness in software that increases risk to
 *        Confidentiality & Integrity & Availability. (Value: "VULNERABILITY")
 */
@property(nonatomic, copy, nullable) NSString *findingClass;

/** Represents IAM bindings associated with the Finding. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_IamBinding *> *iamBindings;

/**
 *  Represents what's commonly known as an Indicator of compromise (IoC) in
 *  computer forensics. This is an artifact observed on a network or in an
 *  operating system that, with high confidence, indicates a computer intrusion.
 *  Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Indicator *indicator;

/** Kubernetes resources associated with the finding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Kubernetes *kubernetes;

/**
 *  MITRE ATT&CK tactics and techniques related to this finding. See:
 *  https://attack.mitre.org
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_MitreAttack *mitreAttack;

/**
 *  Indicates the mute state of a finding (either muted, unmuted or undefined).
 *  Unlike other attributes of a finding, a finding provider shouldn't set the
 *  value of mute.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Mute_Muted Finding has been
 *        muted. (Value: "MUTED")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Mute_MuteUnspecified
 *        Unspecified. (Value: "MUTE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Mute_Undefined Finding has
 *        never been muted/unmuted. (Value: "UNDEFINED")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Mute_Unmuted Finding has been
 *        unmuted. (Value: "UNMUTED")
 */
@property(nonatomic, copy, nullable) NSString *mute;

/**
 *  First known as mute_annotation. Records additional information about the
 *  mute operation e.g. mute config that muted the finding, user who muted the
 *  finding, etc. Unlike other attributes of a finding, a finding provider
 *  shouldn't set the value of mute.
 */
@property(nonatomic, copy, nullable) NSString *muteInitiator;

/** Output only. The most recent time this finding was muted or unmuted. */
@property(nonatomic, strong, nullable) GTLRDateTime *muteUpdateTime;

/**
 *  The relative resource name of this finding. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Next steps associate to the finding. */
@property(nonatomic, copy, nullable) NSString *nextSteps;

/**
 *  The relative resource name of the source the finding belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  This field is immutable after creation time. For example:
 *  "organizations/{organization_id}/sources/{source_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Output only. The human readable display name of the finding source such as
 *  "Event Threat Detection" or "Security Health Analytics".
 */
@property(nonatomic, copy, nullable) NSString *parentDisplayName;

/** Represents operating system processes associated with the Finding. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Process *> *processes;

/**
 *  For findings on Google Cloud resources, the full resource name of the Google
 *  Cloud resource this finding is for. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name When
 *  the finding is for a non-Google Cloud resource, the resourceName can be a
 *  customer or partner defined string. This field is immutable after creation
 *  time.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Output only. User specified security marks. These marks are entirely managed
 *  by the user and come from the SecurityMarks resource that belongs to the
 *  finding.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityMarks *securityMarks;

/**
 *  The severity of the finding. This field is managed by the source that writes
 *  the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Severity_Critical
 *        Vulnerability: A critical vulnerability is easily discoverable by an
 *        external actor, exploitable, and results in the direct ability to
 *        execute arbitrary code, exfiltrate data, and otherwise gain additional
 *        access and privileges to cloud resources and workloads. Examples
 *        include publicly accessible unprotected user data, public SSH access
 *        with weak or no passwords, etc. Threat: Indicates a threat that is
 *        able to access, modify, or delete data or execute unauthorized code
 *        within existing resources. (Value: "CRITICAL")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Severity_High Vulnerability: A
 *        high risk vulnerability can be easily discovered and exploited in
 *        combination with other vulnerabilities in order to gain direct access
 *        and the ability to execute arbitrary code, exfiltrate data, and
 *        otherwise gain additional access and privileges to cloud resources and
 *        workloads. An example is a database with weak or no passwords that is
 *        only accessible internally. This database could easily be compromised
 *        by an actor that had access to the internal network. Threat: Indicates
 *        a threat that is able to create new computational resources in an
 *        environment but not able to access data or execute code in existing
 *        resources. (Value: "HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Severity_Low Vulnerability: A
 *        low risk vulnerability hampers a security organization's ability to
 *        detect vulnerabilities or active threats in their deployment, or
 *        prevents the root cause investigation of security issues. An example
 *        is monitoring and logs being disabled for resource configurations and
 *        access. Threat: Indicates a threat that has obtained minimal access to
 *        an environment but is not able to access data, execute code, or create
 *        resources. (Value: "LOW")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Severity_Medium Vulnerability:
 *        A medium risk vulnerability could be used by an actor to gain access
 *        to resources or privileges that enable them to eventually (through
 *        multiple steps or a complex exploit) gain access and the ability to
 *        execute arbitrary code or exfiltrate data. An example is a service
 *        account with access to more projects than it should have. If an actor
 *        gains access to the service account, they could potentially use that
 *        access to manipulate a project the service account was not intended
 *        to. Threat: Indicates a threat that is able to cause operational
 *        impact but may not access data or execute unauthorized code. (Value:
 *        "MEDIUM")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_Severity_SeverityUnspecified
 *        This value is used for findings when a source doesn't write a severity
 *        value. (Value: "SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Source specific properties. These properties are managed by the source that
 *  writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding_SourceProperties *sourceProperties;

/**
 *  The state of the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Finding_State_Active The finding
 *        requires attention and has not been addressed yet. (Value: "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_State_Inactive The finding has
 *        been fixed, triaged as a non-issue or otherwise addressed and is no
 *        longer active. (Value: "INACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_Finding_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Represents vulnerability specific fields like cve, cvss scores etc. CVE
 *  stands for Common Vulnerabilities and Exposures
 *  (https://cve.mitre.org/about/)
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Vulnerability *vulnerability;

@end


/**
 *  Output only. Map containing the points of contact for the given finding. The
 *  key represents the type of contact, while the value contains a list of all
 *  the contacts that pertain. Please refer to:
 *  https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories
 *  { "security": { "contacts": [ { "email": "person1\@company.com" }, {
 *  "email": "person2\@company.com" } ] } }
 *
 *  @note This class is documented as having more properties of
 *        GTLRSecurityCommandCenter_ContactDetails. Use @c -additionalJSONKeys
 *        and @c -additionalPropertyForName: to get the list of properties and
 *        then fetch them; or @c -additionalProperties to fetch them all at
 *        once.
 */
@interface GTLRSecurityCommandCenter_Finding_Contacts : GTLRObject
@end


/**
 *  Output only. Third party SIEM/SOAR fields within SCC, contains external
 *  system information and external system finding fields.
 *
 *  @note This class is documented as having more properties of
 *        GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Finding_ExternalSystems : GTLRObject
@end


/**
 *  Source specific properties. These properties are managed by the source that
 *  writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Finding_SourceProperties : GTLRObject
@end


/**
 *  Message that contains the resource name and display name of a folder
 *  resource.
 */
@interface GTLRSecurityCommandCenter_Folder : GTLRObject

/**
 *  Full resource name of this folder. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceFolder;

/** The user defined display name for this folder. */
@property(nonatomic, copy, nullable) NSString *resourceFolderDisplayName;

@end


/**
 *  Represents a geographical location for a given access.
 */
@interface GTLRSecurityCommandCenter_Geolocation : GTLRObject

/** A CLDR. */
@property(nonatomic, copy, nullable) NSString *regionCode;

@end


/**
 *  Request message for `GetIamPolicy` method.
 */
@interface GTLRSecurityCommandCenter_GetIamPolicyRequest : GTLRObject

/**
 *  OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *  `GetIamPolicy`.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GetPolicyOptions *options;

@end


/**
 *  Encapsulates settings provided to GetIamPolicy.
 */
@interface GTLRSecurityCommandCenter_GetPolicyOptions : GTLRObject

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedPolicyVersion;

@end


/**
 *  Response of asset discovery run
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse : GTLRObject

/** The duration between asset discovery run start and end */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  The state of an asset discovery run.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Completed
 *        Asset discovery run completed successfully. (Value: "COMPLETED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_StateUnspecified
 *        Asset discovery run state was unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Superseded
 *        Asset discovery run was cancelled with tasks still pending, as another
 *        run for the same organization was started with a higher priority.
 *        (Value: "SUPERSEDED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse_State_Terminated
 *        Asset discovery run was killed and terminated. (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Configures how to deliver Findings to BigQuery Instance.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport : GTLRObject

/**
 *  Output only. The time at which the big query export was created. This field
 *  is set by the server and will be ignored if provided on export on creation.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The dataset to write findings' updates to. Its format is
 *  "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset
 *  unique ID must contain only letters (a-z, A-Z), numbers (0-9), or
 *  underscores (_).
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  The description of the export (max of 1024 characters).
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Expression that defines the filter to apply across create/update events of
 *  findings. The expression is a list of zero or more restrictions combined via
 *  logical operators `AND` and `OR`. Parentheses are supported, and `OR` has
 *  higher precedence than `AND`. Restrictions have the form ` ` and may have a
 *  `-` character in front of them to indicate negation. The fields map to those
 *  defined in the corresponding resource. The supported operators are: * `=`
 *  for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`,
 *  meaning substring matching, for strings. The supported value types are: *
 *  string literals in quotes. * integer literals without quotes. * boolean
 *  literals `true` and `false` without quotes.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Output only. Email address of the user who last edited the big query export.
 *  This field is set by the server and will be ignored if provided on export
 *  creation or update.
 */
@property(nonatomic, copy, nullable) NSString *mostRecentEditor;

/**
 *  The relative resource name of this export. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name.
 *  Example format:
 *  "organizations/{organization_id}/bigQueryExports/{export_id}" Example
 *  format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format:
 *  "projects/{project_id}/bigQueryExports/{export_id}" This field is provided
 *  in responses, and is ignored when provided in create requests.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The service account that needs permission to create table,
 *  upload data to the big query dataset.
 */
@property(nonatomic, copy, nullable) NSString *principal;

/**
 *  Output only. The most recent time at which the big export was updated. This
 *  field is set by the server and will be ignored if provided on export
 *  creation or update.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Represents a Kubernetes RoleBinding or ClusterRoleBinding.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Binding : GTLRObject

/** Name for binding. */
@property(nonatomic, copy, nullable) NSString *name;

/** Namespace for binding. */
@property(nonatomic, copy, nullable) NSString *ns;

/** The Role or ClusterRole referenced by the binding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Role *role;

/**
 *  Represents the subjects(s) bound to the role. Not always available for PATCH
 *  requests.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Subject *> *subjects;

@end


/**
 *  The response to a BulkMute request. Contains the LRO information.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BulkMuteFindingsResponse : GTLRObject
@end


/**
 *  A resource that is exposed as a result of a finding.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource : GTLRObject

/** Human readable name of the resource that is exposed. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The ways in which this resource is exposed. Examples: Read, Write */
@property(nonatomic, strong, nullable) NSArray<NSString *> *methods;

/**
 *  Exposed Resource Name e.g.:
 *  `organizations/123/attackExposureResults/456/exposedResources/789`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The name of the resource that is exposed. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  The resource type of the exposed resource. See:
 *  https://cloud.google.com/asset-inventory/docs/supported-asset-types
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  How valuable this resource is.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueHigh
 *        This is a high value resource. (Value: "RESOURCE_VALUE_HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueLow
 *        This is a low value resource. (Value: "RESOURCE_VALUE_LOW")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueMedium
 *        This is a medium value resource. (Value: "RESOURCE_VALUE_MEDIUM")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource_ResourceValue_ResourceValueUnspecified
 *        The resource value isn't specified. (Value:
 *        "RESOURCE_VALUE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *resourceValue;

@end


/**
 *  A path that an attacker could take to reach an exposed resource.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposurePath : GTLRObject

/** A list of the edges between nodes in this exposure path. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Edge *> *edges;

/** The leaf node of this exposure path. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExposedResource *exposedResource;

/**
 *  Exposure Path Name e.g.:
 *  `organizations/123/attackExposureResults/456/exposurePaths/789`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** A list of nodes that exist in this exposure path. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_PathNode *> *pathNodes;

@end


/**
 *  Representation of third party SIEM/SOAR fields within SCC.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem : GTLRObject

/** References primary/secondary etc assignees in the external system. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *assignees;

/**
 *  The most recent time when the corresponding finding's ticket/tracker was
 *  updated in the external system.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *externalSystemUpdateTime;

/**
 *  Identifier that's used to track the given finding in the external system.
 */
@property(nonatomic, copy, nullable) NSString *externalUid;

/**
 *  External System Name e.g. jira, demisto, etc. e.g.:
 *  `organizations/1234/sources/5678/findings/123456/externalSystems/jira`
 *  `folders/1234/sources/5678/findings/123456/externalSystems/jira`
 *  `projects/1234/sources/5678/findings/123456/externalSystems/jira`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Most recent status of the corresponding finding's ticket/tracker in the
 *  external system.
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  A mute config is a Cloud SCC resource that contains the configuration to
 *  mute create/update events of findings.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig : GTLRObject

/**
 *  Output only. The time at which the mute config was created. This field is
 *  set by the server and will be ignored if provided on config creation.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  A description of the mute config.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The human readable name to be displayed for the mute config. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. An expression that defines the filter to apply across
 *  create/update events of findings. While creating a filter string, be mindful
 *  of the scope in which the mute configuration is being created. E.g., If a
 *  filter contains project = X but is created under the project = Y scope, it
 *  might not match any findings. The following field and operator combinations
 *  are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name:
 *  `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name:
 *  `=`, `:` * resource.folders.resource_folder: `=`, `:` *
 *  resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` *
 *  resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses:
 *  `=`, `:` * indicator.domains: `=`, `:`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Output only. Email address of the user who last edited the mute config. This
 *  field is set by the server and will be ignored if provided on config
 *  creation or update.
 */
@property(nonatomic, copy, nullable) NSString *mostRecentEditor;

/**
 *  This field will be ignored if provided on config creation. Format
 *  "organizations/{organization}/muteConfigs/{mute_config}"
 *  "folders/{folder}/muteConfigs/{mute_config}"
 *  "projects/{project}/muteConfigs/{mute_config}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The most recent time at which the mute config was updated. This
 *  field is set by the server and will be ignored if provided on config
 *  creation or update.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Cloud SCC's Notification
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1NotificationMessage : GTLRObject

/**
 *  If it's a Finding based notification config, this field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding *finding;

/** Name of the notification config that generated current notification. */
@property(nonatomic, copy, nullable) NSString *notificationConfigName;

/** The Cloud resource tied to this notification's Finding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Resource *resource;

@end


/**
 *  Security Command Center finding. A finding is a record of assessment data
 *  (security, risk, health or privacy) ingested into Security Command Center
 *  for presentation, notification, analysis, policy testing, and enforcement.
 *  For example, an XSS vulnerability in an App Engine application is a finding.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding : GTLRObject

/**
 *  The canonical name of the finding. It's either
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
 *  "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or
 *  "projects/{project_number}/sources/{source_id}/findings/{finding_id}",
 *  depending on the closest CRM ancestor of the resource associated with the
 *  finding.
 */
@property(nonatomic, copy, nullable) NSString *canonicalName;

/**
 *  The additional taxonomy group within findings from a given source. This
 *  field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
 */
@property(nonatomic, copy, nullable) NSString *category;

/** The time at which the finding was created in Security Command Center. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The time at which the event took place, or when an update to the finding
 *  occurred. For example, if the finding represents an open firewall it would
 *  capture the time the detector believes the firewall became open. The
 *  accuracy is determined by the detector. If the finding were to be resolved
 *  afterward, this time would reflect when the finding was resolved. Must not
 *  be set to a value greater than the current timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  The URI that, if available, points to a web page outside of Security Command
 *  Center where additional information about the finding can be found. This
 *  field is guaranteed to be either empty or a well formed URL.
 */
@property(nonatomic, copy, nullable) NSString *externalUri;

/**
 *  The relative resource name of this finding. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The relative resource name of the source the finding belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  This field is immutable after creation time. For example:
 *  "organizations/{organization_id}/sources/{source_id}"
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  For findings on Google Cloud resources, the full resource name of the Google
 *  Cloud resource this finding is for. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name When
 *  the finding is for a non-Google Cloud resource, the resourceName can be a
 *  customer or partner defined string. This field is immutable after creation
 *  time.
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  Output only. User specified security marks. These marks are entirely managed
 *  by the user and come from the SecurityMarks resource that belongs to the
 *  finding.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks *securityMarks;

/**
 *  The severity of the finding. This field is managed by the source that writes
 *  the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_Critical
 *        Critical severity. (Value: "CRITICAL")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_High
 *        High severity. (Value: "HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_Low
 *        Low severity. (Value: "LOW")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_Medium
 *        Medium severity. (Value: "MEDIUM")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_Severity_SeverityUnspecified
 *        No severity specified. The default value. (Value:
 *        "SEVERITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Source specific properties. These properties are managed by the source that
 *  writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_SourceProperties *sourceProperties;

/**
 *  The state of the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Active
 *        The finding requires attention and has not been addressed yet. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_Inactive
 *        The finding has been fixed, triaged as a non-issue or otherwise
 *        addressed and is no longer active. (Value: "INACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Source specific properties. These properties are managed by the source that
 *  writes the finding. The key names in the source_properties map must be
 *  between 1 and 255 characters, and must start with a letter and contain
 *  alphanumeric characters or underscores only.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding_SourceProperties : GTLRObject
@end


/**
 *  Message that contains the resource name and display name of a folder
 *  resource.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Folder : GTLRObject

/**
 *  Full resource name of this folder. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceFolder;

/** The user defined display name for this folder. */
@property(nonatomic, copy, nullable) NSString *resourceFolderDisplayName;

@end


/**
 *  Security Command Center's Notification
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1NotificationMessage : GTLRObject

/**
 *  If it's a Finding based notification config, this field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Finding *finding;

/** Name of the notification config that generated current notification. */
@property(nonatomic, copy, nullable) NSString *notificationConfigName;

/** The Cloud resource tied to the notification. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Resource *resource;

@end


/**
 *  Information related to the Google Cloud resource.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Resource : GTLRObject

/**
 *  Output only. Contains a Folder message for each folder in the assets
 *  ancestry. The first folder is the deepest nested folder, and the last folder
 *  is the folder directly under the Organization.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1Folder *> *folders;

/**
 *  The full resource name of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The full resource name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/** The human readable name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentDisplayName;

/** The full resource name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *project;

/** The project id that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectDisplayName;

@end


/**
 *  Response of asset discovery run
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse : GTLRObject

/** The duration between asset discovery run start and end */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  The state of an asset discovery run.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Completed
 *        Asset discovery run completed successfully. (Value: "COMPLETED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_StateUnspecified
 *        Asset discovery run state was unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Superseded
 *        Asset discovery run was cancelled with tasks still pending, as another
 *        run for the same organization was started with a higher priority.
 *        (Value: "SUPERSEDED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse_State_Terminated
 *        Asset discovery run was killed and terminated. (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  User specified security marks that are attached to the parent Security
 *  Command Center resource. Security marks are scoped within a Security Command
 *  Center organization -- they can be modified and viewed by all users who have
 *  proper permissions on the organization.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks : GTLRObject

/**
 *  The canonical name of the marks. Examples:
 *  "organizations/{organization_id}/assets/{asset_id}/securityMarks"
 *  "folders/{folder_id}/assets/{asset_id}/securityMarks"
 *  "projects/{project_number}/assets/{asset_id}/securityMarks"
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
 *  "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
 *  "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
 */
@property(nonatomic, copy, nullable) NSString *canonicalName;

/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows: * Keys and values are treated as case
 *  insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys
 *  must be letters, numbers, underscores, or dashes * Values have leading and
 *  trailing whitespace trimmed, remaining characters must be between 1 - 4096
 *  characters (inclusive)
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks_Marks *marks;

/**
 *  The relative resource name of the SecurityMarks. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks"
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows: * Keys and values are treated as case
 *  insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys
 *  must be letters, numbers, underscores, or dashes * Values have leading and
 *  trailing whitespace trimmed, remaining characters must be between 1 - 4096
 *  characters (inclusive)
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1p1beta1SecurityMarks_Marks : GTLRObject
@end


/**
 *  Information related to the Google Cloud resource.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Resource : GTLRObject

/** The human readable name of the resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Contains a Folder message for each folder in the assets
 *  ancestry. The first folder is the deepest nested folder, and the last folder
 *  is the folder directly under the Organization.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Folder *> *folders;

/**
 *  The full resource name of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The full resource name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parent;

/** The human readable name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentDisplayName;

/** The full resource name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *project;

/** The project ID that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectDisplayName;

/** The full resource type of the resource. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A resource value config is a mapping configuration of user's tag values to
 *  resource values. Used by the attack path simulation.
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig : GTLRObject

/** Name for the resource value config */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Apply resource_value only to resources that match resource_type.
 *  resource_type will be checked with "AND" of other resources. E.g.
 *  "storage.googleapis.com/Bucket" with resource_value "HIGH" will apply "HIGH"
 *  value only to "storage.googleapis.com/Bucket" resources.
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  Required. Resource value level this expression represents
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_High
 *        High resource value (Value: "HIGH")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_Low
 *        Low resource value (Value: "LOW")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_Medium
 *        Medium resource value (Value: "MEDIUM")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_None
 *        No resource value, e.g. ignore these resources (Value: "NONE")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig_ResourceValue_ResourceValueUnspecified
 *        Unspecific value (Value: "RESOURCE_VALUE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *resourceValue;

/**
 *  Project or folder to scope this config to. For example, "project/456" would
 *  apply this config only to resources in "project/456" scope will be checked
 *  with "AND" of other resources.
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  Required. Tag values combined with AND to check against. Values in the form
 *  "tagValues/123" E.g. [ "tagValues/123", "tagValues/456", "tagValues/789" ]
 *  https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tagValues;

@end


/**
 *  Response of asset discovery run
 */
@interface GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse : GTLRObject

/** The duration between asset discovery run start and end */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/**
 *  The state of an asset discovery run.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Completed
 *        Asset discovery run completed successfully. (Value: "COMPLETED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_StateUnspecified
 *        Asset discovery run state was unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Superseded
 *        Asset discovery run was cancelled with tasks still pending, as another
 *        run for the same organization was started with a higher priority.
 *        (Value: "SUPERSEDED")
 *    @arg @c kGTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse_State_Terminated
 *        Asset discovery run was killed and terminated. (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Request message for grouping by assets.
 */
@interface GTLRSecurityCommandCenter_GroupAssetsRequest : GTLRObject

/**
 *  When compare_duration is set, the GroupResult's "state_change" property is
 *  updated to indicate whether the asset was added, removed, or remained
 *  present during the compare_duration period of time that precedes the
 *  read_time. This is the time between (read_time - compare_duration) and
 *  read_time. The state change value is derived based on the presence of the
 *  asset at the two points in time. Intermediate state changes between the two
 *  times don't affect the result. For example, the results aren't affected if
 *  the asset is removed and re-created again. Possible "state_change" values
 *  when compare_duration is specified: * "ADDED": indicates that the asset was
 *  not present at the start of compare_duration, but present at reference_time.
 *  * "REMOVED": indicates that the asset was present at the start of
 *  compare_duration, but not present at reference_time. * "ACTIVE": indicates
 *  that the asset was present at both the start and the end of the time period
 *  defined by compare_duration and reference_time. If compare_duration is not
 *  specified, then the only possible state_change is "UNUSED", which will be
 *  the state_change set for all assets present at read_time. If this field is
 *  set then `state_change` must be a specified field in `group_by`.
 */
@property(nonatomic, strong, nullable) GTLRDuration *compareDuration;

/**
 *  Expression that defines the filter to apply across assets. The expression is
 *  a list of zero or more restrictions combined via logical operators `AND` and
 *  `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`.
 *  Restrictions have the form ` ` and may have a `-` character in front of them
 *  to indicate negation. The fields map to those defined in the Asset resource.
 *  Examples include: * name * security_center_properties.resource_name *
 *  resource_properties.a_property * security_marks.marks.marka The supported
 *  operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer
 *  values. * `:`, meaning substring matching, for strings. The supported value
 *  types are: * string literals in quotes. * integer literals without quotes. *
 *  boolean literals `true` and `false` without quotes. The following field and
 *  operator combinations are supported: * name: `=` * update_time: `=`, `>`,
 *  `<`, `>=`, `<=` Usage: This should be milliseconds since epoch or an RFC3339
 *  string. Examples: `update_time = "2019-06-10T16:07:18-07:00"` `update_time =
 *  1560208038000` * create_time: `=`, `>`, `<`, `>=`, `<=` Usage: This should
 *  be milliseconds since epoch or an RFC3339 string. Examples: `create_time =
 *  "2019-06-10T16:07:18-07:00"` `create_time = 1560208038000` *
 *  iam_policy.policy_blob: `=`, `:` * resource_properties: `=`, `:`, `>`, `<`,
 *  `>=`, `<=` * security_marks.marks: `=`, `:` *
 *  security_center_properties.resource_name: `=`, `:` *
 *  security_center_properties.resource_display_name: `=`, `:` *
 *  security_center_properties.resource_type: `=`, `:` *
 *  security_center_properties.resource_parent: `=`, `:` *
 *  security_center_properties.resource_parent_display_name: `=`, `:` *
 *  security_center_properties.resource_project: `=`, `:` *
 *  security_center_properties.resource_project_display_name: `=`, `:` *
 *  security_center_properties.resource_owners: `=`, `:` For example,
 *  `resource_properties.size = 100` is a valid filter string. Use a partial
 *  match on the empty string to filter based on a property existing:
 *  `resource_properties.my_property : ""` Use a negated partial match on the
 *  empty string to filter based on a property not existing:
 *  `-resource_properties.my_property : ""`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Required. Expression that defines what assets fields to use for grouping.
 *  The string value should follow SQL syntax: comma separated list of fields.
 *  For example:
 *  "security_center_properties.resource_project,security_center_properties.project".
 *  The following fields are supported when compare_duration is not set: *
 *  security_center_properties.resource_project *
 *  security_center_properties.resource_project_display_name *
 *  security_center_properties.resource_type *
 *  security_center_properties.resource_parent *
 *  security_center_properties.resource_parent_display_name The following fields
 *  are supported when compare_duration is set: *
 *  security_center_properties.resource_type *
 *  security_center_properties.resource_project_display_name *
 *  security_center_properties.resource_parent_display_name
 */
@property(nonatomic, copy, nullable) NSString *groupBy;

/**
 *  The maximum number of results to return in a single response. Default is 10,
 *  minimum is 1, maximum is 1000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  The value returned by the last `GroupAssetsResponse`; indicates that this is
 *  a continuation of a prior `GroupAssets` call, and that the system should
 *  return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Time used as a reference point when filtering assets. The filter is limited
 *  to assets existing at the supplied time and their values are those at that
 *  specific time. Absence of this field will default to the API's version of
 *  NOW.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

@end


/**
 *  Response message for grouping by assets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "groupByResults" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRSecurityCommandCenter_GroupAssetsResponse : GTLRCollectionObject

/**
 *  Group results. There exists an element for each existing unique combination
 *  of property/values. The element contains a count for the number of times
 *  those specific property/values appear.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GroupResult *> *groupByResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the groupBy request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of results matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Request message for grouping by findings.
 */
@interface GTLRSecurityCommandCenter_GroupFindingsRequest : GTLRObject

/**
 *  When compare_duration is set, the GroupResult's "state_change" attribute is
 *  updated to indicate whether the finding had its state changed, the finding's
 *  state remained unchanged, or if the finding was added during the
 *  compare_duration period of time that precedes the read_time. This is the
 *  time between (read_time - compare_duration) and read_time. The state_change
 *  value is derived based on the presence and state of the finding at the two
 *  points in time. Intermediate state changes between the two times don't
 *  affect the result. For example, the results aren't affected if the finding
 *  is made inactive and then active again. Possible "state_change" values when
 *  compare_duration is specified: * "CHANGED": indicates that the finding was
 *  present and matched the given filter at the start of compare_duration, but
 *  changed its state at read_time. * "UNCHANGED": indicates that the finding
 *  was present and matched the given filter at the start of compare_duration
 *  and did not change state at read_time. * "ADDED": indicates that the finding
 *  did not match the given filter or was not present at the start of
 *  compare_duration, but was present at read_time. * "REMOVED": indicates that
 *  the finding was present and matched the filter at the start of
 *  compare_duration, but did not match the filter at read_time. If
 *  compare_duration is not specified, then the only possible state_change is
 *  "UNUSED", which will be the state_change set for all findings present at
 *  read_time. If this field is set then `state_change` must be a specified
 *  field in `group_by`.
 */
@property(nonatomic, strong, nullable) GTLRDuration *compareDuration;

/**
 *  Expression that defines the filter to apply across findings. The expression
 *  is a list of one or more restrictions combined via logical operators `AND`
 *  and `OR`. Parentheses are supported, and `OR` has higher precedence than
 *  `AND`. Restrictions have the form ` ` and may have a `-` character in front
 *  of them to indicate negation. Examples include: * name *
 *  source_properties.a_property * security_marks.marks.marka The supported
 *  operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer
 *  values. * `:`, meaning substring matching, for strings. The supported value
 *  types are: * string literals in quotes. * integer literals without quotes. *
 *  boolean literals `true` and `false` without quotes. The following field and
 *  operator combinations are supported: * name: `=` * parent: `=`, `:` *
 *  resource_name: `=`, `:` * state: `=`, `:` * category: `=`, `:` *
 *  external_uri: `=`, `:` * event_time: `=`, `>`, `<`, `>=`, `<=` Usage: This
 *  should be milliseconds since epoch or an RFC3339 string. Examples:
 *  `event_time = "2019-06-10T16:07:18-07:00"` `event_time = 1560208038000` *
 *  severity: `=`, `:` * workflow_state: `=`, `:` * security_marks.marks: `=`,
 *  `:` * source_properties: `=`, `:`, `>`, `<`, `>=`, `<=` For example,
 *  `source_properties.size = 100` is a valid filter string. Use a partial match
 *  on the empty string to filter based on a property existing:
 *  `source_properties.my_property : ""` Use a negated partial match on the
 *  empty string to filter based on a property not existing:
 *  `-source_properties.my_property : ""` * resource: * resource.name: `=`, `:`
 *  * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` *
 *  resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` *
 *  resource.type: `=`, `:`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Required. Expression that defines what assets fields to use for grouping
 *  (including `state_change`). The string value should follow SQL syntax: comma
 *  separated list of fields. For example: "parent,resource_name". The following
 *  fields are supported: * resource_name * category * state * parent * severity
 *  The following fields are supported when compare_duration is set: *
 *  state_change
 */
@property(nonatomic, copy, nullable) NSString *groupBy;

/**
 *  The maximum number of results to return in a single response. Default is 10,
 *  minimum is 1, maximum is 1000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  The value returned by the last `GroupFindingsResponse`; indicates that this
 *  is a continuation of a prior `GroupFindings` call, and that the system
 *  should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Time used as a reference point when filtering findings. The filter is
 *  limited to findings existing at the supplied time and their values are those
 *  at that specific time. Absence of this field will default to the API's
 *  version of NOW.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

@end


/**
 *  Response message for group by findings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "groupByResults" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRSecurityCommandCenter_GroupFindingsResponse : GTLRCollectionObject

/**
 *  Group results. There exists an element for each existing unique combination
 *  of property/values. The element contains a count for the number of times
 *  those specific property/values appear.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GroupResult *> *groupByResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the groupBy request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of results matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Result containing the properties and count of a groupBy request.
 */
@interface GTLRSecurityCommandCenter_GroupResult : GTLRObject

/**
 *  Total count of resources for the given properties.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** Properties matching the groupBy fields in the request. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_GroupResult_Properties *properties;

@end


/**
 *  Properties matching the groupBy fields in the request.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_GroupResult_Properties : GTLRObject
@end


/**
 *  Represents a particular IAM binding, which captures a member's role
 *  addition, removal, or state.
 */
@interface GTLRSecurityCommandCenter_IamBinding : GTLRObject

/**
 *  The action that was performed on a Binding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_IamBinding_Action_ActionUnspecified
 *        Unspecified. (Value: "ACTION_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_IamBinding_Action_Add Addition of a
 *        Binding. (Value: "ADD")
 *    @arg @c kGTLRSecurityCommandCenter_IamBinding_Action_Remove Removal of a
 *        Binding. (Value: "REMOVE")
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  A single identity requesting access for a Cloud Platform resource, e.g.
 *  "foo\@google.com".
 */
@property(nonatomic, copy, nullable) NSString *member;

/**
 *  Role that is assigned to "members". For example, "roles/viewer",
 *  "roles/editor", or "roles/owner".
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  Cloud IAM Policy information associated with the Google Cloud resource
 *  described by the Security Command Center asset. This information is managed
 *  and defined by the Google Cloud resource and cannot be modified by the user.
 */
@interface GTLRSecurityCommandCenter_IamPolicy : GTLRObject

/**
 *  The JSON representation of the Policy associated with the asset. See
 *  https://cloud.google.com/iam/reference/rest/v1/Policy for format details.
 */
@property(nonatomic, copy, nullable) NSString *policyBlob;

@end


/**
 *  Represents what's commonly known as an Indicator of compromise (IoC) in
 *  computer forensics. This is an artifact observed on a network or in an
 *  operating system that, with high confidence, indicates a computer intrusion.
 *  Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise
 */
@interface GTLRSecurityCommandCenter_Indicator : GTLRObject

/** List of domains associated to the Finding. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *domains;

/** List of ip addresses associated to the Finding. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ipAddresses;

/**
 *  The list of matched signatures indicating that the given process is present
 *  in the environment.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ProcessSignature *> *signatures;

/** The list of URIs associated to the Findings. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uris;

@end


/**
 *  Kubernetes related attributes.
 */
@interface GTLRSecurityCommandCenter_Kubernetes : GTLRObject

/**
 *  Provides information on any Kubernetes access reviews (i.e. privilege
 *  checks) relevant to the finding.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_AccessReview *> *accessReviews;

/**
 *  Provides Kubernetes role binding information for findings that involve
 *  RoleBindings or ClusterRoleBindings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1Binding *> *bindings;

/**
 *  GKE Node Pools associated with the finding. This field will contain NodePool
 *  information for each Node, when it is available.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_NodePool *> *nodePools;

/** Provides Kubernetes Node information. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Node *> *nodes;

/**
 *  Kubernetes Pods associated with the finding. This field will contain Pod
 *  records for each container that is owned by a Pod.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Pod *> *pods;

/**
 *  Provides Kubernetes role information for findings that involve Roles or
 *  ClusterRoles.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Role *> *roles;

@end


/**
 *  Label represents a generic name=value label. Label has separate name and
 *  value fields to support filtering with contains().
 */
@interface GTLRSecurityCommandCenter_Label : GTLRObject

/** Label name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Label value. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Response message for listing assets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "listAssetsResults" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRSecurityCommandCenter_ListAssetsResponse : GTLRCollectionObject

/**
 *  Assets matching the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ListAssetsResult *> *listAssetsResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the list request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of assets matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Result containing the Asset and its State.
 */
@interface GTLRSecurityCommandCenter_ListAssetsResult : GTLRObject

/** Asset matching the search request. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Asset *asset;

/**
 *  State change of the asset between the points in time.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Active
 *        Asset was present at both point(s) in time. (Value: "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Added
 *        Asset was added between the points in time. (Value: "ADDED")
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Removed
 *        Asset was removed between the points in time. (Value: "REMOVED")
 *    @arg @c kGTLRSecurityCommandCenter_ListAssetsResult_StateChange_Unused
 *        State change is unused, this is the canonical default for this enum.
 *        (Value: "UNUSED")
 */
@property(nonatomic, copy, nullable) NSString *stateChange;

@end


/**
 *  Response message for listing BigQuery exports.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "bigQueryExports" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRSecurityCommandCenter_ListBigQueryExportsResponse : GTLRCollectionObject

/**
 *  The BigQuery exports from the specified parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport *> *bigQueryExports;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing findings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "listFindingsResults" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRSecurityCommandCenter_ListFindingsResponse : GTLRCollectionObject

/**
 *  Findings matching the list request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_ListFindingsResult *> *listFindingsResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Time used for executing the list request. */
@property(nonatomic, strong, nullable) GTLRDateTime *readTime;

/**
 *  The total number of findings matching the query.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  Result containing the Finding and its StateChange.
 */
@interface GTLRSecurityCommandCenter_ListFindingsResult : GTLRObject

/** Finding matching the search request. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Finding *finding;

/** Output only. Resource that is associated with this finding. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Resource *resource;

/**
 *  State change of the finding between the points in time.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Added
 *        The finding was created between the points in time. (Value: "ADDED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Changed
 *        The finding has changed state in some way between the points in time
 *        and existed at both points. (Value: "CHANGED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Removed
 *        The finding at timestamp does not match the filter specified, but it
 *        did at timestamp - compare_duration. (Value: "REMOVED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unchanged
 *        The finding has not changed state between the points in time and
 *        existed at both points. (Value: "UNCHANGED")
 *    @arg @c kGTLRSecurityCommandCenter_ListFindingsResult_StateChange_Unused
 *        State change is unused, this is the canonical default for this enum.
 *        (Value: "UNUSED")
 */
@property(nonatomic, copy, nullable) NSString *stateChange;

@end


/**
 *  Response message for listing mute configs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "muteConfigs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityCommandCenter_ListMuteConfigsResponse : GTLRCollectionObject

/**
 *  The mute configs from the specified parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig *> *muteConfigs;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing notification configs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "notificationConfigs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRSecurityCommandCenter_ListNotificationConfigsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Notification configs belonging to the requested parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_NotificationConfig *> *notificationConfigs;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityCommandCenter_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Operation *> *operations;

@end


/**
 *  Response message for listing sources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRSecurityCommandCenter_ListSourcesResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Sources belonging to the requested parent.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Source *> *sources;

@end


/**
 *  A signature corresponding to memory page hashes.
 */
@interface GTLRSecurityCommandCenter_MemoryHashSignature : GTLRObject

/** The binary family. */
@property(nonatomic, copy, nullable) NSString *binaryFamily;

/**
 *  The list of memory hash detections contributing to the binary family match.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Detection *> *detections;

@end


/**
 *  MITRE ATT&CK tactics and techniques related to this finding. See:
 *  https://attack.mitre.org
 */
@interface GTLRSecurityCommandCenter_MitreAttack : GTLRObject

/** Additional MITRE ATT&CK tactics related to this finding, if any. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalTactics;

/**
 *  Additional MITRE ATT&CK techniques related to this finding, if any, along
 *  with any of their respective parent techniques.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalTechniques;

/**
 *  The MITRE ATT&CK tactic most closely represented by this finding, if any.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Collection
 *        TA0009 (Value: "COLLECTION")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_CommandAndControl
 *        TA0011 (Value: "COMMAND_AND_CONTROL")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_CredentialAccess
 *        TA0006 (Value: "CREDENTIAL_ACCESS")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_DefenseEvasion
 *        TA0005 (Value: "DEFENSE_EVASION")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Discovery
 *        TA0007 (Value: "DISCOVERY")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Execution
 *        TA0002 (Value: "EXECUTION")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Exfiltration
 *        TA0010 (Value: "EXFILTRATION")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Impact TA0040
 *        (Value: "IMPACT")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_InitialAccess
 *        TA0001 (Value: "INITIAL_ACCESS")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_LateralMovement
 *        TA0008 (Value: "LATERAL_MOVEMENT")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Persistence
 *        TA0003 (Value: "PERSISTENCE")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_PrivilegeEscalation
 *        TA0004 (Value: "PRIVILEGE_ESCALATION")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_Reconnaissance
 *        TA0043 (Value: "RECONNAISSANCE")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_ResourceDevelopment
 *        TA0042 (Value: "RESOURCE_DEVELOPMENT")
 *    @arg @c kGTLRSecurityCommandCenter_MitreAttack_PrimaryTactic_TacticUnspecified
 *        Unspecified value. (Value: "TACTIC_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *primaryTactic;

/**
 *  The MITRE ATT&CK technique most closely represented by this finding, if any.
 *  primary_techniques is a repeated field because there are multiple levels of
 *  MITRE ATT&CK techniques. If the technique most closely represented by this
 *  finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the
 *  sub-technique and its parent technique(s) will be listed (e.g.
 *  `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *primaryTechniques;

/** The MITRE ATT&CK version referenced by the above fields. E.g. "8". */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Kubernetes Nodes associated with the finding.
 */
@interface GTLRSecurityCommandCenter_Node : GTLRObject

/** Full Resource name of the Compute Engine VM running the cluster node. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Provides GKE Node Pool information.
 */
@interface GTLRSecurityCommandCenter_NodePool : GTLRObject

/** Kubernetes Node pool name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Nodes associated with the finding. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Node *> *nodes;

@end


/**
 *  Cloud Security Command Center (Cloud SCC) notification configs. A
 *  notification config is a Cloud SCC resource that contains the configuration
 *  to send notifications for create/update events of findings, assets and etc.
 */
@interface GTLRSecurityCommandCenter_NotificationConfig : GTLRObject

/**
 *  The description of the notification config (max of 1024 characters).
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The relative resource name of this notification config. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example:
 *  "organizations/{organization_id}/notificationConfigs/notify_public_bucket".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The Pub/Sub topic to send notifications to. Its format is
 *  "projects/[project_id]/topics/[topic]".
 */
@property(nonatomic, copy, nullable) NSString *pubsubTopic;

/**
 *  Output only. The service account that needs "pubsub.topics.publish"
 *  permission to publish to the Pub/Sub topic.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/** The config for triggering streaming-based notifications. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_StreamingConfig *streamingConfig;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRSecurityCommandCenter_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Operation_Response : GTLRObject
@end


/**
 *  User specified settings that are attached to the Security Command Center
 *  organization.
 */
@interface GTLRSecurityCommandCenter_OrganizationSettings : GTLRObject

/** The configuration used for Asset Discovery runs. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_AssetDiscoveryConfig *assetDiscoveryConfig;

/**
 *  A flag that indicates if Asset Discovery should be enabled. If the flag is
 *  set to `true`, then discovery of assets will occur. If it is set to `false,
 *  all historical assets will remain, but discovery of future assets will not
 *  occur.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableAssetDiscovery;

/**
 *  The relative resource name of the settings. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example: "organizations/{organization_id}/organizationSettings".
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Represents one point that an attacker passes through in this exposure path.
 */
@interface GTLRSecurityCommandCenter_PathNode : GTLRObject

/** The findings associated with this node in the exposure path. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_AssociatedFinding *> *associatedFindings;

/** Human readable name of this resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The name of the resource at this point in the exposure path. The format of
 *  the name is:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  The resource type of this resource. See:
 *  https://cloud.google.com/asset-inventory/docs/supported-asset-types
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

@end


/**
 *  Kubernetes Pod.
 */
@interface GTLRSecurityCommandCenter_Pod : GTLRObject

/** Pod containers associated with this finding, if any. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Container *> *containers;

/**
 *  Pod labels. For Kubernetes containers, these are applied to the container.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Label *> *labels;

/** Kubernetes Pod name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Kubernetes Pod namespace. */
@property(nonatomic, copy, nullable) NSString *ns;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRSecurityCommandCenter_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Represents an operating system process.
 */
@interface GTLRSecurityCommandCenter_Process : GTLRObject

/** Process arguments as JSON encoded strings. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/**
 *  True if `args` is incomplete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *argumentsTruncated;

/** File information for the process executable. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_File *binary;

/** Process environment variables. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_EnvironmentVariable *> *envVariables;

/**
 *  True if `env_variables` is incomplete.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *envVariablesTruncated;

/** File information for libraries loaded by the process. */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_File *> *libraries;

/**
 *  The process name visible in utilities like `top` and `ps`; it can be
 *  accessed via `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The parent process id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *parentPid;

/**
 *  The process id.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pid;

/**
 *  When the process represents the invocation of a script, `binary` provides
 *  information about the interpreter while `script` provides information about
 *  the script file provided to the interpreter.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_File *script;

@end


/**
 *  Indicates what signature matched this process.
 */
@interface GTLRSecurityCommandCenter_ProcessSignature : GTLRObject

/** Signature indicating that a binary family was matched. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_MemoryHashSignature *memoryHashSignature;

/** Signature indicating that a YARA rule was matched. */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_YaraRuleSignature *yaraRuleSignature;

@end


/**
 *  Additional Links
 */
@interface GTLRSecurityCommandCenter_Reference : GTLRObject

/** Source of the reference e.g. NVD */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Uri for the mentioned source e.g.
 *  https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Information related to the Google Cloud resource that is associated with
 *  this finding.
 */
@interface GTLRSecurityCommandCenter_Resource : GTLRObject

/** The human readable name of the resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Contains a Folder message for each folder in the assets ancestry. The first
 *  folder is the deepest nested folder, and the last folder is the folder
 *  directly under the Organization.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Folder *> *folders;

/**
 *  The full resource name of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The human readable name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentDisplayName;

/** The full resource name of resource's parent. */
@property(nonatomic, copy, nullable) NSString *parentName;

/** The project ID that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectDisplayName;

/** The full resource name of project that the resource belongs to. */
@property(nonatomic, copy, nullable) NSString *projectName;

/** The full resource type of the resource. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Kubernetes Role or ClusterRole.
 */
@interface GTLRSecurityCommandCenter_Role : GTLRObject

/**
 *  Role type.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Role_Kind_ClusterRole Kubernetes
 *        ClusterRole. (Value: "CLUSTER_ROLE")
 *    @arg @c kGTLRSecurityCommandCenter_Role_Kind_KindUnspecified Role type is
 *        not specified. (Value: "KIND_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_Role_Kind_Role Kubernetes Role. (Value:
 *        "ROLE")
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Role name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Role namespace. */
@property(nonatomic, copy, nullable) NSString *ns;

@end


/**
 *  Request message for running asset discovery for an organization.
 */
@interface GTLRSecurityCommandCenter_RunAssetDiscoveryRequest : GTLRObject
@end


/**
 *  Security Command Center managed properties. These properties are managed by
 *  Security Command Center and cannot be modified by the user.
 */
@interface GTLRSecurityCommandCenter_SecurityCenterProperties : GTLRObject

/**
 *  Contains a Folder message for each folder in the assets ancestry. The first
 *  folder is the deepest nested folder, and the last folder is the folder
 *  directly under the Organization.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Folder *> *folders;

/** The user defined display name for this resource. */
@property(nonatomic, copy, nullable) NSString *resourceDisplayName;

/**
 *  The full resource name of the Google Cloud resource this asset represents.
 *  This field is immutable after create time. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/** Owners of the Google Cloud resource. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourceOwners;

/**
 *  The full resource name of the immediate parent of the resource. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceParent;

/** The user defined display name for the parent of this resource. */
@property(nonatomic, copy, nullable) NSString *resourceParentDisplayName;

/**
 *  The full resource name of the project the resource belongs to. See:
 *  https://cloud.google.com/apis/design/resource_names#full_resource_name
 */
@property(nonatomic, copy, nullable) NSString *resourceProject;

/** The user defined display name for the project of this resource. */
@property(nonatomic, copy, nullable) NSString *resourceProjectDisplayName;

/**
 *  The type of the Google Cloud resource. Examples include: APPLICATION,
 *  PROJECT, and ORGANIZATION. This is a case insensitive field defined by
 *  Security Command Center and/or the producer of the resource and is immutable
 *  after create time.
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

@end


/**
 *  User specified security marks that are attached to the parent Security
 *  Command Center resource. Security marks are scoped within a Security Command
 *  Center organization -- they can be modified and viewed by all users who have
 *  proper permissions on the organization.
 */
@interface GTLRSecurityCommandCenter_SecurityMarks : GTLRObject

/**
 *  The canonical name of the marks. Examples:
 *  "organizations/{organization_id}/assets/{asset_id}/securityMarks"
 *  "folders/{folder_id}/assets/{asset_id}/securityMarks"
 *  "projects/{project_number}/assets/{asset_id}/securityMarks"
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
 *  "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
 *  "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
 */
@property(nonatomic, copy, nullable) NSString *canonicalName;

/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows: * Keys and values are treated as case
 *  insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys
 *  must be letters, numbers, underscores, or dashes * Values have leading and
 *  trailing whitespace trimmed, remaining characters must be between 1 - 4096
 *  characters (inclusive)
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_SecurityMarks_Marks *marks;

/**
 *  The relative resource name of the SecurityMarks. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks"
 *  "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Mutable user specified security marks belonging to the parent resource.
 *  Constraints are as follows: * Keys and values are treated as case
 *  insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys
 *  must be letters, numbers, underscores, or dashes * Values have leading and
 *  trailing whitespace trimmed, remaining characters must be between 1 - 4096
 *  characters (inclusive)
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_SecurityMarks_Marks : GTLRObject
@end


/**
 *  Identity delegation history of an authenticated service account.
 */
@interface GTLRSecurityCommandCenter_ServiceAccountDelegationInfo : GTLRObject

/** The email address of a Google account. */
@property(nonatomic, copy, nullable) NSString *principalEmail;

/**
 *  A string representing the principal_subject associated with the identity. As
 *  compared to `principal_email`, supports principals that aren't associated
 *  with email addresses, such as third party principals. For most identities,
 *  the format will be `principal://iam.googleapis.com/{identity pool
 *  name}/subjects/{subject}` except for some GKE identities (GKE_WORKLOAD,
 *  FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format
 *  `serviceAccount:{identity pool name}[{subject}]`
 */
@property(nonatomic, copy, nullable) NSString *principalSubject;

@end


/**
 *  Request message for updating a finding's state.
 */
@interface GTLRSecurityCommandCenter_SetFindingStateRequest : GTLRObject

/** Required. The time at which the updated state takes effect. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Required. The desired State of the finding.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Active The
 *        finding requires attention and has not been addressed yet. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_SetFindingStateRequest_State_Inactive
 *        The finding has been fixed, triaged as a non-issue or otherwise
 *        addressed and is no longer active. (Value: "INACTIVE")
 *    @arg @c kGTLRSecurityCommandCenter_SetFindingStateRequest_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRSecurityCommandCenter_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Request message for updating a finding's mute status.
 */
@interface GTLRSecurityCommandCenter_SetMuteRequest : GTLRObject

/**
 *  Required. The desired state of the Mute.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_SetMuteRequest_Mute_Muted Finding has
 *        been muted. (Value: "MUTED")
 *    @arg @c kGTLRSecurityCommandCenter_SetMuteRequest_Mute_MuteUnspecified
 *        Unspecified. (Value: "MUTE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_SetMuteRequest_Mute_Undefined Finding
 *        has never been muted/unmuted. (Value: "UNDEFINED")
 *    @arg @c kGTLRSecurityCommandCenter_SetMuteRequest_Mute_Unmuted Finding has
 *        been unmuted. (Value: "UNMUTED")
 */
@property(nonatomic, copy, nullable) NSString *mute;

@end


/**
 *  Security Command Center finding source. A finding source is an entity or a
 *  mechanism that can produce a finding. A source is like a container of
 *  findings that come from the same scanner, logger, monitor, and other tools.
 */
@interface GTLRSecurityCommandCenter_Source : GTLRObject

/**
 *  The canonical name of the finding. It's either
 *  "organizations/{organization_id}/sources/{source_id}",
 *  "folders/{folder_id}/sources/{source_id}" or
 *  "projects/{project_number}/sources/{source_id}", depending on the closest
 *  CRM ancestor of the resource associated with the finding.
 */
@property(nonatomic, copy, nullable) NSString *canonicalName;

/**
 *  The description of the source (max of 1024 characters). Example: "Web
 *  Security Scanner is a web security scanner for common vulnerabilities in App
 *  Engine applications. It can automatically scan and detect four common
 *  vulnerabilities, including cross-site-scripting (XSS), Flash injection,
 *  mixed content (HTTP in HTTPS), and outdated or insecure libraries."
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The source's display name. A source's display name must be unique amongst
 *  its siblings, for example, two sources with the same parent can't share the
 *  same display name. The display name must have a length between 1 and 64
 *  characters (inclusive).
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The relative resource name of this source. See:
 *  https://cloud.google.com/apis/design/resource_names#relative_resource_name
 *  Example: "organizations/{organization_id}/sources/{source_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRSecurityCommandCenter_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRSecurityCommandCenter_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRSecurityCommandCenter_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRSecurityCommandCenter_Status_Details_Item : GTLRObject
@end


/**
 *  The config for streaming-based notifications, which send each event as soon
 *  as it is detected.
 */
@interface GTLRSecurityCommandCenter_StreamingConfig : GTLRObject

/**
 *  Expression that defines the filter to apply across create/update events of
 *  assets or findings as specified by the event type. The expression is a list
 *  of zero or more restrictions combined via logical operators `AND` and `OR`.
 *  Parentheses are supported, and `OR` has higher precedence than `AND`.
 *  Restrictions have the form ` ` and may have a `-` character in front of them
 *  to indicate negation. The fields map to those defined in the corresponding
 *  resource. The supported operators are: * `=` for all value types. * `>`,
 *  `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for
 *  strings. The supported value types are: * string literals in quotes. *
 *  integer literals without quotes. * boolean literals `true` and `false`
 *  without quotes.
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  Represents a Kubernetes Subject.
 */
@interface GTLRSecurityCommandCenter_Subject : GTLRObject

/**
 *  Authentication type for subject.
 *
 *  Likely values:
 *    @arg @c kGTLRSecurityCommandCenter_Subject_Kind_AuthTypeUnspecified
 *        Authentication is not specified. (Value: "AUTH_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRSecurityCommandCenter_Subject_Kind_Group Collection of users.
 *        (Value: "GROUP")
 *    @arg @c kGTLRSecurityCommandCenter_Subject_Kind_Serviceaccount Users
 *        managed by Kubernetes API with credentials stored as Secrets. (Value:
 *        "SERVICEACCOUNT")
 *    @arg @c kGTLRSecurityCommandCenter_Subject_Kind_User User with valid
 *        certificate. (Value: "USER")
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Name for subject. */
@property(nonatomic, copy, nullable) NSString *name;

/** Namespace for subject. */
@property(nonatomic, copy, nullable) NSString *ns;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRSecurityCommandCenter_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRSecurityCommandCenter_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
 */
@interface GTLRSecurityCommandCenter_Vulnerability : GTLRObject

/**
 *  CVE stands for Common Vulnerabilities and Exposures
 *  (https://cve.mitre.org/about/)
 */
@property(nonatomic, strong, nullable) GTLRSecurityCommandCenter_Cve *cve;

@end


/**
 *  A signature corresponding to a YARA rule.
 */
@interface GTLRSecurityCommandCenter_YaraRuleSignature : GTLRObject

/** The name of the YARA rule. */
@property(nonatomic, copy, nullable) NSString *yaraRule;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
