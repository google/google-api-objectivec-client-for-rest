// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Security Command Center API (securitycenter/v1)
// Description:
//   Security Command Center API provides access to temporal views of assets and
//   findings within an organization.
// Documentation:
//   https://cloud.google.com/security-command-center

#import <GoogleAPIClientForREST/GTLRSecurityCommandCenterQuery.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation GTLRSecurityCommandCenterQuery

@dynamic fields;

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersAssetsGroup

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GroupAssetsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:group";
  GTLRSecurityCommandCenterQuery_FoldersAssetsGroup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GroupAssetsResponse class];
  query.loggingName = @"securitycenter.folders.assets.group";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersAssetsList

@dynamic compareDuration, fieldMask, filter, orderBy, pageSize, pageToken,
         parent, readTime;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets";
  GTLRSecurityCommandCenterQuery_FoldersAssetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListAssetsResponse class];
  query.loggingName = @"securitycenter.folders.assets.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersAssetsUpdateSecurityMarks

@dynamic name, startTime, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SecurityMarks *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersAssetsUpdateSecurityMarks *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_SecurityMarks class];
  query.loggingName = @"securitycenter.folders.assets.updateSecurityMarks";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsCreate

@dynamic bigQueryExportId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/bigQueryExports";
  GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.folders.bigQueryExports.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.folders.bigQueryExports.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.folders.bigQueryExports.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/bigQueryExports";
  GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListBigQueryExportsResponse class];
  query.loggingName = @"securitycenter.folders.bigQueryExports.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersBigQueryExportsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.folders.bigQueryExports.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersFindingsBulkMute

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_BulkMuteFindingsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings:bulkMute";
  GTLRSecurityCommandCenterQuery_FoldersFindingsBulkMute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Operation class];
  query.loggingName = @"securitycenter.folders.findings.bulkMute";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersMuteConfigsCreate

@dynamic muteConfigId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/muteConfigs";
  GTLRSecurityCommandCenterQuery_FoldersMuteConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.folders.muteConfigs.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersMuteConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersMuteConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.folders.muteConfigs.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersMuteConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersMuteConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.folders.muteConfigs.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersMuteConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/muteConfigs";
  GTLRSecurityCommandCenterQuery_FoldersMuteConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListMuteConfigsResponse class];
  query.loggingName = @"securitycenter.folders.muteConfigs.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersMuteConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersMuteConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.folders.muteConfigs.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsCreate

@dynamic configId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_NotificationConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notificationConfigs";
  GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.folders.notificationConfigs.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.folders.notificationConfigs.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.folders.notificationConfigs.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notificationConfigs";
  GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListNotificationConfigsResponse class];
  query.loggingName = @"securitycenter.folders.notificationConfigs.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_NotificationConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersNotificationConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.folders.notificationConfigs.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.customModules.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.customModules.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.customModules.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.customModules.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesListDescendant

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules:listDescendant";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesListDescendant *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListDescendantSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.customModules.listDescendant";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsCustomModulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.customModules.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsEffectiveCustomModulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsEffectiveCustomModulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.effectiveCustomModules.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsEffectiveCustomModulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/effectiveCustomModules";
  GTLRSecurityCommandCenterQuery_FoldersSecurityHealthAnalyticsSettingsEffectiveCustomModulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListEffectiveSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.folders.securityHealthAnalyticsSettings.effectiveCustomModules.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsExternalSystemsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsExternalSystemsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem class];
  query.loggingName = @"securitycenter.folders.sources.findings.externalSystems.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsGroup

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GroupFindingsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings:group";
  GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsGroup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GroupFindingsResponse class];
  query.loggingName = @"securitycenter.folders.sources.findings.group";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsList

@dynamic compareDuration, fieldMask, filter, orderBy, pageSize, pageToken,
         parent, readTime;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings";
  GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListFindingsResponse class];
  query.loggingName = @"securitycenter.folders.sources.findings.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_Finding *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.folders.sources.findings.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsSetMute

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SetMuteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:setMute";
  GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsSetMute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.folders.sources.findings.setMute";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsSetState

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SetFindingStateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:setState";
  GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsSetState *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.folders.sources.findings.setState";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsUpdateSecurityMarks

@dynamic name, startTime, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SecurityMarks *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_FoldersSourcesFindingsUpdateSecurityMarks *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_SecurityMarks class];
  query.loggingName = @"securitycenter.folders.sources.findings.updateSecurityMarks";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_FoldersSourcesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRSecurityCommandCenterQuery_FoldersSourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListSourcesResponse class];
  query.loggingName = @"securitycenter.folders.sources.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsAssetsGroup

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GroupAssetsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:group";
  GTLRSecurityCommandCenterQuery_OrganizationsAssetsGroup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GroupAssetsResponse class];
  query.loggingName = @"securitycenter.organizations.assets.group";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsAssetsList

@dynamic compareDuration, fieldMask, filter, orderBy, pageSize, pageToken,
         parent, readTime;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets";
  GTLRSecurityCommandCenterQuery_OrganizationsAssetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListAssetsResponse class];
  query.loggingName = @"securitycenter.organizations.assets.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsAssetsRunDiscovery

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_RunAssetDiscoveryRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:runDiscovery";
  GTLRSecurityCommandCenterQuery_OrganizationsAssetsRunDiscovery *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Operation class];
  query.loggingName = @"securitycenter.organizations.assets.runDiscovery";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsAssetsUpdateSecurityMarks

@dynamic name, startTime, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SecurityMarks *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsAssetsUpdateSecurityMarks *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_SecurityMarks class];
  query.loggingName = @"securitycenter.organizations.assets.updateSecurityMarks";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsCreate

@dynamic bigQueryExportId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/bigQueryExports";
  GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.organizations.bigQueryExports.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.bigQueryExports.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.organizations.bigQueryExports.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/bigQueryExports";
  GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListBigQueryExportsResponse class];
  query.loggingName = @"securitycenter.organizations.bigQueryExports.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsBigQueryExportsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.organizations.bigQueryExports.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_EventThreatDetectionCustomModule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_EventThreatDetectionCustomModule class];
  query.loggingName = @"securitycenter.organizations.eventThreatDetectionSettings.customModules.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.eventThreatDetectionSettings.customModules.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_EventThreatDetectionCustomModule class];
  query.loggingName = @"securitycenter.organizations.eventThreatDetectionSettings.customModules.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListEventThreatDetectionCustomModulesResponse class];
  query.loggingName = @"securitycenter.organizations.eventThreatDetectionSettings.customModules.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_EventThreatDetectionCustomModule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsCustomModulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_EventThreatDetectionCustomModule class];
  query.loggingName = @"securitycenter.organizations.eventThreatDetectionSettings.customModules.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsValidateCustomModule

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_ValidateEventThreatDetectionCustomModuleRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:validateCustomModule";
  GTLRSecurityCommandCenterQuery_OrganizationsEventThreatDetectionSettingsValidateCustomModule *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ValidateEventThreatDetectionCustomModuleResponse class];
  query.loggingName = @"securitycenter.organizations.eventThreatDetectionSettings.validateCustomModule";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsFindingsBulkMute

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_BulkMuteFindingsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings:bulkMute";
  GTLRSecurityCommandCenterQuery_OrganizationsFindingsBulkMute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Operation class];
  query.loggingName = @"securitycenter.organizations.findings.bulkMute";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsGetOrganizationSettings

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsGetOrganizationSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_OrganizationSettings class];
  query.loggingName = @"securitycenter.organizations.getOrganizationSettings";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsCreate

@dynamic muteConfigId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/muteConfigs";
  GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.organizations.muteConfigs.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.muteConfigs.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.organizations.muteConfigs.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/muteConfigs";
  GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListMuteConfigsResponse class];
  query.loggingName = @"securitycenter.organizations.muteConfigs.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsMuteConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.organizations.muteConfigs.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsCreate

@dynamic configId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_NotificationConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notificationConfigs";
  GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.organizations.notificationConfigs.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.notificationConfigs.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.organizations.notificationConfigs.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notificationConfigs";
  GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListNotificationConfigsResponse class];
  query.loggingName = @"securitycenter.organizations.notificationConfigs.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_NotificationConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsNotificationConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.organizations.notificationConfigs.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRSecurityCommandCenterQuery_OrganizationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.operations.cancel";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.operations.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Operation class];
  query.loggingName = @"securitycenter.organizations.operations.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListOperationsResponse class];
  query.loggingName = @"securitycenter.organizations.operations.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsBatchCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_BatchCreateResourceValueConfigsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/resourceValueConfigs:batchCreate";
  GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsBatchCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_BatchCreateResourceValueConfigsResponse class];
  query.loggingName = @"securitycenter.organizations.resourceValueConfigs.batchCreate";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.resourceValueConfigs.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig class];
  query.loggingName = @"securitycenter.organizations.resourceValueConfigs.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/resourceValueConfigs";
  GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListResourceValueConfigsResponse class];
  query.loggingName = @"securitycenter.organizations.resourceValueConfigs.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsResourceValueConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ResourceValueConfig class];
  query.loggingName = @"securitycenter.organizations.resourceValueConfigs.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.customModules.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.customModules.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.customModules.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.customModules.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesListDescendant

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules:listDescendant";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesListDescendant *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListDescendantSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.customModules.listDescendant";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsCustomModulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.customModules.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsEffectiveCustomModulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsEffectiveCustomModulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.effectiveCustomModules.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsEffectiveCustomModulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/effectiveCustomModules";
  GTLRSecurityCommandCenterQuery_OrganizationsSecurityHealthAnalyticsSettingsEffectiveCustomModulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListEffectiveSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.organizations.securityHealthAnalyticsSettings.effectiveCustomModules.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSimulationsAttackExposureResultsAttackPathsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/attackPaths";
  GTLRSecurityCommandCenterQuery_OrganizationsSimulationsAttackExposureResultsAttackPathsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListAttackPathsResponse class];
  query.loggingName = @"securitycenter.organizations.simulations.attackExposureResults.attackPaths.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSimulationsAttackExposureResultsValuedResourcesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/valuedResources";
  GTLRSecurityCommandCenterQuery_OrganizationsSimulationsAttackExposureResultsValuedResourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListValuedResourcesResponse class];
  query.loggingName = @"securitycenter.organizations.simulations.attackExposureResults.valuedResources.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSimulationsAttackPathsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/attackPaths";
  GTLRSecurityCommandCenterQuery_OrganizationsSimulationsAttackPathsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListAttackPathsResponse class];
  query.loggingName = @"securitycenter.organizations.simulations.attackPaths.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSimulationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSimulationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Simulation class];
  query.loggingName = @"securitycenter.organizations.simulations.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSimulationsValuedResourcesAttackPathsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/attackPaths";
  GTLRSecurityCommandCenterQuery_OrganizationsSimulationsValuedResourcesAttackPathsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListAttackPathsResponse class];
  query.loggingName = @"securitycenter.organizations.simulations.valuedResources.attackPaths.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSimulationsValuedResourcesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/valuedResources";
  GTLRSecurityCommandCenterQuery_OrganizationsSimulationsValuedResourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListValuedResourcesResponse class];
  query.loggingName = @"securitycenter.organizations.simulations.valuedResources.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_Source *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Source class];
  query.loggingName = @"securitycenter.organizations.sources.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsCreate

@dynamic findingId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_Finding *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.organizations.sources.findings.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsExternalSystemsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsExternalSystemsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem class];
  query.loggingName = @"securitycenter.organizations.sources.findings.externalSystems.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsGroup

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GroupFindingsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings:group";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsGroup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GroupFindingsResponse class];
  query.loggingName = @"securitycenter.organizations.sources.findings.group";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsList

@dynamic compareDuration, fieldMask, filter, orderBy, pageSize, pageToken,
         parent, readTime;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListFindingsResponse class];
  query.loggingName = @"securitycenter.organizations.sources.findings.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_Finding *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.organizations.sources.findings.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsSetMute

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SetMuteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:setMute";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsSetMute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.organizations.sources.findings.setMute";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsSetState

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SetFindingStateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:setState";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsSetState *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.organizations.sources.findings.setState";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsUpdateSecurityMarks

@dynamic name, startTime, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SecurityMarks *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesFindingsUpdateSecurityMarks *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_SecurityMarks class];
  query.loggingName = @"securitycenter.organizations.sources.findings.updateSecurityMarks";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Source class];
  query.loggingName = @"securitycenter.organizations.sources.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesGetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Policy class];
  query.loggingName = @"securitycenter.organizations.sources.getIamPolicy";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListSourcesResponse class];
  query.loggingName = @"securitycenter.organizations.sources.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_Source *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Source class];
  query.loggingName = @"securitycenter.organizations.sources.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Policy class];
  query.loggingName = @"securitycenter.organizations.sources.setIamPolicy";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsSourcesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRSecurityCommandCenterQuery_OrganizationsSourcesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_TestIamPermissionsResponse class];
  query.loggingName = @"securitycenter.organizations.sources.testIamPermissions";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_OrganizationsUpdateOrganizationSettings

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_OrganizationSettings *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_OrganizationsUpdateOrganizationSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_OrganizationSettings class];
  query.loggingName = @"securitycenter.organizations.updateOrganizationSettings";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsAssetsGroup

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GroupAssetsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:group";
  GTLRSecurityCommandCenterQuery_ProjectsAssetsGroup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GroupAssetsResponse class];
  query.loggingName = @"securitycenter.projects.assets.group";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsAssetsList

@dynamic compareDuration, fieldMask, filter, orderBy, pageSize, pageToken,
         parent, readTime;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets";
  GTLRSecurityCommandCenterQuery_ProjectsAssetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListAssetsResponse class];
  query.loggingName = @"securitycenter.projects.assets.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsAssetsUpdateSecurityMarks

@dynamic name, startTime, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SecurityMarks *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsAssetsUpdateSecurityMarks *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_SecurityMarks class];
  query.loggingName = @"securitycenter.projects.assets.updateSecurityMarks";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsCreate

@dynamic bigQueryExportId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/bigQueryExports";
  GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.projects.bigQueryExports.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.projects.bigQueryExports.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.projects.bigQueryExports.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/bigQueryExports";
  GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListBigQueryExportsResponse class];
  query.loggingName = @"securitycenter.projects.bigQueryExports.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsBigQueryExportsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1BigQueryExport class];
  query.loggingName = @"securitycenter.projects.bigQueryExports.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsFindingsBulkMute

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_BulkMuteFindingsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings:bulkMute";
  GTLRSecurityCommandCenterQuery_ProjectsFindingsBulkMute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Operation class];
  query.loggingName = @"securitycenter.projects.findings.bulkMute";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsCreate

@dynamic muteConfigId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/muteConfigs";
  GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.projects.muteConfigs.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.projects.muteConfigs.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.projects.muteConfigs.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/muteConfigs";
  GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListMuteConfigsResponse class];
  query.loggingName = @"securitycenter.projects.muteConfigs.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsMuteConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1MuteConfig class];
  query.loggingName = @"securitycenter.projects.muteConfigs.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsCreate

@dynamic configId, parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_NotificationConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notificationConfigs";
  GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.projects.notificationConfigs.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.projects.notificationConfigs.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.projects.notificationConfigs.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notificationConfigs";
  GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListNotificationConfigsResponse class];
  query.loggingName = @"securitycenter.projects.notificationConfigs.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_NotificationConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsNotificationConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_NotificationConfig class];
  query.loggingName = @"securitycenter.projects.notificationConfigs.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.customModules.create";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Empty class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.customModules.delete";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.customModules.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.customModules.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesListDescendant

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/customModules:listDescendant";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesListDescendant *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListDescendantSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.customModules.listDescendant";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsCustomModulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.customModules.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsEffectiveCustomModulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsEffectiveCustomModulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModule class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.effectiveCustomModules.get";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsEffectiveCustomModulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/effectiveCustomModules";
  GTLRSecurityCommandCenterQuery_ProjectsSecurityHealthAnalyticsSettingsEffectiveCustomModulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListEffectiveSecurityHealthAnalyticsCustomModulesResponse class];
  query.loggingName = @"securitycenter.projects.securityHealthAnalyticsSettings.effectiveCustomModules.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsExternalSystemsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsExternalSystemsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GoogleCloudSecuritycenterV1ExternalSystem class];
  query.loggingName = @"securitycenter.projects.sources.findings.externalSystems.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsGroup

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_GroupFindingsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings:group";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsGroup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_GroupFindingsResponse class];
  query.loggingName = @"securitycenter.projects.sources.findings.group";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsList

@dynamic compareDuration, fieldMask, filter, orderBy, pageSize, pageToken,
         parent, readTime;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/findings";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListFindingsResponse class];
  query.loggingName = @"securitycenter.projects.sources.findings.list";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_Finding *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.projects.sources.findings.patch";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsSetMute

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SetMuteRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:setMute";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsSetMute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.projects.sources.findings.setMute";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsSetState

@dynamic name;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SetFindingStateRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:setState";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsSetState *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_Finding class];
  query.loggingName = @"securitycenter.projects.sources.findings.setState";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsUpdateSecurityMarks

@dynamic name, startTime, updateMask;

+ (instancetype)queryWithObject:(GTLRSecurityCommandCenter_SecurityMarks *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesFindingsUpdateSecurityMarks *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_SecurityMarks class];
  query.loggingName = @"securitycenter.projects.sources.findings.updateSecurityMarks";
  return query;
}

@end

@implementation GTLRSecurityCommandCenterQuery_ProjectsSourcesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRSecurityCommandCenterQuery_ProjectsSourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRSecurityCommandCenter_ListSourcesResponse class];
  query.loggingName = @"securitycenter.projects.sources.list";
  return query;
}

@end

#pragma clang diagnostic pop
