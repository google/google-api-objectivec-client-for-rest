// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Identity and Access Management (IAM) API (iam/v1)
// Description:
//   Manages identity and access control for Google Cloud Platform resources,
//   including the creation of service accounts, which you can use to
//   authenticate to Google and make API calls.
// Documentation:
//   https://cloud.google.com/iam/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRIamObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// keyTypes

/**
 *  Unspecified key type. The presence of this in the message will immediately
 *  result in an error.
 *
 *  Value: "KEY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamKeyTypesKeyTypeUnspecified;
/**
 *  System-managed keys (managed and rotated by Google).
 *
 *  Value: "SYSTEM_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamKeyTypesSystemManaged;
/**
 *  User-managed keys (managed and rotated by the user).
 *
 *  Value: "USER_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamKeyTypesUserManaged;

// ----------------------------------------------------------------------------
// publicKeyType

/**
 *  Do not return the public key.
 *
 *  Value: "TYPE_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamPublicKeyTypeTypeNone;
/**
 *  Raw public key.
 *
 *  Value: "TYPE_RAW_PUBLIC_KEY"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamPublicKeyTypeTypeRawPublicKey;
/**
 *  X509 PEM format.
 *
 *  Value: "TYPE_X509_PEM_FILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamPublicKeyTypeTypeX509PemFile;

// ----------------------------------------------------------------------------
// view

/**
 *  Omits the `included_permissions` field. This is the default value.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamViewBasic;
/**
 *  Returns all fields.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRIamViewFull;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Iam query classes.
 */
@interface GTLRIamQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Lints, or validates, an IAM policy. Currently checks the
 *  google.iam.v1.Binding.condition field, which contains a condition expression
 *  for a role binding. Successful calls to this method always return an HTTP
 *  `200 OK` status code, even if the linter detects an issue in the IAM policy.
 *
 *  Method: iam.iamPolicies.lintPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_IamPoliciesLintPolicy : GTLRIamQuery

/**
 *  Fetches a @c GTLRIam_LintPolicyResponse.
 *
 *  Lints, or validates, an IAM policy. Currently checks the
 *  google.iam.v1.Binding.condition field, which contains a condition expression
 *  for a role binding. Successful calls to this method always return an HTTP
 *  `200 OK` status code, even if the linter detects an issue in the IAM policy.
 *
 *  @param object The @c GTLRIam_LintPolicyRequest to include in the query.
 *
 *  @return GTLRIamQuery_IamPoliciesLintPolicy
 */
+ (instancetype)queryWithObject:(GTLRIam_LintPolicyRequest *)object;

@end

/**
 *  Returns a list of services that allow you to opt into audit logs that are
 *  not generated by default. To learn more about audit logs, see the [Logging
 *  documentation](https://cloud.google.com/logging/docs/audit).
 *
 *  Method: iam.iamPolicies.queryAuditableServices
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_IamPoliciesQueryAuditableServices : GTLRIamQuery

/**
 *  Fetches a @c GTLRIam_QueryAuditableServicesResponse.
 *
 *  Returns a list of services that allow you to opt into audit logs that are
 *  not generated by default. To learn more about audit logs, see the [Logging
 *  documentation](https://cloud.google.com/logging/docs/audit).
 *
 *  @param object The @c GTLRIam_QueryAuditableServicesRequest to include in the
 *    query.
 *
 *  @return GTLRIamQuery_IamPoliciesQueryAuditableServices
 */
+ (instancetype)queryWithObject:(GTLRIam_QueryAuditableServicesRequest *)object;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: iam.locations.workforcePools.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_LocationsWorkforcePoolsOperationsGet : GTLRIamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRIamQuery_LocationsWorkforcePoolsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: iam.locations.workforcePools.providers.keys.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_LocationsWorkforcePoolsProvidersKeysOperationsGet : GTLRIamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRIamQuery_LocationsWorkforcePoolsProvidersKeysOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: iam.locations.workforcePools.providers.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_LocationsWorkforcePoolsProvidersOperationsGet : GTLRIamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRIamQuery_LocationsWorkforcePoolsProvidersOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: iam.locations.workforcePools.subjects.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_LocationsWorkforcePoolsSubjectsOperationsGet : GTLRIamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRIamQuery_LocationsWorkforcePoolsSubjectsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new custom Role.
 *
 *  Method: iam.organizations.roles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesCreate : GTLRIamQuery

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `parent` value format is described below: *
 *  [`projects.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/create):
 *  `projects/{PROJECT_ID}`. This method creates project-level [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *  [`organizations.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/create):
 *  `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *  [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note:
 *  Wildcard (*) values are invalid; you must specify a complete project ID or
 *  organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Creates a new custom Role.
 *
 *  @param object The @c GTLRIam_CreateRoleRequest to include in the query.
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `parent` value format is described below: *
 *    [`projects.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/create):
 *    `projects/{PROJECT_ID}`. This method creates project-level [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *    [`organizations.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/create):
 *    `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateRoleRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a custom Role. When you delete a custom role, the following changes
 *  occur immediately: * You cannot bind a principal to the custom role in an
 *  IAM Policy. * Existing bindings to the custom role are not changed, but they
 *  have no effect. * By default, the response from ListRoles does not include
 *  the custom role. You have 7 days to undelete the custom role. After 7 days,
 *  the following changes occur: * The custom role is permanently deleted and
 *  cannot be recovered. * If an IAM policy contains a binding to the custom
 *  role, the binding is permanently removed.
 *
 *  Method: iam.organizations.roles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesDelete : GTLRIamQuery

/**
 *  Used to perform a consistent read-modify-write.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`projects.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/delete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/delete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  deletes only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Deletes a custom Role. When you delete a custom role, the following changes
 *  occur immediately: * You cannot bind a principal to the custom role in an
 *  IAM Policy. * Existing bindings to the custom role are not changed, but they
 *  have no effect. * By default, the response from ListRoles does not include
 *  the custom role. You have 7 days to undelete the custom role. After 7 days,
 *  the following changes occur: * The custom role is permanently deleted and
 *  cannot be recovered. * If an IAM policy contains a binding to the custom
 *  role, the binding is permanently removed.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`projects.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/delete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/delete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    deletes only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the definition of a Role.
 *
 *  Method: iam.organizations.roles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesGet : GTLRIamQuery

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`roles.get()`](https://cloud.google.com/iam/reference/rest/v1/roles/get):
 *  `roles/{ROLE_NAME}`. This method returns results from all [predefined
 *  roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *  in Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` *
 *  [`projects.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/get):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/get):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  returns only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Gets the definition of a Role.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`roles.get()`](https://cloud.google.com/iam/reference/rest/v1/roles/get):
 *    `roles/{ROLE_NAME}`. This method returns results from all [predefined
 *    roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *    in Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` *
 *    [`projects.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/get):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/get):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    returns only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every predefined Role that IAM supports, or every custom role that is
 *  defined for an organization or project.
 *
 *  Method: iam.organizations.roles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesList : GTLRIamQuery

/**
 *  Optional limit on the number of roles to include in the response. The
 *  default is 300, and the maximum is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional pagination token returned in an earlier ListRolesResponse. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `parent` value format is described below: *
 *  [`roles.list()`](https://cloud.google.com/iam/reference/rest/v1/roles/list):
 *  An empty string. This method doesn't require a resource; it simply returns
 *  all [predefined
 *  roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *  in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` *
 *  [`projects.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/list):
 *  `projects/{PROJECT_ID}`. This method lists all project-level [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *  [`organizations.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/list):
 *  `organizations/{ORGANIZATION_ID}`. This method lists all organization-level
 *  [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note:
 *  Wildcard (*) values are invalid; you must specify a complete project ID or
 *  organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Include Roles that have been deleted. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Optional view for the returned Role objects. When `FULL` is specified, the
 *  `includedPermissions` field is returned, which includes a list of all
 *  permissions in the role. The default value is `BASIC`, which does not return
 *  the `includedPermissions` field.
 *
 *  Likely values:
 *    @arg @c kGTLRIamViewBasic Omits the `included_permissions` field. This is
 *        the default value. (Value: "BASIC")
 *    @arg @c kGTLRIamViewFull Returns all fields. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRIam_ListRolesResponse.
 *
 *  Lists every predefined Role that IAM supports, or every custom role that is
 *  defined for an organization or project.
 *
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the request, namely
 *    [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `parent` value format is described below: *
 *    [`roles.list()`](https://cloud.google.com/iam/reference/rest/v1/roles/list):
 *    An empty string. This method doesn't require a resource; it simply returns
 *    all [predefined
 *    roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *    in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` *
 *    [`projects.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/list):
 *    `projects/{PROJECT_ID}`. This method lists all project-level [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *    [`organizations.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/list):
 *    `organizations/{ORGANIZATION_ID}`. This method lists all
 *    organization-level [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the definition of a custom Role.
 *
 *  Method: iam.organizations.roles.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesPatch : GTLRIamQuery

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`projects.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/patch):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/patch):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  updates only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A mask describing which fields in the Role have changed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Updates the definition of a custom Role.
 *
 *  @param object The @c GTLRIam_Role to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`projects.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/patch):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/patch):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    updates only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_Role *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a custom Role.
 *
 *  Method: iam.organizations.roles.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_OrganizationsRolesUndelete : GTLRIamQuery

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`projects.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/undelete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/undelete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  undeletes only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Undeletes a custom Role.
 *
 *  @param object The @c GTLRIam_UndeleteRoleRequest to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`projects.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/undelete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/undelete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    undeletes only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_OrganizationsRolesUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteRoleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists every permission that you can test on a resource. A permission is
 *  testable if you can check whether a principal has that permission on the
 *  resource.
 *
 *  Method: iam.permissions.queryTestablePermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_PermissionsQueryTestablePermissions : GTLRIamQuery

/**
 *  Fetches a @c GTLRIam_QueryTestablePermissionsResponse.
 *
 *  Lists every permission that you can test on a resource. A permission is
 *  testable if you can check whether a principal has that permission on the
 *  resource.
 *
 *  @param object The @c GTLRIam_QueryTestablePermissionsRequest to include in
 *    the query.
 *
 *  @return GTLRIamQuery_PermissionsQueryTestablePermissions
 */
+ (instancetype)queryWithObject:(GTLRIam_QueryTestablePermissionsRequest *)object;

@end

/**
 *  Creates a new WorkloadIdentityPool. You cannot reuse the name of a deleted
 *  pool until 30 days after deletion.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsCreate : GTLRIamQuery

/**
 *  Required. The parent resource to create the pool in. The only supported
 *  location is `global`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the pool, which becomes the final component of
 *  the resource name. This value should be 4-32 characters, and may contain the
 *  characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and
 *  may not be specified.
 */
@property(nonatomic, copy, nullable) NSString *workloadIdentityPoolId;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Creates a new WorkloadIdentityPool. You cannot reuse the name of a deleted
 *  pool until 30 days after deletion.
 *
 *  @param object The @c GTLRIam_WorkloadIdentityPool to include in the query.
 *  @param parent Required. The parent resource to create the pool in. The only
 *    supported location is `global`.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_WorkloadIdentityPool *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a WorkloadIdentityPool. You cannot use a deleted pool to exchange
 *  external credentials for Google Cloud credentials. However, deletion does
 *  not revoke credentials that have already been issued. Credentials issued for
 *  a deleted pool do not grant access to resources. If the pool is undeleted,
 *  and the credentials are not expired, they grant access again. You can
 *  undelete a pool for 30 days. After 30 days, deletion is permanent. You
 *  cannot update deleted pools. However, you can view and list them.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsDelete : GTLRIamQuery

/** Required. The name of the pool to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Deletes a WorkloadIdentityPool. You cannot use a deleted pool to exchange
 *  external credentials for Google Cloud credentials. However, deletion does
 *  not revoke credentials that have already been issued. Credentials issued for
 *  a deleted pool do not grant access to resources. If the pool is undeleted,
 *  and the credentials are not expired, they grant access again. You can
 *  undelete a pool for 30 days. After 30 days, deletion is permanent. You
 *  cannot update deleted pools. However, you can view and list them.
 *
 *  @param name Required. The name of the pool to delete.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an individual WorkloadIdentityPool.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsGet : GTLRIamQuery

/** Required. The name of the pool to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_WorkloadIdentityPool.
 *
 *  Gets an individual WorkloadIdentityPool.
 *
 *  @param name Required. The name of the pool to retrieve.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all non-deleted WorkloadIdentityPools in a project. If `show_deleted`
 *  is set to `true`, then deleted pools are also listed.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsList : GTLRIamQuery

/**
 *  The maximum number of pools to return. If unspecified, at most 50 pools are
 *  returned. The maximum value is 1000; values above are 1000 truncated to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListWorkloadIdentityPools` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource to list pools for. */
@property(nonatomic, copy, nullable) NSString *parent;

/** Whether to return soft-deleted pools. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRIam_ListWorkloadIdentityPoolsResponse.
 *
 *  Lists all non-deleted WorkloadIdentityPools in a project. If `show_deleted`
 *  is set to `true`, then deleted pools are also listed.
 *
 *  @param parent Required. The parent resource to list pools for.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsOperationsGet : GTLRIamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an existing WorkloadIdentityPool.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsPatch : GTLRIamQuery

/** Output only. The resource name of the pool. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Updates an existing WorkloadIdentityPool.
 *
 *  @param object The @c GTLRIam_WorkloadIdentityPool to include in the query.
 *  @param name Output only. The resource name of the pool.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_WorkloadIdentityPool *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new WorkloadIdentityPoolProvider in a WorkloadIdentityPool. You
 *  cannot reuse the name of a deleted provider until 30 days after deletion.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersCreate : GTLRIamQuery

/** Required. The pool to create this provider in. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID for the provider, which becomes the final component of the
 *  resource name. This value must be 4-32 characters, and may contain the
 *  characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and
 *  may not be specified.
 */
@property(nonatomic, copy, nullable) NSString *workloadIdentityPoolProviderId;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Creates a new WorkloadIdentityPoolProvider in a WorkloadIdentityPool. You
 *  cannot reuse the name of a deleted provider until 30 days after deletion.
 *
 *  @param object The @c GTLRIam_WorkloadIdentityPoolProvider to include in the
 *    query.
 *  @param parent Required. The pool to create this provider in.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_WorkloadIdentityPoolProvider *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a WorkloadIdentityPoolProvider. Deleting a provider does not revoke
 *  credentials that have already been issued; they continue to grant access.
 *  You can undelete a provider for 30 days. After 30 days, deletion is
 *  permanent. You cannot update deleted providers. However, you can view and
 *  list them.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersDelete : GTLRIamQuery

/** Required. The name of the provider to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Deletes a WorkloadIdentityPoolProvider. Deleting a provider does not revoke
 *  credentials that have already been issued; they continue to grant access.
 *  You can undelete a provider for 30 days. After 30 days, deletion is
 *  permanent. You cannot update deleted providers. However, you can view and
 *  list them.
 *
 *  @param name Required. The name of the provider to delete.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an individual WorkloadIdentityPoolProvider.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersGet : GTLRIamQuery

/** Required. The name of the provider to retrieve. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_WorkloadIdentityPoolProvider.
 *
 *  Gets an individual WorkloadIdentityPoolProvider.
 *
 *  @param name Required. The name of the provider to retrieve.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.keys.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersKeysOperationsGet : GTLRIamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersKeysOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all non-deleted WorkloadIdentityPoolProviders in a
 *  WorkloadIdentityPool. If `show_deleted` is set to `true`, then deleted
 *  providers are also listed.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersList : GTLRIamQuery

/**
 *  The maximum number of providers to return. If unspecified, at most 50
 *  providers are returned. The maximum value is 100; values above 100 are
 *  truncated to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListWorkloadIdentityPoolProviders`
 *  call. Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The pool to list providers for. */
@property(nonatomic, copy, nullable) NSString *parent;

/** Whether to return soft-deleted providers. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Fetches a @c GTLRIam_ListWorkloadIdentityPoolProvidersResponse.
 *
 *  Lists all non-deleted WorkloadIdentityPoolProviders in a
 *  WorkloadIdentityPool. If `show_deleted` is set to `true`, then deleted
 *  providers are also listed.
 *
 *  @param parent Required. The pool to list providers for.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersOperationsGet : GTLRIamQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an existing WorkloadIdentityPoolProvider.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersPatch : GTLRIamQuery

/** Output only. The resource name of the provider. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Updates an existing WorkloadIdentityPoolProvider.
 *
 *  @param object The @c GTLRIam_WorkloadIdentityPoolProvider to include in the
 *    query.
 *  @param name Output only. The resource name of the provider.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_WorkloadIdentityPoolProvider *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a WorkloadIdentityPoolProvider, as long as it was deleted fewer
 *  than 30 days ago.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.providers.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersUndelete : GTLRIamQuery

/** Required. The name of the provider to undelete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Undeletes a WorkloadIdentityPoolProvider, as long as it was deleted fewer
 *  than 30 days ago.
 *
 *  @param object The @c GTLRIam_UndeleteWorkloadIdentityPoolProviderRequest to
 *    include in the query.
 *  @param name Required. The name of the provider to undelete.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsProvidersUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteWorkloadIdentityPoolProviderRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a WorkloadIdentityPool, as long as it was deleted fewer than 30
 *  days ago.
 *
 *  Method: iam.projects.locations.workloadIdentityPools.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsUndelete : GTLRIamQuery

/** Required. The name of the pool to undelete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Operation.
 *
 *  Undeletes a WorkloadIdentityPool, as long as it was deleted fewer than 30
 *  days ago.
 *
 *  @param object The @c GTLRIam_UndeleteWorkloadIdentityPoolRequest to include
 *    in the query.
 *  @param name Required. The name of the pool to undelete.
 *
 *  @return GTLRIamQuery_ProjectsLocationsWorkloadIdentityPoolsUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteWorkloadIdentityPoolRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new custom Role.
 *
 *  Method: iam.projects.roles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesCreate : GTLRIamQuery

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `parent` value format is described below: *
 *  [`projects.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/create):
 *  `projects/{PROJECT_ID}`. This method creates project-level [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *  [`organizations.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/create):
 *  `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *  [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note:
 *  Wildcard (*) values are invalid; you must specify a complete project ID or
 *  organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Creates a new custom Role.
 *
 *  @param object The @c GTLRIam_CreateRoleRequest to include in the query.
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `parent` value format is described below: *
 *    [`projects.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/create):
 *    `projects/{PROJECT_ID}`. This method creates project-level [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *    [`organizations.roles.create()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/create):
 *    `organizations/{ORGANIZATION_ID}`. This method creates organization-level
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateRoleRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a custom Role. When you delete a custom role, the following changes
 *  occur immediately: * You cannot bind a principal to the custom role in an
 *  IAM Policy. * Existing bindings to the custom role are not changed, but they
 *  have no effect. * By default, the response from ListRoles does not include
 *  the custom role. You have 7 days to undelete the custom role. After 7 days,
 *  the following changes occur: * The custom role is permanently deleted and
 *  cannot be recovered. * If an IAM policy contains a binding to the custom
 *  role, the binding is permanently removed.
 *
 *  Method: iam.projects.roles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesDelete : GTLRIamQuery

/**
 *  Used to perform a consistent read-modify-write.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`projects.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/delete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/delete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  deletes only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Deletes a custom Role. When you delete a custom role, the following changes
 *  occur immediately: * You cannot bind a principal to the custom role in an
 *  IAM Policy. * Existing bindings to the custom role are not changed, but they
 *  have no effect. * By default, the response from ListRoles does not include
 *  the custom role. You have 7 days to undelete the custom role. After 7 days,
 *  the following changes occur: * The custom role is permanently deleted and
 *  cannot be recovered. * If an IAM policy contains a binding to the custom
 *  role, the binding is permanently removed.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`projects.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/delete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.delete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/delete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    deletes only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the definition of a Role.
 *
 *  Method: iam.projects.roles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesGet : GTLRIamQuery

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`roles.get()`](https://cloud.google.com/iam/reference/rest/v1/roles/get):
 *  `roles/{ROLE_NAME}`. This method returns results from all [predefined
 *  roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *  in Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` *
 *  [`projects.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/get):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/get):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  returns only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Gets the definition of a Role.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`roles.get()`](https://cloud.google.com/iam/reference/rest/v1/roles/get):
 *    `roles/{ROLE_NAME}`. This method returns results from all [predefined
 *    roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *    in Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` *
 *    [`projects.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/get):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/get):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    returns only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every predefined Role that IAM supports, or every custom role that is
 *  defined for an organization or project.
 *
 *  Method: iam.projects.roles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesList : GTLRIamQuery

/**
 *  Optional limit on the number of roles to include in the response. The
 *  default is 300, and the maximum is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional pagination token returned in an earlier ListRolesResponse. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `parent` value format is described below: *
 *  [`roles.list()`](https://cloud.google.com/iam/reference/rest/v1/roles/list):
 *  An empty string. This method doesn't require a resource; it simply returns
 *  all [predefined
 *  roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *  in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` *
 *  [`projects.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/list):
 *  `projects/{PROJECT_ID}`. This method lists all project-level [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *  [`organizations.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/list):
 *  `organizations/{ORGANIZATION_ID}`. This method lists all organization-level
 *  [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note:
 *  Wildcard (*) values are invalid; you must specify a complete project ID or
 *  organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Include Roles that have been deleted. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Optional view for the returned Role objects. When `FULL` is specified, the
 *  `includedPermissions` field is returned, which includes a list of all
 *  permissions in the role. The default value is `BASIC`, which does not return
 *  the `includedPermissions` field.
 *
 *  Likely values:
 *    @arg @c kGTLRIamViewBasic Omits the `included_permissions` field. This is
 *        the default value. (Value: "BASIC")
 *    @arg @c kGTLRIamViewFull Returns all fields. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRIam_ListRolesResponse.
 *
 *  Lists every predefined Role that IAM supports, or every custom role that is
 *  defined for an organization or project.
 *
 *  @param parent The `parent` parameter's value depends on the target resource
 *    for the request, namely
 *    [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `parent` value format is described below: *
 *    [`roles.list()`](https://cloud.google.com/iam/reference/rest/v1/roles/list):
 *    An empty string. This method doesn't require a resource; it simply returns
 *    all [predefined
 *    roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *    in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` *
 *    [`projects.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/list):
 *    `projects/{PROJECT_ID}`. This method lists all project-level [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *    [`organizations.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/list):
 *    `organizations/{ORGANIZATION_ID}`. This method lists all
 *    organization-level [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *    Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the definition of a custom Role.
 *
 *  Method: iam.projects.roles.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesPatch : GTLRIamQuery

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`projects.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/patch):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/patch):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  updates only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A mask describing which fields in the Role have changed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Updates the definition of a custom Role.
 *
 *  @param object The @c GTLRIam_Role to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`projects.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/patch):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.patch()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/patch):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    updates only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_Role *)object
                           name:(NSString *)name;

@end

/**
 *  Undeletes a custom Role.
 *
 *  Method: iam.projects.roles.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsRolesUndelete : GTLRIamQuery

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`projects.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/undelete):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/undelete):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  undeletes only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Undeletes a custom Role.
 *
 *  @param object The @c GTLRIam_UndeleteRoleRequest to include in the query.
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles)
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`projects.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/undelete):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.undelete()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/undelete):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    undeletes only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_ProjectsRolesUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteRoleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsCreate : GTLRIamQuery

/**
 *  Required. The resource name of the project associated with the service
 *  accounts, such as `projects/my-project-123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  Creates a ServiceAccount.
 *
 *  @param object The @c GTLRIam_CreateServiceAccountRequest to include in the
 *    query.
 *  @param name Required. The resource name of the project associated with the
 *    service accounts, such as `projects/my-project-123`.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a ServiceAccount. **Warning:** After you delete a service account,
 *  you might not be able to undelete it. If you know that you need to re-enable
 *  the service account in the future, use DisableServiceAccount instead. If you
 *  delete a service account, IAM permanently removes the service account 30
 *  days later. Google Cloud cannot recover the service account after it is
 *  permanently removed, even if you file a support request. To help avoid
 *  unplanned outages, we recommend that you disable the service account before
 *  you delete it. Use DisableServiceAccount to disable the service account,
 *  then wait at least 24 hours and watch for unintended consequences. If there
 *  are no unintended consequences, you can delete the service account.
 *
 *  Method: iam.projects.serviceAccounts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsDelete : GTLRIamQuery

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Deletes a ServiceAccount. **Warning:** After you delete a service account,
 *  you might not be able to undelete it. If you know that you need to re-enable
 *  the service account in the future, use DisableServiceAccount instead. If you
 *  delete a service account, IAM permanently removes the service account 30
 *  days later. Google Cloud cannot recover the service account after it is
 *  permanently removed, even if you file a support request. To help avoid
 *  unplanned outages, we recommend that you disable the service account before
 *  you delete it. Use DisableServiceAccount to disable the service account,
 *  then wait at least 24 hours and watch for unintended consequences. If there
 *  are no unintended consequences, you can delete the service account.
 *
 *  @param name Required. The resource name of the service account in the
 *    following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using
 *    `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *    account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *    of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Disables a ServiceAccount immediately. If an application uses the service
 *  account to authenticate, that application can no longer call Google APIs or
 *  access Google Cloud resources. Existing access tokens for the service
 *  account are rejected, and requests for new access tokens will fail. To
 *  re-enable the service account, use EnableServiceAccount. After you re-enable
 *  the service account, its existing access tokens will be accepted, and you
 *  can request new access tokens. To help avoid unplanned outages, we recommend
 *  that you disable the service account before you delete it. Use this method
 *  to disable the service account, then wait at least 24 hours and watch for
 *  unintended consequences. If there are no unintended consequences, you can
 *  delete the service account with DeleteServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.disable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsDisable : GTLRIamQuery

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Disables a ServiceAccount immediately. If an application uses the service
 *  account to authenticate, that application can no longer call Google APIs or
 *  access Google Cloud resources. Existing access tokens for the service
 *  account are rejected, and requests for new access tokens will fail. To
 *  re-enable the service account, use EnableServiceAccount. After you re-enable
 *  the service account, its existing access tokens will be accepted, and you
 *  can request new access tokens. To help avoid unplanned outages, we recommend
 *  that you disable the service account before you delete it. Use this method
 *  to disable the service account, then wait at least 24 hours and watch for
 *  unintended consequences. If there are no unintended consequences, you can
 *  delete the service account with DeleteServiceAccount.
 *
 *  @param object The @c GTLRIam_DisableServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account in the following
 *    format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a
 *    wildcard for the `PROJECT_ID` will infer the project from the account. The
 *    `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsDisable
 */
+ (instancetype)queryWithObject:(GTLRIam_DisableServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Enables a ServiceAccount that was disabled by DisableServiceAccount. If the
 *  service account is already enabled, then this method has no effect. If the
 *  service account was disabled by other means—for example, if Google disabled
 *  the service account because it was compromised—you cannot use this method to
 *  enable the service account.
 *
 *  Method: iam.projects.serviceAccounts.enable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsEnable : GTLRIamQuery

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Enables a ServiceAccount that was disabled by DisableServiceAccount. If the
 *  service account is already enabled, then this method has no effect. If the
 *  service account was disabled by other means—for example, if Google disabled
 *  the service account because it was compromised—you cannot use this method to
 *  enable the service account.
 *
 *  @param object The @c GTLRIam_EnableServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account in the following
 *    format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a
 *    wildcard for the `PROJECT_ID` will infer the project from the account. The
 *    `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsEnable
 */
+ (instancetype)queryWithObject:(GTLRIam_EnableServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsGet : GTLRIamQuery

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  Gets a ServiceAccount.
 *
 *  @param name Required. The resource name of the service account in the
 *    following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using
 *    `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *    account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *    of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy that is attached to a ServiceAccount. This IAM policy
 *  specifies which principals have access to the service account. This method
 *  does not tell you whether the service account has been granted any roles on
 *  other resources. To check whether a service account has role grants on a
 *  resource, use the `getIamPolicy` method for that resource. For example, to
 *  view the role grants for a project, call the Resource Manager API's
 *  [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy)
 *  method.
 *
 *  Method: iam.projects.serviceAccounts.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsGetIamPolicy : GTLRIamQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRIam_Policy.
 *
 *  Gets the IAM policy that is attached to a ServiceAccount. This IAM policy
 *  specifies which principals have access to the service account. This method
 *  does not tell you whether the service account has been granted any roles on
 *  other resources. To check whether a service account has role grants on a
 *  resource, use the `getIamPolicy` method for that resource. For example, to
 *  view the role grants for a project, call the Resource Manager API's
 *  [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy)
 *  method.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Creates a ServiceAccountKey.
 *
 *  Method: iam.projects.serviceAccounts.keys.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysCreate : GTLRIamQuery

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccountKey.
 *
 *  Creates a ServiceAccountKey.
 *
 *  @param object The @c GTLRIam_CreateServiceAccountKeyRequest to include in
 *    the query.
 *  @param name Required. The resource name of the service account in the
 *    following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using
 *    `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *    account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *    of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysCreate
 */
+ (instancetype)queryWithObject:(GTLRIam_CreateServiceAccountKeyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a ServiceAccountKey. Deleting a service account key does not revoke
 *  short-lived credentials that have been issued based on the service account
 *  key.
 *
 *  Method: iam.projects.serviceAccounts.keys.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysDelete : GTLRIamQuery

/**
 *  Required. The resource name of the service account key in the following
 *  format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using
 *  `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *  account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *  of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Deletes a ServiceAccountKey. Deleting a service account key does not revoke
 *  short-lived credentials that have been issued based on the service account
 *  key.
 *
 *  @param name Required. The resource name of the service account key in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using `-` as
 *    a wildcard for the `PROJECT_ID` will infer the project from the account.
 *    The `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Disable a ServiceAccountKey. A disabled service account key can be
 *  re-enabled with EnableServiceAccountKey.
 *
 *  Method: iam.projects.serviceAccounts.keys.disable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysDisable : GTLRIamQuery

/**
 *  Required. The resource name of the service account key in the following
 *  format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using
 *  `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *  account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *  of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Disable a ServiceAccountKey. A disabled service account key can be
 *  re-enabled with EnableServiceAccountKey.
 *
 *  @param object The @c GTLRIam_DisableServiceAccountKeyRequest to include in
 *    the query.
 *  @param name Required. The resource name of the service account key in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using `-` as
 *    a wildcard for the `PROJECT_ID` will infer the project from the account.
 *    The `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysDisable
 */
+ (instancetype)queryWithObject:(GTLRIam_DisableServiceAccountKeyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Enable a ServiceAccountKey.
 *
 *  Method: iam.projects.serviceAccounts.keys.enable
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysEnable : GTLRIamQuery

/**
 *  Required. The resource name of the service account key in the following
 *  format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using
 *  `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *  account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *  of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Empty.
 *
 *  Enable a ServiceAccountKey.
 *
 *  @param object The @c GTLRIam_EnableServiceAccountKeyRequest to include in
 *    the query.
 *  @param name Required. The resource name of the service account key in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using `-` as
 *    a wildcard for the `PROJECT_ID` will infer the project from the account.
 *    The `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysEnable
 */
+ (instancetype)queryWithObject:(GTLRIam_EnableServiceAccountKeyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a ServiceAccountKey.
 *
 *  Method: iam.projects.serviceAccounts.keys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysGet : GTLRIamQuery

/**
 *  Required. The resource name of the service account key in the following
 *  format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using
 *  `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *  account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *  of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The output format of the public key. The default is `TYPE_NONE`,
 *  which means that the public key is not returned.
 *
 *  Likely values:
 *    @arg @c kGTLRIamPublicKeyTypeTypeNone Do not return the public key.
 *        (Value: "TYPE_NONE")
 *    @arg @c kGTLRIamPublicKeyTypeTypeX509PemFile X509 PEM format. (Value:
 *        "TYPE_X509_PEM_FILE")
 *    @arg @c kGTLRIamPublicKeyTypeTypeRawPublicKey Raw public key. (Value:
 *        "TYPE_RAW_PUBLIC_KEY")
 */
@property(nonatomic, copy, nullable) NSString *publicKeyType;

/**
 *  Fetches a @c GTLRIam_ServiceAccountKey.
 *
 *  Gets a ServiceAccountKey.
 *
 *  @param name Required. The resource name of the service account key in the
 *    following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using `-` as
 *    a wildcard for the `PROJECT_ID` will infer the project from the account.
 *    The `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every ServiceAccountKey for a service account.
 *
 *  Method: iam.projects.serviceAccounts.keys.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysList : GTLRIamQuery

/**
 *  Filters the types of keys the user wants to include in the list response.
 *  Duplicate key types are not allowed. If no key type is provided, all keys
 *  are returned.
 *
 *  Likely values:
 *    @arg @c kGTLRIamKeyTypesKeyTypeUnspecified Unspecified key type. The
 *        presence of this in the message will immediately result in an error.
 *        (Value: "KEY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRIamKeyTypesUserManaged User-managed keys (managed and rotated
 *        by the user). (Value: "USER_MANAGED")
 *    @arg @c kGTLRIamKeyTypesSystemManaged System-managed keys (managed and
 *        rotated by Google). (Value: "SYSTEM_MANAGED")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *keyTypes;

/**
 *  Required. The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID`, will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ListServiceAccountKeysResponse.
 *
 *  Lists every ServiceAccountKey for a service account.
 *
 *  @param name Required. The resource name of the service account in the
 *    following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using
 *    `-` as a wildcard for the `PROJECT_ID`, will infer the project from the
 *    account. The `ACCOUNT` value can be the `email` address or the `unique_id`
 *    of the service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Uploads the public key portion of a key pair that you manage, and associates
 *  the public key with a ServiceAccount. After you upload the public key, you
 *  can use the private key from the key pair as a service account key.
 *
 *  Method: iam.projects.serviceAccounts.keys.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsKeysUpload : GTLRIamQuery

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccountKey.
 *
 *  Uploads the public key portion of a key pair that you manage, and associates
 *  the public key with a ServiceAccount. After you upload the public key, you
 *  can use the private key from the key pair as a service account key.
 *
 *  @param object The @c GTLRIam_UploadServiceAccountKeyRequest to include in
 *    the query.
 *  @param name The resource name of the service account in the following
 *    format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a
 *    wildcard for the `PROJECT_ID` will infer the project from the account. The
 *    `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsKeysUpload
 */
+ (instancetype)queryWithObject:(GTLRIam_UploadServiceAccountKeyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists every ServiceAccount that belongs to a specific project.
 *
 *  Method: iam.projects.serviceAccounts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsList : GTLRIamQuery

/**
 *  Required. The resource name of the project associated with the service
 *  accounts, such as `projects/my-project-123`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional limit on the number of service accounts to include in the response.
 *  Further accounts can subsequently be obtained by including the
 *  ListServiceAccountsResponse.next_page_token in a subsequent request. The
 *  default is 20, and the maximum is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional pagination token returned in an earlier
 *  ListServiceAccountsResponse.next_page_token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRIam_ListServiceAccountsResponse.
 *
 *  Lists every ServiceAccount that belongs to a specific project.
 *
 *  @param name Required. The resource name of the project associated with the
 *    service accounts, such as `projects/my-project-123`.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Patches a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsPatch : GTLRIamQuery

/**
 *  The resource name of the service account. Use one of the following formats:
 *  * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` *
 *  `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you
 *  can use the `-` wildcard character instead of the project ID: *
 *  `projects/-/serviceAccounts/{EMAIL_ADDRESS}` *
 *  `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-`
 *  wildcard character, because it can cause response messages to contain
 *  misleading error codes. For example, if you try to get the service account
 *  `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *  response contains an HTTP `403 Forbidden` error instead of a `404 Not Found`
 *  error.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  Patches a ServiceAccount.
 *
 *  @param object The @c GTLRIam_PatchServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account. Use one of the
 *    following formats: *
 *    `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` *
 *    `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you
 *    can use the `-` wildcard character instead of the project ID: *
 *    `projects/-/serviceAccounts/{EMAIL_ADDRESS}` *
 *    `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the
 *    `-` wildcard character, because it can cause response messages to contain
 *    misleading error codes. For example, if you try to get the service account
 *    `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *    response contains an HTTP `403 Forbidden` error instead of a `404 Not
 *    Found` error.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsPatch
 */
+ (instancetype)queryWithObject:(GTLRIam_PatchServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the IAM policy that is attached to a ServiceAccount. Use this method to
 *  grant or revoke access to the service account. For example, you could grant
 *  a principal the ability to impersonate the service account. This method does
 *  not enable the service account to access other resources. To grant roles to
 *  a service account on a resource, follow these steps: 1. Call the resource's
 *  `getIamPolicy` method to get its current IAM policy. 2. Edit the policy so
 *  that it binds the service account to an IAM role for the resource. 3. Call
 *  the resource's `setIamPolicy` method to update its IAM policy. For detailed
 *  instructions, see [Manage access to project, folders, and
 *  organizations](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts)
 *  or [Manage access to other
 *  resources](https://cloud.google.com/iam/help/access/manage-other-resources).
 *
 *  Method: iam.projects.serviceAccounts.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsSetIamPolicy : GTLRIamQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRIam_Policy.
 *
 *  Sets the IAM policy that is attached to a ServiceAccount. Use this method to
 *  grant or revoke access to the service account. For example, you could grant
 *  a principal the ability to impersonate the service account. This method does
 *  not enable the service account to access other resources. To grant roles to
 *  a service account on a resource, follow these steps: 1. Call the resource's
 *  `getIamPolicy` method to get its current IAM policy. 2. Edit the policy so
 *  that it binds the service account to an IAM role for the resource. 3. Call
 *  the resource's `setIamPolicy` method to update its IAM policy. For detailed
 *  instructions, see [Manage access to project, folders, and
 *  organizations](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts)
 *  or [Manage access to other
 *  resources](https://cloud.google.com/iam/help/access/manage-other-resources).
 *
 *  @param object The @c GTLRIam_SetIamPolicyRequest to include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRIam_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  **Note:** This method is deprecated. Use the
 *  [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions. Signs a blob using the system-managed private key for a
 *  ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.signBlob
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsSignBlob : GTLRIamQuery

/**
 *  Required. Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The
 *  resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_SignBlobResponse.
 *
 *  **Note:** This method is deprecated. Use the
 *  [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions. Signs a blob using the system-managed private key for a
 *  ServiceAccount.
 *
 *  @param object The @c GTLRIam_SignBlobRequest to include in the query.
 *  @param name Required. Deprecated. [Migrate to Service Account Credentials
 *    API](https://cloud.google.com/iam/help/credentials/migrate-api). The
 *    resource name of the service account in the following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *    for the `PROJECT_ID` will infer the project from the account. The
 *    `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsSignBlob
 */
+ (instancetype)queryWithObject:(GTLRIam_SignBlobRequest *)object
                           name:(NSString *)name;

@end

/**
 *  **Note:** This method is deprecated. Use the
 *  [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions. Signs a JSON Web Token (JWT) using the system-managed private
 *  key for a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.signJwt
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsSignJwt : GTLRIamQuery

/**
 *  Required. Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The
 *  resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *  for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT`
 *  value can be the `email` address or the `unique_id` of the service account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_SignJwtResponse.
 *
 *  **Note:** This method is deprecated. Use the
 *  [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt)
 *  method in the IAM Service Account Credentials API instead. If you currently
 *  use this method, see the [migration
 *  guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
 *  instructions. Signs a JSON Web Token (JWT) using the system-managed private
 *  key for a ServiceAccount.
 *
 *  @param object The @c GTLRIam_SignJwtRequest to include in the query.
 *  @param name Required. Deprecated. [Migrate to Service Account Credentials
 *    API](https://cloud.google.com/iam/help/credentials/migrate-api). The
 *    resource name of the service account in the following format:
 *    `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard
 *    for the `PROJECT_ID` will infer the project from the account. The
 *    `ACCOUNT` value can be the `email` address or the `unique_id` of the
 *    service account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsSignJwt
 */
+ (instancetype)queryWithObject:(GTLRIam_SignJwtRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Tests whether the caller has the specified permissions on a ServiceAccount.
 *
 *  Method: iam.projects.serviceAccounts.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsTestIamPermissions : GTLRIamQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRIam_TestIamPermissionsResponse.
 *
 *  Tests whether the caller has the specified permissions on a ServiceAccount.
 *
 *  @param object The @c GTLRIam_TestIamPermissionsRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRIam_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Restores a deleted ServiceAccount. **Important:** It is not always possible
 *  to restore a deleted service account. Use this method only as a last resort.
 *  After you delete a service account, IAM permanently removes the service
 *  account 30 days later. There is no way to restore a deleted service account
 *  that has been permanently removed.
 *
 *  Method: iam.projects.serviceAccounts.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsUndelete : GTLRIamQuery

/**
 *  The resource name of the service account in the following format:
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_UNIQUE_ID}`. Using `-` as a
 *  wildcard for the `PROJECT_ID` will infer the project from the account.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_UndeleteServiceAccountResponse.
 *
 *  Restores a deleted ServiceAccount. **Important:** It is not always possible
 *  to restore a deleted service account. Use this method only as a last resort.
 *  After you delete a service account, IAM permanently removes the service
 *  account 30 days later. There is no way to restore a deleted service account
 *  that has been permanently removed.
 *
 *  @param object The @c GTLRIam_UndeleteServiceAccountRequest to include in the
 *    query.
 *  @param name The resource name of the service account in the following
 *    format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_UNIQUE_ID}`. Using
 *    `-` as a wildcard for the `PROJECT_ID` will infer the project from the
 *    account.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsUndelete
 */
+ (instancetype)queryWithObject:(GTLRIam_UndeleteServiceAccountRequest *)object
                           name:(NSString *)name;

@end

/**
 *  **Note:** We are in the process of deprecating this method. Use
 *  PatchServiceAccount instead. Updates a ServiceAccount. You can update only
 *  the `display_name` field.
 *
 *  Method: iam.projects.serviceAccounts.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_ProjectsServiceAccountsUpdate : GTLRIamQuery

/**
 *  The resource name of the service account. Use one of the following formats:
 *  * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` *
 *  `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you
 *  can use the `-` wildcard character instead of the project ID: *
 *  `projects/-/serviceAccounts/{EMAIL_ADDRESS}` *
 *  `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-`
 *  wildcard character, because it can cause response messages to contain
 *  misleading error codes. For example, if you try to get the service account
 *  `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *  response contains an HTTP `403 Forbidden` error instead of a `404 Not Found`
 *  error.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_ServiceAccount.
 *
 *  **Note:** We are in the process of deprecating this method. Use
 *  PatchServiceAccount instead. Updates a ServiceAccount. You can update only
 *  the `display_name` field.
 *
 *  @param object The @c GTLRIam_ServiceAccount to include in the query.
 *  @param name The resource name of the service account. Use one of the
 *    following formats: *
 *    `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` *
 *    `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you
 *    can use the `-` wildcard character instead of the project ID: *
 *    `projects/-/serviceAccounts/{EMAIL_ADDRESS}` *
 *    `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the
 *    `-` wildcard character, because it can cause response messages to contain
 *    misleading error codes. For example, if you try to get the service account
 *    `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *    response contains an HTTP `403 Forbidden` error instead of a `404 Not
 *    Found` error.
 *
 *  @return GTLRIamQuery_ProjectsServiceAccountsUpdate
 */
+ (instancetype)queryWithObject:(GTLRIam_ServiceAccount *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the definition of a Role.
 *
 *  Method: iam.roles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_RolesGet : GTLRIamQuery

/**
 *  The `name` parameter's value depends on the target resource for the request,
 *  namely [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `name` value format is described below: *
 *  [`roles.get()`](https://cloud.google.com/iam/reference/rest/v1/roles/get):
 *  `roles/{ROLE_NAME}`. This method returns results from all [predefined
 *  roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *  in Cloud IAM. Example request URL:
 *  `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` *
 *  [`projects.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/get):
 *  `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *  [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles)
 *  that have been created at the project level. Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *  *
 *  [`organizations.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/get):
 *  `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *  returns only [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *  have been created at the organization level. Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *  Note: Wildcard (*) values are invalid; you must specify a complete project
 *  ID or organization ID.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIam_Role.
 *
 *  Gets the definition of a Role.
 *
 *  @param name The `name` parameter's value depends on the target resource for
 *    the request, namely
 *    [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *    [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *    or
 *    [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *    Each resource type's `name` value format is described below: *
 *    [`roles.get()`](https://cloud.google.com/iam/reference/rest/v1/roles/get):
 *    `roles/{ROLE_NAME}`. This method returns results from all [predefined
 *    roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *    in Cloud IAM. Example request URL:
 *    `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` *
 *    [`projects.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/get):
 *    `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
 *    [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the project level. Example request URL:
 *    `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`
 *    *
 *    [`organizations.roles.get()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/get):
 *    `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
 *    returns only [custom
 *    roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that
 *    have been created at the organization level. Example request URL:
 *    `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`
 *    Note: Wildcard (*) values are invalid; you must specify a complete project
 *    ID or organization ID.
 *
 *  @return GTLRIamQuery_RolesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists every predefined Role that IAM supports, or every custom role that is
 *  defined for an organization or project.
 *
 *  Method: iam.roles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_RolesList : GTLRIamQuery

/**
 *  Optional limit on the number of roles to include in the response. The
 *  default is 300, and the maximum is 1,000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional pagination token returned in an earlier ListRolesResponse. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The `parent` parameter's value depends on the target resource for the
 *  request, namely
 *  [`roles`](https://cloud.google.com/iam/reference/rest/v1/roles),
 *  [`projects`](https://cloud.google.com/iam/reference/rest/v1/projects.roles),
 *  or
 *  [`organizations`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles).
 *  Each resource type's `parent` value format is described below: *
 *  [`roles.list()`](https://cloud.google.com/iam/reference/rest/v1/roles/list):
 *  An empty string. This method doesn't require a resource; it simply returns
 *  all [predefined
 *  roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
 *  in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` *
 *  [`projects.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/projects.roles/list):
 *  `projects/{PROJECT_ID}`. This method lists all project-level [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` *
 *  [`organizations.roles.list()`](https://cloud.google.com/iam/reference/rest/v1/organizations.roles/list):
 *  `organizations/{ORGANIZATION_ID}`. This method lists all organization-level
 *  [custom
 *  roles](https://cloud.google.com/iam/docs/understanding-custom-roles).
 *  Example request URL:
 *  `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note:
 *  Wildcard (*) values are invalid; you must specify a complete project ID or
 *  organization ID.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Include Roles that have been deleted. */
@property(nonatomic, assign) BOOL showDeleted;

/**
 *  Optional view for the returned Role objects. When `FULL` is specified, the
 *  `includedPermissions` field is returned, which includes a list of all
 *  permissions in the role. The default value is `BASIC`, which does not return
 *  the `includedPermissions` field.
 *
 *  Likely values:
 *    @arg @c kGTLRIamViewBasic Omits the `included_permissions` field. This is
 *        the default value. (Value: "BASIC")
 *    @arg @c kGTLRIamViewFull Returns all fields. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRIam_ListRolesResponse.
 *
 *  Lists every predefined Role that IAM supports, or every custom role that is
 *  defined for an organization or project.
 *
 *  @return GTLRIamQuery_RolesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Lists roles that can be granted on a Google Cloud resource. A role is
 *  grantable if the IAM policy for the resource can contain bindings to the
 *  role.
 *
 *  Method: iam.roles.queryGrantableRoles
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIamCloudPlatform
 */
@interface GTLRIamQuery_RolesQueryGrantableRoles : GTLRIamQuery

/**
 *  Fetches a @c GTLRIam_QueryGrantableRolesResponse.
 *
 *  Lists roles that can be granted on a Google Cloud resource. A role is
 *  grantable if the IAM policy for the resource can contain bindings to the
 *  role.
 *
 *  @param object The @c GTLRIam_QueryGrantableRolesRequest to include in the
 *    query.
 *
 *  @return GTLRIamQuery_RolesQueryGrantableRoles
 */
+ (instancetype)queryWithObject:(GTLRIam_QueryGrantableRolesRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
