// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Identity and Access Management (IAM) API (iam/v1)
// Description:
//   Manages identity and access control for Google Cloud Platform resources,
//   including the creation of service accounts, which you can use to
//   authenticate to Google and make API calls.
// Documentation:
//   https://cloud.google.com/iam/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRIam_AuditableService;
@class GTLRIam_AuditConfig;
@class GTLRIam_AuditLogConfig;
@class GTLRIam_Aws;
@class GTLRIam_Binding;
@class GTLRIam_BindingDelta;
@class GTLRIam_Expr;
@class GTLRIam_LintResult;
@class GTLRIam_Oidc;
@class GTLRIam_Operation_Metadata;
@class GTLRIam_Operation_Response;
@class GTLRIam_Permission;
@class GTLRIam_PermissionDelta;
@class GTLRIam_Policy;
@class GTLRIam_PolicyDelta;
@class GTLRIam_Role;
@class GTLRIam_Saml;
@class GTLRIam_ServiceAccount;
@class GTLRIam_ServiceAccountKey;
@class GTLRIam_Status;
@class GTLRIam_Status_Details_Item;
@class GTLRIam_WorkloadIdentityPool;
@class GTLRIam_WorkloadIdentityPoolProvider;
@class GTLRIam_WorkloadIdentityPoolProvider_AttributeMapping;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRIam_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRIam_BindingDelta.action

/**
 *  Unspecified.
 *
 *  Value: "ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_BindingDelta_Action_ActionUnspecified;
/**
 *  Addition of a Binding.
 *
 *  Value: "ADD"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_BindingDelta_Action_Add;
/**
 *  Removal of a Binding.
 *
 *  Value: "REMOVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_BindingDelta_Action_Remove;

// ----------------------------------------------------------------------------
// GTLRIam_CreateServiceAccountKeyRequest.keyAlgorithm

/**
 *  1k RSA Key.
 *
 *  Value: "KEY_ALG_RSA_1024"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_CreateServiceAccountKeyRequest_KeyAlgorithm_KeyAlgRsa1024;
/**
 *  2k RSA Key.
 *
 *  Value: "KEY_ALG_RSA_2048"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_CreateServiceAccountKeyRequest_KeyAlgorithm_KeyAlgRsa2048;
/**
 *  An unspecified key algorithm.
 *
 *  Value: "KEY_ALG_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_CreateServiceAccountKeyRequest_KeyAlgorithm_KeyAlgUnspecified;

// ----------------------------------------------------------------------------
// GTLRIam_CreateServiceAccountKeyRequest.privateKeyType

/**
 *  Google Credentials File format.
 *
 *  Value: "TYPE_GOOGLE_CREDENTIALS_FILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_CreateServiceAccountKeyRequest_PrivateKeyType_TypeGoogleCredentialsFile;
/**
 *  PKCS12 format. The password for the PKCS12 file is `notasecret`. For more
 *  information, see https://tools.ietf.org/html/rfc7292.
 *
 *  Value: "TYPE_PKCS12_FILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_CreateServiceAccountKeyRequest_PrivateKeyType_TypePkcs12File;
/**
 *  Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_CreateServiceAccountKeyRequest_PrivateKeyType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRIam_LintResult.level

/**
 *  A validation unit which operates on an individual condition within a
 *  binding.
 *
 *  Value: "CONDITION"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Level_Condition;
/**
 *  Level is unspecified.
 *
 *  Value: "LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Level_LevelUnspecified;

// ----------------------------------------------------------------------------
// GTLRIam_LintResult.severity

/**
 *  Deprecated severity level.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Severity_Deprecated;
/**
 *  A validation unit returns an error only for critical issues. If an attempt
 *  is made to set the problematic policy without rectifying the critical issue,
 *  it causes the `setPolicy` operation to fail.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Severity_Error;
/**
 *  Any informative statement which is not severe enough to raise
 *  `ERROR`/`WARNING`/`NOTICE`, like auto-correction recommendations on the
 *  input content. Note that current version of the linter does not utilize
 *  `INFO`.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Severity_Info;
/**
 *  Reserved for the issues that are not severe as `ERROR`/`WARNING`, but need
 *  special handling. For instance, messages about skipped validation units are
 *  issued as `NOTICE`.
 *
 *  Value: "NOTICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Severity_Notice;
/**
 *  Severity is unspecified.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Severity_SeverityUnspecified;
/**
 *  Any issue which is severe enough but does not cause an error. For example,
 *  suspicious constructs in the input object will not necessarily fail
 *  `setPolicy`, but there is a high likelihood that they won't behave as
 *  expected during policy evaluation in `checkPolicy`. This includes the
 *  following common scenarios: - Unsatisfiable condition: Expired timestamp in
 *  date/time condition. - Ineffective condition: Condition on a pair which is
 *  granted unconditionally in another binding of the same policy.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_LintResult_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRIam_Permission.customRolesSupportLevel

/**
 *  Permission is not supported for custom role use.
 *
 *  Value: "NOT_SUPPORTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Permission_CustomRolesSupportLevel_NotSupported;
/**
 *  Default state. Permission is fully supported for custom role use.
 *
 *  Value: "SUPPORTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Permission_CustomRolesSupportLevel_Supported;
/**
 *  Permission is being tested to check custom role compatibility.
 *
 *  Value: "TESTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Permission_CustomRolesSupportLevel_Testing;

// ----------------------------------------------------------------------------
// GTLRIam_Permission.stage

/**
 *  The permission is currently in an alpha phase.
 *
 *  Value: "ALPHA"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Permission_Stage_Alpha;
/**
 *  The permission is currently in a beta phase.
 *
 *  Value: "BETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Permission_Stage_Beta;
/**
 *  The permission is being deprecated.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Permission_Stage_Deprecated;
/**
 *  The permission is generally available.
 *
 *  Value: "GA"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Permission_Stage_Ga;

// ----------------------------------------------------------------------------
// GTLRIam_QueryGrantableRolesRequest.view

/**
 *  Omits the `included_permissions` field. This is the default value.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_QueryGrantableRolesRequest_View_Basic;
/**
 *  Returns all fields.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_QueryGrantableRolesRequest_View_Full;

// ----------------------------------------------------------------------------
// GTLRIam_Role.stage

/**
 *  The user has indicated this role is currently in an Alpha phase. If this
 *  launch stage is selected, the `stage` field will not be included when
 *  requesting the definition for a given role.
 *
 *  Value: "ALPHA"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Role_Stage_Alpha;
/**
 *  The user has indicated this role is currently in a Beta phase.
 *
 *  Value: "BETA"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Role_Stage_Beta;
/**
 *  The user has indicated this role is being deprecated.
 *
 *  Value: "DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Role_Stage_Deprecated;
/**
 *  This role is disabled and will not contribute permissions to any principals
 *  it is granted to in policies.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Role_Stage_Disabled;
/**
 *  The user has indicated this role is currently in an EAP phase.
 *
 *  Value: "EAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Role_Stage_Eap;
/**
 *  The user has indicated this role is generally available.
 *
 *  Value: "GA"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_Role_Stage_Ga;

// ----------------------------------------------------------------------------
// GTLRIam_ServiceAccountKey.keyAlgorithm

/**
 *  1k RSA Key.
 *
 *  Value: "KEY_ALG_RSA_1024"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyAlgorithm_KeyAlgRsa1024;
/**
 *  2k RSA Key.
 *
 *  Value: "KEY_ALG_RSA_2048"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyAlgorithm_KeyAlgRsa2048;
/**
 *  An unspecified key algorithm.
 *
 *  Value: "KEY_ALG_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyAlgorithm_KeyAlgUnspecified;

// ----------------------------------------------------------------------------
// GTLRIam_ServiceAccountKey.keyOrigin

/**
 *  Key is provided by Google.
 *
 *  Value: "GOOGLE_PROVIDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyOrigin_GoogleProvided;
/**
 *  Unspecified key origin.
 *
 *  Value: "ORIGIN_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyOrigin_OriginUnspecified;
/**
 *  Key is provided by user.
 *
 *  Value: "USER_PROVIDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyOrigin_UserProvided;

// ----------------------------------------------------------------------------
// GTLRIam_ServiceAccountKey.keyType

/**
 *  Unspecified key type. The presence of this in the message will immediately
 *  result in an error.
 *
 *  Value: "KEY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyType_KeyTypeUnspecified;
/**
 *  System-managed keys (managed and rotated by Google).
 *
 *  Value: "SYSTEM_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyType_SystemManaged;
/**
 *  User-managed keys (managed and rotated by the user).
 *
 *  Value: "USER_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_KeyType_UserManaged;

// ----------------------------------------------------------------------------
// GTLRIam_ServiceAccountKey.privateKeyType

/**
 *  Google Credentials File format.
 *
 *  Value: "TYPE_GOOGLE_CREDENTIALS_FILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_PrivateKeyType_TypeGoogleCredentialsFile;
/**
 *  PKCS12 format. The password for the PKCS12 file is `notasecret`. For more
 *  information, see https://tools.ietf.org/html/rfc7292.
 *
 *  Value: "TYPE_PKCS12_FILE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_PrivateKeyType_TypePkcs12File;
/**
 *  Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_ServiceAccountKey_PrivateKeyType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRIam_WorkloadIdentityPool.state

/**
 *  The pool is active, and may be used in Google Cloud policies.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_WorkloadIdentityPool_State_Active;
/**
 *  The pool is soft-deleted. Soft-deleted pools are permanently deleted after
 *  approximately 30 days. You can restore a soft-deleted pool using
 *  UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool
 *  until it is permanently deleted. While a pool is deleted, you cannot use it
 *  to exchange tokens, or use existing tokens to access resources. If the pool
 *  is undeleted, existing tokens grant access again.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_WorkloadIdentityPool_State_Deleted;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_WorkloadIdentityPool_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRIam_WorkloadIdentityPoolProvider.state

/**
 *  The provider is active, and may be used to validate authentication
 *  credentials.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_WorkloadIdentityPoolProvider_State_Active;
/**
 *  The provider is soft-deleted. Soft-deleted providers are permanently deleted
 *  after approximately 30 days. You can restore a soft-deleted provider using
 *  UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a
 *  soft-deleted provider until it is permanently deleted.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_WorkloadIdentityPoolProvider_State_Deleted;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIam_WorkloadIdentityPoolProvider_State_StateUnspecified;

/**
 *  Audit log information specific to Cloud IAM admin APIs. This message is
 *  serialized as an `Any` type in the `ServiceData` message of an `AuditLog`
 *  message.
 */
@interface GTLRIam_AdminAuditData : GTLRObject

/** The permission_delta when when creating or updating a Role. */
@property(nonatomic, strong, nullable) GTLRIam_PermissionDelta *permissionDelta;

@end


/**
 *  Contains information about an auditable service.
 */
@interface GTLRIam_AuditableService : GTLRObject

/**
 *  Public name of the service. For example, the service name for Cloud IAM is
 *  'iam.googleapis.com'.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRIam_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Audit log information specific to Cloud IAM. This message is serialized as
 *  an `Any` type in the `ServiceData` message of an `AuditLog` message.
 */
@interface GTLRIam_AuditData : GTLRObject

/** Policy delta between the original policy and the newly set policy. */
@property(nonatomic, strong, nullable) GTLRIam_PolicyDelta *policyDelta;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRIam_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_AuditLogConfig_LogType_AdminRead Admin reads. Example:
 *        CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRIam_AuditLogConfig_LogType_DataRead Data reads. Example:
 *        CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRIam_AuditLogConfig_LogType_DataWrite Data writes. Example:
 *        CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRIam_AuditLogConfig_LogType_LogTypeUnspecified Default case.
 *        Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Represents an Amazon Web Services identity provider.
 */
@interface GTLRIam_Aws : GTLRObject

/** Required. The AWS account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRIam_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRIam_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  One delta entry for Binding. Each individual change (only one member in each
 *  entry) to a binding will be a separate entry.
 */
@interface GTLRIam_BindingDelta : GTLRObject

/**
 *  The action that was performed on a Binding. Required
 *
 *  Likely values:
 *    @arg @c kGTLRIam_BindingDelta_Action_ActionUnspecified Unspecified.
 *        (Value: "ACTION_UNSPECIFIED")
 *    @arg @c kGTLRIam_BindingDelta_Action_Add Addition of a Binding. (Value:
 *        "ADD")
 *    @arg @c kGTLRIam_BindingDelta_Action_Remove Removal of a Binding. (Value:
 *        "REMOVE")
 */
@property(nonatomic, copy, nullable) NSString *action;

/** The condition that is associated with this binding. */
@property(nonatomic, strong, nullable) GTLRIam_Expr *condition;

/**
 *  A single identity requesting access for a Google Cloud resource. Follows the
 *  same format of Binding.members. Required
 */
@property(nonatomic, copy, nullable) NSString *member;

/**
 *  Role that is assigned to `members`. For example, `roles/viewer`,
 *  `roles/editor`, or `roles/owner`. Required
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  The request to create a new role.
 */
@interface GTLRIam_CreateRoleRequest : GTLRObject

/** The Role resource to create. */
@property(nonatomic, strong, nullable) GTLRIam_Role *role;

/**
 *  The role ID to use for this role. A role ID may contain alphanumeric
 *  characters, underscores (`_`), and periods (`.`). It must contain a minimum
 *  of 3 characters and a maximum of 64 characters.
 */
@property(nonatomic, copy, nullable) NSString *roleId;

@end


/**
 *  The service account key create request.
 */
@interface GTLRIam_CreateServiceAccountKeyRequest : GTLRObject

/**
 *  Which type of key and algorithm to use for the key. The default is currently
 *  a 2K RSA key. However this may change in the future.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_CreateServiceAccountKeyRequest_KeyAlgorithm_KeyAlgRsa1024
 *        1k RSA Key. (Value: "KEY_ALG_RSA_1024")
 *    @arg @c kGTLRIam_CreateServiceAccountKeyRequest_KeyAlgorithm_KeyAlgRsa2048
 *        2k RSA Key. (Value: "KEY_ALG_RSA_2048")
 *    @arg @c kGTLRIam_CreateServiceAccountKeyRequest_KeyAlgorithm_KeyAlgUnspecified
 *        An unspecified key algorithm. (Value: "KEY_ALG_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *keyAlgorithm;

/**
 *  The output format of the private key. The default value is
 *  `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_CreateServiceAccountKeyRequest_PrivateKeyType_TypeGoogleCredentialsFile
 *        Google Credentials File format. (Value:
 *        "TYPE_GOOGLE_CREDENTIALS_FILE")
 *    @arg @c kGTLRIam_CreateServiceAccountKeyRequest_PrivateKeyType_TypePkcs12File
 *        PKCS12 format. The password for the PKCS12 file is `notasecret`. For
 *        more information, see https://tools.ietf.org/html/rfc7292. (Value:
 *        "TYPE_PKCS12_FILE")
 *    @arg @c kGTLRIam_CreateServiceAccountKeyRequest_PrivateKeyType_TypeUnspecified
 *        Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`. (Value:
 *        "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *privateKeyType;

@end


/**
 *  The service account create request.
 */
@interface GTLRIam_CreateServiceAccountRequest : GTLRObject

/**
 *  Required. The account id that is used to generate the service account email
 *  address and a stable unique id. It is unique within a project, must be 6-30
 *  characters long, and match the regular expression
 *  `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *accountId;

/**
 *  The ServiceAccount resource to create. Currently, only the following values
 *  are user assignable: `display_name` and `description`.
 */
@property(nonatomic, strong, nullable) GTLRIam_ServiceAccount *serviceAccount;

@end


/**
 *  The service account key disable request.
 */
@interface GTLRIam_DisableServiceAccountKeyRequest : GTLRObject
@end


/**
 *  The service account disable request.
 */
@interface GTLRIam_DisableServiceAccountRequest : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRIam_Empty : GTLRObject
@end


/**
 *  The service account key enable request.
 */
@interface GTLRIam_EnableServiceAccountKeyRequest : GTLRObject
@end


/**
 *  The service account enable request.
 */
@interface GTLRIam_EnableServiceAccountRequest : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRIam_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The request to lint a Cloud IAM policy object.
 */
@interface GTLRIam_LintPolicyRequest : GTLRObject

/** google.iam.v1.Binding.condition object to be linted. */
@property(nonatomic, strong, nullable) GTLRIam_Expr *condition;

/**
 *  The full resource name of the policy this lint request is about. The name
 *  follows the Google Cloud Platform (GCP) resource format. For example, a GCP
 *  project with ID `my-project` will be named
 *  `//cloudresourcemanager.googleapis.com/projects/my-project`. The resource
 *  name is not used to read the policy instance from the Cloud IAM database.
 *  The candidate policy for lint has to be provided in the same request object.
 */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

@end


/**
 *  The response of a lint operation. An empty response indicates the operation
 *  was able to fully execute and no lint issue was found.
 */
@interface GTLRIam_LintPolicyResponse : GTLRObject

/** List of lint results sorted by `severity` in descending order. */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_LintResult *> *lintResults;

@end


/**
 *  Structured response of a single validation unit.
 */
@interface GTLRIam_LintResult : GTLRObject

/** Human readable debug message associated with the issue. */
@property(nonatomic, copy, nullable) NSString *debugMessage;

/**
 *  The name of the field for which this lint result is about. For nested
 *  messages `field_name` consists of names of the embedded fields separated by
 *  period character. The top-level qualifier is the input object to lint in the
 *  request. For example, the `field_name` value `condition.expression`
 *  identifies a lint result for the `expression` field of the provided
 *  condition.
 */
@property(nonatomic, copy, nullable) NSString *fieldName;

/**
 *  The validation unit level.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_LintResult_Level_Condition A validation unit which
 *        operates on an individual condition within a binding. (Value:
 *        "CONDITION")
 *    @arg @c kGTLRIam_LintResult_Level_LevelUnspecified Level is unspecified.
 *        (Value: "LEVEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *level;

/**
 *  0-based character position of problematic construct within the object
 *  identified by `field_name`. Currently, this is populated only for condition
 *  expression.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *locationOffset;

/**
 *  The validation unit severity.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_LintResult_Severity_Deprecated Deprecated severity level.
 *        (Value: "DEPRECATED")
 *    @arg @c kGTLRIam_LintResult_Severity_Error A validation unit returns an
 *        error only for critical issues. If an attempt is made to set the
 *        problematic policy without rectifying the critical issue, it causes
 *        the `setPolicy` operation to fail. (Value: "ERROR")
 *    @arg @c kGTLRIam_LintResult_Severity_Info Any informative statement which
 *        is not severe enough to raise `ERROR`/`WARNING`/`NOTICE`, like
 *        auto-correction recommendations on the input content. Note that
 *        current version of the linter does not utilize `INFO`. (Value: "INFO")
 *    @arg @c kGTLRIam_LintResult_Severity_Notice Reserved for the issues that
 *        are not severe as `ERROR`/`WARNING`, but need special handling. For
 *        instance, messages about skipped validation units are issued as
 *        `NOTICE`. (Value: "NOTICE")
 *    @arg @c kGTLRIam_LintResult_Severity_SeverityUnspecified Severity is
 *        unspecified. (Value: "SEVERITY_UNSPECIFIED")
 *    @arg @c kGTLRIam_LintResult_Severity_Warning Any issue which is severe
 *        enough but does not cause an error. For example, suspicious constructs
 *        in the input object will not necessarily fail `setPolicy`, but there
 *        is a high likelihood that they won't behave as expected during policy
 *        evaluation in `checkPolicy`. This includes the following common
 *        scenarios: - Unsatisfiable condition: Expired timestamp in date/time
 *        condition. - Ineffective condition: Condition on a pair which is
 *        granted unconditionally in another binding of the same policy. (Value:
 *        "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  The validation unit name, for instance
 *  "lintValidationUnits/ConditionComplexityCheck".
 */
@property(nonatomic, copy, nullable) NSString *validationUnitName;

@end


/**
 *  The response containing the roles defined under a resource.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "roles" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRIam_ListRolesResponse : GTLRCollectionObject

/**
 *  To retrieve the next page of results, set `ListRolesRequest.page_token` to
 *  this value.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The Roles defined on this resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_Role *> *roles;

@end


/**
 *  The service account keys list response.
 */
@interface GTLRIam_ListServiceAccountKeysResponse : GTLRObject

/** The public keys for the service account. */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_ServiceAccountKey *> *keys;

@end


/**
 *  The service account list response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "accounts" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRIam_ListServiceAccountsResponse : GTLRCollectionObject

/**
 *  The list of matching service accounts.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_ServiceAccount *> *accounts;

/**
 *  To retrieve the next page of results, set
 *  ListServiceAccountsRequest.page_token to this value.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListWorkloadIdentityPoolProviders.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workloadIdentityPoolProviders" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRIam_ListWorkloadIdentityPoolProvidersResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of providers.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_WorkloadIdentityPoolProvider *> *workloadIdentityPoolProviders;

@end


/**
 *  Response message for ListWorkloadIdentityPools.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workloadIdentityPools" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRIam_ListWorkloadIdentityPoolsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of pools.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_WorkloadIdentityPool *> *workloadIdentityPools;

@end


/**
 *  Represents an OpenId Connect 1.0 identity provider.
 */
@interface GTLRIam_Oidc : GTLRObject

/**
 *  Acceptable values for the `aud` field (audience) in the OIDC token. Token
 *  exchange requests are rejected if the token audience does not match one of
 *  the configured values. Each audience may be at most 256 characters. A
 *  maximum of 10 audiences may be configured. If this list is empty, the OIDC
 *  token audience must be equal to the full canonical resource name of the
 *  WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example:
 *  ```
 *  //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
 *  https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
 *  ```
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedAudiences;

/** Required. The OIDC issuer URL. Must be an HTTPS endpoint. */
@property(nonatomic, copy, nullable) NSString *issuerUri;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRIam_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRIam_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRIam_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRIam_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRIam_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRIam_Operation_Response : GTLRObject
@end


/**
 *  The service account patch request. You can patch only the `display_name` and
 *  `description` fields. You must use the `update_mask` field to specify which
 *  of these fields you want to patch. Only the fields specified in the request
 *  are guaranteed to be returned in the response. Other fields may be empty in
 *  the response.
 */
@interface GTLRIam_PatchServiceAccountRequest : GTLRObject

@property(nonatomic, strong, nullable) GTLRIam_ServiceAccount *serviceAccount;

/**
 *  updateMask
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  A permission which can be included by a role.
 */
@interface GTLRIam_Permission : GTLRObject

/**
 *  The service API associated with the permission is not enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *apiDisabled;

/**
 *  The current custom role support level.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_Permission_CustomRolesSupportLevel_NotSupported
 *        Permission is not supported for custom role use. (Value:
 *        "NOT_SUPPORTED")
 *    @arg @c kGTLRIam_Permission_CustomRolesSupportLevel_Supported Default
 *        state. Permission is fully supported for custom role use. (Value:
 *        "SUPPORTED")
 *    @arg @c kGTLRIam_Permission_CustomRolesSupportLevel_Testing Permission is
 *        being tested to check custom role compatibility. (Value: "TESTING")
 */
@property(nonatomic, copy, nullable) NSString *customRolesSupportLevel;

/**
 *  A brief description of what this Permission is used for. This permission can
 *  ONLY be used in predefined roles.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The name of this Permission. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  onlyInPredefinedRoles
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *onlyInPredefinedRoles;

/**
 *  The preferred name for this permission. If present, then this permission is
 *  an alias of, and equivalent to, the listed primary_permission.
 */
@property(nonatomic, copy, nullable) NSString *primaryPermission;

/**
 *  The current launch stage of the permission.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_Permission_Stage_Alpha The permission is currently in an
 *        alpha phase. (Value: "ALPHA")
 *    @arg @c kGTLRIam_Permission_Stage_Beta The permission is currently in a
 *        beta phase. (Value: "BETA")
 *    @arg @c kGTLRIam_Permission_Stage_Deprecated The permission is being
 *        deprecated. (Value: "DEPRECATED")
 *    @arg @c kGTLRIam_Permission_Stage_Ga The permission is generally
 *        available. (Value: "GA")
 */
@property(nonatomic, copy, nullable) NSString *stage;

/** The title of this Permission. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  A PermissionDelta message to record the added_permissions and
 *  removed_permissions inside a role.
 */
@interface GTLRIam_PermissionDelta : GTLRObject

/** Added permissions. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *addedPermissions;

/** Removed permissions. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *removedPermissions;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRIam_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  The difference delta between two policies.
 */
@interface GTLRIam_PolicyDelta : GTLRObject

/** The delta for Bindings between two policies. */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_BindingDelta *> *bindingDeltas;

@end


/**
 *  A request to get the list of auditable services for a resource.
 */
@interface GTLRIam_QueryAuditableServicesRequest : GTLRObject

/**
 *  Required. The full resource name to query from the list of auditable
 *  services. The name follows the Google Cloud Platform resource format. For
 *  example, a Cloud Platform project with id `my-project` will be named
 *  `//cloudresourcemanager.googleapis.com/projects/my-project`.
 */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

@end


/**
 *  A response containing a list of auditable services for a resource.
 */
@interface GTLRIam_QueryAuditableServicesResponse : GTLRObject

/** The auditable services for a resource. */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_AuditableService *> *services;

@end


/**
 *  The grantable role query request.
 */
@interface GTLRIam_QueryGrantableRolesRequest : GTLRObject

/**
 *  Required. The full resource name to query from the list of grantable roles.
 *  The name follows the Google Cloud Platform resource format. For example, a
 *  Cloud Platform project with id `my-project` will be named
 *  `//cloudresourcemanager.googleapis.com/projects/my-project`.
 */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

/**
 *  Optional limit on the number of roles to include in the response. The
 *  default is 300, and the maximum is 1,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Optional pagination token returned in an earlier
 *  QueryGrantableRolesResponse.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  view
 *
 *  Likely values:
 *    @arg @c kGTLRIam_QueryGrantableRolesRequest_View_Basic Omits the
 *        `included_permissions` field. This is the default value. (Value:
 *        "BASIC")
 *    @arg @c kGTLRIam_QueryGrantableRolesRequest_View_Full Returns all fields.
 *        (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

@end


/**
 *  The grantable role query response.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "roles" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRIam_QueryGrantableRolesResponse : GTLRCollectionObject

/**
 *  To retrieve the next page of results, set
 *  `QueryGrantableRolesRequest.page_token` to this value.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of matching roles.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_Role *> *roles;

@end


/**
 *  A request to get permissions which can be tested on a resource.
 */
@interface GTLRIam_QueryTestablePermissionsRequest : GTLRObject

/**
 *  Required. The full resource name to query from the list of testable
 *  permissions. The name follows the Google Cloud Platform resource format. For
 *  example, a Cloud Platform project with id `my-project` will be named
 *  `//cloudresourcemanager.googleapis.com/projects/my-project`.
 */
@property(nonatomic, copy, nullable) NSString *fullResourceName;

/**
 *  Optional limit on the number of permissions to include in the response. The
 *  default is 100, and the maximum is 1,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Optional pagination token returned in an earlier
 *  QueryTestablePermissionsRequest.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

@end


/**
 *  The response containing permissions which can be tested on a resource.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "permissions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRIam_QueryTestablePermissionsResponse : GTLRCollectionObject

/**
 *  To retrieve the next page of results, set
 *  `QueryTestableRolesRequest.page_token` to this value.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The Permissions testable on the requested resource.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_Permission *> *permissions;

@end


/**
 *  A role in the Identity and Access Management API.
 */
@interface GTLRIam_Role : GTLRObject

/**
 *  The current deleted state of the role. This field is read only. It will be
 *  ignored in calls to CreateRole and UpdateRole.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deleted;

/**
 *  Optional. A human-readable description for the role.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Used to perform a consistent read-modify-write.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The names of the permissions this role grants when bound in an IAM policy.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedPermissions;

/**
 *  The name of the role. When Role is used in CreateRole, the role name must
 *  not be set. When Role is used in output and other input such as UpdateRole,
 *  the role name is the complete path, e.g., roles/logging.viewer for
 *  predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer
 *  for custom roles.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The current launch stage of the role. If the `ALPHA` launch stage has been
 *  selected for a role, the `stage` field will not be included in the returned
 *  definition for the role.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_Role_Stage_Alpha The user has indicated this role is
 *        currently in an Alpha phase. If this launch stage is selected, the
 *        `stage` field will not be included when requesting the definition for
 *        a given role. (Value: "ALPHA")
 *    @arg @c kGTLRIam_Role_Stage_Beta The user has indicated this role is
 *        currently in a Beta phase. (Value: "BETA")
 *    @arg @c kGTLRIam_Role_Stage_Deprecated The user has indicated this role is
 *        being deprecated. (Value: "DEPRECATED")
 *    @arg @c kGTLRIam_Role_Stage_Disabled This role is disabled and will not
 *        contribute permissions to any principals it is granted to in policies.
 *        (Value: "DISABLED")
 *    @arg @c kGTLRIam_Role_Stage_Eap The user has indicated this role is
 *        currently in an EAP phase. (Value: "EAP")
 *    @arg @c kGTLRIam_Role_Stage_Ga The user has indicated this role is
 *        generally available. (Value: "GA")
 */
@property(nonatomic, copy, nullable) NSString *stage;

/**
 *  Optional. A human-readable title for the role. Typically this is limited to
 *  100 UTF-8 bytes.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Represents an SAML 2.0 identity provider.
 */
@interface GTLRIam_Saml : GTLRObject

/**
 *  Required. SAML Identity provider configuration metadata xml doc. The xml
 *  document should comply with [SAML 2.0
 *  specification](https://www.oasis-open.org/committees/download.php/56785/sstc-saml-metadata-errata-2.0-wd-05.pdf).
 *  The max size of the acceptable xml document will be bounded to 128k
 *  characters. The metadata xml document should satisfy the following
 *  constraints: 1) Must contain an Identity Provider Entity ID. 2) Must contain
 *  at least one non-expired signing key certificate. 3) For each signing key:
 *  a) Valid from should be no more than 7 days from now. b) Valid to should be
 *  no more than 14 years in the future. 4) Upto 3 IdP signing keys are allowed
 *  in the metadata xml. When updating the provider's metadata xml, at lease one
 *  non-expired signing key must overlap with the existing metadata. This
 *  requirement is skipped if there are no non-expired signing keys present in
 *  the existing metadata
 */
@property(nonatomic, copy, nullable) NSString *idpMetadataXml;

@end


/**
 *  An IAM service account. A service account is an account for an application
 *  or a virtual machine (VM) instance, not a person. You can use a service
 *  account to call Google APIs. To learn more, read the [overview of service
 *  accounts](https://cloud.google.com/iam/help/service-accounts/overview). When
 *  you create a service account, you specify the project ID that owns the
 *  service account, as well as a name that must be unique within the project.
 *  IAM uses these values to create an email address that identifies the service
 *  //
 */
@interface GTLRIam_ServiceAccount : GTLRObject

/**
 *  Optional. A user-specified, human-readable description of the service
 *  account. The maximum length is 256 UTF-8 bytes.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. Whether the service account is disabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Optional. A user-specified, human-readable name for the service account. The
 *  maximum length is 100 UTF-8 bytes.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The email address of the service account. */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  Deprecated. Do not use.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The resource name of the service account. Use one of the following formats:
 *  * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` *
 *  `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you
 *  can use the `-` wildcard character instead of the project ID: *
 *  `projects/-/serviceAccounts/{EMAIL_ADDRESS}` *
 *  `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-`
 *  wildcard character, because it can cause response messages to contain
 *  misleading error codes. For example, if you try to get the service account
 *  `projects/-/serviceAccounts/fake\@example.com`, which does not exist, the
 *  response contains an HTTP `403 Forbidden` error instead of a `404 Not Found`
 *  error.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The OAuth 2.0 client ID for the service account. */
@property(nonatomic, copy, nullable) NSString *oauth2ClientId;

/** Output only. The ID of the project that owns the service account. */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Output only. The unique, stable numeric ID for the service account. Each
 *  service account retains its unique ID even if you delete the service
 *  account. For example, if you delete a service account, then create a new
 *  service account with the same name, the new service account has a different
 *  unique ID than the deleted service account.
 */
@property(nonatomic, copy, nullable) NSString *uniqueId;

@end


/**
 *  Represents a service account key. A service account has two sets of
 *  key-pairs: user-managed, and system-managed. User-managed key-pairs can be
 *  created and deleted by users. Users are responsible for rotating these keys
 *  periodically to ensure security of their service accounts. Users retain the
 *  private key of these key-pairs, and Google retains ONLY the public key.
 *  System-managed keys are automatically rotated by Google, and are used for
 *  signing for a maximum of two weeks. The rotation process is probabilistic,
 *  and usage of the new key will gradually ramp up and down over the key's
 *  lifetime. If you cache the public key set for a service account, we
 *  recommend that you update the cache every 15 minutes. User-managed keys can
 *  be added and removed at any time, so it is important to update the cache
 *  frequently. For Google-managed keys, Google will publish a key at least 6
 *  hours before it is first used for signing and will keep publishing it for at
 *  least 6 hours after it was last used for signing. Public keys for all
 *  service accounts are also published at the OAuth2 Service Account API.
 */
@interface GTLRIam_ServiceAccountKey : GTLRObject

/**
 *  The key status.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Specifies the algorithm (and possibly key size) for the key.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyAlgorithm_KeyAlgRsa1024 1k RSA Key.
 *        (Value: "KEY_ALG_RSA_1024")
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyAlgorithm_KeyAlgRsa2048 2k RSA Key.
 *        (Value: "KEY_ALG_RSA_2048")
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyAlgorithm_KeyAlgUnspecified An
 *        unspecified key algorithm. (Value: "KEY_ALG_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *keyAlgorithm;

/**
 *  The key origin.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyOrigin_GoogleProvided Key is
 *        provided by Google. (Value: "GOOGLE_PROVIDED")
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyOrigin_OriginUnspecified Unspecified
 *        key origin. (Value: "ORIGIN_UNSPECIFIED")
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyOrigin_UserProvided Key is provided
 *        by user. (Value: "USER_PROVIDED")
 */
@property(nonatomic, copy, nullable) NSString *keyOrigin;

/**
 *  The key type.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyType_KeyTypeUnspecified Unspecified
 *        key type. The presence of this in the message will immediately result
 *        in an error. (Value: "KEY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyType_SystemManaged System-managed
 *        keys (managed and rotated by Google). (Value: "SYSTEM_MANAGED")
 *    @arg @c kGTLRIam_ServiceAccountKey_KeyType_UserManaged User-managed keys
 *        (managed and rotated by the user). (Value: "USER_MANAGED")
 */
@property(nonatomic, copy, nullable) NSString *keyType;

/**
 *  The resource name of the service account key in the following format
 *  `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The private key data. Only provided in `CreateServiceAccountKey` responses.
 *  Make sure to keep the private key data secure because it allows for the
 *  assertion of the service account identity. When base64 decoded, the private
 *  key data can be used to authenticate with Google API client libraries and
 *  with gcloud auth activate-service-account.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *privateKeyData;

/**
 *  The output format for the private key. Only provided in
 *  `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or
 *  `ListServiceAccountKey` responses. Google never exposes system-managed
 *  private keys, and never retains user-managed private keys.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_ServiceAccountKey_PrivateKeyType_TypeGoogleCredentialsFile
 *        Google Credentials File format. (Value:
 *        "TYPE_GOOGLE_CREDENTIALS_FILE")
 *    @arg @c kGTLRIam_ServiceAccountKey_PrivateKeyType_TypePkcs12File PKCS12
 *        format. The password for the PKCS12 file is `notasecret`. For more
 *        information, see https://tools.ietf.org/html/rfc7292. (Value:
 *        "TYPE_PKCS12_FILE")
 *    @arg @c kGTLRIam_ServiceAccountKey_PrivateKeyType_TypeUnspecified
 *        Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`. (Value:
 *        "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *privateKeyType;

/**
 *  The public key data. Only provided in `GetServiceAccountKey` responses.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *publicKeyData;

/** The key can be used after this timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *validAfterTime;

/**
 *  The key can be used before this timestamp. For system-managed key pairs,
 *  this timestamp is the end time for the private key signing operation. The
 *  public key could still be used for verification for a few hours after this
 *  time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *validBeforeTime;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRIam_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRIam_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The service
 *  account sign blob request.
 */
@interface GTLRIam_SignBlobRequest : GTLRObject

/**
 *  Required. Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The bytes
 *  to sign.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *bytesToSign;

@end


/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The service
 *  account sign blob response.
 */
@interface GTLRIam_SignBlobResponse : GTLRObject

/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The id of
 *  the key used to sign the blob.
 */
@property(nonatomic, copy, nullable) NSString *keyId;

/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The signed
 *  blob.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *signature;

@end


/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The service
 *  account sign JWT request.
 */
@interface GTLRIam_SignJwtRequest : GTLRObject

/**
 *  Required. Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The JWT
 *  payload to sign. Must be a serialized JSON object that contains a JWT Claims
 *  Set. For example: `{"sub": "user\@example.com", "iat": 313435}` If the JWT
 *  Claims Set contains an expiration time (`exp`) claim, it must be an integer
 *  timestamp that is not in the past and no more than 12 hours in the future.
 *  If the JWT Claims Set does not contain an expiration time (`exp`) claim,
 *  this claim is added automatically, with a timestamp that is 1 hour in the
 *  future.
 */
@property(nonatomic, copy, nullable) NSString *payload;

@end


/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The service
 *  account sign JWT response.
 */
@interface GTLRIam_SignJwtResponse : GTLRObject

/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The id of
 *  the key used to sign the JWT.
 */
@property(nonatomic, copy, nullable) NSString *keyId;

/**
 *  Deprecated. [Migrate to Service Account Credentials
 *  API](https://cloud.google.com/iam/help/credentials/migrate-api). The signed
 *  JWT.
 */
@property(nonatomic, copy, nullable) NSString *signedJwt;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRIam_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRIam_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRIam_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRIam_Status_Details_Item : GTLRObject
@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRIam_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRIam_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  The request to undelete an existing role.
 */
@interface GTLRIam_UndeleteRoleRequest : GTLRObject

/**
 *  Used to perform a consistent read-modify-write.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

@end


/**
 *  The service account undelete request.
 */
@interface GTLRIam_UndeleteServiceAccountRequest : GTLRObject
@end


/**
 *  GTLRIam_UndeleteServiceAccountResponse
 */
@interface GTLRIam_UndeleteServiceAccountResponse : GTLRObject

/** Metadata for the restored service account. */
@property(nonatomic, strong, nullable) GTLRIam_ServiceAccount *restoredAccount;

@end


/**
 *  Request message for UndeleteWorkloadIdentityPoolProvider.
 */
@interface GTLRIam_UndeleteWorkloadIdentityPoolProviderRequest : GTLRObject
@end


/**
 *  Request message for UndeleteWorkloadIdentityPool.
 */
@interface GTLRIam_UndeleteWorkloadIdentityPoolRequest : GTLRObject
@end


/**
 *  The service account key upload request.
 */
@interface GTLRIam_UploadServiceAccountKeyRequest : GTLRObject

/**
 *  The public key to associate with the service account. Must be an RSA public
 *  key that is wrapped in an X.509 v3 certificate. Include the first line,
 *  `-----BEGIN CERTIFICATE-----`, and the last line, `-----END
 *  CERTIFICATE-----`.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *publicKeyData;

@end


/**
 *  Represents a collection of external workload identities. You can define IAM
 *  policies to grant these identities access to Google Cloud resources.
 */
@interface GTLRIam_WorkloadIdentityPool : GTLRObject

/**
 *  A description of the pool. Cannot exceed 256 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Whether the pool is disabled. You cannot use a disabled pool to exchange
 *  tokens, or use existing tokens to access resources. If the pool is
 *  re-enabled, existing tokens grant access again.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/** A display name for the pool. Cannot exceed 32 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The resource name of the pool. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The state of the pool.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_WorkloadIdentityPool_State_Active The pool is active, and
 *        may be used in Google Cloud policies. (Value: "ACTIVE")
 *    @arg @c kGTLRIam_WorkloadIdentityPool_State_Deleted The pool is
 *        soft-deleted. Soft-deleted pools are permanently deleted after
 *        approximately 30 days. You can restore a soft-deleted pool using
 *        UndeleteWorkloadIdentityPool. You cannot reuse the ID of a
 *        soft-deleted pool until it is permanently deleted. While a pool is
 *        deleted, you cannot use it to exchange tokens, or use existing tokens
 *        to access resources. If the pool is undeleted, existing tokens grant
 *        access again. (Value: "DELETED")
 *    @arg @c kGTLRIam_WorkloadIdentityPool_State_StateUnspecified State
 *        unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for long-running WorkloadIdentityPool operations.
 */
@interface GTLRIam_WorkloadIdentityPoolOperationMetadata : GTLRObject
@end


/**
 *  A configuration for an external identity provider.
 */
@interface GTLRIam_WorkloadIdentityPoolProvider : GTLRObject

/**
 *  [A Common Expression Language](https://opensource.google/projects/cel)
 *  expression, in plain text, to restrict what otherwise valid authentication
 *  credentials issued by the provider should not be accepted. The expression
 *  must output a boolean representing whether to allow the federation. The
 *  following keywords may be referenced in the expressions: * `assertion`: JSON
 *  representing the authentication credential issued by the provider. *
 *  `google`: The Google attributes mapped from the assertion in the
 *  `attribute_mappings`. * `attribute`: The custom attributes mapped from the
 *  assertion in the `attribute_mappings`. The maximum length of the attribute
 *  condition expression is 4096 characters. If unspecified, all valid
 *  authentication credential are accepted. The following example shows how to
 *  only allow credentials with a mapped `google.groups` value of `admins`: ```
 *  "'admins' in google.groups" ```
 */
@property(nonatomic, copy, nullable) NSString *attributeCondition;

/**
 *  Maps attributes from authentication credentials issued by an external
 *  identity provider to Google Cloud attributes, such as `subject` and
 *  `segment`. Each key must be a string specifying the Google Cloud IAM
 *  attribute to map to. The following keys are supported: * `google.subject`:
 *  The principal IAM is authenticating. You can reference this value in IAM
 *  bindings. This is also the subject that appears in Cloud Logging logs.
 *  Cannot exceed 127 bytes. * `google.groups`: Groups the external identity
 *  belongs to. You can grant groups access to resources using an IAM
 *  `principalSet` binding; access applies to all members of the group. You can
 *  also provide custom attributes by specifying `attribute.{custom_attribute}`,
 *  where `{custom_attribute}` is the name of the custom attribute to be mapped.
 *  You can define a maximum of 50 custom attributes. The maximum length of a
 *  mapped attribute key is 100 characters, and the key may only contain the
 *  characters [a-z0-9_]. You can reference these attributes in IAM policies to
 *  define fine-grained access for a workload to Google Cloud resources. For
 *  example: * `google.subject`:
 *  `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}`
 *  * `google.groups`:
 *  `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}`
 *  * `attribute.{custom_attribute}`:
 *  `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}`
 *  Each value must be a [Common Expression Language]
 *  (https://opensource.google/projects/cel) function that maps an identity
 *  provider credential to the normalized attribute specified by the
 *  corresponding map key. You can use the `assertion` keyword in the expression
 *  to access a JSON representation of the authentication credential issued by
 *  the provider. The maximum length of an attribute mapping expression is 2048
 *  characters. When evaluated, the total size of all mapped attributes must not
 *  exceed 8KB. For AWS providers, if no attribute mapping is defined, the
 *  following default mapping applies: ``` { "google.subject":"assertion.arn",
 *  "attribute.aws_role": "assertion.arn.contains('assumed-role')" " ?
 *  assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
 *  + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", }
 *  ``` If any custom attribute mappings are defined, they must include a
 *  mapping to the `google.subject` attribute. For OIDC providers, you must
 *  supply a custom mapping, which must include the `google.subject` attribute.
 *  For example, the following maps the `sub` claim of the incoming credential
 *  to the `subject` attribute on a Google token: ``` {"google.subject":
 *  "assertion.sub"} ```
 */
@property(nonatomic, strong, nullable) GTLRIam_WorkloadIdentityPoolProvider_AttributeMapping *attributeMapping;

/** An Amazon Web Services identity provider. */
@property(nonatomic, strong, nullable) GTLRIam_Aws *aws;

/**
 *  A description for the provider. Cannot exceed 256 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Whether the provider is disabled. You cannot use a disabled provider to
 *  exchange tokens. However, existing tokens still grant access.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/** A display name for the provider. Cannot exceed 32 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The resource name of the provider. */
@property(nonatomic, copy, nullable) NSString *name;

/** An OpenId Connect 1.0 identity provider. */
@property(nonatomic, strong, nullable) GTLRIam_Oidc *oidc;

/** An SAML 2.0 identity provider. */
@property(nonatomic, strong, nullable) GTLRIam_Saml *saml;

/**
 *  Output only. The state of the provider.
 *
 *  Likely values:
 *    @arg @c kGTLRIam_WorkloadIdentityPoolProvider_State_Active The provider is
 *        active, and may be used to validate authentication credentials.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRIam_WorkloadIdentityPoolProvider_State_Deleted The provider
 *        is soft-deleted. Soft-deleted providers are permanently deleted after
 *        approximately 30 days. You can restore a soft-deleted provider using
 *        UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a
 *        soft-deleted provider until it is permanently deleted. (Value:
 *        "DELETED")
 *    @arg @c kGTLRIam_WorkloadIdentityPoolProvider_State_StateUnspecified State
 *        unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Maps attributes from authentication credentials issued by an external
 *  identity provider to Google Cloud attributes, such as `subject` and
 *  `segment`. Each key must be a string specifying the Google Cloud IAM
 *  attribute to map to. The following keys are supported: * `google.subject`:
 *  The principal IAM is authenticating. You can reference this value in IAM
 *  bindings. This is also the subject that appears in Cloud Logging logs.
 *  Cannot exceed 127 bytes. * `google.groups`: Groups the external identity
 *  belongs to. You can grant groups access to resources using an IAM
 *  `principalSet` binding; access applies to all members of the group. You can
 *  also provide custom attributes by specifying `attribute.{custom_attribute}`,
 *  where `{custom_attribute}` is the name of the custom attribute to be mapped.
 *  You can define a maximum of 50 custom attributes. The maximum length of a
 *  mapped attribute key is 100 characters, and the key may only contain the
 *  characters [a-z0-9_]. You can reference these attributes in IAM policies to
 *  define fine-grained access for a workload to Google Cloud resources. For
 *  example: * `google.subject`:
 *  `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}`
 *  * `google.groups`:
 *  `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}`
 *  * `attribute.{custom_attribute}`:
 *  `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}`
 *  Each value must be a [Common Expression Language]
 *  (https://opensource.google/projects/cel) function that maps an identity
 *  provider credential to the normalized attribute specified by the
 *  corresponding map key. You can use the `assertion` keyword in the expression
 *  to access a JSON representation of the authentication credential issued by
 *  the provider. The maximum length of an attribute mapping expression is 2048
 *  characters. When evaluated, the total size of all mapped attributes must not
 *  exceed 8KB. For AWS providers, if no attribute mapping is defined, the
 *  following default mapping applies: ``` { "google.subject":"assertion.arn",
 *  "attribute.aws_role": "assertion.arn.contains('assumed-role')" " ?
 *  assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
 *  + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", }
 *  ``` If any custom attribute mappings are defined, they must include a
 *  mapping to the `google.subject` attribute. For OIDC providers, you must
 *  supply a custom mapping, which must include the `google.subject` attribute.
 *  For example, the following maps the `sub` claim of the incoming credential
 *  to the `subject` attribute on a Google token: ``` {"google.subject":
 *  "assertion.sub"} ```
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRIam_WorkloadIdentityPoolProvider_AttributeMapping : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
