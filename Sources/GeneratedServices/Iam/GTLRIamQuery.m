// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Identity and Access Management (IAM) API (iam/v2)
// Description:
//   Manages identity and access control for Google Cloud resources, including
//   the creation of service accounts, which you can use to authenticate to
//   Google and make API calls. Enabling this API also enables the IAM Service
//   Account Credentials API (iamcredentials.googleapis.com). However, disabling
//   this API doesn't disable the IAM Service Account Credentials API.
// Documentation:
//   https://cloud.google.com/iam/

#import <GoogleAPIClientForREST/GTLRIamQuery.h>

@implementation GTLRIamQuery

@dynamic fields;

@end

@implementation GTLRIamQuery_PoliciesCreatePolicy

@dynamic parent, policyId;

+ (instancetype)queryWithObject:(GTLRIam_GoogleIamV2Policy *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}";
  GTLRIamQuery_PoliciesCreatePolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIam_GoogleLongrunningOperation class];
  query.loggingName = @"iam.policies.createPolicy";
  return query;
}

@end

@implementation GTLRIamQuery_PoliciesDelete

@dynamic ETag, name;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"ETag" : @"etag" };
}

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRIamQuery_PoliciesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIam_GoogleLongrunningOperation class];
  query.loggingName = @"iam.policies.delete";
  return query;
}

@end

@implementation GTLRIamQuery_PoliciesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRIamQuery_PoliciesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIam_GoogleIamV2Policy class];
  query.loggingName = @"iam.policies.get";
  return query;
}

@end

@implementation GTLRIamQuery_PoliciesListPolicies

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}";
  GTLRIamQuery_PoliciesListPolicies *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIam_GoogleIamV2ListPoliciesResponse class];
  query.loggingName = @"iam.policies.listPolicies";
  return query;
}

@end

@implementation GTLRIamQuery_PoliciesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRIamQuery_PoliciesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIam_GoogleLongrunningOperation class];
  query.loggingName = @"iam.policies.operations.get";
  return query;
}

@end

@implementation GTLRIamQuery_PoliciesUpdate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIam_GoogleIamV2Policy *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRIamQuery_PoliciesUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIam_GoogleLongrunningOperation class];
  query.loggingName = @"iam.policies.update";
  return query;
}

@end
